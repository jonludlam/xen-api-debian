Description: Upstream changes introduced in version 0.1-1
 This patch has been created by dpkg-source during the package build.
 Here's the last changelog entry, hopefully it gives details on why
 those changes were made:
 .
 xen-api (0.1-1) unstable; urgency=low
 .
   * Initial release (Closes: #nnnn)  <nnnn is the bug number of your ITP>
 .
 The person named in the Author field signed this changelog entry.
Author: Jon Ludlam <jonathan.ludlam@eu.citrix.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- /dev/null
+++ xen-api-0.1/ocaml/util/version.ml
@@ -0,0 +1,9 @@
+(* This file is autogenerated.  Grep for e17512ce-ba7c-11df-887b-0026b9799147 (random uuid) to see where it comes from. ;o) *) 
+ let hg_id = "" 
+ let hostname = "xcp-dev" 
+ let date = "2011-07-12" 
+ let product_version = "" 
+ let product_version_text = "" 
+ let product_version_text_short = "" 
+ let product_brand = "" 
+ let build_number = Util_inventory.lookup ~default:"" "BUILD_NUMBER" 
--- /dev/null
+++ xen-api-0.1/js
@@ -0,0 +1,2044 @@
+var messages={"session.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given session."},
+"session.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class session"},
+"session.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the sessions known to the system."},
+"session.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the session instance with the specified UUID."},
+"session.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"session"},doc:"All constructor arguments"}],doc:"Create a new session instance, and return its handle."},
+"session.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Destroy the specified session instance."},
+"session.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the uuid field of the given session."},
+"session.get_this_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the this_host field of the given session."},
+"session.get_this_user":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the this_user field of the given session."},
+"session.get_last_active":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the last_active field of the given session."},
+"session.get_pool":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the pool field of the given session."},
+"session.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the other_config field of the given session."},
+"session.get_is_local_superuser":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the is_local_superuser field of the given session."},
+"session.get_subject":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the subject field of the given session."},
+"session.get_validation_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the validation_time field of the given session."},
+"session.get_auth_user_sid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the auth_user_sid field of the given session."},
+"session.get_auth_user_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the auth_user_name field of the given session."},
+"session.get_rbac_permissions":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the rbac_permissions field of the given session."},
+"session.get_tasks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the tasks field of the given session."},
+"session.get_parent":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the parent field of the given session."},
+"session.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given session."},
+"session.set_this_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the this_host field of the given session."},
+"session.set_this_user":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"user"},doc:"New value to set"}],doc:"Set the this_user field of the given session."},
+"session.set_last_active":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the last_active field of the given session."},
+"session.set_pool":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the pool field of the given session."},
+"session.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given session."},
+"session.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given session."},
+"session.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given session.  If the key is not in that Map, then do nothing."},
+"session.set_is_local_superuser":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the is_local_superuser field of the given session."},
+"session.set_subject":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"subject"},doc:"New value to set"}],doc:"Set the subject field of the given session."},
+"session.set_validation_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the validation_time field of the given session."},
+"session.set_auth_user_sid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the auth_user_sid field of the given session."},
+"session.set_auth_user_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the auth_user_name field of the given session."},
+"session.set_rbac_permissions":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the rbac_permissions field of the given session."},
+"session.add_rbac_permissions":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the rbac_permissions field of the given session.  If the value is already in that Set, then do nothing."},
+"session.remove_rbac_permissions":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the rbac_permissions field of the given session.  If the value is not in that Set, then do nothing."},
+"session.set_parent":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"session"},doc:"New value to set"}],doc:"Set the parent field of the given session."},
+"session.login_with_password":{params:[{name:"uname",ty:{ty:"string"},doc:"Username for login."},{name:"pwd",ty:{ty:"string"},doc:"Password for login."},{name:"version",ty:{ty:"string"},doc:"Client API version."}],doc:"Attempt to authenticate the user, returning a session reference if successful"},
+"session.logout":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Log out of a session"},
+"session.change_password":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"old_pwd",ty:{ty:"string"},doc:"Old password for account"},{name:"new_pwd",ty:{ty:"string"},doc:"New password for account"}],doc:"Change the account password; if your session is authenticated with root priviledges then the old_pwd is validated and the new_pwd is set regardless"},
+"session.slave_login":{params:[{name:"host",ty:{ty:"ref",class:"host"},doc:"Host id of slave"},{name:"psecret",ty:{ty:"string"},doc:"Pool secret"}],doc:"Attempt to authenticate to the pool master by presenting the slave's host ref and pool secret"},
+"session.slave_local_login":{params:[{name:"psecret",ty:{ty:"string"},doc:"Pool secret"}],doc:"Authenticate locally against a slave in emergency mode. Note the resulting sessions are only good for use on this host."},
+"session.slave_local_login_with_password":{params:[{name:"uname",ty:{ty:"string"},doc:"Username for login."},{name:"pwd",ty:{ty:"string"},doc:"Password for login."}],doc:"Authenticate locally against a slave in emergency mode. Note the resulting sessions are only good for use on this host."},
+"session.local_logout":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Log out of local session."},
+"session.get_all_subject_identifiers":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the user subject-identifiers of all existing sessions"},
+"session.logout_subject_identifier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"subject_identifier",ty:{ty:"string"},doc:"User subject-identifier of the sessions to be destroyed"}],doc:"Log out all sessions associated to a user subject-identifier, except the session associated with the context calling this function"},
+"auth.get_subject_identifier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"subject_name",ty:{ty:"string"},doc:"The human-readable subject_name, such as a username or a groupname"}],doc:"This call queries the external directory service to obtain the subject_identifier as a string from the human-readable subject_name"},
+"auth.get_subject_information_from_identifier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"subject_identifier",ty:{ty:"string"},doc:"A string containing the subject_identifier, unique in the external directory service"}],doc:"This call queries the external directory service to obtain the user information (e.g. username, organization etc) from the specified subject_identifier"},
+"auth.get_group_membership":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"subject_identifier",ty:{ty:"string"},doc:"A string containing the subject_identifier, unique in the external directory service"}],doc:"This calls queries the external directory service to obtain the transitively-closed set of groups that the the subject_identifier is member of."},
+"subject.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given subject."},
+"subject.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class subject"},
+"subject.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the subjects known to the system."},
+"subject.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the subject instance with the specified UUID."},
+"subject.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"subject"},doc:"All constructor arguments"}],doc:"Create a new subject instance, and return its handle."},
+"subject.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"}],doc:"Destroy the specified subject instance."},
+"subject.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"}],doc:"Get the uuid field of the given subject."},
+"subject.get_subject_identifier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"}],doc:"Get the subject_identifier field of the given subject."},
+"subject.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"}],doc:"Get the other_config field of the given subject."},
+"subject.get_roles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"}],doc:"Get the roles field of the given subject."},
+"subject.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given subject."},
+"subject.set_subject_identifier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the subject_identifier field of the given subject."},
+"subject.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given subject."},
+"subject.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given subject."},
+"subject.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given subject.  If the key is not in that Map, then do nothing."},
+"subject.set_roles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"ref",class:"role"}},doc:"New value to set"}],doc:"Set the roles field of the given subject."},
+"subject.add_roles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"role"},doc:"New value to add"}],doc:"Add the given value to the roles field of the given subject.  If the value is already in that Set, then do nothing."},
+"subject.remove_roles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"role"},doc:"Value to remove"}],doc:"Remove the given value from the roles field of the given subject.  If the value is not in that Set, then do nothing."},
+"subject.add_to_roles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"The subject who we want to add the role to"},{name:"role",ty:{ty:"ref",class:"role"},doc:"The unique role reference"}],doc:"This call adds a new role to a subject"},
+"subject.remove_from_roles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"The subject from whom we want to remove the role"},{name:"role",ty:{ty:"ref",class:"role"},doc:"The unique role reference in the subject's roles field"}],doc:"This call removes a role from a subject"},
+"subject.get_permissions_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"The subject whose permissions will be retrieved"}],doc:"This call returns a list of permission names given a subject"},
+"subject.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the subjects known to the system."},
+"subject.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the subjects known to the system."},
+"subject.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of subject references to subject records for all subjects known to the system."},
+"role.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given role."},
+"role.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class role"},
+"role.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the roles known to the system."},
+"role.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the role instance with the specified UUID."},
+"role.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"role"},doc:"All constructor arguments"}],doc:"Create a new role instance, and return its handle."},
+"role.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"reference to the object"}],doc:"Destroy the specified role instance."},
+"role.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the role instances with the given label."},
+"role.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"reference to the object"}],doc:"Get the uuid field of the given role."},
+"role.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"reference to the object"}],doc:"Get the name/label field of the given role."},
+"role.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"reference to the object"}],doc:"Get the name/description field of the given role."},
+"role.get_subroles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"reference to the object"}],doc:"Get the subroles field of the given role."},
+"role.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given role."},
+"role.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given role."},
+"role.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given role."},
+"role.set_subroles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"ref",class:"role"}},doc:"New value to set"}],doc:"Set the subroles field of the given role."},
+"role.add_subroles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"role"},doc:"New value to add"}],doc:"Add the given value to the subroles field of the given role.  If the value is already in that Set, then do nothing."},
+"role.remove_subroles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"role"},doc:"Value to remove"}],doc:"Remove the given value from the subroles field of the given role.  If the value is not in that Set, then do nothing."},
+"role.get_permissions":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"a reference to a role"}],doc:"This call returns a list of permissions given a role"},
+"role.get_permissions_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"a reference to a role"}],doc:"This call returns a list of permission names given a role"},
+"role.get_by_permission":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"permission",ty:{ty:"ref",class:"role"},doc:"a reference to a permission"}],doc:"This call returns a list of roles given a permission"},
+"role.get_by_permission_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"The short friendly name of the role"}],doc:"This call returns a list of roles given a permission name"},
+"role.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the roles known to the system."},
+"role.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the roles known to the system."},
+"role.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of role references to role records for all roles known to the system."},
+"task.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given task."},
+"task.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class task"},
+"task.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the tasks known to the system."},
+"task.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the task instance with the specified UUID."},
+"task.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"task"},doc:"All constructor arguments"}],doc:"Create a new task instance, and return its handle."},
+"task.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Destroy the specified task instance."},
+"task.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the task instances with the given label."},
+"task.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the uuid field of the given task."},
+"task.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the name/label field of the given task."},
+"task.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the name/description field of the given task."},
+"task.get_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the allowed_operations field of the given task."},
+"task.get_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the current_operations field of the given task."},
+"task.get_created":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the created field of the given task."},
+"task.get_finished":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the finished field of the given task."},
+"task.get_status":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the status field of the given task."},
+"task.get_session":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the session field of the given task."},
+"task.get_resident_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the resident_on field of the given task."},
+"task.get_progress":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the progress field of the given task."},
+"task.get_externalpid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the externalpid field of the given task."},
+"task.get_stunnelpid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the stunnelpid field of the given task."},
+"task.get_forwarded":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the forwarded field of the given task."},
+"task.get_forwarded_to":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the forwarded_to field of the given task."},
+"task.get_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the type field of the given task."},
+"task.get_result":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the result field of the given task."},
+"task.get_error_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the error_info field of the given task."},
+"task.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the other_config field of the given task."},
+"task.get_subtask_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the subtask_of field of the given task."},
+"task.get_subtasks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the subtasks field of the given task."},
+"task.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given task."},
+"task.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given task."},
+"task.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given task."},
+"task.set_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"task_allowed_operations",values:["cancel"]}},doc:"New value to set"}],doc:"Set the allowed_operations field of the given task."},
+"task.add_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"task_allowed_operations",values:["cancel"]},doc:"New value to add"}],doc:"Add the given value to the allowed_operations field of the given task.  If the value is already in that Set, then do nothing."},
+"task.remove_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"task_allowed_operations",values:["cancel"]},doc:"Value to remove"}],doc:"Remove the given value from the allowed_operations field of the given task.  If the value is not in that Set, then do nothing."},
+"task.set_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"enum",name:"task_allowed_operations",values:["cancel"]}},doc:"New value to set"}],doc:"Set the current_operations field of the given task."},
+"task.add_to_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"enum",name:"task_allowed_operations",values:["cancel"]},doc:"Value to add"}],doc:"Add the given key-value pair to the current_operations field of the given task."},
+"task.remove_from_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the current_operations field of the given task.  If the key is not in that Map, then do nothing."},
+"task.set_created":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the created field of the given task."},
+"task.set_finished":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the finished field of the given task."},
+"task.set_status":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"task_status_type",values:["pending","success","failure","cancelling","cancelled"]},doc:"New value to set"}],doc:"Set the status field of the given task."},
+"task.set_session":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"session"},doc:"New value to set"}],doc:"Set the session field of the given task."},
+"task.set_resident_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the resident_on field of the given task."},
+"task.set_progress":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the progress field of the given task."},
+"task.set_externalpid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the externalpid field of the given task."},
+"task.set_stunnelpid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the stunnelpid field of the given task."},
+"task.set_forwarded":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the forwarded field of the given task."},
+"task.set_forwarded_to":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the forwarded_to field of the given task."},
+"task.set_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the type field of the given task."},
+"task.set_result":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the result field of the given task."},
+"task.set_error_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the error_info field of the given task."},
+"task.add_error_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the error_info field of the given task.  If the value is already in that Set, then do nothing."},
+"task.remove_error_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the error_info field of the given task.  If the value is not in that Set, then do nothing."},
+"task.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given task."},
+"task.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given task."},
+"task.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given task.  If the key is not in that Map, then do nothing."},
+"task.set_subtask_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"task"},doc:"New value to set"}],doc:"Set the subtask_of field of the given task."},
+"task.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"short label for the new task"},{name:"description",ty:{ty:"string"},doc:"longer description for the new task"}],doc:"Create a new task object which must be manually destroyed."},
+"task.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"Reference to the task object"}],doc:"Destroy the task object"},
+"task.cancel":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"task",ty:{ty:"ref",class:"task"},doc:"The task"}],doc:"Request that a task be cancelled. Note that a task may fail to be cancelled and may complete or fail normally and note that, even when a task does cancel, it might take an arbitrary amount of time."},
+"task.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the tasks known to the system."},
+"task.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the tasks known to the system."},
+"task.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of task references to task records for all tasks known to the system."},
+"event.register":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"classes",ty:{ty:"set",contents:{ty:"string"}},doc:"register for events for the indicated classes"}],doc:"Registers this session with the event system.  Specifying the empty list will register for all classes."},
+"event.unregister":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"classes",ty:{ty:"set",contents:{ty:"string"}},doc:"remove this session's registration for the indicated classes"}],doc:"Unregisters this session with the event system"},
+"event.next":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Blocking call which returns a (possibly empty) batch of events"},
+"event.from":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"classes",ty:{ty:"set",contents:{ty:"string"}},doc:"register for events for the indicated classes"},{name:"token",ty:{ty:"string"},doc:"A token representing the point from which to generate database events. The empty string represents the beginning."},{name:"timeout",ty:{ty:"float"},doc:"Return after this many seconds if no events match"}],doc:"Blocking call which returns a (possibly empty) batch of events"},
+"event.get_current_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return the ID of the next event to be generated by the system"},
+"pool.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given pool."},
+"pool.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class pool"},
+"pool.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the pools known to the system."},
+"pool.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the pool instance with the specified UUID."},
+"pool.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"pool"},doc:"All constructor arguments"}],doc:"Create a new pool instance, and return its handle."},
+"pool.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Destroy the specified pool instance."},
+"pool.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the uuid field of the given pool."},
+"pool.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the name_label field of the given pool."},
+"pool.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the name_description field of the given pool."},
+"pool.get_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the master field of the given pool."},
+"pool.get_default_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the default_SR field of the given pool."},
+"pool.get_suspend_image_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the suspend_image_SR field of the given pool."},
+"pool.get_crash_dump_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the crash_dump_SR field of the given pool."},
+"pool.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the other_config field of the given pool."},
+"pool.get_ha_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the ha_enabled field of the given pool."},
+"pool.get_ha_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the ha_configuration field of the given pool."},
+"pool.get_ha_statefiles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the ha_statefiles field of the given pool."},
+"pool.get_ha_host_failures_to_tolerate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the ha_host_failures_to_tolerate field of the given pool."},
+"pool.get_ha_plan_exists_for":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the ha_plan_exists_for field of the given pool."},
+"pool.get_ha_allow_overcommit":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the ha_allow_overcommit field of the given pool."},
+"pool.get_ha_overcommitted":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the ha_overcommitted field of the given pool."},
+"pool.get_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the blobs field of the given pool."},
+"pool.get_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the tags field of the given pool."},
+"pool.get_gui_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the gui_config field of the given pool."},
+"pool.get_wlb_url":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the wlb_url field of the given pool."},
+"pool.get_wlb_username":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the wlb_username field of the given pool."},
+"pool.get_wlb_password":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the wlb_password field of the given pool."},
+"pool.get_wlb_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the wlb_enabled field of the given pool."},
+"pool.get_wlb_verify_cert":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the wlb_verify_cert field of the given pool."},
+"pool.get_redo_log_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the redo_log_enabled field of the given pool."},
+"pool.get_redo_log_vdi":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the redo_log_vdi field of the given pool."},
+"pool.get_vswitch_controller":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the vswitch_controller field of the given pool."},
+"pool.get_restrictions":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the restrictions field of the given pool."},
+"pool.get_metadata_VDIs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the metadata_VDIs field of the given pool."},
+"pool.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given pool."},
+"pool.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name_label field of the given pool."},
+"pool.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name_description field of the given pool."},
+"pool.set_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the master field of the given pool."},
+"pool.set_default_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"SR"},doc:"New value to set"}],doc:"Set the default_SR field of the given pool."},
+"pool.set_suspend_image_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"SR"},doc:"New value to set"}],doc:"Set the suspend_image_SR field of the given pool."},
+"pool.set_crash_dump_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"SR"},doc:"New value to set"}],doc:"Set the crash_dump_SR field of the given pool."},
+"pool.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given pool."},
+"pool.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given pool."},
+"pool.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given pool.  If the key is not in that Map, then do nothing."},
+"pool.set_ha_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the ha_enabled field of the given pool."},
+"pool.set_ha_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the ha_configuration field of the given pool."},
+"pool.add_to_ha_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the ha_configuration field of the given pool."},
+"pool.remove_from_ha_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the ha_configuration field of the given pool.  If the key is not in that Map, then do nothing."},
+"pool.set_ha_statefiles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the ha_statefiles field of the given pool."},
+"pool.add_ha_statefiles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the ha_statefiles field of the given pool.  If the value is already in that Set, then do nothing."},
+"pool.remove_ha_statefiles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the ha_statefiles field of the given pool.  If the value is not in that Set, then do nothing."},
+"pool.set_ha_host_failures_to_tolerate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the ha_host_failures_to_tolerate field of the given pool."},
+"pool.set_ha_plan_exists_for":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the ha_plan_exists_for field of the given pool."},
+"pool.set_ha_allow_overcommit":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the ha_allow_overcommit field of the given pool."},
+"pool.set_ha_overcommitted":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the ha_overcommitted field of the given pool."},
+"pool.set_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"ref",class:"blob"}},doc:"New value to set"}],doc:"Set the blobs field of the given pool."},
+"pool.add_to_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"ref",class:"blob"},doc:"Value to add"}],doc:"Add the given key-value pair to the blobs field of the given pool."},
+"pool.remove_from_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the blobs field of the given pool.  If the key is not in that Map, then do nothing."},
+"pool.set_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the tags field of the given pool."},
+"pool.add_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the tags field of the given pool.  If the value is already in that Set, then do nothing."},
+"pool.remove_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the tags field of the given pool.  If the value is not in that Set, then do nothing."},
+"pool.set_gui_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the gui_config field of the given pool."},
+"pool.add_to_gui_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the gui_config field of the given pool."},
+"pool.remove_from_gui_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the gui_config field of the given pool.  If the key is not in that Map, then do nothing."},
+"pool.set_wlb_url":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the wlb_url field of the given pool."},
+"pool.set_wlb_username":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the wlb_username field of the given pool."},
+"pool.set_wlb_password":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"secret"},doc:"New value to set"}],doc:"Set the wlb_password field of the given pool."},
+"pool.set_wlb_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the wlb_enabled field of the given pool."},
+"pool.set_wlb_verify_cert":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the wlb_verify_cert field of the given pool."},
+"pool.set_redo_log_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the redo_log_enabled field of the given pool."},
+"pool.set_redo_log_vdi":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VDI"},doc:"New value to set"}],doc:"Set the redo_log_vdi field of the given pool."},
+"pool.set_vswitch_controller":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the vswitch_controller field of the given pool."},
+"pool.set_restrictions":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the restrictions field of the given pool."},
+"pool.add_to_restrictions":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the restrictions field of the given pool."},
+"pool.remove_from_restrictions":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the restrictions field of the given pool.  If the key is not in that Map, then do nothing."},
+"pool.join":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"master_address",ty:{ty:"string"},doc:"The hostname of the master of the pool to join"},{name:"master_username",ty:{ty:"string"},doc:"The username of the master (for initial authentication)"},{name:"master_password",ty:{ty:"string"},doc:"The password for the master (for initial authentication)"}],doc:"Instruct host to join a new pool"},
+"pool.join_force":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"master_address",ty:{ty:"string"},doc:"The hostname of the master of the pool to join"},{name:"master_username",ty:{ty:"string"},doc:"The username of the master (for initial authentication)"},{name:"master_password",ty:{ty:"string"},doc:"The password for the master (for initial authentication)"}],doc:"Instruct host to join a new pool"},
+"pool.eject":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to eject"}],doc:"Instruct a pool master to eject a host from the pool"},
+"pool.initial_auth":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Internal use only"},
+"pool.emergency_transition_to_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Instruct host that's currently a slave to transition to being master"},
+"pool.emergency_reset_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"master_address",ty:{ty:"string"},doc:"The hostname of the master"}],doc:"Instruct a slave already in a pool that the master has changed"},
+"pool.recover_slaves":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Instruct a pool master, M, to try and contact its slaves and, if slaves are in emergency mode, reset their master address to M."},
+"pool.hello":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host_uuid",ty:{ty:"string"},doc:""},{name:"host_address",ty:{ty:"string"},doc:""}],doc:"Internal use only"},
+"pool.is_slave":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:""}],doc:"Internal use only"},
+"pool.create_VLAN":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"device",ty:{ty:"string"},doc:"physical interface on which to create the VLAN interface"},{name:"network",ty:{ty:"ref",class:"network"},doc:"network to which this interface should be connected"},{name:"VLAN",ty:{ty:"int"},doc:"VLAN tag for the new interface"}],doc:"Create PIFs, mapping a network to the same physical interface/VLAN on each host. This call is deprecated: use Pool.create_VLAN_from_PIF instead."},
+"pool.create_VLAN_from_PIF":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"pif",ty:{ty:"ref",class:"PIF"},doc:"physical interface on any particular host, that identifies the PIF on which to create the (pool-wide) VLAN interface"},{name:"network",ty:{ty:"ref",class:"network"},doc:"network to which this interface should be connected"},{name:"VLAN",ty:{ty:"int"},doc:"VLAN tag for the new interface"}],doc:"Create a pool-wide VLAN by taking the PIF."},
+"pool.slave_network_report":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"phydevs",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"(device,bridge) pairs of physical NICs on slave"},{name:"dev_to_mac",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"(device,mac) pairs of physical NICs on slave"},{name:"dev_to_mtu",ty:{ty:"map",keys:{ty:"string"},values:{ty:"int"}},doc:"(device,mtu) pairs of physical NICs on slave"},{name:"slave_host",ty:{ty:"ref",class:"host"},doc:"the host that the PIFs will be attached to when created"}],doc:"Internal use only"},
+"pool.enable_ha":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"heartbeat_srs",ty:{ty:"set",contents:{ty:"ref",class:"SR"}},doc:"Set of SRs to use for storage heartbeating."},{name:"configuration",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Detailed HA configuration to apply"}],doc:"Turn on High Availability mode"},
+"pool.disable_ha":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Turn off High Availability mode"},
+"pool.sync_database":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Forcibly synchronise the database now"},
+"pool.designate_new_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host who should become the new master"}],doc:"Perform an orderly handover of the role of master to the referenced host."},
+"pool.ha_prevent_restarts_for":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"seconds",ty:{ty:"int"},doc:"The number of seconds to block the restart thread for"}],doc:"When this call returns the VM restart logic will not run for the requested number of seconds. If the argument is zero then the restart thread is immediately unblocked"},
+"pool.ha_failover_plan_exists":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"n",ty:{ty:"int"},doc:"The number of host failures to plan for"}],doc:"Returns true if a VM failover plan exists for up to 'n' host failures"},
+"pool.ha_compute_max_host_failures_to_tolerate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Returns the maximum number of host failures we could tolerate before we would be unable to restart configured VMs"},
+"pool.ha_compute_hypothetical_max_host_failures_to_tolerate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"configuration",ty:{ty:"map",keys:{ty:"ref",class:"VM"},values:{ty:"string"}},doc:"Map of protected VM reference to restart priority"}],doc:"Returns the maximum number of host failures we could tolerate before we would be unable to restart the provided VMs"},
+"pool.ha_compute_vm_failover_plan":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"failed_hosts",ty:{ty:"set",contents:{ty:"ref",class:"host"}},doc:"The set of hosts to assume have failed"},{name:"failed_vms",ty:{ty:"set",contents:{ty:"ref",class:"VM"}},doc:"The set of VMs to restart"}],doc:"Return a VM failover plan assuming a given subset of hosts fail"},
+"pool.set_ha_host_failures_to_tolerate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"The pool"},{name:"value",ty:{ty:"int"},doc:"New number of host failures to consider"}],doc:"Set the maximum number of host failures to consider in the HA VM restart planner"},
+"pool.create_new_blob":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"pool",ty:{ty:"ref",class:"pool"},doc:"The pool"},{name:"name",ty:{ty:"string"},doc:"The name associated with the blob"},{name:"mime_type",ty:{ty:"string"},doc:"The mime type for the data. Empty string translates to application/octet-stream"}],doc:"Create a placeholder for a named binary blob of data that is associated with this pool"},
+"pool.ha_schedule_plan_recomputation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Signal that the plan should be recomputed (eg a host has come online)"},
+"pool.enable_binary_storage":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Enable the storage of larger objects, such as RRDs, messages and binary blobs across all hosts in the pool"},
+"pool.disable_binary_storage":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Disable the storage of larger objects, such as RRDs, messages and binary blobs across all hosts in the pool. This will destroy all of these objects where they exist."},
+"pool.enable_external_auth":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"pool",ty:{ty:"ref",class:"pool"},doc:"The pool whose external authentication should be enabled"},{name:"config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"A list of key-values containing the configuration data"},{name:"service_name",ty:{ty:"string"},doc:"The name of the service"},{name:"auth_type",ty:{ty:"string"},doc:"The type of authentication (e.g. AD for Active Directory)"}],doc:"This call enables external authentication on all the hosts of the pool"},
+"pool.disable_external_auth":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"pool",ty:{ty:"ref",class:"pool"},doc:"The pool whose external authentication should be disabled"},{name:"config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Optional parameters as a list of key-values containing the configuration data"}],doc:"This call disables external authentication on all the hosts of the pool"},
+"pool.detect_nonhomogeneous_external_auth":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"pool",ty:{ty:"ref",class:"pool"},doc:"The pool where to detect non-homogeneous external authentication configuration"}],doc:"This call asynchronously detects if the external authentication configuration in any slave is different from that in the master and raises appropriate alerts"},
+"pool.initialize_wlb":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"wlb_url",ty:{ty:"string"},doc:"The ip address and port to use when accessing the wlb server"},{name:"wlb_username",ty:{ty:"string"},doc:"The username used to authenticate with the wlb server"},{name:"wlb_password",ty:{ty:"string"},doc:"The password used to authenticate with the wlb server"},{name:"xenserver_username",ty:{ty:"string"},doc:"The usernamed used by the wlb server to authenticate with the xenserver"},{name:"xenserver_password",ty:{ty:"string"},doc:"The password used by the wlb server to authenticate with the xenserver"}],doc:"Initializes workload balancing monitoring on this pool with the specified wlb server"},
+"pool.deconfigure_wlb":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Permanently deconfigures workload balancing monitoring on this pool"},
+"pool.send_wlb_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"The configuration to use in optimizing this pool"}],doc:"Sets the pool optimization criteria for the workload balancing server"},
+"pool.retrieve_wlb_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Retrieves the pool optimization criteria from the workload balancing server"},
+"pool.retrieve_wlb_recommendations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Retrieves vm migrate recommendations for the pool from the workload balancing server"},
+"pool.send_test_post":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"string"},doc:""},{name:"port",ty:{ty:"int"},doc:""},{name:"body",ty:{ty:"string"},doc:""}],doc:"Send the given body to the given host and port, using HTTPS, and print the response.  This is used for debugging the SSL layer."},
+"pool.certificate_install":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"name",ty:{ty:"string"},doc:"A name to give the certificate"},{name:"cert",ty:{ty:"string"},doc:"The certificate"}],doc:"Install an SSL certificate pool-wide."},
+"pool.certificate_uninstall":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"name",ty:{ty:"string"},doc:"The certificate name"}],doc:"Remove an SSL certificate."},
+"pool.certificate_list":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"List all installed SSL certificates."},
+"pool.crl_install":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"name",ty:{ty:"string"},doc:"A name to give the CRL"},{name:"cert",ty:{ty:"string"},doc:"The CRL"}],doc:"Install an SSL certificate revocation list, pool-wide."},
+"pool.crl_uninstall":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"name",ty:{ty:"string"},doc:"The CRL name"}],doc:"Remove an SSL certificate revocation list."},
+"pool.crl_list":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"List all installed SSL certificate revocation lists."},
+"pool.certificate_sync":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Sync SSL certificates from master to slaves."},
+"pool.enable_redo_log":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"SR to hold the redo log."}],doc:"Enable the redo log on the given SR and start using it, unless HA is enabled."},
+"pool.disable_redo_log":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Disable the redo log if in use, unless HA is enabled."},
+"pool.audit_log_append":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"line",ty:{ty:"string"},doc:"line to be appended to the audit log"}],doc:"Append a line to the audit log on the master."},
+"pool.set_vswitch_controller":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"address",ty:{ty:"string"},doc:"IP address of the vswitch controller."}],doc:"Set the IP address of the vswitch controller."},
+"pool.test_archive_target":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"Reference to the pool"},{name:"config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Location config settings to test"}],doc:"This call tests if a location is valid"},
+"pool.enable_local_storage_caching":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"Reference to the pool"}],doc:"This call attempts to enable pool-wide local storage caching"},
+"pool.disable_local_storage_caching":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"Reference to the pool"}],doc:"This call disables pool-wide local storage caching"},
+"pool.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the pools known to the system."},
+"pool.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the pools known to the system."},
+"pool.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of pool references to pool records for all pools known to the system."},
+"pool_patch.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given pool_patch."},
+"pool_patch.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class pool_patch"},
+"pool_patch.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the pool_patchs known to the system."},
+"pool_patch.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the pool_patch instance with the specified UUID."},
+"pool_patch.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"pool_patch"},doc:"All constructor arguments"}],doc:"Create a new pool_patch instance, and return its handle."},
+"pool_patch.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Destroy the specified pool_patch instance."},
+"pool_patch.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the pool_patch instances with the given label."},
+"pool_patch.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the uuid field of the given pool_patch."},
+"pool_patch.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the name/label field of the given pool_patch."},
+"pool_patch.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the name/description field of the given pool_patch."},
+"pool_patch.get_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the version field of the given pool_patch."},
+"pool_patch.get_filename":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the filename field of the given pool_patch."},
+"pool_patch.get_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the size field of the given pool_patch."},
+"pool_patch.get_pool_applied":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the pool_applied field of the given pool_patch."},
+"pool_patch.get_host_patches":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the host_patches field of the given pool_patch."},
+"pool_patch.get_after_apply_guidance":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the after_apply_guidance field of the given pool_patch."},
+"pool_patch.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the other_config field of the given pool_patch."},
+"pool_patch.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given pool_patch."},
+"pool_patch.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given pool_patch."},
+"pool_patch.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given pool_patch."},
+"pool_patch.set_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the version field of the given pool_patch."},
+"pool_patch.set_filename":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the filename field of the given pool_patch."},
+"pool_patch.set_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the size field of the given pool_patch."},
+"pool_patch.set_pool_applied":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the pool_applied field of the given pool_patch."},
+"pool_patch.set_after_apply_guidance":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"after_apply_guidance",values:["restartHVM","restartPV","restartHost","restartXAPI"]}},doc:"New value to set"}],doc:"Set the after_apply_guidance field of the given pool_patch."},
+"pool_patch.add_after_apply_guidance":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"after_apply_guidance",values:["restartHVM","restartPV","restartHost","restartXAPI"]},doc:"New value to add"}],doc:"Add the given value to the after_apply_guidance field of the given pool_patch.  If the value is already in that Set, then do nothing."},
+"pool_patch.remove_after_apply_guidance":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"after_apply_guidance",values:["restartHVM","restartPV","restartHost","restartXAPI"]},doc:"Value to remove"}],doc:"Remove the given value from the after_apply_guidance field of the given pool_patch.  If the value is not in that Set, then do nothing."},
+"pool_patch.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given pool_patch."},
+"pool_patch.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given pool_patch."},
+"pool_patch.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given pool_patch.  If the key is not in that Map, then do nothing."},
+"pool_patch.apply":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"The patch to apply"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to apply the patch too"}],doc:"Apply the selected patch to a host and return its output"},
+"pool_patch.pool_apply":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"The patch to apply"}],doc:"Apply the selected patch to all hosts in the pool and return a map of host_ref -> patch output"},
+"pool_patch.precheck":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"The patch whose prechecks will be run"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to run the prechecks on"}],doc:"Execute the precheck stage of the selected patch on a host and return its output"},
+"pool_patch.clean":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"The patch to clean up"}],doc:"Removes the patch's files from all hosts in the pool, but does not remove the database entries"},
+"pool_patch.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"The patch to destroy"}],doc:"Removes the patch's files from all hosts in the pool, and removes the database entries.  Only works on unapplied patches."},
+"pool_patch.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the pool_patchs known to the system."},
+"pool_patch.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the pool_patchs known to the system."},
+"pool_patch.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of pool_patch references to pool_patch records for all pool_patchs known to the system."},
+"VM.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VM."},
+"VM.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VM"},
+"VM.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VMs known to the system."},
+"VM.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VM instance with the specified UUID."},
+"VM.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VM"},doc:"All constructor arguments"}],doc:"Create a new VM instance, and return its handle."},
+"VM.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Destroy the specified VM.  The VM is completely removed from the system.  This function can only be called when the VM is in the Halted State."},
+"VM.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the VM instances with the given label."},
+"VM.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the uuid field of the given VM."},
+"VM.get_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the allowed_operations field of the given VM."},
+"VM.get_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the current_operations field of the given VM."},
+"VM.get_power_state":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the power_state field of the given VM."},
+"VM.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the name/label field of the given VM."},
+"VM.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the name/description field of the given VM."},
+"VM.get_user_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the user_version field of the given VM."},
+"VM.get_is_a_template":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the is_a_template field of the given VM."},
+"VM.get_suspend_VDI":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the suspend_VDI field of the given VM."},
+"VM.get_resident_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the resident_on field of the given VM."},
+"VM.get_scheduled_to_be_resident_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the scheduled_to_be_resident_on field of the given VM."},
+"VM.get_affinity":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the affinity field of the given VM."},
+"VM.get_memory_overhead":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the memory/overhead field of the given VM."},
+"VM.get_memory_target":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the memory/target field of the given VM."},
+"VM.get_memory_static_max":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the memory/static_max field of the given VM."},
+"VM.get_memory_dynamic_max":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the memory/dynamic_max field of the given VM."},
+"VM.get_memory_dynamic_min":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the memory/dynamic_min field of the given VM."},
+"VM.get_memory_static_min":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the memory/static_min field of the given VM."},
+"VM.get_VCPUs_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the VCPUs/params field of the given VM."},
+"VM.get_VCPUs_max":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the VCPUs/max field of the given VM."},
+"VM.get_VCPUs_at_startup":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the VCPUs/at_startup field of the given VM."},
+"VM.get_actions_after_shutdown":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the actions/after_shutdown field of the given VM."},
+"VM.get_actions_after_reboot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the actions/after_reboot field of the given VM."},
+"VM.get_actions_after_crash":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the actions/after_crash field of the given VM."},
+"VM.get_consoles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the consoles field of the given VM."},
+"VM.get_VIFs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the VIFs field of the given VM."},
+"VM.get_VBDs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the VBDs field of the given VM."},
+"VM.get_crash_dumps":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the crash_dumps field of the given VM."},
+"VM.get_VTPMs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the VTPMs field of the given VM."},
+"VM.get_PV_bootloader":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the PV/bootloader field of the given VM."},
+"VM.get_PV_kernel":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the PV/kernel field of the given VM."},
+"VM.get_PV_ramdisk":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the PV/ramdisk field of the given VM."},
+"VM.get_PV_args":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the PV/args field of the given VM."},
+"VM.get_PV_bootloader_args":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the PV/bootloader_args field of the given VM."},
+"VM.get_PV_legacy_args":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the PV/legacy_args field of the given VM."},
+"VM.get_HVM_boot_policy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the HVM/boot_policy field of the given VM."},
+"VM.get_HVM_boot_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the HVM/boot_params field of the given VM."},
+"VM.get_HVM_shadow_multiplier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the HVM/shadow_multiplier field of the given VM."},
+"VM.get_platform":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the platform field of the given VM."},
+"VM.get_PCI_bus":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the PCI_bus field of the given VM."},
+"VM.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the other_config field of the given VM."},
+"VM.get_domid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the domid field of the given VM."},
+"VM.get_domarch":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the domarch field of the given VM."},
+"VM.get_last_boot_CPU_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the last_boot_CPU_flags field of the given VM."},
+"VM.get_is_control_domain":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the is_control_domain field of the given VM."},
+"VM.get_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the metrics field of the given VM."},
+"VM.get_guest_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the guest_metrics field of the given VM."},
+"VM.get_last_booted_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the last_booted_record field of the given VM."},
+"VM.get_recommendations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the recommendations field of the given VM."},
+"VM.get_xenstore_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the xenstore_data field of the given VM."},
+"VM.get_ha_always_run":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the ha_always_run field of the given VM."},
+"VM.get_ha_restart_priority":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the ha_restart_priority field of the given VM."},
+"VM.get_is_a_snapshot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the is_a_snapshot field of the given VM."},
+"VM.get_snapshot_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the snapshot_of field of the given VM."},
+"VM.get_snapshots":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the snapshots field of the given VM."},
+"VM.get_snapshot_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the snapshot_time field of the given VM."},
+"VM.get_transportable_snapshot_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the transportable_snapshot_id field of the given VM."},
+"VM.get_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the blobs field of the given VM."},
+"VM.get_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the tags field of the given VM."},
+"VM.get_blocked_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the blocked_operations field of the given VM."},
+"VM.get_snapshot_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the snapshot_info field of the given VM."},
+"VM.get_snapshot_metadata":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the snapshot_metadata field of the given VM."},
+"VM.get_parent":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the parent field of the given VM."},
+"VM.get_children":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the children field of the given VM."},
+"VM.get_bios_strings":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the bios_strings field of the given VM."},
+"VM.get_protection_policy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the protection_policy field of the given VM."},
+"VM.get_is_snapshot_from_vmpp":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the is_snapshot_from_vmpp field of the given VM."},
+"VM.get_appliance":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the appliance field of the given VM."},
+"VM.get_start_delay":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the start_delay field of the given VM."},
+"VM.get_shutdown_delay":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the shutdown_delay field of the given VM."},
+"VM.get_order":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the order field of the given VM."},
+"VM.get_VGPUs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the VGPUs field of the given VM."},
+"VM.get_attached_PCIs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the attached_PCIs field of the given VM."},
+"VM.get_suspend_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the suspend_SR field of the given VM."},
+"VM.get_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the version field of the given VM."},
+"VM.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VM."},
+"VM.set_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","create_template","revert","checkpoint","snapshot_with_quiesce","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_dynamic_range","changing_static_range","changing_memory_limits","get_cooperative","changing_shadow_memory","changing_shadow_memory_live","changing_VCPUs","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","metadata_export","reverting","destroy"]}},doc:"New value to set"}],doc:"Set the allowed_operations field of the given VM."},
+"VM.add_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","create_template","revert","checkpoint","snapshot_with_quiesce","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_dynamic_range","changing_static_range","changing_memory_limits","get_cooperative","changing_shadow_memory","changing_shadow_memory_live","changing_VCPUs","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","metadata_export","reverting","destroy"]},doc:"New value to add"}],doc:"Add the given value to the allowed_operations field of the given VM.  If the value is already in that Set, then do nothing."},
+"VM.remove_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","create_template","revert","checkpoint","snapshot_with_quiesce","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_dynamic_range","changing_static_range","changing_memory_limits","get_cooperative","changing_shadow_memory","changing_shadow_memory_live","changing_VCPUs","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","metadata_export","reverting","destroy"]},doc:"Value to remove"}],doc:"Remove the given value from the allowed_operations field of the given VM.  If the value is not in that Set, then do nothing."},
+"VM.set_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","create_template","revert","checkpoint","snapshot_with_quiesce","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_dynamic_range","changing_static_range","changing_memory_limits","get_cooperative","changing_shadow_memory","changing_shadow_memory_live","changing_VCPUs","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","metadata_export","reverting","destroy"]}},doc:"New value to set"}],doc:"Set the current_operations field of the given VM."},
+"VM.add_to_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","create_template","revert","checkpoint","snapshot_with_quiesce","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_dynamic_range","changing_static_range","changing_memory_limits","get_cooperative","changing_shadow_memory","changing_shadow_memory_live","changing_VCPUs","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","metadata_export","reverting","destroy"]},doc:"Value to add"}],doc:"Add the given key-value pair to the current_operations field of the given VM."},
+"VM.remove_from_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the current_operations field of the given VM.  If the key is not in that Map, then do nothing."},
+"VM.set_power_state":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vm_power_state",values:["Halted","Paused","Running","Suspended"]},doc:"New value to set"}],doc:"Set the power_state field of the given VM."},
+"VM.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given VM."},
+"VM.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given VM."},
+"VM.set_user_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the user_version field of the given VM."},
+"VM.set_is_a_template":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the is_a_template field of the given VM."},
+"VM.set_suspend_VDI":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VDI"},doc:"New value to set"}],doc:"Set the suspend_VDI field of the given VM."},
+"VM.set_resident_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the resident_on field of the given VM."},
+"VM.set_scheduled_to_be_resident_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the scheduled_to_be_resident_on field of the given VM."},
+"VM.set_affinity":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the affinity field of the given VM."},
+"VM.set_memory_overhead":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/overhead field of the given VM."},
+"VM.set_memory_target":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/target field of the given VM."},
+"VM.set_memory_static_max":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/static_max field of the given VM."},
+"VM.set_memory_dynamic_max":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/dynamic_max field of the given VM."},
+"VM.set_memory_dynamic_min":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/dynamic_min field of the given VM."},
+"VM.set_memory_static_min":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/static_min field of the given VM."},
+"VM.set_VCPUs_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the VCPUs/params field of the given VM."},
+"VM.add_to_VCPUs_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the VCPUs/params field of the given VM."},
+"VM.remove_from_VCPUs_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the VCPUs/params field of the given VM.  If the key is not in that Map, then do nothing."},
+"VM.set_VCPUs_max":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the VCPUs/max field of the given VM."},
+"VM.set_VCPUs_at_startup":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the VCPUs/at_startup field of the given VM."},
+"VM.set_actions_after_shutdown":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"on_normal_exit",values:["destroy","restart"]},doc:"New value to set"}],doc:"Set the actions/after_shutdown field of the given VM."},
+"VM.set_actions_after_reboot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"on_normal_exit",values:["destroy","restart"]},doc:"New value to set"}],doc:"Set the actions/after_reboot field of the given VM."},
+"VM.set_actions_after_crash":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"on_crash_behaviour",values:["destroy","coredump_and_destroy","restart","coredump_and_restart","preserve","rename_restart"]},doc:"New value to set"}],doc:"Set the actions/after_crash field of the given VM."},
+"VM.set_PV_bootloader":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the PV/bootloader field of the given VM."},
+"VM.set_PV_kernel":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the PV/kernel field of the given VM."},
+"VM.set_PV_ramdisk":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the PV/ramdisk field of the given VM."},
+"VM.set_PV_args":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the PV/args field of the given VM."},
+"VM.set_PV_bootloader_args":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the PV/bootloader_args field of the given VM."},
+"VM.set_PV_legacy_args":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the PV/legacy_args field of the given VM."},
+"VM.set_HVM_boot_policy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the HVM/boot_policy field of the given VM."},
+"VM.set_HVM_boot_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the HVM/boot_params field of the given VM."},
+"VM.add_to_HVM_boot_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the HVM/boot_params field of the given VM."},
+"VM.remove_from_HVM_boot_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the HVM/boot_params field of the given VM.  If the key is not in that Map, then do nothing."},
+"VM.set_HVM_shadow_multiplier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the HVM/shadow_multiplier field of the given VM."},
+"VM.set_platform":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the platform field of the given VM."},
+"VM.add_to_platform":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the platform field of the given VM."},
+"VM.remove_from_platform":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the platform field of the given VM.  If the key is not in that Map, then do nothing."},
+"VM.set_PCI_bus":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the PCI_bus field of the given VM."},
+"VM.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VM."},
+"VM.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VM."},
+"VM.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VM.  If the key is not in that Map, then do nothing."},
+"VM.set_domid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the domid field of the given VM."},
+"VM.set_domarch":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the domarch field of the given VM."},
+"VM.set_last_boot_CPU_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the last_boot_CPU_flags field of the given VM."},
+"VM.add_to_last_boot_CPU_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the last_boot_CPU_flags field of the given VM."},
+"VM.remove_from_last_boot_CPU_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the last_boot_CPU_flags field of the given VM.  If the key is not in that Map, then do nothing."},
+"VM.set_is_control_domain":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the is_control_domain field of the given VM."},
+"VM.set_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM_metrics"},doc:"New value to set"}],doc:"Set the metrics field of the given VM."},
+"VM.set_guest_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"New value to set"}],doc:"Set the guest_metrics field of the given VM."},
+"VM.set_last_booted_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the last_booted_record field of the given VM."},
+"VM.set_recommendations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the recommendations field of the given VM."},
+"VM.set_xenstore_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the xenstore_data field of the given VM."},
+"VM.add_to_xenstore_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the xenstore_data field of the given VM."},
+"VM.remove_from_xenstore_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the xenstore_data field of the given VM.  If the key is not in that Map, then do nothing."},
+"VM.set_ha_always_run":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the ha_always_run field of the given VM."},
+"VM.set_ha_restart_priority":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the ha_restart_priority field of the given VM."},
+"VM.set_is_a_snapshot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the is_a_snapshot field of the given VM."},
+"VM.set_snapshot_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to set"}],doc:"Set the snapshot_of field of the given VM."},
+"VM.set_snapshot_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the snapshot_time field of the given VM."},
+"VM.set_transportable_snapshot_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the transportable_snapshot_id field of the given VM."},
+"VM.set_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"ref",class:"blob"}},doc:"New value to set"}],doc:"Set the blobs field of the given VM."},
+"VM.add_to_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"ref",class:"blob"},doc:"Value to add"}],doc:"Add the given key-value pair to the blobs field of the given VM."},
+"VM.remove_from_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the blobs field of the given VM.  If the key is not in that Map, then do nothing."},
+"VM.set_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the tags field of the given VM."},
+"VM.add_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the tags field of the given VM.  If the value is already in that Set, then do nothing."},
+"VM.remove_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the tags field of the given VM.  If the value is not in that Set, then do nothing."},
+"VM.set_blocked_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","create_template","revert","checkpoint","snapshot_with_quiesce","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_dynamic_range","changing_static_range","changing_memory_limits","get_cooperative","changing_shadow_memory","changing_shadow_memory_live","changing_VCPUs","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","metadata_export","reverting","destroy"]},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the blocked_operations field of the given VM."},
+"VM.add_to_blocked_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","create_template","revert","checkpoint","snapshot_with_quiesce","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_dynamic_range","changing_static_range","changing_memory_limits","get_cooperative","changing_shadow_memory","changing_shadow_memory_live","changing_VCPUs","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","metadata_export","reverting","destroy"]},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the blocked_operations field of the given VM."},
+"VM.remove_from_blocked_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","create_template","revert","checkpoint","snapshot_with_quiesce","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_dynamic_range","changing_static_range","changing_memory_limits","get_cooperative","changing_shadow_memory","changing_shadow_memory_live","changing_VCPUs","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","metadata_export","reverting","destroy"]},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the blocked_operations field of the given VM.  If the key is not in that Map, then do nothing."},
+"VM.set_snapshot_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the snapshot_info field of the given VM."},
+"VM.add_to_snapshot_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the snapshot_info field of the given VM."},
+"VM.remove_from_snapshot_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the snapshot_info field of the given VM.  If the key is not in that Map, then do nothing."},
+"VM.set_snapshot_metadata":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the snapshot_metadata field of the given VM."},
+"VM.set_parent":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to set"}],doc:"Set the parent field of the given VM."},
+"VM.set_bios_strings":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the bios_strings field of the given VM."},
+"VM.add_to_bios_strings":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the bios_strings field of the given VM."},
+"VM.remove_from_bios_strings":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the bios_strings field of the given VM.  If the key is not in that Map, then do nothing."},
+"VM.set_protection_policy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VMPP"},doc:"New value to set"}],doc:"Set the protection_policy field of the given VM."},
+"VM.set_is_snapshot_from_vmpp":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the is_snapshot_from_vmpp field of the given VM."},
+"VM.set_appliance":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM_appliance"},doc:"New value to set"}],doc:"Set the appliance field of the given VM."},
+"VM.set_start_delay":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the start_delay field of the given VM."},
+"VM.set_shutdown_delay":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the shutdown_delay field of the given VM."},
+"VM.set_order":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the order field of the given VM."},
+"VM.set_attached_PCIs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"ref",class:"PCI"}},doc:"New value to set"}],doc:"Set the attached_PCIs field of the given VM."},
+"VM.add_attached_PCIs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PCI"},doc:"New value to add"}],doc:"Add the given value to the attached_PCIs field of the given VM.  If the value is already in that Set, then do nothing."},
+"VM.remove_attached_PCIs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PCI"},doc:"Value to remove"}],doc:"Remove the given value from the attached_PCIs field of the given VM.  If the value is not in that Set, then do nothing."},
+"VM.set_suspend_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"SR"},doc:"New value to set"}],doc:"Set the suspend_SR field of the given VM."},
+"VM.set_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the version field of the given VM."},
+"VM.snapshot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to be snapshotted"},{name:"new_name",ty:{ty:"string"},doc:"The name of the snapshotted VM"}],doc:"Snapshots the specified VM, making a new VM. Snapshot automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write)."},
+"VM.snapshot_with_quiesce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to be snapshotted"},{name:"new_name",ty:{ty:"string"},doc:"The name of the snapshotted VM"}],doc:"Snapshots the specified VM with quiesce, making a new VM. Snapshot automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write)."},
+"VM.clone":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to be cloned"},{name:"new_name",ty:{ty:"string"},doc:"The name of the cloned VM"}],doc:"Clones the specified VM, making a new VM. Clone automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write).   This function can only be called when the VM is in the Halted State."},
+"VM.copy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to be copied"},{name:"new_name",ty:{ty:"string"},doc:"The name of the copied VM"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"An SR to copy all the VM's disks into (if an invalid reference then it uses the existing SRs)"}],doc:"Copied the specified VM, making a new VM. Unlike clone, copy does not exploits the capabilities of the underlying storage repository in which the VM's disk images are stored. Instead, copy guarantees that the disk images of the newly created VM will be 'full disks' - i.e. not part of a CoW chain.  This function can only be called when the VM is in the Halted State."},
+"VM.revert":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"snapshot",ty:{ty:"ref",class:"VM"},doc:"The snapshotted state that we revert to"}],doc:"Reverts the specified VM to a previous state."},
+"VM.checkpoint":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to be checkpointed"},{name:"new_name",ty:{ty:"string"},doc:"The name of the checkpointed VM"}],doc:"Checkpoints the specified VM, making a new VM. Checkpoint automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write) and saves the memory image as well."},
+"VM.provision":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to be provisioned"}],doc:"Inspects the disk configuration contained within the VM's other_config, creates VDIs and VBDs and then executes any applicable post-install script."},
+"VM.start":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to start"},{name:"start_paused",ty:{ty:"bool"},doc:"Instantiate VM in paused state if set to true."},{name:"force",ty:{ty:"bool"},doc:"Attempt to force the VM to start. If this flag is false then the VM may fail pre-boot safety checks (e.g. if the CPU the VM last booted on looks substantially different to the current one)"}],doc:"Start the specified VM.  This function can only be called with the VM is in the Halted State."},
+"VM.start_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to start"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host on which to start the VM"},{name:"start_paused",ty:{ty:"bool"},doc:"Instantiate VM in paused state if set to true."},{name:"force",ty:{ty:"bool"},doc:"Attempt to force the VM to start. If this flag is false then the VM may fail pre-boot safety checks (e.g. if the CPU the VM last booted on looks substantially different to the current one)"}],doc:"Start the specified VM on a particular host.  This function can only be called with the VM is in the Halted State."},
+"VM.pause":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to pause"}],doc:"Pause the specified VM. This can only be called when the specified VM is in the Running state."},
+"VM.unpause":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to unpause"}],doc:"Resume the specified VM. This can only be called when the specified VM is in the Paused state."},
+"VM.clean_shutdown":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to shutdown"}],doc:"Attempt to cleanly shutdown the specified VM. (Note: this may not be supported---e.g. if a guest agent is not installed). This can only be called when the specified VM is in the Running state."},
+"VM.clean_reboot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to shutdown"}],doc:"Attempt to cleanly shutdown the specified VM (Note: this may not be supported---e.g. if a guest agent is not installed). This can only be called when the specified VM is in the Running state."},
+"VM.hard_shutdown":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to destroy"}],doc:"Stop executing the specified VM without attempting a clean shutdown."},
+"VM.power_state_reset":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to reset"}],doc:"Reset the power-state of the VM to halted in the database only. (Used to recover from slave failures in pooling scenarios by resetting the power-states of VMs running on dead slaves to halted.) This is a potentially dangerous operation; use with care."},
+"VM.hard_reboot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to reboot"}],doc:"Stop executing the specified VM without attempting a clean shutdown and immediately restart the VM."},
+"VM.suspend":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to suspend"}],doc:"Suspend the specified VM to disk.  This can only be called when the specified VM is in the Running state."},
+"VM.csvm":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:""}],doc:"undocumented. internal use only. This call is deprecated."},
+"VM.resume":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to resume"},{name:"start_paused",ty:{ty:"bool"},doc:"Resume VM in paused state if set to true."},{name:"force",ty:{ty:"bool"},doc:"Attempt to force the VM to resume. If this flag is false then the VM may fail pre-resume safety checks (e.g. if the CPU the VM was running on looks substantially different to the current one)"}],doc:"Awaken the specified VM and resume it.  This can only be called when the specified VM is in the Suspended state."},
+"VM.hard_reboot_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to reboot"}],doc:"Internal function which immediately restarts the specified VM."},
+"VM.resume_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to resume"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host on which to resume the VM"},{name:"start_paused",ty:{ty:"bool"},doc:"Resume VM in paused state if set to true."},{name:"force",ty:{ty:"bool"},doc:"Attempt to force the VM to resume. If this flag is false then the VM may fail pre-resume safety checks (e.g. if the CPU the VM was running on looks substantially different to the current one)"}],doc:"Awaken the specified VM and resume it on a particular Host.  This can only be called when the specified VM is in the Suspended state."},
+"VM.pool_migrate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to migrate"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The target host"},{name:"options",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Extra configuration operations"}],doc:"Migrate a VM to another Host. This can only be called when the specified VM is in the Running state."},
+"VM.set_VCPUs_number_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"nvcpu",ty:{ty:"int"},doc:"The number of VCPUs"}],doc:"Set the number of VCPUs for a running VM"},
+"VM.add_to_VCPUs_params_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"key",ty:{ty:"string"},doc:"The key"},{name:"value",ty:{ty:"string"},doc:"The value"}],doc:"Add the given key-value pair to VM.VCPUs_params, and apply that value on the running VM"},
+"VM.set_ha_restart_priority":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"value",ty:{ty:"string"},doc:"The value"}],doc:"Set the value of the ha_restart_priority field"},
+"VM.set_ha_always_run":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"value",ty:{ty:"bool"},doc:"The value"}],doc:"Set the value of the ha_always_run"},
+"VM.compute_memory_overhead":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM for which to compute the memory overhead"}],doc:"Computes the virtualization memory overhead of a VM."},
+"VM.set_memory_dynamic_max":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM to modify"},{name:"value",ty:{ty:"int"},doc:"The new value of memory_dynamic_max"}],doc:"Set the value of the memory_dynamic_max field"},
+"VM.set_memory_dynamic_min":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM to modify"},{name:"value",ty:{ty:"int"},doc:"The new value of memory_dynamic_min"}],doc:"Set the value of the memory_dynamic_min field"},
+"VM.set_memory_dynamic_range":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"min",ty:{ty:"int"},doc:"The new minimum value"},{name:"max",ty:{ty:"int"},doc:"The new maximum value"}],doc:"Set the minimum and maximum amounts of physical memory the VM is allowed to use."},
+"VM.set_memory_static_max":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM to modify"},{name:"value",ty:{ty:"int"},doc:"The new value of memory_static_max"}],doc:"Set the value of the memory_static_max field"},
+"VM.set_memory_static_min":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM to modify"},{name:"value",ty:{ty:"int"},doc:"The new value of memory_static_min"}],doc:"Set the value of the memory_static_min field"},
+"VM.set_memory_static_range":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"min",ty:{ty:"int"},doc:"The new minimum value"},{name:"max",ty:{ty:"int"},doc:"The new maximum value"}],doc:"Set the static (ie boot-time) range of virtual memory that the VM is allowed to use."},
+"VM.set_memory_limits":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"static_min",ty:{ty:"int"},doc:"The new value of memory_static_min."},{name:"static_max",ty:{ty:"int"},doc:"The new value of memory_static_max."},{name:"dynamic_min",ty:{ty:"int"},doc:"The new value of memory_dynamic_min."},{name:"dynamic_max",ty:{ty:"int"},doc:"The new value of memory_dynamic_max."}],doc:"Set the memory limits of this VM."},
+"VM.set_memory_target_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"target",ty:{ty:"int"},doc:"The target in bytes"}],doc:"Set the memory target for a running VM"},
+"VM.wait_memory_target_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"}],doc:"Wait for a running VM to reach its current memory target"},
+"VM.get_cooperative":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"}],doc:"Return true if the VM is currently 'co-operative' i.e. is expected to reach a balloon target and actually has done"},
+"VM.set_HVM_shadow_multiplier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"value",ty:{ty:"float"},doc:"The new shadow memory multiplier to set"}],doc:"Set the shadow memory multiplier on a halted VM"},
+"VM.set_shadow_multiplier_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"multiplier",ty:{ty:"float"},doc:"The new shadow memory multiplier to set"}],doc:"Set the shadow memory multiplier on a running VM"},
+"VM.set_VCPUs_max":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"value",ty:{ty:"int"},doc:"The new maximum number of VCPUs"}],doc:"Set the maximum number of VCPUs for a halted VM"},
+"VM.set_VCPUs_at_startup":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"value",ty:{ty:"int"},doc:"The new maximum number of VCPUs"}],doc:"Set the number of startup VCPUs for a halted VM"},
+"VM.send_sysrq":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"key",ty:{ty:"string"},doc:"The key to send"}],doc:"Send the given key as a sysrq to this VM.  The key is specified as a single character (a String of length 1).  This can only be called when the specified VM is in the Running state."},
+"VM.send_trigger":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"trigger",ty:{ty:"string"},doc:"The trigger to send"}],doc:"Send the named trigger to this VM.  This can only be called when the specified VM is in the Running state."},
+"VM.maximise_memory":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"total",ty:{ty:"int"},doc:"Total amount of physical RAM to fit within"},{name:"approximate",ty:{ty:"bool"},doc:"If false the limit is calculated with the guest's current exact configuration. Otherwise a more approximate calculation is performed"}],doc:"Returns the maximum amount of guest memory which will fit, together with overheads, in the supplied amount of physical memory. If 'exact' is true then an exact calculation is performed using the VM's current settings. If 'exact' is false then a more conservative approximation is used"},
+"VM.migrate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"dest",ty:{ty:"string"},doc:"The destination host"},{name:"live",ty:{ty:"bool"},doc:"Live migration"},{name:"options",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Other parameters"}],doc:"Migrate the VM to another host.  This can only be called when the specified VM is in the Running state."},
+"VM.get_boot_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM whose boot-time state to return"}],doc:"Returns a record describing the VM's dynamic state, initialised when the VM boots and updated to reflect runtime configuration changes e.g. CPU hotplug"},
+"VM.get_data_sources":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM to interrogate"}],doc:""},
+"VM.record_data_source":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"data_source",ty:{ty:"string"},doc:"The data source to record"}],doc:"Start recording the specified data source"},
+"VM.query_data_source":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"data_source",ty:{ty:"string"},doc:"The data source to query"}],doc:"Query the latest value of the specified data source"},
+"VM.forget_data_source_archives":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"data_source",ty:{ty:"string"},doc:"The data source whose archives are to be forgotten"}],doc:"Forget the recorded statistics related to the specified data source"},
+"VM.assert_operation_valid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"op",ty:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","create_template","revert","checkpoint","snapshot_with_quiesce","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_dynamic_range","changing_static_range","changing_memory_limits","get_cooperative","changing_shadow_memory","changing_shadow_memory_live","changing_VCPUs","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","metadata_export","reverting","destroy"]},doc:"proposed operation"}],doc:"Check to see whether this operation is acceptable in the current state of the system, raising an error if the operation is invalid for some reason"},
+"VM.update_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Recomputes the list of acceptable operations"},
+"VM.get_allowed_VBD_devices":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to query"}],doc:"Returns a list of the allowed values that a VBD device field can take"},
+"VM.get_allowed_VIF_devices":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to query"}],doc:"Returns a list of the allowed values that a VIF device field can take"},
+"VM.get_possible_hosts":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM"}],doc:"Return the list of hosts on which this VM may run."},
+"VM.assert_can_boot_here":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"}],doc:"Returns an error if the VM could not boot on this host for some reason"},
+"VM.atomic_set_resident_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to modify"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to set resident_on to"}],doc:""},
+"VM.create_new_blob":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"name",ty:{ty:"string"},doc:"The name associated with the blob"},{name:"mime_type",ty:{ty:"string"},doc:"The mime type for the data. Empty string translates to application/octet-stream"}],doc:"Create a placeholder for a named binary blob of data that is associated with this VM"},
+"VM.s3_suspend":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM"}],doc:"Try to put the VM into ACPI S3 state"},
+"VM.s3_resume":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM"}],doc:"Try to resume the VM from ACPI S3 state"},
+"VM.assert_agile":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"}],doc:"Returns an error if the VM is not considered agile e.g. because it is tied to a resource local to a host"},
+"VM.update_snapshot_metadata":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to update"},{name:"snapshot_of",ty:{ty:"ref",class:"VM"},doc:""},{name:"snapshot_time",ty:{ty:"datetime"},doc:""},{name:"transportable_snapshot_id",ty:{ty:"string"},doc:""}],doc:""},
+"VM.retrieve_wlb_recommendations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM"}],doc:"Returns mapping of hosts to ratings, indicating the suitability of starting the VM at that location according to wlb. Rating is replaced with an error if the VM cannot boot there."},
+"VM.copy_bios_strings":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to modify"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to copy the BIOS strings from"}],doc:"Copy the BIOS strings from the given host to this VM"},
+"VM.set_protection_policy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"value",ty:{ty:"ref",class:"VMPP"},doc:"The value"}],doc:"Set the value of the protection_policy field"},
+"VM.set_start_delay":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"value",ty:{ty:"int"},doc:"This VM's start delay in seconds"}],doc:"Set this VM's start delay in seconds"},
+"VM.set_shutdown_delay":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"value",ty:{ty:"int"},doc:"This VM's shutdown delay in seconds"}],doc:"Set this VM's shutdown delay in seconds"},
+"VM.set_order":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"value",ty:{ty:"int"},doc:"This VM's boot order"}],doc:"Set this VM's boot order"},
+"VM.set_suspend_VDI":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"value",ty:{ty:"ref",class:"VDI"},doc:"The suspend VDI uuid"}],doc:"Set this VM's suspend VDI, which must be indentical to its current one"},
+"VM.assert_can_be_recovered":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM to recover"},{name:"session_to",ty:{ty:"ref",class:"session"},doc:"The session to which the VM is to be recovered."}],doc:"Assert whether all SRs required to recover this VM are available."},
+"VM.recover":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM to recover"},{name:"session_to",ty:{ty:"ref",class:"session"},doc:"The session to which the VM is to be recovered."},{name:"force",ty:{ty:"bool"},doc:"Whether the VM should replace newer versions of itself."}],doc:"Recover the VM"},
+"VM.set_appliance":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM to assign to an appliance."},{name:"value",ty:{ty:"ref",class:"VM_appliance"},doc:"The appliance to which this VM should be assigned."}],doc:"Assign this VM to an appliance."},
+"VM.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VMs known to the system."},
+"VM.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VMs known to the system."},
+"VM.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VM references to VM records for all VMs known to the system."},
+"VM_metrics.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VM_metrics."},
+"VM_metrics.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VM_metrics"},
+"VM_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VM_metrics instances known to the system."},
+"VM_metrics.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VM_metrics instance with the specified UUID."},
+"VM_metrics.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VM_metrics"},doc:"All constructor arguments"}],doc:"Create a new VM_metrics instance, and return its handle."},
+"VM_metrics.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Destroy the specified VM_metrics instance."},
+"VM_metrics.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the uuid field of the given VM_metrics."},
+"VM_metrics.get_memory_actual":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the memory/actual field of the given VM_metrics."},
+"VM_metrics.get_VCPUs_number":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the VCPUs/number field of the given VM_metrics."},
+"VM_metrics.get_VCPUs_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the VCPUs/utilisation field of the given VM_metrics."},
+"VM_metrics.get_VCPUs_CPU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the VCPUs/CPU field of the given VM_metrics."},
+"VM_metrics.get_VCPUs_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the VCPUs/params field of the given VM_metrics."},
+"VM_metrics.get_VCPUs_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the VCPUs/flags field of the given VM_metrics."},
+"VM_metrics.get_state":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the state field of the given VM_metrics."},
+"VM_metrics.get_start_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the start_time field of the given VM_metrics."},
+"VM_metrics.get_install_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the install_time field of the given VM_metrics."},
+"VM_metrics.get_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the last_updated field of the given VM_metrics."},
+"VM_metrics.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the other_config field of the given VM_metrics."},
+"VM_metrics.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VM_metrics."},
+"VM_metrics.set_memory_actual":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/actual field of the given VM_metrics."},
+"VM_metrics.set_VCPUs_number":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the VCPUs/number field of the given VM_metrics."},
+"VM_metrics.set_VCPUs_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"int"},values:{ty:"float"}},doc:"New value to set"}],doc:"Set the VCPUs/utilisation field of the given VM_metrics."},
+"VM_metrics.add_to_VCPUs_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"int"},doc:"Key to add"},{name:"value",ty:{ty:"float"},doc:"Value to add"}],doc:"Add the given key-value pair to the VCPUs/utilisation field of the given VM_metrics."},
+"VM_metrics.remove_from_VCPUs_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"int"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the VCPUs/utilisation field of the given VM_metrics.  If the key is not in that Map, then do nothing."},
+"VM_metrics.set_VCPUs_CPU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"int"},values:{ty:"int"}},doc:"New value to set"}],doc:"Set the VCPUs/CPU field of the given VM_metrics."},
+"VM_metrics.add_to_VCPUs_CPU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"int"},doc:"Key to add"},{name:"value",ty:{ty:"int"},doc:"Value to add"}],doc:"Add the given key-value pair to the VCPUs/CPU field of the given VM_metrics."},
+"VM_metrics.remove_from_VCPUs_CPU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"int"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the VCPUs/CPU field of the given VM_metrics.  If the key is not in that Map, then do nothing."},
+"VM_metrics.set_VCPUs_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the VCPUs/params field of the given VM_metrics."},
+"VM_metrics.add_to_VCPUs_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the VCPUs/params field of the given VM_metrics."},
+"VM_metrics.remove_from_VCPUs_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the VCPUs/params field of the given VM_metrics.  If the key is not in that Map, then do nothing."},
+"VM_metrics.set_VCPUs_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"int"},values:{ty:"set",contents:{ty:"string"}}},doc:"New value to set"}],doc:"Set the VCPUs/flags field of the given VM_metrics."},
+"VM_metrics.add_to_VCPUs_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"int"},doc:"Key to add"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"Value to add"}],doc:"Add the given key-value pair to the VCPUs/flags field of the given VM_metrics."},
+"VM_metrics.remove_from_VCPUs_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"int"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the VCPUs/flags field of the given VM_metrics.  If the key is not in that Map, then do nothing."},
+"VM_metrics.set_state":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the state field of the given VM_metrics."},
+"VM_metrics.add_state":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the state field of the given VM_metrics.  If the value is already in that Set, then do nothing."},
+"VM_metrics.remove_state":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the state field of the given VM_metrics.  If the value is not in that Set, then do nothing."},
+"VM_metrics.set_start_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the start_time field of the given VM_metrics."},
+"VM_metrics.set_install_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the install_time field of the given VM_metrics."},
+"VM_metrics.set_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the last_updated field of the given VM_metrics."},
+"VM_metrics.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VM_metrics."},
+"VM_metrics.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VM_metrics."},
+"VM_metrics.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VM_metrics.  If the key is not in that Map, then do nothing."},
+"VM_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VM_metrics instances known to the system."},
+"VM_metrics.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VM_metrics instances known to the system."},
+"VM_metrics.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VM_metrics references to VM_metrics records for all VM_metrics instances known to the system."},
+"VM_guest_metrics.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VM_guest_metrics."},
+"VM_guest_metrics.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VM_guest_metrics"},
+"VM_guest_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VM_guest_metrics instances known to the system."},
+"VM_guest_metrics.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VM_guest_metrics instance with the specified UUID."},
+"VM_guest_metrics.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VM_guest_metrics"},doc:"All constructor arguments"}],doc:"Create a new VM_guest_metrics instance, and return its handle."},
+"VM_guest_metrics.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Destroy the specified VM_guest_metrics instance."},
+"VM_guest_metrics.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the uuid field of the given VM_guest_metrics."},
+"VM_guest_metrics.get_os_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the os_version field of the given VM_guest_metrics."},
+"VM_guest_metrics.get_PV_drivers_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the PV_drivers_version field of the given VM_guest_metrics."},
+"VM_guest_metrics.get_PV_drivers_up_to_date":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the PV_drivers_up_to_date field of the given VM_guest_metrics."},
+"VM_guest_metrics.get_memory":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the memory field of the given VM_guest_metrics."},
+"VM_guest_metrics.get_disks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the disks field of the given VM_guest_metrics."},
+"VM_guest_metrics.get_networks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the networks field of the given VM_guest_metrics."},
+"VM_guest_metrics.get_other":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the other field of the given VM_guest_metrics."},
+"VM_guest_metrics.get_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the last_updated field of the given VM_guest_metrics."},
+"VM_guest_metrics.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the other_config field of the given VM_guest_metrics."},
+"VM_guest_metrics.get_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the live field of the given VM_guest_metrics."},
+"VM_guest_metrics.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VM_guest_metrics."},
+"VM_guest_metrics.set_os_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the os_version field of the given VM_guest_metrics."},
+"VM_guest_metrics.add_to_os_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the os_version field of the given VM_guest_metrics."},
+"VM_guest_metrics.remove_from_os_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the os_version field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing."},
+"VM_guest_metrics.set_PV_drivers_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the PV_drivers_version field of the given VM_guest_metrics."},
+"VM_guest_metrics.add_to_PV_drivers_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the PV_drivers_version field of the given VM_guest_metrics."},
+"VM_guest_metrics.remove_from_PV_drivers_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the PV_drivers_version field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing."},
+"VM_guest_metrics.set_PV_drivers_up_to_date":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the PV_drivers_up_to_date field of the given VM_guest_metrics."},
+"VM_guest_metrics.set_memory":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the memory field of the given VM_guest_metrics."},
+"VM_guest_metrics.add_to_memory":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the memory field of the given VM_guest_metrics."},
+"VM_guest_metrics.remove_from_memory":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the memory field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing."},
+"VM_guest_metrics.set_disks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the disks field of the given VM_guest_metrics."},
+"VM_guest_metrics.add_to_disks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the disks field of the given VM_guest_metrics."},
+"VM_guest_metrics.remove_from_disks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the disks field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing."},
+"VM_guest_metrics.set_networks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the networks field of the given VM_guest_metrics."},
+"VM_guest_metrics.add_to_networks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the networks field of the given VM_guest_metrics."},
+"VM_guest_metrics.remove_from_networks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the networks field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing."},
+"VM_guest_metrics.set_other":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other field of the given VM_guest_metrics."},
+"VM_guest_metrics.add_to_other":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other field of the given VM_guest_metrics."},
+"VM_guest_metrics.remove_from_other":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing."},
+"VM_guest_metrics.set_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the last_updated field of the given VM_guest_metrics."},
+"VM_guest_metrics.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VM_guest_metrics."},
+"VM_guest_metrics.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VM_guest_metrics."},
+"VM_guest_metrics.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing."},
+"VM_guest_metrics.set_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the live field of the given VM_guest_metrics."},
+"VM_guest_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VM_guest_metrics instances known to the system."},
+"VM_guest_metrics.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VM_guest_metrics instances known to the system."},
+"VM_guest_metrics.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VM_guest_metrics references to VM_guest_metrics records for all VM_guest_metrics instances known to the system."},
+"VMPP.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VMPP."},
+"VMPP.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VMPP"},
+"VMPP.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VMPPs known to the system."},
+"VMPP.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VMPP instance with the specified UUID."},
+"VMPP.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VMPP"},doc:"All constructor arguments"}],doc:"Create a new VMPP instance, and return its handle."},
+"VMPP.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Destroy the specified VMPP instance."},
+"VMPP.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the VMPP instances with the given label."},
+"VMPP.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the uuid field of the given VMPP."},
+"VMPP.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the name/label field of the given VMPP."},
+"VMPP.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the name/description field of the given VMPP."},
+"VMPP.get_is_policy_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the is_policy_enabled field of the given VMPP."},
+"VMPP.get_backup_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the backup_type field of the given VMPP."},
+"VMPP.get_backup_retention_value":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the backup_retention_value field of the given VMPP."},
+"VMPP.get_backup_frequency":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the backup_frequency field of the given VMPP."},
+"VMPP.get_backup_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the backup_schedule field of the given VMPP."},
+"VMPP.get_is_backup_running":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the is_backup_running field of the given VMPP."},
+"VMPP.get_backup_last_run_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the backup_last_run_time field of the given VMPP."},
+"VMPP.get_archive_target_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the archive_target_type field of the given VMPP."},
+"VMPP.get_archive_target_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the archive_target_config field of the given VMPP."},
+"VMPP.get_archive_frequency":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the archive_frequency field of the given VMPP."},
+"VMPP.get_archive_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the archive_schedule field of the given VMPP."},
+"VMPP.get_is_archive_running":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the is_archive_running field of the given VMPP."},
+"VMPP.get_archive_last_run_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the archive_last_run_time field of the given VMPP."},
+"VMPP.get_VMs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the VMs field of the given VMPP."},
+"VMPP.get_is_alarm_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the is_alarm_enabled field of the given VMPP."},
+"VMPP.get_alarm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the alarm_config field of the given VMPP."},
+"VMPP.get_recent_alerts":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the recent_alerts field of the given VMPP."},
+"VMPP.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VMPP."},
+"VMPP.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given VMPP."},
+"VMPP.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given VMPP."},
+"VMPP.set_is_policy_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the is_policy_enabled field of the given VMPP."},
+"VMPP.set_backup_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vmpp_backup_type",values:["snapshot","checkpoint"]},doc:"New value to set"}],doc:"Set the backup_type field of the given VMPP."},
+"VMPP.set_backup_retention_value":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the backup_retention_value field of the given VMPP."},
+"VMPP.set_backup_frequency":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vmpp_backup_frequency",values:["hourly","daily","weekly"]},doc:"New value to set"}],doc:"Set the backup_frequency field of the given VMPP."},
+"VMPP.set_backup_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the backup_schedule field of the given VMPP."},
+"VMPP.add_to_backup_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the backup_schedule field of the given VMPP."},
+"VMPP.remove_from_backup_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the backup_schedule field of the given VMPP.  If the key is not in that Map, then do nothing."},
+"VMPP.set_is_backup_running":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the is_backup_running field of the given VMPP."},
+"VMPP.set_backup_last_run_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the backup_last_run_time field of the given VMPP."},
+"VMPP.set_archive_target_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vmpp_archive_target_type",values:["none","cifs","nfs"]},doc:"New value to set"}],doc:"Set the archive_target_type field of the given VMPP."},
+"VMPP.set_archive_target_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the archive_target_config field of the given VMPP."},
+"VMPP.add_to_archive_target_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the archive_target_config field of the given VMPP."},
+"VMPP.remove_from_archive_target_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the archive_target_config field of the given VMPP.  If the key is not in that Map, then do nothing."},
+"VMPP.set_archive_frequency":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vmpp_archive_frequency",values:["never","always_after_backup","daily","weekly"]},doc:"New value to set"}],doc:"Set the archive_frequency field of the given VMPP."},
+"VMPP.set_archive_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the archive_schedule field of the given VMPP."},
+"VMPP.add_to_archive_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the archive_schedule field of the given VMPP."},
+"VMPP.remove_from_archive_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the archive_schedule field of the given VMPP.  If the key is not in that Map, then do nothing."},
+"VMPP.set_is_archive_running":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the is_archive_running field of the given VMPP."},
+"VMPP.set_archive_last_run_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the archive_last_run_time field of the given VMPP."},
+"VMPP.set_is_alarm_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the is_alarm_enabled field of the given VMPP."},
+"VMPP.set_alarm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the alarm_config field of the given VMPP."},
+"VMPP.add_to_alarm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the alarm_config field of the given VMPP."},
+"VMPP.remove_from_alarm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the alarm_config field of the given VMPP.  If the key is not in that Map, then do nothing."},
+"VMPP.set_recent_alerts":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the recent_alerts field of the given VMPP."},
+"VMPP.add_recent_alerts":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the recent_alerts field of the given VMPP.  If the value is already in that Set, then do nothing."},
+"VMPP.remove_recent_alerts":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the recent_alerts field of the given VMPP.  If the value is not in that Set, then do nothing."},
+"VMPP.protect_now":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vmpp",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy to execute"}],doc:"This call executes the protection policy immediately"},
+"VMPP.archive_now":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"snapshot",ty:{ty:"ref",class:"VM"},doc:"The snapshot to archive"}],doc:"This call archives the snapshot provided as a parameter"},
+"VMPP.create_alert":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vmpp",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy where the alert should be created"},{name:"name",ty:{ty:"string"},doc:"The name of the message"},{name:"priority",ty:{ty:"int"},doc:"The priority of the message"},{name:"body",ty:{ty:"string"},doc:"The body of the email message"},{name:"data",ty:{ty:"string"},doc:"The data in xml"}],doc:"This call creates an alert for some protection policy"},
+"VMPP.get_alerts":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vmpp",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"hours_from_now",ty:{ty:"int"},doc:"how many hours in the past the oldest record to fetch is"}],doc:"This call fetches a history of alerts for a given protection policy"},
+"VMPP.set_backup_retention_value":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"value",ty:{ty:"int"},doc:"the value to set"}],doc:""},
+"VMPP.set_is_backup_running":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"value",ty:{ty:"bool"},doc:"true to mark this protection policy's backup is running"}],doc:"Set the value of the is_backup_running field"},
+"VMPP.set_is_archive_running":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"value",ty:{ty:"bool"},doc:"true to mark this protection policy's archive is running"}],doc:"Set the value of the is_archive_running field"},
+"VMPP.set_backup_frequency":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"value",ty:{ty:"enum",name:"vmpp_backup_frequency",values:["hourly","daily","weekly"]},doc:"the backup frequency"}],doc:"Set the value of the backup_frequency field"},
+"VMPP.set_backup_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"the value to set"}],doc:""},
+"VMPP.set_archive_frequency":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"value",ty:{ty:"enum",name:"vmpp_archive_frequency",values:["never","always_after_backup","daily","weekly"]},doc:"the archive frequency"}],doc:"Set the value of the archive_frequency field"},
+"VMPP.set_archive_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"the value to set"}],doc:""},
+"VMPP.set_archive_target_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"value",ty:{ty:"enum",name:"vmpp_archive_target_type",values:["none","cifs","nfs"]},doc:"the archive target config type"}],doc:"Set the value of the archive_target_config_type field"},
+"VMPP.set_archive_target_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"the value to set"}],doc:""},
+"VMPP.set_is_alarm_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"value",ty:{ty:"bool"},doc:"true if alarm is enabled for this policy"}],doc:"Set the value of the is_alarm_enabled field"},
+"VMPP.set_alarm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"the value to set"}],doc:""},
+"VMPP.add_to_backup_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"key",ty:{ty:"string"},doc:"the key to add"},{name:"value",ty:{ty:"string"},doc:"the value to add"}],doc:""},
+"VMPP.add_to_archive_target_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"key",ty:{ty:"string"},doc:"the key to add"},{name:"value",ty:{ty:"string"},doc:"the value to add"}],doc:""},
+"VMPP.add_to_archive_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"key",ty:{ty:"string"},doc:"the key to add"},{name:"value",ty:{ty:"string"},doc:"the value to add"}],doc:""},
+"VMPP.add_to_alarm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"key",ty:{ty:"string"},doc:"the key to add"},{name:"value",ty:{ty:"string"},doc:"the value to add"}],doc:""},
+"VMPP.remove_from_backup_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"key",ty:{ty:"string"},doc:"the key to remove"}],doc:""},
+"VMPP.remove_from_archive_target_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"key",ty:{ty:"string"},doc:"the key to remove"}],doc:""},
+"VMPP.remove_from_archive_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"key",ty:{ty:"string"},doc:"the key to remove"}],doc:""},
+"VMPP.remove_from_alarm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"key",ty:{ty:"string"},doc:"the key to remove"}],doc:""},
+"VMPP.set_backup_last_run_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"value",ty:{ty:"datetime"},doc:"the value to set"}],doc:""},
+"VMPP.set_archive_last_run_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"value",ty:{ty:"datetime"},doc:"the value to set"}],doc:""},
+"VMPP.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VMPPs known to the system."},
+"VMPP.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VMPPs known to the system."},
+"VMPP.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VMPP references to VMPP records for all VMPPs known to the system."},
+"VM_appliance.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VM_appliance."},
+"VM_appliance.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VM_appliance"},
+"VM_appliance.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VM_appliances known to the system."},
+"VM_appliance.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VM_appliance instance with the specified UUID."},
+"VM_appliance.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VM_appliance"},doc:"All constructor arguments"}],doc:"Create a new VM_appliance instance, and return its handle."},
+"VM_appliance.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"}],doc:"Destroy the specified VM_appliance instance."},
+"VM_appliance.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the VM_appliance instances with the given label."},
+"VM_appliance.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"}],doc:"Get the uuid field of the given VM_appliance."},
+"VM_appliance.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"}],doc:"Get the name/label field of the given VM_appliance."},
+"VM_appliance.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"}],doc:"Get the name/description field of the given VM_appliance."},
+"VM_appliance.get_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"}],doc:"Get the allowed_operations field of the given VM_appliance."},
+"VM_appliance.get_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"}],doc:"Get the current_operations field of the given VM_appliance."},
+"VM_appliance.get_VMs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"}],doc:"Get the VMs field of the given VM_appliance."},
+"VM_appliance.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VM_appliance."},
+"VM_appliance.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given VM_appliance."},
+"VM_appliance.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given VM_appliance."},
+"VM_appliance.set_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"vm_appliance_operation",values:["start","clean_shutdown","hard_shutdown","shutdown"]}},doc:"New value to set"}],doc:"Set the allowed_operations field of the given VM_appliance."},
+"VM_appliance.add_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vm_appliance_operation",values:["start","clean_shutdown","hard_shutdown","shutdown"]},doc:"New value to add"}],doc:"Add the given value to the allowed_operations field of the given VM_appliance.  If the value is already in that Set, then do nothing."},
+"VM_appliance.remove_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vm_appliance_operation",values:["start","clean_shutdown","hard_shutdown","shutdown"]},doc:"Value to remove"}],doc:"Remove the given value from the allowed_operations field of the given VM_appliance.  If the value is not in that Set, then do nothing."},
+"VM_appliance.set_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"enum",name:"vm_appliance_operation",values:["start","clean_shutdown","hard_shutdown","shutdown"]}},doc:"New value to set"}],doc:"Set the current_operations field of the given VM_appliance."},
+"VM_appliance.add_to_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"enum",name:"vm_appliance_operation",values:["start","clean_shutdown","hard_shutdown","shutdown"]},doc:"Value to add"}],doc:"Add the given key-value pair to the current_operations field of the given VM_appliance."},
+"VM_appliance.remove_from_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the current_operations field of the given VM_appliance.  If the key is not in that Map, then do nothing."},
+"VM_appliance.start":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"The VM appliance"},{name:"paused",ty:{ty:"bool"},doc:"Instantiate all VMs belonging to this appliance in paused state if set to true."}],doc:"Start all VMs in the appliance"},
+"VM_appliance.clean_shutdown":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"The VM appliance"}],doc:"Perform a clean shutdown of all the VMs in the appliance"},
+"VM_appliance.hard_shutdown":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"The VM appliance"}],doc:"Perform a hard shutdown of all the VMs in the appliance"},
+"VM_appliance.shutdown":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"The VM appliance"}],doc:"For each VM in the appliance, try to shut it down cleanly. If this fails, perform a hard shutdown of the VM."},
+"VM_appliance.assert_can_be_recovered":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"The VM appliance to recover"},{name:"session_to",ty:{ty:"ref",class:"session"},doc:"The session to which the VM appliance is to be recovered."}],doc:"Assert whether all SRs required to recover this VM appliance are available."},
+"VM_appliance.recover":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"The VM appliance to recover"},{name:"session_to",ty:{ty:"ref",class:"session"},doc:"The session to which the VM appliance is to be recovered."},{name:"force",ty:{ty:"bool"},doc:"Whether the VMs should replace newer versions of themselves."}],doc:"Recover the VM appliance"},
+"VM_appliance.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VM_appliances known to the system."},
+"VM_appliance.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VM_appliances known to the system."},
+"VM_appliance.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VM_appliance references to VM_appliance records for all VM_appliances known to the system."},
+"DR_task.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"DR_task"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given DR_task."},
+"DR_task.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"DR_task"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class DR_task"},
+"DR_task.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the DR_tasks known to the system."},
+"DR_task.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the DR_task instance with the specified UUID."},
+"DR_task.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"DR_task"},doc:"All constructor arguments"}],doc:"Create a new DR_task instance, and return its handle."},
+"DR_task.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"DR_task"},doc:"reference to the object"}],doc:"Destroy the specified DR_task instance."},
+"DR_task.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"DR_task"},doc:"reference to the object"}],doc:"Get the uuid field of the given DR_task."},
+"DR_task.get_introduced_SRs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"DR_task"},doc:"reference to the object"}],doc:"Get the introduced_SRs field of the given DR_task."},
+"DR_task.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"DR_task"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given DR_task."},
+"DR_task.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"type",ty:{ty:"string"},doc:"The SR driver type of the SRs to introduce"},{name:"device_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"The device configuration of the SRs to introduce"},{name:"whitelist",ty:{ty:"set",contents:{ty:"string"}},doc:"The devices to use for disaster recovery"}],doc:"Create a disaster recovery task which will query the supplied list of devices"},
+"DR_task.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"DR_task"},doc:"The disaster recovery task to destroy"}],doc:"Destroy the disaster recovery task, detaching and forgetting any SRs introduced which are no longer required"},
+"DR_task.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the DR_tasks known to the system."},
+"DR_task.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the DR_tasks known to the system."},
+"DR_task.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of DR_task references to DR_task records for all DR_tasks known to the system."},
+"host.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given host."},
+"host.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class host"},
+"host.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the hosts known to the system."},
+"host.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the host instance with the specified UUID."},
+"host.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"host"},doc:"All constructor arguments"}],doc:"Create a new host instance, and return its handle."},
+"host.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Destroy the specified host instance."},
+"host.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the host instances with the given label."},
+"host.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the uuid field of the given host."},
+"host.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the name/label field of the given host."},
+"host.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the name/description field of the given host."},
+"host.get_memory_overhead":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the memory/overhead field of the given host."},
+"host.get_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the allowed_operations field of the given host."},
+"host.get_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the current_operations field of the given host."},
+"host.get_API_version_major":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the API_version/major field of the given host."},
+"host.get_API_version_minor":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the API_version/minor field of the given host."},
+"host.get_API_version_vendor":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the API_version/vendor field of the given host."},
+"host.get_API_version_vendor_implementation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the API_version/vendor_implementation field of the given host."},
+"host.get_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the enabled field of the given host."},
+"host.get_software_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the software_version field of the given host."},
+"host.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the other_config field of the given host."},
+"host.get_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the capabilities field of the given host."},
+"host.get_cpu_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the cpu_configuration field of the given host."},
+"host.get_sched_policy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the sched_policy field of the given host."},
+"host.get_supported_bootloaders":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the supported_bootloaders field of the given host."},
+"host.get_resident_VMs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the resident_VMs field of the given host."},
+"host.get_logging":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the logging field of the given host."},
+"host.get_PIFs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the PIFs field of the given host."},
+"host.get_suspend_image_sr":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the suspend_image_sr field of the given host."},
+"host.get_crash_dump_sr":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the crash_dump_sr field of the given host."},
+"host.get_crashdumps":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the crashdumps field of the given host."},
+"host.get_patches":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the patches field of the given host."},
+"host.get_PBDs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the PBDs field of the given host."},
+"host.get_host_CPUs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the host_CPUs field of the given host."},
+"host.get_cpu_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the cpu_info field of the given host."},
+"host.get_hostname":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the hostname field of the given host."},
+"host.get_address":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the address field of the given host."},
+"host.get_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the metrics field of the given host."},
+"host.get_license_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the license_params field of the given host."},
+"host.get_boot_free_mem":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the boot_free_mem field of the given host."},
+"host.get_ha_statefiles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the ha_statefiles field of the given host."},
+"host.get_ha_network_peers":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the ha_network_peers field of the given host."},
+"host.get_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the blobs field of the given host."},
+"host.get_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the tags field of the given host."},
+"host.get_external_auth_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the external_auth_type field of the given host."},
+"host.get_external_auth_service_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the external_auth_service_name field of the given host."},
+"host.get_external_auth_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the external_auth_configuration field of the given host."},
+"host.get_edition":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the edition field of the given host."},
+"host.get_license_server":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the license_server field of the given host."},
+"host.get_bios_strings":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the bios_strings field of the given host."},
+"host.get_power_on_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the power_on_mode field of the given host."},
+"host.get_power_on_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the power_on_config field of the given host."},
+"host.get_local_cache_sr":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the local_cache_sr field of the given host."},
+"host.get_chipset_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the chipset_info field of the given host."},
+"host.get_PCIs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the PCIs field of the given host."},
+"host.get_PGPUs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the PGPUs field of the given host."},
+"host.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given host."},
+"host.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given host."},
+"host.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given host."},
+"host.set_memory_overhead":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/overhead field of the given host."},
+"host.set_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"host_allowed_operations",values:["provision","evacuate","shutdown","reboot","power_on","vm_start","vm_resume","vm_migrate"]}},doc:"New value to set"}],doc:"Set the allowed_operations field of the given host."},
+"host.add_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"host_allowed_operations",values:["provision","evacuate","shutdown","reboot","power_on","vm_start","vm_resume","vm_migrate"]},doc:"New value to add"}],doc:"Add the given value to the allowed_operations field of the given host.  If the value is already in that Set, then do nothing."},
+"host.remove_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"host_allowed_operations",values:["provision","evacuate","shutdown","reboot","power_on","vm_start","vm_resume","vm_migrate"]},doc:"Value to remove"}],doc:"Remove the given value from the allowed_operations field of the given host.  If the value is not in that Set, then do nothing."},
+"host.set_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"enum",name:"host_allowed_operations",values:["provision","evacuate","shutdown","reboot","power_on","vm_start","vm_resume","vm_migrate"]}},doc:"New value to set"}],doc:"Set the current_operations field of the given host."},
+"host.add_to_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"enum",name:"host_allowed_operations",values:["provision","evacuate","shutdown","reboot","power_on","vm_start","vm_resume","vm_migrate"]},doc:"Value to add"}],doc:"Add the given key-value pair to the current_operations field of the given host."},
+"host.remove_from_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the current_operations field of the given host.  If the key is not in that Map, then do nothing."},
+"host.set_API_version_major":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the API_version/major field of the given host."},
+"host.set_API_version_minor":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the API_version/minor field of the given host."},
+"host.set_API_version_vendor":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the API_version/vendor field of the given host."},
+"host.set_API_version_vendor_implementation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the API_version/vendor_implementation field of the given host."},
+"host.add_to_API_version_vendor_implementation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the API_version/vendor_implementation field of the given host."},
+"host.remove_from_API_version_vendor_implementation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the API_version/vendor_implementation field of the given host.  If the key is not in that Map, then do nothing."},
+"host.set_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the enabled field of the given host."},
+"host.set_software_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the software_version field of the given host."},
+"host.add_to_software_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the software_version field of the given host."},
+"host.remove_from_software_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the software_version field of the given host.  If the key is not in that Map, then do nothing."},
+"host.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given host."},
+"host.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given host."},
+"host.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given host.  If the key is not in that Map, then do nothing."},
+"host.set_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the capabilities field of the given host."},
+"host.add_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the capabilities field of the given host.  If the value is already in that Set, then do nothing."},
+"host.remove_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the capabilities field of the given host.  If the value is not in that Set, then do nothing."},
+"host.set_cpu_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the cpu_configuration field of the given host."},
+"host.add_to_cpu_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the cpu_configuration field of the given host."},
+"host.remove_from_cpu_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the cpu_configuration field of the given host.  If the key is not in that Map, then do nothing."},
+"host.set_sched_policy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the sched_policy field of the given host."},
+"host.set_supported_bootloaders":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the supported_bootloaders field of the given host."},
+"host.add_supported_bootloaders":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the supported_bootloaders field of the given host.  If the value is already in that Set, then do nothing."},
+"host.remove_supported_bootloaders":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the supported_bootloaders field of the given host.  If the value is not in that Set, then do nothing."},
+"host.set_logging":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the logging field of the given host."},
+"host.add_to_logging":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the logging field of the given host."},
+"host.remove_from_logging":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the logging field of the given host.  If the key is not in that Map, then do nothing."},
+"host.set_suspend_image_sr":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"SR"},doc:"New value to set"}],doc:"Set the suspend_image_sr field of the given host."},
+"host.set_crash_dump_sr":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"SR"},doc:"New value to set"}],doc:"Set the crash_dump_sr field of the given host."},
+"host.set_cpu_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the cpu_info field of the given host."},
+"host.add_to_cpu_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the cpu_info field of the given host."},
+"host.remove_from_cpu_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the cpu_info field of the given host.  If the key is not in that Map, then do nothing."},
+"host.set_hostname":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the hostname field of the given host."},
+"host.set_address":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the address field of the given host."},
+"host.set_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host_metrics"},doc:"New value to set"}],doc:"Set the metrics field of the given host."},
+"host.set_license_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the license_params field of the given host."},
+"host.add_to_license_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the license_params field of the given host."},
+"host.remove_from_license_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the license_params field of the given host.  If the key is not in that Map, then do nothing."},
+"host.set_boot_free_mem":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the boot_free_mem field of the given host."},
+"host.set_ha_statefiles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the ha_statefiles field of the given host."},
+"host.add_ha_statefiles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the ha_statefiles field of the given host.  If the value is already in that Set, then do nothing."},
+"host.remove_ha_statefiles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the ha_statefiles field of the given host.  If the value is not in that Set, then do nothing."},
+"host.set_ha_network_peers":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the ha_network_peers field of the given host."},
+"host.add_ha_network_peers":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the ha_network_peers field of the given host.  If the value is already in that Set, then do nothing."},
+"host.remove_ha_network_peers":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the ha_network_peers field of the given host.  If the value is not in that Set, then do nothing."},
+"host.set_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"ref",class:"blob"}},doc:"New value to set"}],doc:"Set the blobs field of the given host."},
+"host.add_to_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"ref",class:"blob"},doc:"Value to add"}],doc:"Add the given key-value pair to the blobs field of the given host."},
+"host.remove_from_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the blobs field of the given host.  If the key is not in that Map, then do nothing."},
+"host.set_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the tags field of the given host."},
+"host.add_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the tags field of the given host.  If the value is already in that Set, then do nothing."},
+"host.remove_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the tags field of the given host.  If the value is not in that Set, then do nothing."},
+"host.set_external_auth_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the external_auth_type field of the given host."},
+"host.set_external_auth_service_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the external_auth_service_name field of the given host."},
+"host.set_external_auth_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the external_auth_configuration field of the given host."},
+"host.add_to_external_auth_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the external_auth_configuration field of the given host."},
+"host.remove_from_external_auth_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the external_auth_configuration field of the given host.  If the key is not in that Map, then do nothing."},
+"host.set_edition":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the edition field of the given host."},
+"host.set_license_server":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the license_server field of the given host."},
+"host.add_to_license_server":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the license_server field of the given host."},
+"host.remove_from_license_server":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the license_server field of the given host.  If the key is not in that Map, then do nothing."},
+"host.set_bios_strings":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the bios_strings field of the given host."},
+"host.add_to_bios_strings":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the bios_strings field of the given host."},
+"host.remove_from_bios_strings":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the bios_strings field of the given host.  If the key is not in that Map, then do nothing."},
+"host.set_power_on_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the power_on_mode field of the given host."},
+"host.set_power_on_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the power_on_config field of the given host."},
+"host.add_to_power_on_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the power_on_config field of the given host."},
+"host.remove_from_power_on_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the power_on_config field of the given host.  If the key is not in that Map, then do nothing."},
+"host.set_local_cache_sr":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"SR"},doc:"New value to set"}],doc:"Set the local_cache_sr field of the given host."},
+"host.set_chipset_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the chipset_info field of the given host."},
+"host.add_to_chipset_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the chipset_info field of the given host."},
+"host.remove_from_chipset_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the chipset_info field of the given host.  If the key is not in that Map, then do nothing."},
+"host.disable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to disable"}],doc:"Puts the host into a state in which no new VMs can be started. Currently active VMs on the host continue to execute."},
+"host.enable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to enable"}],doc:"Puts the host into a state in which new VMs can be started."},
+"host.shutdown":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to shutdown"}],doc:"Shutdown the host. (This function can only be called if there are no currently running VMs on the host and it is disabled.)"},
+"host.reboot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to reboot"}],doc:"Reboot the host. (This function can only be called if there are no currently running VMs on the host and it is disabled.)"},
+"host.dmesg":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to query"}],doc:"Get the host xen dmesg."},
+"host.dmesg_clear":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to query"}],doc:"Get the host xen dmesg, and clear the buffer."},
+"host.get_log":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to query"}],doc:"Get the host's log file"},
+"host.send_debug_keys":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"keys",ty:{ty:"string"},doc:"The keys to send"}],doc:"Inject the given string as debugging keys into Xen"},
+"host.bugreport_upload":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host on which to run xen-bugtool"},{name:"url",ty:{ty:"string"},doc:"The URL to upload to"},{name:"options",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Extra configuration operations"}],doc:"Run xen-bugtool --yestoall and upload the output to Citrix support"},
+"host.list_methods":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"List all supported methods"},
+"host.license_apply":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to upload the license to"},{name:"contents",ty:{ty:"string"},doc:"The contents of the license file, base64 encoded"}],doc:"Apply a new license to a host"},
+"host.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"unique identifier/object reference"},{name:"name_label",ty:{ty:"string"},doc:"The name of the new storage repository"},{name:"name_description",ty:{ty:"string"},doc:"The description of the new storage repository"},{name:"hostname",ty:{ty:"string"},doc:"Hostname"},{name:"address",ty:{ty:"string"},doc:"An address by which this host can be contacted by other members in its pool"},{name:"external_auth_type",ty:{ty:"string"},doc:"type of external authentication service configured; empty if none configured"},{name:"external_auth_service_name",ty:{ty:"string"},doc:"name of external authentication service configured; empty if none configured"},{name:"external_auth_configuration",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"configuration specific to external authentication service"},{name:"license_params",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"State of the current license"},{name:"edition",ty:{ty:"string"},doc:"XenServer edition"},{name:"license_server",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Contact information of the license server"},{name:"local_cache_sr",ty:{ty:"ref",class:"SR"},doc:"The SR that is used as a local cache"},{name:"chipset_info",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Information about chipset features"}],doc:"Create a new host record"},
+"host.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"The host record to remove"}],doc:"Destroy specified host record in database"},
+"host.power_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to power on"}],doc:"Attempt to power-on the host (if the capability exists)."},
+"host.set_license_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"The license_params"}],doc:"Set the new license details in the database, trigger a recomputation of the pool SKU"},
+"host.emergency_ha_disable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"This call disables HA on the local host. This should only be used with extreme care."},
+"host.ha_disarm_fencing":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to disarm"}],doc:"Disarms the fencing function of the HA subsystem. This function is extremely dangerous and should only be used as part of a controlled shutdown of the HA system."},
+"host.preconfigure_ha":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to modify"},{name:"statefiles",ty:{ty:"set",contents:{ty:"ref",class:"VDI"}},doc:"Set of statefile VDIs to use"},{name:"metadata_vdi",ty:{ty:"ref",class:"VDI"},doc:"VDI to use for Pool metadata"},{name:"generation",ty:{ty:"string"},doc:"UUID identifying this HA instance"}],doc:"Attach statefiles, generate config files but do not start the xHA daemon."},
+"host.ha_join_liveset":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host whose HA datmon to start"}],doc:"Block until this host joins the liveset."},
+"host.ha_disable_failover_decisions":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to disable failover decisions for"}],doc:"Prevents future failover decisions happening on this node. This function should only be used as part of a controlled shutdown of the HA system."},
+"host.ha_wait_for_shutdown_via_statefile":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host whose HA subsystem to query"}],doc:"Block until this host xHA daemon exits after having seen the invalid statefile. If the host loses statefile access then throw an exception"},
+"host.ha_stop_daemon":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host whose daemon should be stopped"}],doc:"Stops the HA daemon. This function is extremely dangerous and should only be used as part of a controlled shutdown of the HA system."},
+"host.ha_release_resources":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host whose resources should be cleaned up"}],doc:"Cleans up any resources on the host associated with this HA instance."},
+"host.ha_xapi_healthcheck":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Returns true if xapi appears to be functioning normally."},
+"host.local_assert_healthy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Returns nothing if this host is healthy, otherwise it throws an error explaining why the host is unhealthy"},
+"host.request_backup":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to send the request to"},{name:"generation",ty:{ty:"int"},doc:"The generation count of the master's database"},{name:"force",ty:{ty:"bool"},doc:"If this is true then the client _has_ to take a backup, otherwise it's just an 'offer'"}],doc:"Request this host performs a database backup"},
+"host.request_config_file_sync":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to send the request to"},{name:"hash",ty:{ty:"string"},doc:"The hash of the master's dom0 config files package"}],doc:"Request this host syncs dom0 config files"},
+"host.propose_new_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"address",ty:{ty:"string"},doc:"The address of the Host which is proposed as the new master"},{name:"manual",ty:{ty:"bool"},doc:"True if this call is being invoked by the user manually, false if automatic"}],doc:"First phase of a two-phase commit protocol to set the new master. If the host has already committed to another configuration or if the proposed new master is not in this node's membership set then the call will return an exception."},
+"host.commit_new_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"address",ty:{ty:"string"},doc:"The address of the Host which should be committed as the new master"}],doc:"Second phase of a two-phase commit protocol to set the new master."},
+"host.abort_new_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"address",ty:{ty:"string"},doc:"The address of the Host which is proposed as the new master"}],doc:"Causes the new master transaction to abort"},
+"host.get_data_sources":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to interrogate"}],doc:""},
+"host.record_data_source":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"data_source",ty:{ty:"string"},doc:"The data source to record"}],doc:"Start recording the specified data source"},
+"host.query_data_source":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"data_source",ty:{ty:"string"},doc:"The data source to query"}],doc:"Query the latest value of the specified data source"},
+"host.forget_data_source_archives":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"data_source",ty:{ty:"string"},doc:"The data source whose archives are to be forgotten"}],doc:"Forget the recorded statistics related to the specified data source"},
+"host.assert_can_evacuate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to evacuate"}],doc:"Check this host can be evacuated."},
+"host.get_vms_which_prevent_evacuation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"The host to query"}],doc:"Return a set of VMs which prevent the host being evacuated, with per-VM error codes"},
+"host.get_uncooperative_resident_VMs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"The host to query"}],doc:"Return a set of VMs which are not co-operating with the host's memory control system"},
+"host.get_uncooperative_domains":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"The host to query"}],doc:"Return the set of domain uuids which are not co-operating with the host's memory control system"},
+"host.evacuate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to evacuate"}],doc:"Migrate all VMs off of this host, where possible."},
+"host.signal_networking_change":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Signals that the management IP address or hostname has been changed beneath us."},
+"host.notify":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"ty",ty:{ty:"string"},doc:"type of the notification"},{name:"params",ty:{ty:"string"},doc:"arguments of the notification (can be empty)"}],doc:"Notify an event"},
+"host.syslog_reconfigure":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"Tell the host to reread its Host.logging parameters and reconfigure itself accordingly"}],doc:"Re-configure syslog logging"},
+"host.management_reconfigure":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"pif",ty:{ty:"ref",class:"PIF"},doc:"reference to a PIF object corresponding to the management interface"}],doc:"Reconfigure the management network interface"},
+"host.local_management_reconfigure":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"interface",ty:{ty:"string"},doc:"name of the interface to use as a management interface"}],doc:"Reconfigure the management network interface. Should only be used if Host.management_reconfigure is impossible because the network configuration is broken."},
+"host.management_disable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Disable the management network interface"},
+"host.get_system_status_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to interrogate"}],doc:""},
+"host.get_diagnostic_timing_stats":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to interrogate"}],doc:"Return timing statistics for diagnostic purposes"},
+"host.restart_agent":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host on which you want to restart the agent"}],doc:"Restarts the agent after a 10 second pause. WARNING: this is a dangerous operation. Any operations in progress will be aborted, and unrecoverable data loss may occur. The caller is responsible for ensuring that there are no operations in progress when this method is called."},
+"host.shutdown_agent":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Shuts the agent down after a 10 second pause. WARNING: this is a dangerous operation. Any operations in progress will be aborted, and unrecoverable data loss may occur. The caller is responsible for ensuring that there are no operations in progress when this method is called."},
+"host.set_hostname_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host whose host name to set"},{name:"hostname",ty:{ty:"string"},doc:"The new host name"}],doc:"Sets the host name to the specified string.  Both the API and lower-level system hostname are changed immediately."},
+"host.is_in_emergency_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Diagnostics call to discover if host is in emergency mode"},
+"host.compute_free_memory":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to send the request to"}],doc:"Computes the amount of free memory on the host."},
+"host.compute_memory_overhead":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host for which to compute the memory overhead"}],doc:"Computes the virtualization memory overhead of a host."},
+"host.tickle_heartbeat":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host calling the function, and whose heartbeat to tickle"},{name:"stuff",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Anything else we want to let the master know"}],doc:"Needs to be called every 30 seconds for the master to believe the host is alive"},
+"host.sync_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to whom the data should be sent"}],doc:"This causes the synchronisation of the non-database data (messages, RRDs and so on) stored on the master to be synchronised with the host"},
+"host.backup_rrds":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"Schedule a backup of the RRDs of this host"},{name:"delay",ty:{ty:"float"},doc:"Delay in seconds from when the call is received to perform the backup"}],doc:"This causes the RRDs to be backed up to the master"},
+"host.create_new_blob":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"name",ty:{ty:"string"},doc:"The name associated with the blob"},{name:"mime_type",ty:{ty:"string"},doc:"The mime type for the data. Empty string translates to application/octet-stream"}],doc:"Create a placeholder for a named binary blob of data that is associated with this host"},
+"host.call_plugin":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"plugin",ty:{ty:"string"},doc:"The name of the plugin"},{name:"fn",ty:{ty:"string"},doc:"The name of the function within the plugin"},{name:"args",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Arguments for the function"}],doc:"Call a XenAPI plugin on this host"},
+"host.get_servertime":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host whose clock should be queried"}],doc:"This call queries the host's clock for the current time"},
+"host.get_server_localtime":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host whose clock should be queried"}],doc:"This call queries the host's clock for the current time in the host's local timezone"},
+"host.enable_binary_storage":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"}],doc:"Enable binary storage on a particular host, for storing RRDs, messages and blobs"},
+"host.disable_binary_storage":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"}],doc:"Disable binary storage on a particular host, deleting stored RRDs, messages and blobs"},
+"host.enable_external_auth":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host whose external authentication should be enabled"},{name:"config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"A list of key-values containing the configuration data"},{name:"service_name",ty:{ty:"string"},doc:"The name of the service"},{name:"auth_type",ty:{ty:"string"},doc:"The type of authentication (e.g. AD for Active Directory)"}],doc:"This call enables external authentication on a host"},
+"host.disable_external_auth":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host whose external authentication should be disabled"},{name:"config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Optional parameters as a list of key-values containing the configuration data"}],doc:"This call disables external authentication on the local host"},
+"host.retrieve_wlb_evacuate_recommendations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"The host to query"}],doc:"Retrieves recommended host migrations to perform when evacuating the host from the wlb server. If a VM cannot be migrated from the host the reason is listed instead of a recommendation."},
+"host.certificate_install":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"name",ty:{ty:"string"},doc:"A name to give the certificate"},{name:"cert",ty:{ty:"string"},doc:"The certificate"}],doc:"Install an SSL certificate to this host."},
+"host.certificate_uninstall":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"name",ty:{ty:"string"},doc:"The certificate name"}],doc:"Remove an SSL certificate from this host."},
+"host.certificate_list":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"}],doc:"List all installed SSL certificates."},
+"host.crl_install":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"name",ty:{ty:"string"},doc:"A name to give the CRL"},{name:"crl",ty:{ty:"string"},doc:"The CRL"}],doc:"Install an SSL certificate revocation list to this host."},
+"host.crl_uninstall":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"name",ty:{ty:"string"},doc:"The CRL name"}],doc:"Remove an SSL certificate revocation list from this host."},
+"host.crl_list":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"}],doc:"List all installed SSL certificate revocation lists."},
+"host.certificate_sync":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"}],doc:"Resync installed SSL certificates and CRLs."},
+"host.get_server_certificate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"}],doc:"Get the installed server SSL certificate."},
+"host.update_pool_secret":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"pool_secret",ty:{ty:"string"},doc:"The new pool secret"}],doc:""},
+"host.update_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"master_address",ty:{ty:"string"},doc:"The new master address"}],doc:""},
+"host.attach_static_vdis":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to modify"},{name:"vdi_reason_map",ty:{ty:"map",keys:{ty:"ref",class:"VDI"},values:{ty:"string"}},doc:"List of VDI+reason pairs to attach"}],doc:"Statically attach VDIs on a host."},
+"host.detach_static_vdis":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to modify"},{name:"vdis",ty:{ty:"set",contents:{ty:"ref",class:"VDI"}},doc:"Set of VDIs to detach"}],doc:"Detach static VDIs from a host."},
+"host.set_localdb_key":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to modify"},{name:"key",ty:{ty:"string"},doc:"Key to change"},{name:"value",ty:{ty:"string"},doc:"Value to set"}],doc:"Set a key in the local DB of the host."},
+"host.apply_edition":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"edition",ty:{ty:"string"},doc:"The requested edition"}],doc:"Change to another edition, or reactivate the current edition after a license has expired. This may be subject to the successful checkout of an appropriate license."},
+"host.refresh_pack_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to modify"}],doc:"Refresh the list of installed Supplemental Packs."},
+"host.set_power_on_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"power_on_mode",ty:{ty:"string"},doc:"power-on-mode can be empty,iLO,wake-on-lan, DRAC or other"},{name:"power_on_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Power on config"}],doc:"Set the power-on-mode, host, user and password "},
+"host.set_cpu_features":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"features",ty:{ty:"string"},doc:"The features string (32 hexadecimal digits)"}],doc:"Set the CPU features to be used after a reboot, if the given features string is valid."},
+"host.reset_cpu_features":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"}],doc:"Remove the feature mask, such that after a reboot all features of the CPU are enabled."},
+"host.reset_networking":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to modify"}],doc:"Purge all network-related metadata associated with the given host."},
+"host.enable_local_storage_caching":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR to use as a local cache"}],doc:"Enable the use of a local SR for caching purposes"},
+"host.disable_local_storage_caching":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"}],doc:"Disable the use of a local SR for caching purposes"},
+"host.get_sm_diagnostics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"}],doc:"Return live SM diagnostics"},
+"host.get_thread_diagnostics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"}],doc:"Return live thread diagnostics"},
+"host.sm_dp_destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"dp",ty:{ty:"string"},doc:"The datapath"},{name:"allow_leak",ty:{ty:"bool"},doc:"If true, all records of the datapath will be removed even if the datapath could not be destroyed cleanly."}],doc:"Attempt to cleanup and destroy a named SM datapath"},
+"host.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the hosts known to the system."},
+"host.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the hosts known to the system."},
+"host.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of host references to host records for all hosts known to the system."},
+"host_crashdump.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given host_crashdump."},
+"host_crashdump.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class host_crashdump"},
+"host_crashdump.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the host_crashdumps known to the system."},
+"host_crashdump.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the host_crashdump instance with the specified UUID."},
+"host_crashdump.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"host_crashdump"},doc:"All constructor arguments"}],doc:"Create a new host_crashdump instance, and return its handle."},
+"host_crashdump.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"Destroy the specified host_crashdump instance."},
+"host_crashdump.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"Get the uuid field of the given host_crashdump."},
+"host_crashdump.get_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"Get the host field of the given host_crashdump."},
+"host_crashdump.get_timestamp":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"Get the timestamp field of the given host_crashdump."},
+"host_crashdump.get_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"Get the size field of the given host_crashdump."},
+"host_crashdump.get_filename":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"Get the filename field of the given host_crashdump."},
+"host_crashdump.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"Get the other_config field of the given host_crashdump."},
+"host_crashdump.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given host_crashdump."},
+"host_crashdump.set_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the host field of the given host_crashdump."},
+"host_crashdump.set_timestamp":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the timestamp field of the given host_crashdump."},
+"host_crashdump.set_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the size field of the given host_crashdump."},
+"host_crashdump.set_filename":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the filename field of the given host_crashdump."},
+"host_crashdump.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given host_crashdump."},
+"host_crashdump.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given host_crashdump."},
+"host_crashdump.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given host_crashdump.  If the key is not in that Map, then do nothing."},
+"host_crashdump.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"The host crashdump to destroy"}],doc:"Destroy specified host crash dump, removing it from the disk."},
+"host_crashdump.upload":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"The host crashdump to upload"},{name:"url",ty:{ty:"string"},doc:"The URL to upload to"},{name:"options",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Extra configuration operations"}],doc:"Upload the specified host crash dump to a specified URL"},
+"host_crashdump.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the host_crashdumps known to the system."},
+"host_crashdump.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the host_crashdumps known to the system."},
+"host_crashdump.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of host_crashdump references to host_crashdump records for all host_crashdumps known to the system."},
+"host_patch.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given host_patch."},
+"host_patch.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class host_patch"},
+"host_patch.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the host_patchs known to the system."},
+"host_patch.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the host_patch instance with the specified UUID."},
+"host_patch.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"host_patch"},doc:"All constructor arguments"}],doc:"Create a new host_patch instance, and return its handle."},
+"host_patch.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Destroy the specified host_patch instance."},
+"host_patch.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the host_patch instances with the given label."},
+"host_patch.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the uuid field of the given host_patch."},
+"host_patch.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the name/label field of the given host_patch."},
+"host_patch.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the name/description field of the given host_patch."},
+"host_patch.get_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the version field of the given host_patch."},
+"host_patch.get_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the host field of the given host_patch."},
+"host_patch.get_filename":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the filename field of the given host_patch."},
+"host_patch.get_applied":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the applied field of the given host_patch."},
+"host_patch.get_timestamp_applied":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the timestamp_applied field of the given host_patch."},
+"host_patch.get_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the size field of the given host_patch."},
+"host_patch.get_pool_patch":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the pool_patch field of the given host_patch."},
+"host_patch.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the other_config field of the given host_patch."},
+"host_patch.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given host_patch."},
+"host_patch.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given host_patch."},
+"host_patch.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given host_patch."},
+"host_patch.set_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the version field of the given host_patch."},
+"host_patch.set_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the host field of the given host_patch."},
+"host_patch.set_filename":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the filename field of the given host_patch."},
+"host_patch.set_applied":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the applied field of the given host_patch."},
+"host_patch.set_timestamp_applied":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the timestamp_applied field of the given host_patch."},
+"host_patch.set_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the size field of the given host_patch."},
+"host_patch.set_pool_patch":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"pool_patch"},doc:"New value to set"}],doc:"Set the pool_patch field of the given host_patch."},
+"host_patch.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given host_patch."},
+"host_patch.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given host_patch."},
+"host_patch.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given host_patch.  If the key is not in that Map, then do nothing."},
+"host_patch.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"The patch to destroy"}],doc:"Destroy the specified host patch, removing it from the disk. This does NOT reverse the patch"},
+"host_patch.apply":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"The patch to apply"}],doc:"Apply the selected patch and return its output"},
+"host_patch.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the host_patchs known to the system."},
+"host_patch.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the host_patchs known to the system."},
+"host_patch.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of host_patch references to host_patch records for all host_patchs known to the system."},
+"host_metrics.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given host_metrics."},
+"host_metrics.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class host_metrics"},
+"host_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the host_metrics instances known to the system."},
+"host_metrics.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the host_metrics instance with the specified UUID."},
+"host_metrics.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"host_metrics"},doc:"All constructor arguments"}],doc:"Create a new host_metrics instance, and return its handle."},
+"host_metrics.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"Destroy the specified host_metrics instance."},
+"host_metrics.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"Get the uuid field of the given host_metrics."},
+"host_metrics.get_memory_total":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"Get the memory/total field of the given host_metrics."},
+"host_metrics.get_memory_free":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"Get the memory/free field of the given host_metrics."},
+"host_metrics.get_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"Get the live field of the given host_metrics."},
+"host_metrics.get_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"Get the last_updated field of the given host_metrics."},
+"host_metrics.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"Get the other_config field of the given host_metrics."},
+"host_metrics.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given host_metrics."},
+"host_metrics.set_memory_total":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/total field of the given host_metrics."},
+"host_metrics.set_memory_free":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/free field of the given host_metrics."},
+"host_metrics.set_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the live field of the given host_metrics."},
+"host_metrics.set_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the last_updated field of the given host_metrics."},
+"host_metrics.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given host_metrics."},
+"host_metrics.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given host_metrics."},
+"host_metrics.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given host_metrics.  If the key is not in that Map, then do nothing."},
+"host_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the host_metrics instances known to the system."},
+"host_metrics.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the host_metrics instances known to the system."},
+"host_metrics.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of host_metrics references to host_metrics records for all host_metrics instances known to the system."},
+"host_cpu.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given host_cpu."},
+"host_cpu.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class host_cpu"},
+"host_cpu.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the host_cpus known to the system."},
+"host_cpu.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the host_cpu instance with the specified UUID."},
+"host_cpu.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"host_cpu"},doc:"All constructor arguments"}],doc:"Create a new host_cpu instance, and return its handle."},
+"host_cpu.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Destroy the specified host_cpu instance."},
+"host_cpu.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the uuid field of the given host_cpu."},
+"host_cpu.get_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the host field of the given host_cpu."},
+"host_cpu.get_number":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the number field of the given host_cpu."},
+"host_cpu.get_vendor":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the vendor field of the given host_cpu."},
+"host_cpu.get_speed":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the speed field of the given host_cpu."},
+"host_cpu.get_modelname":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the modelname field of the given host_cpu."},
+"host_cpu.get_family":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the family field of the given host_cpu."},
+"host_cpu.get_model":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the model field of the given host_cpu."},
+"host_cpu.get_stepping":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the stepping field of the given host_cpu."},
+"host_cpu.get_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the flags field of the given host_cpu."},
+"host_cpu.get_features":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the features field of the given host_cpu."},
+"host_cpu.get_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the utilisation field of the given host_cpu."},
+"host_cpu.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the other_config field of the given host_cpu."},
+"host_cpu.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given host_cpu."},
+"host_cpu.set_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the host field of the given host_cpu."},
+"host_cpu.set_number":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the number field of the given host_cpu."},
+"host_cpu.set_vendor":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the vendor field of the given host_cpu."},
+"host_cpu.set_speed":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the speed field of the given host_cpu."},
+"host_cpu.set_modelname":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the modelname field of the given host_cpu."},
+"host_cpu.set_family":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the family field of the given host_cpu."},
+"host_cpu.set_model":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the model field of the given host_cpu."},
+"host_cpu.set_stepping":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the stepping field of the given host_cpu."},
+"host_cpu.set_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the flags field of the given host_cpu."},
+"host_cpu.set_features":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the features field of the given host_cpu."},
+"host_cpu.set_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the utilisation field of the given host_cpu."},
+"host_cpu.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given host_cpu."},
+"host_cpu.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given host_cpu."},
+"host_cpu.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given host_cpu.  If the key is not in that Map, then do nothing."},
+"host_cpu.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the host_cpus known to the system."},
+"host_cpu.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the host_cpus known to the system."},
+"host_cpu.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of host_cpu references to host_cpu records for all host_cpus known to the system."},
+"network.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given network."},
+"network.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class network"},
+"network.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the networks known to the system."},
+"network.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the network instance with the specified UUID."},
+"network.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"network"},doc:"All constructor arguments"}],doc:"Create a new network instance, and return its handle."},
+"network.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Destroy the specified network instance."},
+"network.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the network instances with the given label."},
+"network.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the uuid field of the given network."},
+"network.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the name/label field of the given network."},
+"network.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the name/description field of the given network."},
+"network.get_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the allowed_operations field of the given network."},
+"network.get_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the current_operations field of the given network."},
+"network.get_VIFs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the VIFs field of the given network."},
+"network.get_PIFs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the PIFs field of the given network."},
+"network.get_MTU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the MTU field of the given network."},
+"network.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the other_config field of the given network."},
+"network.get_bridge":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the bridge field of the given network."},
+"network.get_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the blobs field of the given network."},
+"network.get_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the tags field of the given network."},
+"network.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given network."},
+"network.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given network."},
+"network.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given network."},
+"network.set_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"network_operations",values:["attaching"]}},doc:"New value to set"}],doc:"Set the allowed_operations field of the given network."},
+"network.add_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"network_operations",values:["attaching"]},doc:"New value to add"}],doc:"Add the given value to the allowed_operations field of the given network.  If the value is already in that Set, then do nothing."},
+"network.remove_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"network_operations",values:["attaching"]},doc:"Value to remove"}],doc:"Remove the given value from the allowed_operations field of the given network.  If the value is not in that Set, then do nothing."},
+"network.set_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"enum",name:"network_operations",values:["attaching"]}},doc:"New value to set"}],doc:"Set the current_operations field of the given network."},
+"network.add_to_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"enum",name:"network_operations",values:["attaching"]},doc:"Value to add"}],doc:"Add the given key-value pair to the current_operations field of the given network."},
+"network.remove_from_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the current_operations field of the given network.  If the key is not in that Map, then do nothing."},
+"network.set_MTU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the MTU field of the given network."},
+"network.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given network."},
+"network.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given network."},
+"network.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given network.  If the key is not in that Map, then do nothing."},
+"network.set_bridge":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the bridge field of the given network."},
+"network.set_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"ref",class:"blob"}},doc:"New value to set"}],doc:"Set the blobs field of the given network."},
+"network.add_to_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"ref",class:"blob"},doc:"Value to add"}],doc:"Add the given key-value pair to the blobs field of the given network."},
+"network.remove_from_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the blobs field of the given network.  If the key is not in that Map, then do nothing."},
+"network.set_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the tags field of the given network."},
+"network.add_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the tags field of the given network.  If the value is already in that Set, then do nothing."},
+"network.remove_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the tags field of the given network.  If the value is not in that Set, then do nothing."},
+"network.attach":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"network",ty:{ty:"ref",class:"network"},doc:"network to which this interface should be connected"},{name:"host",ty:{ty:"ref",class:"host"},doc:"physical machine to which this PIF is connected"}],doc:"Makes the network immediately available on a particular host"},
+"network.pool_introduce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"name_label",ty:{ty:"string"},doc:""},{name:"name_description",ty:{ty:"string"},doc:""},{name:"MTU",ty:{ty:"int"},doc:""},{name:"other_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:""},{name:"bridge",ty:{ty:"string"},doc:""}],doc:"Create a new network record in the database only"},
+"network.create_new_blob":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"network",ty:{ty:"ref",class:"network"},doc:"The network"},{name:"name",ty:{ty:"string"},doc:"The name associated with the blob"},{name:"mime_type",ty:{ty:"string"},doc:"The mime type for the data. Empty string translates to application/octet-stream"}],doc:"Create a placeholder for a named binary blob of data that is associated with this pool"},
+"network.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the networks known to the system."},
+"network.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the networks known to the system."},
+"network.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of network references to network records for all networks known to the system."},
+"VIF.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VIF."},
+"VIF.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VIF"},
+"VIF.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VIFs known to the system."},
+"VIF.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VIF instance with the specified UUID."},
+"VIF.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VIF"},doc:"All constructor arguments"}],doc:"Create a new VIF instance, and return its handle."},
+"VIF.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Destroy the specified VIF instance."},
+"VIF.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the uuid field of the given VIF."},
+"VIF.get_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the allowed_operations field of the given VIF."},
+"VIF.get_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the current_operations field of the given VIF."},
+"VIF.get_device":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the device field of the given VIF."},
+"VIF.get_network":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the network field of the given VIF."},
+"VIF.get_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the VM field of the given VIF."},
+"VIF.get_MAC":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the MAC field of the given VIF."},
+"VIF.get_MTU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the MTU field of the given VIF."},
+"VIF.get_reserved":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the reserved field of the given VIF."},
+"VIF.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the other_config field of the given VIF."},
+"VIF.get_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the currently_attached field of the given VIF."},
+"VIF.get_status_code":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the status_code field of the given VIF."},
+"VIF.get_status_detail":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the status_detail field of the given VIF."},
+"VIF.get_runtime_properties":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the runtime_properties field of the given VIF."},
+"VIF.get_qos_algorithm_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the qos/algorithm_type field of the given VIF."},
+"VIF.get_qos_algorithm_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the qos/algorithm_params field of the given VIF."},
+"VIF.get_qos_supported_algorithms":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the qos/supported_algorithms field of the given VIF."},
+"VIF.get_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the metrics field of the given VIF."},
+"VIF.get_MAC_autogenerated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the MAC_autogenerated field of the given VIF."},
+"VIF.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VIF."},
+"VIF.set_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"vif_operations",values:["attach","plug","unplug"]}},doc:"New value to set"}],doc:"Set the allowed_operations field of the given VIF."},
+"VIF.add_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vif_operations",values:["attach","plug","unplug"]},doc:"New value to add"}],doc:"Add the given value to the allowed_operations field of the given VIF.  If the value is already in that Set, then do nothing."},
+"VIF.remove_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vif_operations",values:["attach","plug","unplug"]},doc:"Value to remove"}],doc:"Remove the given value from the allowed_operations field of the given VIF.  If the value is not in that Set, then do nothing."},
+"VIF.set_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"enum",name:"vif_operations",values:["attach","plug","unplug"]}},doc:"New value to set"}],doc:"Set the current_operations field of the given VIF."},
+"VIF.add_to_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"enum",name:"vif_operations",values:["attach","plug","unplug"]},doc:"Value to add"}],doc:"Add the given key-value pair to the current_operations field of the given VIF."},
+"VIF.remove_from_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the current_operations field of the given VIF.  If the key is not in that Map, then do nothing."},
+"VIF.set_device":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the device field of the given VIF."},
+"VIF.set_network":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"network"},doc:"New value to set"}],doc:"Set the network field of the given VIF."},
+"VIF.set_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to set"}],doc:"Set the VM field of the given VIF."},
+"VIF.set_MAC":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the MAC field of the given VIF."},
+"VIF.set_MTU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the MTU field of the given VIF."},
+"VIF.set_reserved":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the reserved field of the given VIF."},
+"VIF.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VIF."},
+"VIF.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VIF."},
+"VIF.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VIF.  If the key is not in that Map, then do nothing."},
+"VIF.set_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the currently_attached field of the given VIF."},
+"VIF.set_status_code":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the status_code field of the given VIF."},
+"VIF.set_status_detail":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the status_detail field of the given VIF."},
+"VIF.set_runtime_properties":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the runtime_properties field of the given VIF."},
+"VIF.add_to_runtime_properties":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the runtime_properties field of the given VIF."},
+"VIF.remove_from_runtime_properties":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the runtime_properties field of the given VIF.  If the key is not in that Map, then do nothing."},
+"VIF.set_qos_algorithm_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the qos/algorithm_type field of the given VIF."},
+"VIF.set_qos_algorithm_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the qos/algorithm_params field of the given VIF."},
+"VIF.add_to_qos_algorithm_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the qos/algorithm_params field of the given VIF."},
+"VIF.remove_from_qos_algorithm_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the qos/algorithm_params field of the given VIF.  If the key is not in that Map, then do nothing."},
+"VIF.set_qos_supported_algorithms":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the qos/supported_algorithms field of the given VIF."},
+"VIF.add_qos_supported_algorithms":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the qos/supported_algorithms field of the given VIF.  If the value is already in that Set, then do nothing."},
+"VIF.remove_qos_supported_algorithms":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the qos/supported_algorithms field of the given VIF.  If the value is not in that Set, then do nothing."},
+"VIF.set_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VIF_metrics"},doc:"New value to set"}],doc:"Set the metrics field of the given VIF."},
+"VIF.set_MAC_autogenerated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the MAC_autogenerated field of the given VIF."},
+"VIF.plug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"The VIF to hotplug"}],doc:"Hotplug the specified VIF, dynamically attaching it to the running VM"},
+"VIF.unplug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"The VIF to hot-unplug"}],doc:"Hot-unplug the specified VIF, dynamically unattaching it from the running VM"},
+"VIF.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VIFs known to the system."},
+"VIF.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VIFs known to the system."},
+"VIF.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VIF references to VIF records for all VIFs known to the system."},
+"VIF_metrics.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VIF_metrics."},
+"VIF_metrics.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VIF_metrics"},
+"VIF_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VIF_metrics instances known to the system."},
+"VIF_metrics.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VIF_metrics instance with the specified UUID."},
+"VIF_metrics.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VIF_metrics"},doc:"All constructor arguments"}],doc:"Create a new VIF_metrics instance, and return its handle."},
+"VIF_metrics.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"}],doc:"Destroy the specified VIF_metrics instance."},
+"VIF_metrics.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"}],doc:"Get the uuid field of the given VIF_metrics."},
+"VIF_metrics.get_io_read_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"}],doc:"Get the io/read_kbs field of the given VIF_metrics."},
+"VIF_metrics.get_io_write_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"}],doc:"Get the io/write_kbs field of the given VIF_metrics."},
+"VIF_metrics.get_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"}],doc:"Get the last_updated field of the given VIF_metrics."},
+"VIF_metrics.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"}],doc:"Get the other_config field of the given VIF_metrics."},
+"VIF_metrics.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VIF_metrics."},
+"VIF_metrics.set_io_read_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the io/read_kbs field of the given VIF_metrics."},
+"VIF_metrics.set_io_write_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the io/write_kbs field of the given VIF_metrics."},
+"VIF_metrics.set_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the last_updated field of the given VIF_metrics."},
+"VIF_metrics.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VIF_metrics."},
+"VIF_metrics.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VIF_metrics."},
+"VIF_metrics.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VIF_metrics.  If the key is not in that Map, then do nothing."},
+"VIF_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VIF_metrics instances known to the system."},
+"VIF_metrics.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VIF_metrics instances known to the system."},
+"VIF_metrics.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VIF_metrics references to VIF_metrics records for all VIF_metrics instances known to the system."},
+"PIF.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given PIF."},
+"PIF.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class PIF"},
+"PIF.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the PIFs known to the system."},
+"PIF.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the PIF instance with the specified UUID."},
+"PIF.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"PIF"},doc:"All constructor arguments"}],doc:"Create a new PIF instance, and return its handle."},
+"PIF.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Destroy the specified PIF instance."},
+"PIF.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the uuid field of the given PIF."},
+"PIF.get_device":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the device field of the given PIF."},
+"PIF.get_network":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the network field of the given PIF."},
+"PIF.get_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the host field of the given PIF."},
+"PIF.get_MAC":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the MAC field of the given PIF."},
+"PIF.get_MTU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the MTU field of the given PIF."},
+"PIF.get_VLAN":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the VLAN field of the given PIF."},
+"PIF.get_device_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the device_name field of the given PIF."},
+"PIF.get_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the metrics field of the given PIF."},
+"PIF.get_physical":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the physical field of the given PIF."},
+"PIF.get_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the currently_attached field of the given PIF."},
+"PIF.get_ip_configuration_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the ip_configuration_mode field of the given PIF."},
+"PIF.get_IP":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the IP field of the given PIF."},
+"PIF.get_netmask":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the netmask field of the given PIF."},
+"PIF.get_gateway":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the gateway field of the given PIF."},
+"PIF.get_DNS":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the DNS field of the given PIF."},
+"PIF.get_bond_slave_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the bond_slave_of field of the given PIF."},
+"PIF.get_bond_master_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the bond_master_of field of the given PIF."},
+"PIF.get_VLAN_master_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the VLAN_master_of field of the given PIF."},
+"PIF.get_VLAN_slave_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the VLAN_slave_of field of the given PIF."},
+"PIF.get_management":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the management field of the given PIF."},
+"PIF.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the other_config field of the given PIF."},
+"PIF.get_disallow_unplug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the disallow_unplug field of the given PIF."},
+"PIF.get_tunnel_access_PIF_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the tunnel_access_PIF_of field of the given PIF."},
+"PIF.get_tunnel_transport_PIF_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the tunnel_transport_PIF_of field of the given PIF."},
+"PIF.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given PIF."},
+"PIF.set_device":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the device field of the given PIF."},
+"PIF.set_network":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"network"},doc:"New value to set"}],doc:"Set the network field of the given PIF."},
+"PIF.set_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the host field of the given PIF."},
+"PIF.set_MAC":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the MAC field of the given PIF."},
+"PIF.set_MTU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the MTU field of the given PIF."},
+"PIF.set_VLAN":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the VLAN field of the given PIF."},
+"PIF.set_device_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the device_name field of the given PIF."},
+"PIF.set_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PIF_metrics"},doc:"New value to set"}],doc:"Set the metrics field of the given PIF."},
+"PIF.set_physical":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the physical field of the given PIF."},
+"PIF.set_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the currently_attached field of the given PIF."},
+"PIF.set_ip_configuration_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"ip_configuration_mode",values:["None","DHCP","Static"]},doc:"New value to set"}],doc:"Set the ip_configuration_mode field of the given PIF."},
+"PIF.set_IP":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the IP field of the given PIF."},
+"PIF.set_netmask":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the netmask field of the given PIF."},
+"PIF.set_gateway":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the gateway field of the given PIF."},
+"PIF.set_DNS":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the DNS field of the given PIF."},
+"PIF.set_bond_slave_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"Bond"},doc:"New value to set"}],doc:"Set the bond_slave_of field of the given PIF."},
+"PIF.set_VLAN_master_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VLAN"},doc:"New value to set"}],doc:"Set the VLAN_master_of field of the given PIF."},
+"PIF.set_management":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the management field of the given PIF."},
+"PIF.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given PIF."},
+"PIF.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given PIF."},
+"PIF.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given PIF.  If the key is not in that Map, then do nothing."},
+"PIF.set_disallow_unplug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the disallow_unplug field of the given PIF."},
+"PIF.create_VLAN":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"device",ty:{ty:"string"},doc:"physical interface on which to create the VLAN interface"},{name:"network",ty:{ty:"ref",class:"network"},doc:"network to which this interface should be connected"},{name:"host",ty:{ty:"ref",class:"host"},doc:"physical machine to which this PIF is connected"},{name:"VLAN",ty:{ty:"int"},doc:"VLAN tag for the new interface"}],doc:"Create a VLAN interface from an existing physical interface. This call is deprecated: use VLAN.create instead"},
+"PIF.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"the PIF object to destroy"}],doc:"Destroy the PIF object (provided it is a VLAN interface). This call is deprecated: use VLAN.destroy or Bond.destroy instead"},
+"PIF.reconfigure_ip":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"the PIF object to reconfigure"},{name:"mode",ty:{ty:"enum",name:"ip_configuration_mode",values:["None","DHCP","Static"]},doc:"whether to use dynamic/static/no-assignment"},{name:"IP",ty:{ty:"string"},doc:"the new IP address"},{name:"netmask",ty:{ty:"string"},doc:"the new netmask"},{name:"gateway",ty:{ty:"string"},doc:"the new gateway"},{name:"DNS",ty:{ty:"string"},doc:"the new DNS settings"}],doc:"Reconfigure the IP address settings for this interface"},
+"PIF.scan":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host on which to scan"}],doc:"Scan for physical interfaces on a host and create PIF objects to represent them"},
+"PIF.introduce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host on which the interface exists"},{name:"MAC",ty:{ty:"string"},doc:"The MAC address of the interface"},{name:"device",ty:{ty:"string"},doc:"The device name to use for the interface"}],doc:"Create a PIF object matching a particular network interface"},
+"PIF.forget":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"The PIF object to destroy"}],doc:"Destroy the PIF object matching a particular network interface"},
+"PIF.unplug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"the PIF object to unplug"}],doc:"Attempt to bring down a physical interface"},
+"PIF.plug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"the PIF object to plug"}],doc:"Attempt to bring up a physical interface"},
+"PIF.pool_introduce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"device",ty:{ty:"string"},doc:""},{name:"network",ty:{ty:"ref",class:"network"},doc:""},{name:"host",ty:{ty:"ref",class:"host"},doc:""},{name:"MAC",ty:{ty:"string"},doc:""},{name:"MTU",ty:{ty:"int"},doc:""},{name:"VLAN",ty:{ty:"int"},doc:""},{name:"physical",ty:{ty:"bool"},doc:""},{name:"ip_configuration_mode",ty:{ty:"enum",name:"ip_configuration_mode",values:["None","DHCP","Static"]},doc:""},{name:"IP",ty:{ty:"string"},doc:""},{name:"netmask",ty:{ty:"string"},doc:""},{name:"gateway",ty:{ty:"string"},doc:""},{name:"DNS",ty:{ty:"string"},doc:""},{name:"bond_slave_of",ty:{ty:"ref",class:"Bond"},doc:""},{name:"VLAN_master_of",ty:{ty:"ref",class:"VLAN"},doc:""},{name:"management",ty:{ty:"bool"},doc:""},{name:"other_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:""},{name:"disallow_unplug",ty:{ty:"bool"},doc:""}],doc:"Create a new PIF record in the database only"},
+"PIF.db_introduce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"device",ty:{ty:"string"},doc:""},{name:"network",ty:{ty:"ref",class:"network"},doc:""},{name:"host",ty:{ty:"ref",class:"host"},doc:""},{name:"MAC",ty:{ty:"string"},doc:""},{name:"MTU",ty:{ty:"int"},doc:""},{name:"VLAN",ty:{ty:"int"},doc:""},{name:"physical",ty:{ty:"bool"},doc:""},{name:"ip_configuration_mode",ty:{ty:"enum",name:"ip_configuration_mode",values:["None","DHCP","Static"]},doc:""},{name:"IP",ty:{ty:"string"},doc:""},{name:"netmask",ty:{ty:"string"},doc:""},{name:"gateway",ty:{ty:"string"},doc:""},{name:"DNS",ty:{ty:"string"},doc:""},{name:"bond_slave_of",ty:{ty:"ref",class:"Bond"},doc:""},{name:"VLAN_master_of",ty:{ty:"ref",class:"VLAN"},doc:""},{name:"management",ty:{ty:"bool"},doc:""},{name:"other_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:""},{name:"disallow_unplug",ty:{ty:"bool"},doc:""}],doc:"Create a new PIF record in the database only"},
+"PIF.db_forget":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"The ref of the PIF whose database record should be destroyed"}],doc:"Destroy a PIF database record."},
+"PIF.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the PIFs known to the system."},
+"PIF.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the PIFs known to the system."},
+"PIF.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of PIF references to PIF records for all PIFs known to the system."},
+"PIF_metrics.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given PIF_metrics."},
+"PIF_metrics.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class PIF_metrics"},
+"PIF_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the PIF_metrics instances known to the system."},
+"PIF_metrics.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the PIF_metrics instance with the specified UUID."},
+"PIF_metrics.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"PIF_metrics"},doc:"All constructor arguments"}],doc:"Create a new PIF_metrics instance, and return its handle."},
+"PIF_metrics.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Destroy the specified PIF_metrics instance."},
+"PIF_metrics.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the uuid field of the given PIF_metrics."},
+"PIF_metrics.get_io_read_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the io/read_kbs field of the given PIF_metrics."},
+"PIF_metrics.get_io_write_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the io/write_kbs field of the given PIF_metrics."},
+"PIF_metrics.get_carrier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the carrier field of the given PIF_metrics."},
+"PIF_metrics.get_vendor_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the vendor_id field of the given PIF_metrics."},
+"PIF_metrics.get_vendor_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the vendor_name field of the given PIF_metrics."},
+"PIF_metrics.get_device_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the device_id field of the given PIF_metrics."},
+"PIF_metrics.get_device_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the device_name field of the given PIF_metrics."},
+"PIF_metrics.get_speed":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the speed field of the given PIF_metrics."},
+"PIF_metrics.get_duplex":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the duplex field of the given PIF_metrics."},
+"PIF_metrics.get_pci_bus_path":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the pci_bus_path field of the given PIF_metrics."},
+"PIF_metrics.get_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the last_updated field of the given PIF_metrics."},
+"PIF_metrics.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the other_config field of the given PIF_metrics."},
+"PIF_metrics.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given PIF_metrics."},
+"PIF_metrics.set_io_read_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the io/read_kbs field of the given PIF_metrics."},
+"PIF_metrics.set_io_write_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the io/write_kbs field of the given PIF_metrics."},
+"PIF_metrics.set_carrier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the carrier field of the given PIF_metrics."},
+"PIF_metrics.set_vendor_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the vendor_id field of the given PIF_metrics."},
+"PIF_metrics.set_vendor_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the vendor_name field of the given PIF_metrics."},
+"PIF_metrics.set_device_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the device_id field of the given PIF_metrics."},
+"PIF_metrics.set_device_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the device_name field of the given PIF_metrics."},
+"PIF_metrics.set_speed":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the speed field of the given PIF_metrics."},
+"PIF_metrics.set_duplex":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the duplex field of the given PIF_metrics."},
+"PIF_metrics.set_pci_bus_path":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the pci_bus_path field of the given PIF_metrics."},
+"PIF_metrics.set_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the last_updated field of the given PIF_metrics."},
+"PIF_metrics.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given PIF_metrics."},
+"PIF_metrics.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given PIF_metrics."},
+"PIF_metrics.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given PIF_metrics.  If the key is not in that Map, then do nothing."},
+"PIF_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the PIF_metrics instances known to the system."},
+"PIF_metrics.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the PIF_metrics instances known to the system."},
+"PIF_metrics.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of PIF_metrics references to PIF_metrics records for all PIF_metrics instances known to the system."},
+"Bond.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given Bond."},
+"Bond.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class Bond"},
+"Bond.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the Bonds known to the system."},
+"Bond.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the Bond instance with the specified UUID."},
+"Bond.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"Bond"},doc:"All constructor arguments"}],doc:"Create a new Bond instance, and return its handle."},
+"Bond.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"}],doc:"Destroy the specified Bond instance."},
+"Bond.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"}],doc:"Get the uuid field of the given Bond."},
+"Bond.get_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"}],doc:"Get the master field of the given Bond."},
+"Bond.get_slaves":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"}],doc:"Get the slaves field of the given Bond."},
+"Bond.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"}],doc:"Get the other_config field of the given Bond."},
+"Bond.get_primary_slave":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"}],doc:"Get the primary_slave field of the given Bond."},
+"Bond.get_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"}],doc:"Get the mode field of the given Bond."},
+"Bond.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given Bond."},
+"Bond.set_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PIF"},doc:"New value to set"}],doc:"Set the master field of the given Bond."},
+"Bond.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given Bond."},
+"Bond.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given Bond."},
+"Bond.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given Bond.  If the key is not in that Map, then do nothing."},
+"Bond.set_primary_slave":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PIF"},doc:"New value to set"}],doc:"Set the primary_slave field of the given Bond."},
+"Bond.set_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"bond_mode",values:["balance-slb","active-backup"]},doc:"New value to set"}],doc:"Set the mode field of the given Bond."},
+"Bond.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"network",ty:{ty:"ref",class:"network"},doc:"Network to add the bonded PIF to"},{name:"members",ty:{ty:"set",contents:{ty:"ref",class:"PIF"}},doc:"PIFs to add to this bond"},{name:"MAC",ty:{ty:"string"},doc:"The MAC address to use on the bond itself. If this parameter is the empty string then the bond will inherit its MAC address from the primary slave."},{name:"mode",ty:{ty:"enum",name:"bond_mode",values:["balance-slb","active-backup"]},doc:"Bonding mode to use for the new bond"}],doc:"Create an interface bond"},
+"Bond.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"Bond to destroy"}],doc:"Destroy an interface bond"},
+"Bond.set_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"The bond"},{name:"value",ty:{ty:"enum",name:"bond_mode",values:["balance-slb","active-backup"]},doc:"The new bond mode"}],doc:"Change the bond mode"},
+"Bond.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the Bonds known to the system."},
+"Bond.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the Bonds known to the system."},
+"Bond.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of Bond references to Bond records for all Bonds known to the system."},
+"VLAN.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VLAN."},
+"VLAN.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VLAN"},
+"VLAN.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VLANs known to the system."},
+"VLAN.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VLAN instance with the specified UUID."},
+"VLAN.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VLAN"},doc:"All constructor arguments"}],doc:"Create a new VLAN instance, and return its handle."},
+"VLAN.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"}],doc:"Destroy the specified VLAN instance."},
+"VLAN.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"}],doc:"Get the uuid field of the given VLAN."},
+"VLAN.get_tagged_PIF":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"}],doc:"Get the tagged_PIF field of the given VLAN."},
+"VLAN.get_untagged_PIF":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"}],doc:"Get the untagged_PIF field of the given VLAN."},
+"VLAN.get_tag":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"}],doc:"Get the tag field of the given VLAN."},
+"VLAN.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"}],doc:"Get the other_config field of the given VLAN."},
+"VLAN.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VLAN."},
+"VLAN.set_tagged_PIF":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PIF"},doc:"New value to set"}],doc:"Set the tagged_PIF field of the given VLAN."},
+"VLAN.set_untagged_PIF":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PIF"},doc:"New value to set"}],doc:"Set the untagged_PIF field of the given VLAN."},
+"VLAN.set_tag":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the tag field of the given VLAN."},
+"VLAN.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VLAN."},
+"VLAN.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VLAN."},
+"VLAN.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VLAN.  If the key is not in that Map, then do nothing."},
+"VLAN.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"tagged_PIF",ty:{ty:"ref",class:"PIF"},doc:"PIF which receives the tagged traffic"},{name:"tag",ty:{ty:"int"},doc:"VLAN tag to use"},{name:"network",ty:{ty:"ref",class:"network"},doc:"Network to receive the untagged traffic"}],doc:"Create a VLAN mux/demuxer"},
+"VLAN.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"VLAN mux/demuxer to destroy"}],doc:"Destroy a VLAN mux/demuxer"},
+"VLAN.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VLANs known to the system."},
+"VLAN.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VLANs known to the system."},
+"VLAN.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VLAN references to VLAN records for all VLANs known to the system."},
+"SM.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given SM."},
+"SM.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class SM"},
+"SM.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the SMs known to the system."},
+"SM.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the SM instance with the specified UUID."},
+"SM.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"SM"},doc:"All constructor arguments"}],doc:"Create a new SM instance, and return its handle."},
+"SM.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Destroy the specified SM instance."},
+"SM.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the SM instances with the given label."},
+"SM.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the uuid field of the given SM."},
+"SM.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the name/label field of the given SM."},
+"SM.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the name/description field of the given SM."},
+"SM.get_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the type field of the given SM."},
+"SM.get_vendor":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the vendor field of the given SM."},
+"SM.get_copyright":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the copyright field of the given SM."},
+"SM.get_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the version field of the given SM."},
+"SM.get_required_api_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the required_api_version field of the given SM."},
+"SM.get_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the configuration field of the given SM."},
+"SM.get_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the capabilities field of the given SM."},
+"SM.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the other_config field of the given SM."},
+"SM.get_driver_filename":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the driver_filename field of the given SM."},
+"SM.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given SM."},
+"SM.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given SM."},
+"SM.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given SM."},
+"SM.set_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the type field of the given SM."},
+"SM.set_vendor":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the vendor field of the given SM."},
+"SM.set_copyright":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the copyright field of the given SM."},
+"SM.set_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the version field of the given SM."},
+"SM.set_required_api_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the required_api_version field of the given SM."},
+"SM.set_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the configuration field of the given SM."},
+"SM.add_to_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the configuration field of the given SM."},
+"SM.remove_from_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the configuration field of the given SM.  If the key is not in that Map, then do nothing."},
+"SM.set_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the capabilities field of the given SM."},
+"SM.add_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the capabilities field of the given SM.  If the value is already in that Set, then do nothing."},
+"SM.remove_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the capabilities field of the given SM.  If the value is not in that Set, then do nothing."},
+"SM.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given SM."},
+"SM.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given SM."},
+"SM.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given SM.  If the key is not in that Map, then do nothing."},
+"SM.set_driver_filename":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the driver_filename field of the given SM."},
+"SM.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the SMs known to the system."},
+"SM.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the SMs known to the system."},
+"SM.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of SM references to SM records for all SMs known to the system."},
+"SR.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given SR."},
+"SR.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class SR"},
+"SR.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the SRs known to the system."},
+"SR.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the SR instance with the specified UUID."},
+"SR.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"SR"},doc:"All constructor arguments"}],doc:"Create a new SR instance, and return its handle."},
+"SR.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Destroy the specified SR instance."},
+"SR.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the SR instances with the given label."},
+"SR.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the uuid field of the given SR."},
+"SR.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the name/label field of the given SR."},
+"SR.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the name/description field of the given SR."},
+"SR.get_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the allowed_operations field of the given SR."},
+"SR.get_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the current_operations field of the given SR."},
+"SR.get_VDIs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the VDIs field of the given SR."},
+"SR.get_PBDs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the PBDs field of the given SR."},
+"SR.get_virtual_allocation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the virtual_allocation field of the given SR."},
+"SR.get_physical_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the physical_utilisation field of the given SR."},
+"SR.get_physical_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the physical_size field of the given SR."},
+"SR.get_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the type field of the given SR."},
+"SR.get_content_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the content_type field of the given SR."},
+"SR.get_shared":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the shared field of the given SR."},
+"SR.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the other_config field of the given SR."},
+"SR.get_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the tags field of the given SR."},
+"SR.get_default_vdi_visibility":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the default_vdi_visibility field of the given SR."},
+"SR.get_sm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the sm_config field of the given SR."},
+"SR.get_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the blobs field of the given SR."},
+"SR.get_local_cache_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the local_cache_enabled field of the given SR."},
+"SR.get_introduced_by":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the introduced_by field of the given SR."},
+"SR.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given SR."},
+"SR.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given SR."},
+"SR.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given SR."},
+"SR.set_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"storage_operations",values:["scan","destroy","forget","plug","unplug","update","vdi_create","vdi_introduce","vdi_destroy","vdi_resize","vdi_clone","vdi_snapshot"]}},doc:"New value to set"}],doc:"Set the allowed_operations field of the given SR."},
+"SR.add_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"storage_operations",values:["scan","destroy","forget","plug","unplug","update","vdi_create","vdi_introduce","vdi_destroy","vdi_resize","vdi_clone","vdi_snapshot"]},doc:"New value to add"}],doc:"Add the given value to the allowed_operations field of the given SR.  If the value is already in that Set, then do nothing."},
+"SR.remove_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"storage_operations",values:["scan","destroy","forget","plug","unplug","update","vdi_create","vdi_introduce","vdi_destroy","vdi_resize","vdi_clone","vdi_snapshot"]},doc:"Value to remove"}],doc:"Remove the given value from the allowed_operations field of the given SR.  If the value is not in that Set, then do nothing."},
+"SR.set_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"enum",name:"storage_operations",values:["scan","destroy","forget","plug","unplug","update","vdi_create","vdi_introduce","vdi_destroy","vdi_resize","vdi_clone","vdi_snapshot"]}},doc:"New value to set"}],doc:"Set the current_operations field of the given SR."},
+"SR.add_to_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"enum",name:"storage_operations",values:["scan","destroy","forget","plug","unplug","update","vdi_create","vdi_introduce","vdi_destroy","vdi_resize","vdi_clone","vdi_snapshot"]},doc:"Value to add"}],doc:"Add the given key-value pair to the current_operations field of the given SR."},
+"SR.remove_from_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the current_operations field of the given SR.  If the key is not in that Map, then do nothing."},
+"SR.set_virtual_allocation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the virtual_allocation field of the given SR."},
+"SR.set_physical_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the physical_utilisation field of the given SR."},
+"SR.set_physical_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the physical_size field of the given SR."},
+"SR.set_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the type field of the given SR."},
+"SR.set_content_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the content_type field of the given SR."},
+"SR.set_shared":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the shared field of the given SR."},
+"SR.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given SR."},
+"SR.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given SR."},
+"SR.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given SR.  If the key is not in that Map, then do nothing."},
+"SR.set_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the tags field of the given SR."},
+"SR.add_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the tags field of the given SR.  If the value is already in that Set, then do nothing."},
+"SR.remove_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the tags field of the given SR.  If the value is not in that Set, then do nothing."},
+"SR.set_default_vdi_visibility":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the default_vdi_visibility field of the given SR."},
+"SR.set_sm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the sm_config field of the given SR."},
+"SR.add_to_sm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the sm_config field of the given SR."},
+"SR.remove_from_sm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the sm_config field of the given SR.  If the key is not in that Map, then do nothing."},
+"SR.set_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"ref",class:"blob"}},doc:"New value to set"}],doc:"Set the blobs field of the given SR."},
+"SR.add_to_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"ref",class:"blob"},doc:"Value to add"}],doc:"Add the given key-value pair to the blobs field of the given SR."},
+"SR.remove_from_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the blobs field of the given SR.  If the key is not in that Map, then do nothing."},
+"SR.set_local_cache_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the local_cache_enabled field of the given SR."},
+"SR.set_introduced_by":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"DR_task"},doc:"New value to set"}],doc:"Set the introduced_by field of the given SR."},
+"SR.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to create/make the SR on"},{name:"device_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"The device config string that will be passed to backend SR driver"},{name:"physical_size",ty:{ty:"int"},doc:"The physical size of the new storage repository"},{name:"name_label",ty:{ty:"string"},doc:"The name of the new storage repository"},{name:"name_description",ty:{ty:"string"},doc:"The description of the new storage repository"},{name:"type",ty:{ty:"string"},doc:"The type of the SR; used to specify the SR backend driver to use"},{name:"content_type",ty:{ty:"string"},doc:"The type of the new SRs content, if required (e.g. ISOs)"},{name:"shared",ty:{ty:"bool"},doc:"True if the SR (is capable of) being shared by multiple hosts"},{name:"sm_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Storage backend specific configuration options"}],doc:"Create a new Storage Repository and introduce it into the managed system, creating both SR record and PBD record to attach it to current host (with specified device_config parameters)"},
+"SR.introduce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"The uuid assigned to the introduced SR"},{name:"name_label",ty:{ty:"string"},doc:"The name of the new storage repository"},{name:"name_description",ty:{ty:"string"},doc:"The description of the new storage repository"},{name:"type",ty:{ty:"string"},doc:"The type of the SR; used to specify the SR backend driver to use"},{name:"content_type",ty:{ty:"string"},doc:"The type of the new SRs content, if required (e.g. ISOs)"},{name:"shared",ty:{ty:"bool"},doc:"True if the SR (is capable of) being shared by multiple hosts"},{name:"sm_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Storage backend specific configuration options"}],doc:"Introduce a new Storage Repository into the managed system"},
+"SR.make":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to create/make the SR on"},{name:"device_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"The device config string that will be passed to backend SR driver"},{name:"physical_size",ty:{ty:"int"},doc:"The physical size of the new storage repository"},{name:"name_label",ty:{ty:"string"},doc:"The name of the new storage repository"},{name:"name_description",ty:{ty:"string"},doc:"The description of the new storage repository"},{name:"type",ty:{ty:"string"},doc:"The type of the SR; used to specify the SR backend driver to use"},{name:"content_type",ty:{ty:"string"},doc:"The type of the new SRs content, if required (e.g. ISOs)"},{name:"sm_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Storage backend specific configuration options"}],doc:"Create a new Storage Repository on disk. This call is deprecated: use SR.create instead."},
+"SR.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR to destroy"}],doc:"Destroy specified SR, removing SR-record from database and remove SR from disk. (In order to affect this operation the appropriate device_config is read from the specified SR's PBD on current host)"},
+"SR.forget":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR to destroy"}],doc:"Removing specified SR-record from database, without attempting to remove SR from disk"},
+"SR.update":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR whose fields should be refreshed"}],doc:"Refresh the fields on the SR object"},
+"SR.get_supported_types":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a set of all the SR types supported by the system"},
+"SR.scan":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR to scan"}],doc:"Refreshes the list of VDIs associated with an SR"},
+"SR.probe":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to create/make the SR on"},{name:"device_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"The device config string that will be passed to backend SR driver"},{name:"type",ty:{ty:"string"},doc:"The type of the SR; used to specify the SR backend driver to use"},{name:"sm_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Storage backend specific configuration options"}],doc:"Perform a backend-specific scan, using the given device_config.  If the device_config is complete, then this will return a list of the SRs present of this type on the device, if any.  If the device_config is partial, then a backend-specific scan will be performed, returning results that will guide the user in improving the device_config."},
+"SR.set_shared":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR"},{name:"value",ty:{ty:"bool"},doc:"True if the SR is shared"}],doc:"Sets the shared flag on the SR"},
+"SR.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR"},{name:"value",ty:{ty:"string"},doc:"The name label for the SR"}],doc:"Set the name label of the SR"},
+"SR.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR"},{name:"value",ty:{ty:"string"},doc:"The name description for the SR"}],doc:"Set the name description of the SR"},
+"SR.create_new_blob":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR"},{name:"name",ty:{ty:"string"},doc:"The name associated with the blob"},{name:"mime_type",ty:{ty:"string"},doc:"The mime type for the data. Empty string translates to application/octet-stream"}],doc:"Create a placeholder for a named binary blob of data that is associated with this SR"},
+"SR.set_physical_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"The SR to modify"},{name:"value",ty:{ty:"int"},doc:"The new value of the SR's physical_size"}],doc:"Sets the SR's physical_size field"},
+"SR.set_virtual_allocation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"The SR to modify"},{name:"value",ty:{ty:"int"},doc:"The new value of the SR's virtual_allocation"}],doc:"Sets the SR's virtual_allocation field"},
+"SR.set_physical_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"The SR to modify"},{name:"value",ty:{ty:"int"},doc:"The new value of the SR's physical utilisation"}],doc:"Sets the SR's physical_utilisation field"},
+"SR.assert_can_host_ha_statefile":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR to query"}],doc:"Returns successfully if the given SR can host an HA statefile. Otherwise returns an error to explain why not"},
+"SR.assert_supports_database_replication":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR to query"}],doc:"Returns successfully if the given SR supports database replication. Otherwise returns an error to explain why not."},
+"SR.enable_database_replication":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR to which metadata should be replicated"}],doc:""},
+"SR.disable_database_replication":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR to which metadata should be no longer replicated"}],doc:""},
+"SR.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the SRs known to the system."},
+"SR.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the SRs known to the system."},
+"SR.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of SR references to SR records for all SRs known to the system."},
+"VDI.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VDI."},
+"VDI.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VDI"},
+"VDI.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VDIs known to the system."},
+"VDI.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VDI instance with the specified UUID."},
+"VDI.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VDI"},doc:"All constructor arguments"}],doc:"Create a new VDI instance, and return its handle."},
+"VDI.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Destroy the specified VDI instance."},
+"VDI.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the VDI instances with the given label."},
+"VDI.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the uuid field of the given VDI."},
+"VDI.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the name/label field of the given VDI."},
+"VDI.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the name/description field of the given VDI."},
+"VDI.get_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the allowed_operations field of the given VDI."},
+"VDI.get_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the current_operations field of the given VDI."},
+"VDI.get_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the SR field of the given VDI."},
+"VDI.get_VBDs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the VBDs field of the given VDI."},
+"VDI.get_crash_dumps":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the crash_dumps field of the given VDI."},
+"VDI.get_virtual_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the virtual_size field of the given VDI."},
+"VDI.get_physical_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the physical_utilisation field of the given VDI."},
+"VDI.get_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the type field of the given VDI."},
+"VDI.get_sharable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the sharable field of the given VDI."},
+"VDI.get_read_only":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the read_only field of the given VDI."},
+"VDI.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the other_config field of the given VDI."},
+"VDI.get_storage_lock":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the storage_lock field of the given VDI."},
+"VDI.get_location":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the location field of the given VDI."},
+"VDI.get_managed":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the managed field of the given VDI."},
+"VDI.get_missing":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the missing field of the given VDI."},
+"VDI.get_parent":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the parent field of the given VDI."},
+"VDI.get_xenstore_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the xenstore_data field of the given VDI."},
+"VDI.get_sm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the sm_config field of the given VDI."},
+"VDI.get_is_a_snapshot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the is_a_snapshot field of the given VDI."},
+"VDI.get_snapshot_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the snapshot_of field of the given VDI."},
+"VDI.get_snapshots":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the snapshots field of the given VDI."},
+"VDI.get_snapshot_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the snapshot_time field of the given VDI."},
+"VDI.get_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the tags field of the given VDI."},
+"VDI.get_allow_caching":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the allow_caching field of the given VDI."},
+"VDI.get_on_boot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the on_boot field of the given VDI."},
+"VDI.get_metadata_of_pool":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the metadata_of_pool field of the given VDI."},
+"VDI.get_metadata_latest":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the metadata_latest field of the given VDI."},
+"VDI.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VDI."},
+"VDI.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given VDI."},
+"VDI.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given VDI."},
+"VDI.set_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"vdi_operations",values:["scan","clone","copy","resize","resize_online","snapshot","destroy","forget","update","force_unlock","generate_config","blocked"]}},doc:"New value to set"}],doc:"Set the allowed_operations field of the given VDI."},
+"VDI.add_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vdi_operations",values:["scan","clone","copy","resize","resize_online","snapshot","destroy","forget","update","force_unlock","generate_config","blocked"]},doc:"New value to add"}],doc:"Add the given value to the allowed_operations field of the given VDI.  If the value is already in that Set, then do nothing."},
+"VDI.remove_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vdi_operations",values:["scan","clone","copy","resize","resize_online","snapshot","destroy","forget","update","force_unlock","generate_config","blocked"]},doc:"Value to remove"}],doc:"Remove the given value from the allowed_operations field of the given VDI.  If the value is not in that Set, then do nothing."},
+"VDI.set_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"enum",name:"vdi_operations",values:["scan","clone","copy","resize","resize_online","snapshot","destroy","forget","update","force_unlock","generate_config","blocked"]}},doc:"New value to set"}],doc:"Set the current_operations field of the given VDI."},
+"VDI.add_to_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"enum",name:"vdi_operations",values:["scan","clone","copy","resize","resize_online","snapshot","destroy","forget","update","force_unlock","generate_config","blocked"]},doc:"Value to add"}],doc:"Add the given key-value pair to the current_operations field of the given VDI."},
+"VDI.remove_from_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the current_operations field of the given VDI.  If the key is not in that Map, then do nothing."},
+"VDI.set_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"SR"},doc:"New value to set"}],doc:"Set the SR field of the given VDI."},
+"VDI.set_virtual_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the virtual_size field of the given VDI."},
+"VDI.set_physical_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the physical_utilisation field of the given VDI."},
+"VDI.set_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vdi_type",values:["system","user","ephemeral","suspend","crashdump","ha_statefile","metadata","redo_log"]},doc:"New value to set"}],doc:"Set the type field of the given VDI."},
+"VDI.set_sharable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the sharable field of the given VDI."},
+"VDI.set_read_only":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the read_only field of the given VDI."},
+"VDI.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VDI."},
+"VDI.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VDI."},
+"VDI.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VDI.  If the key is not in that Map, then do nothing."},
+"VDI.set_storage_lock":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the storage_lock field of the given VDI."},
+"VDI.set_location":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the location field of the given VDI."},
+"VDI.set_managed":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the managed field of the given VDI."},
+"VDI.set_missing":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the missing field of the given VDI."},
+"VDI.set_parent":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VDI"},doc:"New value to set"}],doc:"Set the parent field of the given VDI."},
+"VDI.set_xenstore_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the xenstore_data field of the given VDI."},
+"VDI.add_to_xenstore_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the xenstore_data field of the given VDI."},
+"VDI.remove_from_xenstore_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the xenstore_data field of the given VDI.  If the key is not in that Map, then do nothing."},
+"VDI.set_sm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the sm_config field of the given VDI."},
+"VDI.add_to_sm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the sm_config field of the given VDI."},
+"VDI.remove_from_sm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the sm_config field of the given VDI.  If the key is not in that Map, then do nothing."},
+"VDI.set_is_a_snapshot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the is_a_snapshot field of the given VDI."},
+"VDI.set_snapshot_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VDI"},doc:"New value to set"}],doc:"Set the snapshot_of field of the given VDI."},
+"VDI.set_snapshot_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the snapshot_time field of the given VDI."},
+"VDI.set_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the tags field of the given VDI."},
+"VDI.add_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the tags field of the given VDI.  If the value is already in that Set, then do nothing."},
+"VDI.remove_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the tags field of the given VDI.  If the value is not in that Set, then do nothing."},
+"VDI.set_allow_caching":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the allow_caching field of the given VDI."},
+"VDI.set_on_boot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"on_boot",values:["reset","persist"]},doc:"New value to set"}],doc:"Set the on_boot field of the given VDI."},
+"VDI.set_metadata_of_pool":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"pool"},doc:"New value to set"}],doc:"Set the metadata_of_pool field of the given VDI."},
+"VDI.set_metadata_latest":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the metadata_latest field of the given VDI."},
+"VDI.snapshot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to snapshot"},{name:"driver_params",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Optional parameters that can be passed through to backend driver in order to specify storage-type-specific snapshot options"}],doc:"Take a read-only snapshot of the VDI, returning a reference to the snapshot. If any driver_params are specified then these are passed through to the storage-specific substrate driver that takes the snapshot. NB the snapshot lives in the same Storage Repository as its parent."},
+"VDI.clone":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to clone"},{name:"driver_params",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Optional parameters that are passed through to the backend driver in order to specify storage-type-specific clone options"}],doc:"Take an exact copy of the VDI and return a reference to the new disk. If any driver_params are specified then these are passed through to the storage-specific substrate driver that implements the clone operation. NB the clone lives in the same Storage Repository as its parent."},
+"VDI.resize":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to resize"},{name:"size",ty:{ty:"int"},doc:"The new size of the VDI"}],doc:"Resize the VDI."},
+"VDI.resize_online":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to resize"},{name:"size",ty:{ty:"int"},doc:"The new size of the VDI"}],doc:"Resize the VDI which may or may not be attached to running guests."},
+"VDI.introduce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"The uuid of the disk to introduce"},{name:"name_label",ty:{ty:"string"},doc:"The name of the disk record"},{name:"name_description",ty:{ty:"string"},doc:"The description of the disk record"},{name:"SR",ty:{ty:"ref",class:"SR"},doc:"The SR that the VDI is in"},{name:"type",ty:{ty:"enum",name:"vdi_type",values:["system","user","ephemeral","suspend","crashdump","ha_statefile","metadata","redo_log"]},doc:"The type of the VDI"},{name:"sharable",ty:{ty:"bool"},doc:"true if this disk may be shared"},{name:"read_only",ty:{ty:"bool"},doc:"true if this disk may ONLY be mounted read-only"},{name:"other_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"additional configuration"},{name:"location",ty:{ty:"string"},doc:"location information"},{name:"xenstore_data",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Data to insert into xenstore"},{name:"sm_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Storage-specific config"}],doc:"Create a new VDI record in the database only"},
+"VDI.pool_introduce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"The uuid of the disk to introduce"},{name:"name_label",ty:{ty:"string"},doc:"The name of the disk record"},{name:"name_description",ty:{ty:"string"},doc:"The description of the disk record"},{name:"SR",ty:{ty:"ref",class:"SR"},doc:"The SR that the VDI is in"},{name:"type",ty:{ty:"enum",name:"vdi_type",values:["system","user","ephemeral","suspend","crashdump","ha_statefile","metadata","redo_log"]},doc:"The type of the VDI"},{name:"sharable",ty:{ty:"bool"},doc:"true if this disk may be shared"},{name:"read_only",ty:{ty:"bool"},doc:"true if this disk may ONLY be mounted read-only"},{name:"other_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"additional configuration"},{name:"location",ty:{ty:"string"},doc:"location information"},{name:"xenstore_data",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Data to insert into xenstore"},{name:"sm_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Storage-specific config"}],doc:"Create a new VDI record in the database only"},
+"VDI.db_introduce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"The uuid of the disk to introduce"},{name:"name_label",ty:{ty:"string"},doc:"The name of the disk record"},{name:"name_description",ty:{ty:"string"},doc:"The description of the disk record"},{name:"SR",ty:{ty:"ref",class:"SR"},doc:"The SR that the VDI is in"},{name:"type",ty:{ty:"enum",name:"vdi_type",values:["system","user","ephemeral","suspend","crashdump","ha_statefile","metadata","redo_log"]},doc:"The type of the VDI"},{name:"sharable",ty:{ty:"bool"},doc:"true if this disk may be shared"},{name:"read_only",ty:{ty:"bool"},doc:"true if this disk may ONLY be mounted read-only"},{name:"other_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"additional configuration"},{name:"location",ty:{ty:"string"},doc:"location information"},{name:"xenstore_data",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Data to insert into xenstore"},{name:"sm_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Storage-specific config"}],doc:"Create a new VDI record in the database only"},
+"VDI.db_forget":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to forget about"}],doc:"Removes a VDI record from the database"},
+"VDI.update":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI whose stats (eg size) should be updated"}],doc:"Ask the storage backend to refresh the fields in the VDI object"},
+"VDI.copy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to copy"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The destination SR"}],doc:"Make a fresh VDI in the specified SR and copy the supplied VDI's data to the new disk"},
+"VDI.force_unlock":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to forcibly unlock"}],doc:"Steals the lock on this VDI and leaves it unlocked. This function is extremely dangerous. This call is deprecated."},
+"VDI.set_managed":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"bool"},doc:"The new value of the VDI's managed field"}],doc:"Sets the VDI's managed field"},
+"VDI.forget":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to forget about"}],doc:"Removes a VDI record from the database"},
+"VDI.set_sharable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"bool"},doc:"The new value of the VDI's sharable field"}],doc:"Sets the VDI's sharable field"},
+"VDI.set_read_only":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"bool"},doc:"The new value of the VDI's read_only field"}],doc:"Sets the VDI's read_only field"},
+"VDI.set_missing":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"bool"},doc:"The new value of the VDI's missing field"}],doc:"Sets the VDI's missing field"},
+"VDI.set_virtual_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"int"},doc:"The new value of the VDI's virtual size"}],doc:"Sets the VDI's virtual_size field"},
+"VDI.set_physical_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"int"},doc:"The new value of the VDI's physical utilisation"}],doc:"Sets the VDI's physical_utilisation field"},
+"VDI.set_is_a_snapshot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"bool"},doc:"The new value indicating whether this VDI is a snapshot"}],doc:"Sets whether this VDI is a snapshot"},
+"VDI.set_snapshot_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"ref",class:"VDI"},doc:"The VDI of which this VDI is a snapshot"}],doc:"Sets the VDI of which this VDI is a snapshot"},
+"VDI.set_snapshot_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"datetime"},doc:"The snapshot time of this VDI."}],doc:"Sets the snapshot time of this VDI."},
+"VDI.set_metadata_of_pool":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"ref",class:"pool"},doc:"The pool whose metadata is contained by this VDI"}],doc:"Records the pool whose metadata is contained by this VDI."},
+"VDI.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"string"},doc:"The name lable for the VDI"}],doc:"Set the name label of the VDI. This can only happen when then its SR is currently attached."},
+"VDI.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"string"},doc:"The name description for the VDI"}],doc:"Set the name description of the VDI. This can only happen when its SR is currently attached."},
+"VDI.generate_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host on which to generate the configuration"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to generate the configuration for"}],doc:"Internal function for debugging only"},
+"VDI.set_on_boot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"enum",name:"on_boot",values:["reset","persist"]},doc:"The value to set"}],doc:"Set the value of the on_boot parameter. This value can only be changed when the VDI is not attached to a running VM."},
+"VDI.set_allow_caching":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"bool"},doc:"The value to set"}],doc:"Set the value of the allow_caching parameter. This value can only be changed when the VDI is not attached to a running VM. The caching behaviour is only affected by this flag for VHD-based VDIs that have one parent and no child VHDs. Moreover, caching only takes place when the host running the VM containing this VDI has a nominated SR for local caching."},
+"VDI.open_database":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI which contains the database to open"}],doc:"Load the metadata found on the supplied VDI and return a session reference which can be used in XenAPI calls to query its contents."},
+"VDI.checksum":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to checksum"}],doc:"Internal function to calculate VDI checksum and return a string"},
+"VDI.read_database_pool_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The metadata VDI to look up in the cache."}],doc:"Check the VDI cache for the pool UUID of the database on this VDI."},
+"VDI.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VDIs known to the system."},
+"VDI.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VDIs known to the system."},
+"VDI.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VDI references to VDI records for all VDIs known to the system."},
+"VBD.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VBD."},
+"VBD.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VBD"},
+"VBD.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VBDs known to the system."},
+"VBD.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VBD instance with the specified UUID."},
+"VBD.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VBD"},doc:"All constructor arguments"}],doc:"Create a new VBD instance, and return its handle."},
+"VBD.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Destroy the specified VBD instance."},
+"VBD.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the uuid field of the given VBD."},
+"VBD.get_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the allowed_operations field of the given VBD."},
+"VBD.get_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the current_operations field of the given VBD."},
+"VBD.get_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the VM field of the given VBD."},
+"VBD.get_VDI":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the VDI field of the given VBD."},
+"VBD.get_device":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the device field of the given VBD."},
+"VBD.get_userdevice":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the userdevice field of the given VBD."},
+"VBD.get_bootable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the bootable field of the given VBD."},
+"VBD.get_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the mode field of the given VBD."},
+"VBD.get_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the type field of the given VBD."},
+"VBD.get_unpluggable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the unpluggable field of the given VBD."},
+"VBD.get_storage_lock":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the storage_lock field of the given VBD."},
+"VBD.get_empty":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the empty field of the given VBD."},
+"VBD.get_reserved":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the reserved field of the given VBD."},
+"VBD.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the other_config field of the given VBD."},
+"VBD.get_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the currently_attached field of the given VBD."},
+"VBD.get_status_code":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the status_code field of the given VBD."},
+"VBD.get_status_detail":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the status_detail field of the given VBD."},
+"VBD.get_runtime_properties":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the runtime_properties field of the given VBD."},
+"VBD.get_qos_algorithm_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the qos/algorithm_type field of the given VBD."},
+"VBD.get_qos_algorithm_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the qos/algorithm_params field of the given VBD."},
+"VBD.get_qos_supported_algorithms":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the qos/supported_algorithms field of the given VBD."},
+"VBD.get_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the metrics field of the given VBD."},
+"VBD.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VBD."},
+"VBD.set_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"vbd_operations",values:["attach","eject","insert","plug","unplug","unplug_force","pause","unpause"]}},doc:"New value to set"}],doc:"Set the allowed_operations field of the given VBD."},
+"VBD.add_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vbd_operations",values:["attach","eject","insert","plug","unplug","unplug_force","pause","unpause"]},doc:"New value to add"}],doc:"Add the given value to the allowed_operations field of the given VBD.  If the value is already in that Set, then do nothing."},
+"VBD.remove_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vbd_operations",values:["attach","eject","insert","plug","unplug","unplug_force","pause","unpause"]},doc:"Value to remove"}],doc:"Remove the given value from the allowed_operations field of the given VBD.  If the value is not in that Set, then do nothing."},
+"VBD.set_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"enum",name:"vbd_operations",values:["attach","eject","insert","plug","unplug","unplug_force","pause","unpause"]}},doc:"New value to set"}],doc:"Set the current_operations field of the given VBD."},
+"VBD.add_to_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"enum",name:"vbd_operations",values:["attach","eject","insert","plug","unplug","unplug_force","pause","unpause"]},doc:"Value to add"}],doc:"Add the given key-value pair to the current_operations field of the given VBD."},
+"VBD.remove_from_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the current_operations field of the given VBD.  If the key is not in that Map, then do nothing."},
+"VBD.set_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to set"}],doc:"Set the VM field of the given VBD."},
+"VBD.set_VDI":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VDI"},doc:"New value to set"}],doc:"Set the VDI field of the given VBD."},
+"VBD.set_device":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the device field of the given VBD."},
+"VBD.set_userdevice":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the userdevice field of the given VBD."},
+"VBD.set_bootable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the bootable field of the given VBD."},
+"VBD.set_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vbd_mode",values:["RO","RW"]},doc:"New value to set"}],doc:"Set the mode field of the given VBD."},
+"VBD.set_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vbd_type",values:["CD","Disk"]},doc:"New value to set"}],doc:"Set the type field of the given VBD."},
+"VBD.set_unpluggable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the unpluggable field of the given VBD."},
+"VBD.set_storage_lock":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the storage_lock field of the given VBD."},
+"VBD.set_empty":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the empty field of the given VBD."},
+"VBD.set_reserved":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the reserved field of the given VBD."},
+"VBD.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VBD."},
+"VBD.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VBD."},
+"VBD.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VBD.  If the key is not in that Map, then do nothing."},
+"VBD.set_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the currently_attached field of the given VBD."},
+"VBD.set_status_code":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the status_code field of the given VBD."},
+"VBD.set_status_detail":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the status_detail field of the given VBD."},
+"VBD.set_runtime_properties":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the runtime_properties field of the given VBD."},
+"VBD.add_to_runtime_properties":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the runtime_properties field of the given VBD."},
+"VBD.remove_from_runtime_properties":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the runtime_properties field of the given VBD.  If the key is not in that Map, then do nothing."},
+"VBD.set_qos_algorithm_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the qos/algorithm_type field of the given VBD."},
+"VBD.set_qos_algorithm_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the qos/algorithm_params field of the given VBD."},
+"VBD.add_to_qos_algorithm_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the qos/algorithm_params field of the given VBD."},
+"VBD.remove_from_qos_algorithm_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the qos/algorithm_params field of the given VBD.  If the key is not in that Map, then do nothing."},
+"VBD.set_qos_supported_algorithms":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the qos/supported_algorithms field of the given VBD."},
+"VBD.add_qos_supported_algorithms":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the qos/supported_algorithms field of the given VBD.  If the value is already in that Set, then do nothing."},
+"VBD.remove_qos_supported_algorithms":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the qos/supported_algorithms field of the given VBD.  If the value is not in that Set, then do nothing."},
+"VBD.set_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VBD_metrics"},doc:"New value to set"}],doc:"Set the metrics field of the given VBD."},
+"VBD.eject":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vbd",ty:{ty:"ref",class:"VBD"},doc:"The vbd representing the CDROM-like device"}],doc:"Remove the media from the device and leave it empty"},
+"VBD.insert":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vbd",ty:{ty:"ref",class:"VBD"},doc:"The vbd representing the CDROM-like device"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The new VDI to 'insert'"}],doc:"Insert new media into the device"},
+"VBD.plug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"The VBD to hotplug"}],doc:"Hotplug the specified VBD, dynamically attaching it to the running VM"},
+"VBD.unplug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"The VBD to hot-unplug"}],doc:"Hot-unplug the specified VBD, dynamically unattaching it from the running VM"},
+"VBD.unplug_force":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"The VBD to forcibly unplug"}],doc:"Forcibly unplug the specified VBD"},
+"VBD.unplug_force_no_safety_check":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"The VBD to forcibly unplug (no safety checks are applied to test if the device supports surprise-remove)"}],doc:"Forcibly unplug the specified VBD without any safety checks. This is an extremely dangerous operation in the general case that can cause guest crashes and data corruption; it should be called with extreme caution."},
+"VBD.assert_attachable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"The VBD to query"}],doc:"Throws an error if this VBD could not be attached to this VM if the VM were running. Intended for debugging."},
+"VBD.pause":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"The VBD to pause"}],doc:"Stop the backend device servicing requests so that an operation can be performed on the disk (eg live resize, snapshot)"},
+"VBD.unpause":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"The VBD to unpause"},{name:"token",ty:{ty:"string"},doc:"The token from VBD.pause"}],doc:"Restart the backend device after it was paused while an operation was performed on the disk (eg live resize, snapshot)"},
+"VBD.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VBDs known to the system."},
+"VBD.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VBDs known to the system."},
+"VBD.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VBD references to VBD records for all VBDs known to the system."},
+"VBD_metrics.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VBD_metrics."},
+"VBD_metrics.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VBD_metrics"},
+"VBD_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VBD_metrics instances known to the system."},
+"VBD_metrics.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VBD_metrics instance with the specified UUID."},
+"VBD_metrics.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VBD_metrics"},doc:"All constructor arguments"}],doc:"Create a new VBD_metrics instance, and return its handle."},
+"VBD_metrics.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"}],doc:"Destroy the specified VBD_metrics instance."},
+"VBD_metrics.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"}],doc:"Get the uuid field of the given VBD_metrics."},
+"VBD_metrics.get_io_read_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"}],doc:"Get the io/read_kbs field of the given VBD_metrics."},
+"VBD_metrics.get_io_write_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"}],doc:"Get the io/write_kbs field of the given VBD_metrics."},
+"VBD_metrics.get_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"}],doc:"Get the last_updated field of the given VBD_metrics."},
+"VBD_metrics.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"}],doc:"Get the other_config field of the given VBD_metrics."},
+"VBD_metrics.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VBD_metrics."},
+"VBD_metrics.set_io_read_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the io/read_kbs field of the given VBD_metrics."},
+"VBD_metrics.set_io_write_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the io/write_kbs field of the given VBD_metrics."},
+"VBD_metrics.set_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the last_updated field of the given VBD_metrics."},
+"VBD_metrics.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VBD_metrics."},
+"VBD_metrics.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VBD_metrics."},
+"VBD_metrics.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VBD_metrics.  If the key is not in that Map, then do nothing."},
+"VBD_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VBD_metrics instances known to the system."},
+"VBD_metrics.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VBD_metrics instances known to the system."},
+"VBD_metrics.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VBD_metrics references to VBD_metrics records for all VBD_metrics instances known to the system."},
+"PBD.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given PBD."},
+"PBD.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class PBD"},
+"PBD.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the PBDs known to the system."},
+"PBD.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the PBD instance with the specified UUID."},
+"PBD.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"PBD"},doc:"All constructor arguments"}],doc:"Create a new PBD instance, and return its handle."},
+"PBD.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"Destroy the specified PBD instance."},
+"PBD.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"Get the uuid field of the given PBD."},
+"PBD.get_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"Get the host field of the given PBD."},
+"PBD.get_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"Get the SR field of the given PBD."},
+"PBD.get_device_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"Get the device_config field of the given PBD."},
+"PBD.get_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"Get the currently_attached field of the given PBD."},
+"PBD.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"Get the other_config field of the given PBD."},
+"PBD.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given PBD."},
+"PBD.set_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the host field of the given PBD."},
+"PBD.set_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"SR"},doc:"New value to set"}],doc:"Set the SR field of the given PBD."},
+"PBD.set_device_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the device_config field of the given PBD."},
+"PBD.add_to_device_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the device_config field of the given PBD."},
+"PBD.remove_from_device_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the device_config field of the given PBD.  If the key is not in that Map, then do nothing."},
+"PBD.set_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the currently_attached field of the given PBD."},
+"PBD.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given PBD."},
+"PBD.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given PBD."},
+"PBD.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given PBD.  If the key is not in that Map, then do nothing."},
+"PBD.plug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"The PBD to activate"}],doc:"Activate the specified PBD, causing the referenced SR to be attached and scanned"},
+"PBD.unplug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"The PBD to deactivate"}],doc:"Deactivate the specified PBD, causing the referenced SR to be detached and nolonger scanned"},
+"PBD.set_device_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"The PBD to modify"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"The new value of the PBD's device_config"}],doc:"Sets the PBD's device_config field"},
+"PBD.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the PBDs known to the system."},
+"PBD.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the PBDs known to the system."},
+"PBD.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of PBD references to PBD records for all PBDs known to the system."},
+"crashdump.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given crashdump."},
+"crashdump.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class crashdump"},
+"crashdump.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the crashdumps known to the system."},
+"crashdump.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the crashdump instance with the specified UUID."},
+"crashdump.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"crashdump"},doc:"All constructor arguments"}],doc:"Create a new crashdump instance, and return its handle."},
+"crashdump.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"}],doc:"Destroy the specified crashdump instance."},
+"crashdump.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"}],doc:"Get the uuid field of the given crashdump."},
+"crashdump.get_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"}],doc:"Get the VM field of the given crashdump."},
+"crashdump.get_VDI":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"}],doc:"Get the VDI field of the given crashdump."},
+"crashdump.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"}],doc:"Get the other_config field of the given crashdump."},
+"crashdump.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given crashdump."},
+"crashdump.set_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to set"}],doc:"Set the VM field of the given crashdump."},
+"crashdump.set_VDI":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VDI"},doc:"New value to set"}],doc:"Set the VDI field of the given crashdump."},
+"crashdump.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given crashdump."},
+"crashdump.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given crashdump."},
+"crashdump.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given crashdump.  If the key is not in that Map, then do nothing."},
+"crashdump.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"The crashdump to destroy"}],doc:"Destroy the specified crashdump"},
+"crashdump.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the crashdumps known to the system."},
+"crashdump.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the crashdumps known to the system."},
+"crashdump.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of crashdump references to crashdump records for all crashdumps known to the system."},
+"VTPM.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VTPM."},
+"VTPM.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VTPM"},
+"VTPM.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VTPMs known to the system."},
+"VTPM.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VTPM instance with the specified UUID."},
+"VTPM.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VTPM"},doc:"All constructor arguments"}],doc:"Create a new VTPM instance, and return its handle."},
+"VTPM.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"}],doc:"Destroy the specified VTPM instance."},
+"VTPM.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"}],doc:"Get the uuid field of the given VTPM."},
+"VTPM.get_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"}],doc:"Get the VM field of the given VTPM."},
+"VTPM.get_backend":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"}],doc:"Get the backend field of the given VTPM."},
+"VTPM.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VTPM."},
+"VTPM.set_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to set"}],doc:"Set the VM field of the given VTPM."},
+"VTPM.set_backend":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to set"}],doc:"Set the backend field of the given VTPM."},
+"console.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given console."},
+"console.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class console"},
+"console.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the consoles known to the system."},
+"console.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the console instance with the specified UUID."},
+"console.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"console"},doc:"All constructor arguments"}],doc:"Create a new console instance, and return its handle."},
+"console.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"Destroy the specified console instance."},
+"console.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"Get the uuid field of the given console."},
+"console.get_protocol":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"Get the protocol field of the given console."},
+"console.get_location":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"Get the location field of the given console."},
+"console.get_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"Get the VM field of the given console."},
+"console.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"Get the other_config field of the given console."},
+"console.get_port":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"Get the port field of the given console."},
+"console.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given console."},
+"console.set_protocol":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"console_protocol",values:["vt100","rfb","rdp"]},doc:"New value to set"}],doc:"Set the protocol field of the given console."},
+"console.set_location":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the location field of the given console."},
+"console.set_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to set"}],doc:"Set the VM field of the given console."},
+"console.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given console."},
+"console.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given console."},
+"console.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given console.  If the key is not in that Map, then do nothing."},
+"console.set_port":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the port field of the given console."},
+"console.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the consoles known to the system."},
+"console.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the consoles known to the system."},
+"console.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of console references to console records for all consoles known to the system."},
+"user.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given user."},
+"user.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class user"},
+"user.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the users known to the system."},
+"user.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the user instance with the specified UUID."},
+"user.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"user"},doc:"All constructor arguments"}],doc:"Create a new user instance, and return its handle."},
+"user.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"}],doc:"Destroy the specified user instance."},
+"user.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"}],doc:"Get the uuid field of the given user."},
+"user.get_short_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"}],doc:"Get the short_name field of the given user."},
+"user.get_fullname":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"}],doc:"Get the fullname field of the given user."},
+"user.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"}],doc:"Get the other_config field of the given user."},
+"user.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given user."},
+"user.set_short_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the short_name field of the given user."},
+"user.set_fullname":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the fullname field of the given user."},
+"user.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given user."},
+"user.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given user."},
+"user.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given user.  If the key is not in that Map, then do nothing."},
+"blob.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given blob."},
+"blob.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class blob"},
+"blob.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the blobs known to the system."},
+"blob.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the blob instance with the specified UUID."},
+"blob.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"blob"},doc:"All constructor arguments"}],doc:"Create a new blob instance, and return its handle."},
+"blob.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"Destroy the specified blob instance."},
+"blob.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the blob instances with the given label."},
+"blob.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"Get the uuid field of the given blob."},
+"blob.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"Get the name/label field of the given blob."},
+"blob.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"Get the name/description field of the given blob."},
+"blob.get_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"Get the size field of the given blob."},
+"blob.get_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"Get the last_updated field of the given blob."},
+"blob.get_mime_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"Get the mime_type field of the given blob."},
+"blob.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given blob."},
+"blob.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given blob."},
+"blob.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given blob."},
+"blob.set_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the size field of the given blob."},
+"blob.set_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the last_updated field of the given blob."},
+"blob.set_mime_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the mime_type field of the given blob."},
+"blob.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"mime_type",ty:{ty:"string"},doc:"The mime-type of the blob. Defaults to 'application/octet-stream' if the empty string is supplied"}],doc:"Create a placeholder for a binary blob"},
+"blob.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"The reference of the blob to destroy"}],doc:""},
+"blob.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the blobs known to the system."},
+"blob.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the blobs known to the system."},
+"blob.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of blob references to blob records for all blobs known to the system."},
+"message.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"name",ty:{ty:"string"},doc:"The name of the message"},{name:"priority",ty:{ty:"int"},doc:"The priority of the message"},{name:"cls",ty:{ty:"enum",name:"cls",values:["VM","Host","SR","Pool","VMPP"]},doc:"The class of object this message is associated with"},{name:"obj_uuid",ty:{ty:"string"},doc:"The uuid of the object this message is associated with"},{name:"body",ty:{ty:"string"},doc:"The body of the message"}],doc:""},
+"message.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"message"},doc:"The reference of the message to destroy"}],doc:""},
+"message.get":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"cls",ty:{ty:"enum",name:"cls",values:["VM","Host","SR","Pool","VMPP"]},doc:"The class of object"},{name:"obj_uuid",ty:{ty:"string"},doc:"The uuid of the object"},{name:"since",ty:{ty:"datetime"},doc:"The cutoff time"}],doc:""},
+"message.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:""},
+"message.get_since":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"since",ty:{ty:"datetime"},doc:"The cutoff time"}],doc:""},
+"message.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"message"},doc:"The reference to the message"}],doc:""},
+"message.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"The uuid of the message"}],doc:""},
+"message.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:""},
+"message.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"The expression to match (not currently used)"}],doc:""},
+"secret.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"secret"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given secret."},
+"secret.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"secret"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class secret"},
+"secret.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the secrets known to the system."},
+"secret.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the secret instance with the specified UUID."},
+"secret.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"secret"},doc:"All constructor arguments"}],doc:"Create a new secret instance, and return its handle."},
+"secret.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"secret"},doc:"reference to the object"}],doc:"Destroy the specified secret instance."},
+"secret.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"secret"},doc:"reference to the object"}],doc:"Get the uuid field of the given secret."},
+"secret.get_value":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"secret"},doc:"reference to the object"}],doc:"Get the value field of the given secret."},
+"secret.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"secret"},doc:"reference to the object"}],doc:"Get the other_config field of the given secret."},
+"secret.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"secret"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given secret."},
+"secret.set_value":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"secret"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the value field of the given secret."},
+"secret.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"secret"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given secret."},
+"secret.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"secret"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given secret."},
+"secret.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"secret"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given secret.  If the key is not in that Map, then do nothing."},
+"secret.introduce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:""},{name:"value",ty:{ty:"string"},doc:""},{name:"other_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:""}],doc:""},
+"secret.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the secrets known to the system."},
+"secret.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the secrets known to the system."},
+"secret.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of secret references to secret records for all secrets known to the system."},
+"tunnel.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given tunnel."},
+"tunnel.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class tunnel"},
+"tunnel.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the tunnels known to the system."},
+"tunnel.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the tunnel instance with the specified UUID."},
+"tunnel.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"tunnel"},doc:"All constructor arguments"}],doc:"Create a new tunnel instance, and return its handle."},
+"tunnel.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"}],doc:"Destroy the specified tunnel instance."},
+"tunnel.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"}],doc:"Get the uuid field of the given tunnel."},
+"tunnel.get_access_PIF":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"}],doc:"Get the access_PIF field of the given tunnel."},
+"tunnel.get_transport_PIF":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"}],doc:"Get the transport_PIF field of the given tunnel."},
+"tunnel.get_status":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"}],doc:"Get the status field of the given tunnel."},
+"tunnel.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"}],doc:"Get the other_config field of the given tunnel."},
+"tunnel.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given tunnel."},
+"tunnel.set_access_PIF":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PIF"},doc:"New value to set"}],doc:"Set the access_PIF field of the given tunnel."},
+"tunnel.set_transport_PIF":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PIF"},doc:"New value to set"}],doc:"Set the transport_PIF field of the given tunnel."},
+"tunnel.set_status":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the status field of the given tunnel."},
+"tunnel.add_to_status":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the status field of the given tunnel."},
+"tunnel.remove_from_status":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the status field of the given tunnel.  If the key is not in that Map, then do nothing."},
+"tunnel.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given tunnel."},
+"tunnel.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given tunnel."},
+"tunnel.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given tunnel.  If the key is not in that Map, then do nothing."},
+"tunnel.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"transport_PIF",ty:{ty:"ref",class:"PIF"},doc:"PIF which receives the tagged traffic"},{name:"network",ty:{ty:"ref",class:"network"},doc:"Network to receive the tunnelled traffic"}],doc:"Create a tunnel"},
+"tunnel.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"tunnel to destroy"}],doc:"Destroy a tunnel"},
+"tunnel.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the tunnels known to the system."},
+"tunnel.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the tunnels known to the system."},
+"tunnel.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of tunnel references to tunnel records for all tunnels known to the system."},
+"PCI.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given PCI."},
+"PCI.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class PCI"},
+"PCI.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the PCIs known to the system."},
+"PCI.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the PCI instance with the specified UUID."},
+"PCI.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"PCI"},doc:"All constructor arguments"}],doc:"Create a new PCI instance, and return its handle."},
+"PCI.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Destroy the specified PCI instance."},
+"PCI.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get the uuid field of the given PCI."},
+"PCI.get_class_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get the class_id field of the given PCI."},
+"PCI.get_class_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get the class_name field of the given PCI."},
+"PCI.get_vendor_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get the vendor_id field of the given PCI."},
+"PCI.get_vendor_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get the vendor_name field of the given PCI."},
+"PCI.get_device_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get the device_id field of the given PCI."},
+"PCI.get_device_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get the device_name field of the given PCI."},
+"PCI.get_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get the host field of the given PCI."},
+"PCI.get_pci_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get the pci_id field of the given PCI."},
+"PCI.get_functions":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get the functions field of the given PCI."},
+"PCI.get_attached_VMs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get the attached_VMs field of the given PCI."},
+"PCI.get_dependencies":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get the dependencies field of the given PCI."},
+"PCI.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get the other_config field of the given PCI."},
+"PCI.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given PCI."},
+"PCI.set_class_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the class_id field of the given PCI."},
+"PCI.set_class_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the class_name field of the given PCI."},
+"PCI.set_vendor_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the vendor_id field of the given PCI."},
+"PCI.set_vendor_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the vendor_name field of the given PCI."},
+"PCI.set_device_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the device_id field of the given PCI."},
+"PCI.set_device_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the device_name field of the given PCI."},
+"PCI.set_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the host field of the given PCI."},
+"PCI.set_pci_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the pci_id field of the given PCI."},
+"PCI.set_functions":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the functions field of the given PCI."},
+"PCI.set_attached_VMs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"ref",class:"VM"}},doc:"New value to set"}],doc:"Set the attached_VMs field of the given PCI."},
+"PCI.add_attached_VMs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to add"}],doc:"Add the given value to the attached_VMs field of the given PCI.  If the value is already in that Set, then do nothing."},
+"PCI.remove_attached_VMs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"Value to remove"}],doc:"Remove the given value from the attached_VMs field of the given PCI.  If the value is not in that Set, then do nothing."},
+"PCI.set_dependencies":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"ref",class:"PCI"}},doc:"New value to set"}],doc:"Set the dependencies field of the given PCI."},
+"PCI.add_dependencies":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PCI"},doc:"New value to add"}],doc:"Add the given value to the dependencies field of the given PCI.  If the value is already in that Set, then do nothing."},
+"PCI.remove_dependencies":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PCI"},doc:"Value to remove"}],doc:"Remove the given value from the dependencies field of the given PCI.  If the value is not in that Set, then do nothing."},
+"PCI.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given PCI."},
+"PCI.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given PCI."},
+"PCI.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given PCI.  If the key is not in that Map, then do nothing."},
+"PCI.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the PCIs known to the system."},
+"PCI.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the PCIs known to the system."},
+"PCI.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of PCI references to PCI records for all PCIs known to the system."},
+"PGPU.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given PGPU."},
+"PGPU.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class PGPU"},
+"PGPU.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the PGPUs known to the system."},
+"PGPU.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the PGPU instance with the specified UUID."},
+"PGPU.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"PGPU"},doc:"All constructor arguments"}],doc:"Create a new PGPU instance, and return its handle."},
+"PGPU.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"}],doc:"Destroy the specified PGPU instance."},
+"PGPU.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"}],doc:"Get the uuid field of the given PGPU."},
+"PGPU.get_PCI":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"}],doc:"Get the PCI field of the given PGPU."},
+"PGPU.get_GPU_group":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"}],doc:"Get the GPU_group field of the given PGPU."},
+"PGPU.get_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"}],doc:"Get the host field of the given PGPU."},
+"PGPU.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"}],doc:"Get the other_config field of the given PGPU."},
+"PGPU.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given PGPU."},
+"PGPU.set_PCI":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PCI"},doc:"New value to set"}],doc:"Set the PCI field of the given PGPU."},
+"PGPU.set_GPU_group":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"GPU_group"},doc:"New value to set"}],doc:"Set the GPU_group field of the given PGPU."},
+"PGPU.set_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the host field of the given PGPU."},
+"PGPU.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given PGPU."},
+"PGPU.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given PGPU."},
+"PGPU.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given PGPU.  If the key is not in that Map, then do nothing."},
+"PGPU.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the PGPUs known to the system."},
+"PGPU.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the PGPUs known to the system."},
+"PGPU.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of PGPU references to PGPU records for all PGPUs known to the system."},
+"GPU_group.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given GPU_group."},
+"GPU_group.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class GPU_group"},
+"GPU_group.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the GPU_groups known to the system."},
+"GPU_group.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the GPU_group instance with the specified UUID."},
+"GPU_group.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"GPU_group"},doc:"All constructor arguments"}],doc:"Create a new GPU_group instance, and return its handle."},
+"GPU_group.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"}],doc:"Destroy the specified GPU_group instance."},
+"GPU_group.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the GPU_group instances with the given label."},
+"GPU_group.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"}],doc:"Get the uuid field of the given GPU_group."},
+"GPU_group.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"}],doc:"Get the name/label field of the given GPU_group."},
+"GPU_group.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"}],doc:"Get the name/description field of the given GPU_group."},
+"GPU_group.get_PGPUs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"}],doc:"Get the PGPUs field of the given GPU_group."},
+"GPU_group.get_VGPUs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"}],doc:"Get the VGPUs field of the given GPU_group."},
+"GPU_group.get_GPU_types":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"}],doc:"Get the GPU_types field of the given GPU_group."},
+"GPU_group.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"}],doc:"Get the other_config field of the given GPU_group."},
+"GPU_group.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given GPU_group."},
+"GPU_group.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given GPU_group."},
+"GPU_group.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given GPU_group."},
+"GPU_group.set_GPU_types":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the GPU_types field of the given GPU_group."},
+"GPU_group.add_GPU_types":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the GPU_types field of the given GPU_group.  If the value is already in that Set, then do nothing."},
+"GPU_group.remove_GPU_types":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the GPU_types field of the given GPU_group.  If the value is not in that Set, then do nothing."},
+"GPU_group.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given GPU_group."},
+"GPU_group.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given GPU_group."},
+"GPU_group.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given GPU_group.  If the key is not in that Map, then do nothing."},
+"GPU_group.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"name_label",ty:{ty:"string"},doc:""},{name:"name_description",ty:{ty:"string"},doc:""},{name:"other_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:""}],doc:""},
+"GPU_group.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"The vGPU to destroy"}],doc:""},
+"GPU_group.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the GPU_groups known to the system."},
+"GPU_group.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the GPU_groups known to the system."},
+"GPU_group.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of GPU_group references to GPU_group records for all GPU_groups known to the system."},
+"VGPU.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VGPU."},
+"VGPU.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VGPU"},
+"VGPU.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VGPUs known to the system."},
+"VGPU.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VGPU instance with the specified UUID."},
+"VGPU.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VGPU"},doc:"All constructor arguments"}],doc:"Create a new VGPU instance, and return its handle."},
+"VGPU.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"}],doc:"Destroy the specified VGPU instance."},
+"VGPU.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"}],doc:"Get the uuid field of the given VGPU."},
+"VGPU.get_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"}],doc:"Get the VM field of the given VGPU."},
+"VGPU.get_GPU_group":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"}],doc:"Get the GPU_group field of the given VGPU."},
+"VGPU.get_device":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"}],doc:"Get the device field of the given VGPU."},
+"VGPU.get_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"}],doc:"Get the currently_attached field of the given VGPU."},
+"VGPU.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"}],doc:"Get the other_config field of the given VGPU."},
+"VGPU.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VGPU."},
+"VGPU.set_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to set"}],doc:"Set the VM field of the given VGPU."},
+"VGPU.set_GPU_group":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"GPU_group"},doc:"New value to set"}],doc:"Set the GPU_group field of the given VGPU."},
+"VGPU.set_device":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the device field of the given VGPU."},
+"VGPU.set_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the currently_attached field of the given VGPU."},
+"VGPU.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VGPU."},
+"VGPU.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VGPU."},
+"VGPU.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VGPU.  If the key is not in that Map, then do nothing."},
+"VGPU.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"VM",ty:{ty:"ref",class:"VM"},doc:""},{name:"GPU_group",ty:{ty:"ref",class:"GPU_group"},doc:""},{name:"device",ty:{ty:"string"},doc:""},{name:"other_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:""}],doc:""},
+"VGPU.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"The vGPU to destroy"}],doc:""},
+"VGPU.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VGPUs known to the system."},
+"VGPU.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VGPUs known to the system."},
+"VGPU.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VGPU references to VGPU records for all VGPUs known to the system."}};
\ No newline at end of file
--- /dev/null
+++ xen-api-0.1/ocaml/client_records/record_util.annot
@@ -0,0 +1,6239 @@
+"record_util.ml" 20 659 663 "record_util.ml" 20 659 684
+type(
+  [< `Halted | `Migrating | `Paused | `Running | `ShuttingDown | `Suspended ] ->
+  string
+)
+ident(
+  def power_state_to_string "record_util.ml" 29 884 884 --
+)
+"record_util.ml" 20 659 685 "record_util.ml" 20 659 690
+type(
+  [< `Halted | `Migrating | `Paused | `Running | `ShuttingDown | `Suspended ]
+  as 'a
+)
+ident(
+  def state "record_util.ml" 21 693 695 "record_util.ml" 27 853 882
+)
+"record_util.ml" 21 693 701 "record_util.ml" 21 693 706
+type(
+  'a
+)
+ident(
+  int_ref state "record_util.ml" 20 659 685 "record_util.ml" 20 659 690
+)
+"record_util.ml" 22 712 716 "record_util.ml" 22 712 723
+type(
+  'a
+)
+"record_util.ml" 22 712 727 "record_util.ml" 22 712 735
+type(
+  string
+)
+"record_util.ml" 23 736 740 "record_util.ml" 23 736 747
+type(
+  'a
+)
+"record_util.ml" 23 736 751 "record_util.ml" 23 736 759
+type(
+  string
+)
+"record_util.ml" 24 760 764 "record_util.ml" 24 760 772
+type(
+  'a
+)
+"record_util.ml" 24 760 776 "record_util.ml" 24 760 785
+type(
+  string
+)
+"record_util.ml" 25 786 790 "record_util.ml" 25 786 800
+type(
+  'a
+)
+"record_util.ml" 25 786 804 "record_util.ml" 25 786 815
+type(
+  string
+)
+"record_util.ml" 26 816 820 "record_util.ml" 26 816 833
+type(
+  'a
+)
+"record_util.ml" 26 816 837 "record_util.ml" 26 816 852
+type(
+  string
+)
+"record_util.ml" 27 853 857 "record_util.ml" 27 853 867
+type(
+  'a
+)
+"record_util.ml" 27 853 871 "record_util.ml" 27 853 882
+type(
+  string
+)
+"record_util.ml" 21 693 695 "record_util.ml" 27 853 882
+type(
+  string
+)
+"record_util.ml" 29 884 888 "record_util.ml" 29 884 906
+type(
+  ([> `assert_operation_valid
+    | `awaiting_memory_live
+    | `changing_VCPUs_live
+    | `changing_dynamic_range
+    | `changing_memory_live
+    | `changing_shadow_memory_live
+    | `changing_static_range
+    | `checkpoint
+    | `clean_reboot
+    | `clean_shutdown
+    | `clone
+    | `copy
+    | `csvm
+    | `data_source_op
+    | `destroy
+    | `export
+    | `get_boot_record
+    | `hard_reboot
+    | `hard_shutdown
+    | `import
+    | `make_into_template
+    | `metadata_export
+    | `migrate
+    | `pause
+    | `pool_migrate
+    | `power_state_reset
+    | `provision
+    | `resume
+    | `resume_on
+    | `revert
+    | `reverting
+    | `send_sysrq
+    | `send_trigger
+    | `snapshot
+    | `snapshot_with_quiesce
+    | `start
+    | `start_on
+    | `suspend
+    | `unpause
+    | `update_allowed_operations ] *
+   string)
+  list
+)
+ident(
+  def vm_operation_table "record_util.ml" 73 2331 2331 --
+)
+"record_util.ml" 31 914 918 "record_util.ml" 31 914 941
+type(
+  [> `assert_operation_valid
+   | `awaiting_memory_live
+   | `changing_VCPUs_live
+   | `changing_dynamic_range
+   | `changing_memory_live
+   | `changing_shadow_memory_live
+   | `changing_static_range
+   | `checkpoint
+   | `clean_reboot
+   | `clean_shutdown
+   | `clone
+   | `copy
+   | `csvm
+   | `data_source_op
+   | `destroy
+   | `export
+   | `get_boot_record
+   | `hard_reboot
+   | `hard_shutdown
+   | `import
+   | `make_into_template
+   | `metadata_export
+   | `migrate
+   | `pause
+   | `pool_migrate
+   | `power_state_reset
+   | `provision
+   | `resume
+   | `resume_on
+   | `revert
+   | `reverting
+   | `send_sysrq
+   | `send_trigger
+   | `snapshot
+   | `snapshot_with_quiesce
+   | `start
+   | `start_on
+   | `suspend
+   | `unpause
+   | `update_allowed_operations ]
+  as 'a
+)
+"record_util.ml" 31 914 943 "record_util.ml" 31 914 965
+type(
+  string
+)
+"record_util.ml" 31 914 918 "record_util.ml" 31 914 965
+type(
+  'a * string
+)
+"record_util.ml" 32 967 971 "record_util.ml" 32 967 994
+type(
+  'a
+)
+"record_util.ml" 32 967 996 "record_util.ml" 32 967 1020
+type(
+  string
+)
+"record_util.ml" 32 967 971 "record_util.ml" 32 967 1020
+type(
+  'a * string
+)
+"record_util.ml" 33 1022 1026 "record_util.ml" 33 1022 1048
+type(
+  'a
+)
+"record_util.ml" 33 1022 1050 "record_util.ml" 33 1022 1073
+type(
+  string
+)
+"record_util.ml" 33 1022 1026 "record_util.ml" 33 1022 1073
+type(
+  'a * string
+)
+"record_util.ml" 34 1075 1079 "record_util.ml" 34 1075 1092
+type(
+  'a
+)
+"record_util.ml" 34 1075 1094 "record_util.ml" 34 1075 1108
+type(
+  string
+)
+"record_util.ml" 34 1075 1079 "record_util.ml" 34 1075 1108
+type(
+  'a * string
+)
+"record_util.ml" 35 1110 1114 "record_util.ml" 35 1110 1129
+type(
+  'a
+)
+"record_util.ml" 35 1110 1131 "record_util.ml" 35 1110 1147
+type(
+  string
+)
+"record_util.ml" 35 1110 1114 "record_util.ml" 35 1110 1147
+type(
+  'a * string
+)
+"record_util.ml" 36 1149 1153 "record_util.ml" 36 1149 1159
+type(
+  'a
+)
+"record_util.ml" 36 1149 1161 "record_util.ml" 36 1149 1168
+type(
+  string
+)
+"record_util.ml" 36 1149 1153 "record_util.ml" 36 1149 1168
+type(
+  'a * string
+)
+"record_util.ml" 37 1170 1174 "record_util.ml" 37 1170 1183
+type(
+  'a
+)
+"record_util.ml" 37 1170 1185 "record_util.ml" 37 1170 1195
+type(
+  string
+)
+"record_util.ml" 37 1170 1174 "record_util.ml" 37 1170 1195
+type(
+  'a * string
+)
+"record_util.ml" 38 1197 1201 "record_util.ml" 38 1197 1212
+type(
+  'a
+)
+"record_util.ml" 38 1197 1214 "record_util.ml" 38 1197 1226
+type(
+  string
+)
+"record_util.ml" 38 1197 1201 "record_util.ml" 38 1197 1226
+type(
+  'a * string
+)
+"record_util.ml" 39 1228 1232 "record_util.ml" 39 1228 1254
+type(
+  'a
+)
+"record_util.ml" 39 1228 1256 "record_util.ml" 39 1228 1279
+type(
+  string
+)
+"record_util.ml" 39 1228 1232 "record_util.ml" 39 1228 1279
+type(
+  'a * string
+)
+"record_util.ml" 40 1281 1285 "record_util.ml" 40 1281 1290
+type(
+  'a
+)
+"record_util.ml" 40 1281 1292 "record_util.ml" 40 1281 1298
+type(
+  string
+)
+"record_util.ml" 40 1281 1285 "record_util.ml" 40 1281 1298
+type(
+  'a * string
+)
+"record_util.ml" 41 1300 1304 "record_util.ml" 41 1300 1311
+type(
+  'a
+)
+"record_util.ml" 41 1300 1313 "record_util.ml" 41 1300 1321
+type(
+  string
+)
+"record_util.ml" 41 1300 1304 "record_util.ml" 41 1300 1321
+type(
+  'a * string
+)
+"record_util.ml" 42 1323 1327 "record_util.ml" 42 1323 1337
+type(
+  'a
+)
+"record_util.ml" 42 1323 1339 "record_util.ml" 42 1323 1350
+type(
+  string
+)
+"record_util.ml" 42 1323 1327 "record_util.ml" 42 1323 1350
+type(
+  'a * string
+)
+"record_util.ml" 43 1352 1356 "record_util.ml" 43 1352 1366
+type(
+  'a
+)
+"record_util.ml" 43 1352 1368 "record_util.ml" 43 1352 1379
+type(
+  string
+)
+"record_util.ml" 43 1352 1356 "record_util.ml" 43 1352 1379
+type(
+  'a * string
+)
+"record_util.ml" 44 1381 1385 "record_util.ml" 44 1381 1393
+type(
+  'a
+)
+"record_util.ml" 44 1381 1395 "record_util.ml" 44 1381 1404
+type(
+  string
+)
+"record_util.ml" 44 1381 1385 "record_util.ml" 44 1381 1404
+type(
+  'a * string
+)
+"record_util.ml" 45 1406 1410 "record_util.ml" 45 1406 1417
+type(
+  'a
+)
+"record_util.ml" 45 1406 1419 "record_util.ml" 45 1406 1427
+type(
+  string
+)
+"record_util.ml" 45 1406 1410 "record_util.ml" 45 1406 1427
+type(
+  'a * string
+)
+"record_util.ml" 46 1429 1430 "record_util.ml" 46 1429 1446
+type(
+  'a
+)
+"record_util.ml" 46 1429 1448 "record_util.ml" 46 1429 1465
+type(
+  string
+)
+"record_util.ml" 46 1429 1430 "record_util.ml" 46 1429 1465
+type(
+  'a * string
+)
+"record_util.ml" 47 1467 1471 "record_util.ml" 47 1467 1478
+type(
+  'a
+)
+"record_util.ml" 47 1467 1480 "record_util.ml" 47 1467 1488
+type(
+  string
+)
+"record_util.ml" 47 1467 1471 "record_util.ml" 47 1467 1488
+type(
+  'a * string
+)
+"record_util.ml" 48 1490 1494 "record_util.ml" 48 1490 1510
+type(
+  'a
+)
+"record_util.ml" 48 1490 1512 "record_util.ml" 48 1490 1529
+type(
+  string
+)
+"record_util.ml" 48 1490 1494 "record_util.ml" 48 1490 1529
+type(
+  'a * string
+)
+"record_util.ml" 49 1531 1535 "record_util.ml" 49 1531 1550
+type(
+  'a
+)
+"record_util.ml" 49 1531 1552 "record_util.ml" 49 1531 1569
+type(
+  string
+)
+"record_util.ml" 49 1531 1535 "record_util.ml" 49 1531 1569
+type(
+  'a * string
+)
+"record_util.ml" 50 1571 1575 "record_util.ml" 50 1571 1587
+type(
+  'a
+)
+"record_util.ml" 50 1571 1589 "record_util.ml" 50 1571 1602
+type(
+  string
+)
+"record_util.ml" 50 1571 1575 "record_util.ml" 50 1571 1602
+type(
+  'a * string
+)
+"record_util.ml" 51 1604 1608 "record_util.ml" 51 1604 1622
+type(
+  'a
+)
+"record_util.ml" 51 1604 1624 "record_util.ml" 51 1604 1639
+type(
+  string
+)
+"record_util.ml" 51 1604 1608 "record_util.ml" 51 1604 1639
+type(
+  'a * string
+)
+"record_util.ml" 52 1641 1645 "record_util.ml" 52 1641 1653
+type(
+  'a
+)
+"record_util.ml" 52 1641 1655 "record_util.ml" 52 1641 1664
+type(
+  string
+)
+"record_util.ml" 52 1641 1645 "record_util.ml" 52 1641 1664
+type(
+  'a * string
+)
+"record_util.ml" 53 1666 1670 "record_util.ml" 53 1666 1676
+type(
+  'a
+)
+"record_util.ml" 53 1666 1678 "record_util.ml" 53 1666 1685
+type(
+  string
+)
+"record_util.ml" 53 1666 1670 "record_util.ml" 53 1666 1685
+type(
+  'a * string
+)
+"record_util.ml" 54 1687 1691 "record_util.ml" 54 1687 1698
+type(
+  'a
+)
+"record_util.ml" 54 1687 1700 "record_util.ml" 54 1687 1708
+type(
+  string
+)
+"record_util.ml" 54 1687 1691 "record_util.ml" 54 1687 1708
+type(
+  'a * string
+)
+"record_util.ml" 55 1710 1714 "record_util.ml" 55 1710 1724
+type(
+  'a
+)
+"record_util.ml" 55 1710 1726 "record_util.ml" 55 1710 1737
+type(
+  string
+)
+"record_util.ml" 55 1710 1714 "record_util.ml" 55 1710 1737
+type(
+  'a * string
+)
+"record_util.ml" 56 1739 1743 "record_util.ml" 56 1739 1763
+type(
+  'a
+)
+"record_util.ml" 56 1739 1765 "record_util.ml" 56 1739 1786
+type(
+  string
+)
+"record_util.ml" 56 1739 1743 "record_util.ml" 56 1739 1786
+type(
+  'a * string
+)
+"record_util.ml" 57 1788 1792 "record_util.ml" 57 1788 1798
+type(
+  'a
+)
+"record_util.ml" 57 1788 1800 "record_util.ml" 57 1788 1807
+type(
+  string
+)
+"record_util.ml" 57 1788 1792 "record_util.ml" 57 1788 1807
+type(
+  'a * string
+)
+"record_util.ml" 58 1809 1813 "record_util.ml" 58 1809 1822
+type(
+  'a
+)
+"record_util.ml" 58 1809 1824 "record_util.ml" 58 1809 1834
+type(
+  string
+)
+"record_util.ml" 58 1809 1813 "record_util.ml" 58 1809 1834
+type(
+  'a * string
+)
+"record_util.ml" 59 1836 1840 "record_util.ml" 59 1836 1848
+type(
+  'a
+)
+"record_util.ml" 59 1836 1850 "record_util.ml" 59 1836 1859
+type(
+  string
+)
+"record_util.ml" 59 1836 1840 "record_util.ml" 59 1836 1859
+type(
+  'a * string
+)
+"record_util.ml" 60 1861 1865 "record_util.ml" 60 1861 1873
+type(
+  'a
+)
+"record_util.ml" 60 1861 1875 "record_util.ml" 60 1861 1884
+type(
+  string
+)
+"record_util.ml" 60 1861 1865 "record_util.ml" 60 1861 1884
+type(
+  'a * string
+)
+"record_util.ml" 61 1886 1890 "record_util.ml" 61 1886 1916
+type(
+  'a
+)
+"record_util.ml" 61 1886 1918 "record_util.ml" 61 1886 1945
+type(
+  string
+)
+"record_util.ml" 61 1886 1890 "record_util.ml" 61 1886 1945
+type(
+  'a * string
+)
+"record_util.ml" 62 1947 1951 "record_util.ml" 62 1947 1970
+type(
+  'a
+)
+"record_util.ml" 62 1947 1972 "record_util.ml" 62 1947 1992
+type(
+  string
+)
+"record_util.ml" 62 1947 1951 "record_util.ml" 62 1947 1992
+type(
+  'a * string
+)
+"record_util.ml" 63 1994 1998 "record_util.ml" 63 1994 2009
+type(
+  'a
+)
+"record_util.ml" 63 1994 2011 "record_util.ml" 63 1994 2023
+type(
+  string
+)
+"record_util.ml" 63 1994 1998 "record_util.ml" 63 1994 2023
+type(
+  'a * string
+)
+"record_util.ml" 64 2025 2029 "record_util.ml" 64 2025 2042
+type(
+  'a
+)
+"record_util.ml" 64 2025 2044 "record_util.ml" 64 2025 2058
+type(
+  string
+)
+"record_util.ml" 64 2025 2029 "record_util.ml" 64 2025 2058
+type(
+  'a * string
+)
+"record_util.ml" 65 2060 2064 "record_util.ml" 65 2060 2085
+type(
+  'a
+)
+"record_util.ml" 65 2060 2087 "record_util.ml" 65 2060 2109
+type(
+  string
+)
+"record_util.ml" 65 2060 2064 "record_util.ml" 65 2060 2109
+type(
+  'a * string
+)
+"record_util.ml" 66 2111 2115 "record_util.ml" 66 2111 2136
+type(
+  'a
+)
+"record_util.ml" 66 2111 2138 "record_util.ml" 66 2111 2160
+type(
+  string
+)
+"record_util.ml" 66 2111 2115 "record_util.ml" 66 2111 2160
+type(
+  'a * string
+)
+"record_util.ml" 67 2162 2166 "record_util.ml" 67 2162 2194
+type(
+  'a
+)
+"record_util.ml" 67 2162 2196 "record_util.ml" 67 2162 2225
+type(
+  string
+)
+"record_util.ml" 67 2162 2166 "record_util.ml" 67 2162 2225
+type(
+  'a * string
+)
+"record_util.ml" 68 2227 2231 "record_util.ml" 68 2227 2244
+type(
+  'a
+)
+"record_util.ml" 68 2227 2246 "record_util.ml" 68 2227 2260
+type(
+  string
+)
+"record_util.ml" 68 2227 2231 "record_util.ml" 68 2227 2260
+type(
+  'a * string
+)
+"record_util.ml" 69 2262 2266 "record_util.ml" 69 2262 2284
+type(
+  'a
+)
+"record_util.ml" 69 2262 2286 "record_util.ml" 69 2262 2305
+type(
+  string
+)
+"record_util.ml" 69 2262 2266 "record_util.ml" 69 2262 2305
+type(
+  'a * string
+)
+"record_util.ml" 70 2307 2311 "record_util.ml" 70 2307 2316
+type(
+  'a
+)
+"record_util.ml" 70 2307 2318 "record_util.ml" 70 2307 2324
+type(
+  string
+)
+"record_util.ml" 70 2307 2311 "record_util.ml" 70 2307 2324
+type(
+  'a * string
+)
+"record_util.ml" 30 910 912 "record_util.ml" 71 2326 2329
+type(
+  ('a * string) list
+)
+"record_util.ml" 73 2331 2335 "record_util.ml" 73 2331 2357
+type(
+  [> `assert_operation_valid
+   | `awaiting_memory_live
+   | `changing_VCPUs_live
+   | `changing_dynamic_range
+   | `changing_memory_live
+   | `changing_shadow_memory_live
+   | `changing_static_range
+   | `checkpoint
+   | `clean_reboot
+   | `clean_shutdown
+   | `clone
+   | `copy
+   | `csvm
+   | `data_source_op
+   | `destroy
+   | `export
+   | `get_boot_record
+   | `hard_reboot
+   | `hard_shutdown
+   | `import
+   | `make_into_template
+   | `metadata_export
+   | `migrate
+   | `pause
+   | `pool_migrate
+   | `power_state_reset
+   | `provision
+   | `resume
+   | `resume_on
+   | `revert
+   | `reverting
+   | `send_sysrq
+   | `send_trigger
+   | `snapshot
+   | `snapshot_with_quiesce
+   | `start
+   | `start_on
+   | `suspend
+   | `unpause
+   | `update_allowed_operations ] ->
+  string
+)
+ident(
+  def vm_operation_to_string "record_util.ml" 78 2479 2479 --
+)
+"record_util.ml" 73 2331 2358 "record_util.ml" 73 2331 2359
+type(
+  [> `assert_operation_valid
+   | `awaiting_memory_live
+   | `changing_VCPUs_live
+   | `changing_dynamic_range
+   | `changing_memory_live
+   | `changing_shadow_memory_live
+   | `changing_static_range
+   | `checkpoint
+   | `clean_reboot
+   | `clean_shutdown
+   | `clone
+   | `copy
+   | `csvm
+   | `data_source_op
+   | `destroy
+   | `export
+   | `get_boot_record
+   | `hard_reboot
+   | `hard_shutdown
+   | `import
+   | `make_into_template
+   | `metadata_export
+   | `migrate
+   | `pause
+   | `pool_migrate
+   | `power_state_reset
+   | `provision
+   | `resume
+   | `resume_on
+   | `revert
+   | `reverting
+   | `send_sysrq
+   | `send_trigger
+   | `snapshot
+   | `snapshot_with_quiesce
+   | `start
+   | `start_on
+   | `suspend
+   | `unpause
+   | `update_allowed_operations ]
+  as 'a
+)
+ident(
+  def x "record_util.ml" 74 2363 2365 "record_util.ml" 76 2439 2477
+)
+"record_util.ml" 74 2363 2368 "record_util.ml" 74 2363 2371
+type(
+  bool -> bool
+)
+ident(
+  ext_ref Pervasives.not
+)
+"record_util.ml" 74 2363 2372 "record_util.ml" 74 2363 2386
+type(
+  'a -> ('a * string) list -> bool
+)
+ident(
+  ext_ref List.mem_assoc
+)
+"record_util.ml" 74 2363 2387 "record_util.ml" 74 2363 2388
+type(
+  'a
+)
+ident(
+  int_ref x "record_util.ml" 73 2331 2358 "record_util.ml" 73 2331 2359
+)
+"record_util.ml" 74 2363 2389 "record_util.ml" 74 2363 2407
+type(
+  ('a * string) list
+)
+ident(
+  int_ref vm_operation_table "record_util.ml" 29 884 888 "record_util.ml" 29 884 906
+)
+"record_util.ml" 74 2363 2371 "record_util.ml" 74 2363 2408
+type(
+  bool
+)
+"record_util.ml" 74 2363 2368 "record_util.ml" 74 2363 2408
+type(
+  bool
+)
+"record_util.ml" 75 2410 2417 "record_util.ml" 75 2410 2438
+type(
+  string
+)
+"record_util.ml" 76 2439 2446 "record_util.ml" 76 2439 2456
+type(
+  'a -> ('a * string) list -> string
+)
+ident(
+  ext_ref List.assoc
+)
+"record_util.ml" 76 2439 2457 "record_util.ml" 76 2439 2458
+type(
+  'a
+)
+ident(
+  int_ref x "record_util.ml" 73 2331 2358 "record_util.ml" 73 2331 2359
+)
+"record_util.ml" 76 2439 2459 "record_util.ml" 76 2439 2477
+type(
+  ('a * string) list
+)
+ident(
+  int_ref vm_operation_table "record_util.ml" 29 884 888 "record_util.ml" 29 884 906
+)
+"record_util.ml" 76 2439 2446 "record_util.ml" 76 2439 2477
+type(
+  string
+)
+"record_util.ml" 74 2363 2365 "record_util.ml" 76 2439 2477
+type(
+  string
+)
+"record_util.ml" 78 2479 2483 "record_util.ml" 78 2479 2505
+type(
+  string ->
+  [> `assert_operation_valid
+   | `awaiting_memory_live
+   | `changing_VCPUs_live
+   | `changing_dynamic_range
+   | `changing_memory_live
+   | `changing_shadow_memory_live
+   | `changing_static_range
+   | `checkpoint
+   | `clean_reboot
+   | `clean_shutdown
+   | `clone
+   | `copy
+   | `csvm
+   | `data_source_op
+   | `destroy
+   | `export
+   | `get_boot_record
+   | `hard_reboot
+   | `hard_shutdown
+   | `import
+   | `make_into_template
+   | `metadata_export
+   | `migrate
+   | `pause
+   | `pool_migrate
+   | `power_state_reset
+   | `provision
+   | `resume
+   | `resume_on
+   | `revert
+   | `reverting
+   | `send_sysrq
+   | `send_trigger
+   | `snapshot
+   | `snapshot_with_quiesce
+   | `start
+   | `start_on
+   | `suspend
+   | `unpause
+   | `update_allowed_operations ]
+)
+ident(
+  def string_to_vm_operation "record_util.ml" 84 2732 2732 --
+)
+"record_util.ml" 78 2479 2506 "record_util.ml" 78 2479 2507
+type(
+  string
+)
+ident(
+  def x "record_util.ml" 79 2511 2513 "record_util.ml" 82 2705 2730
+)
+"record_util.ml" 79 2511 2517 "record_util.ml" 79 2511 2522
+type(
+  (string *
+   [> `assert_operation_valid
+    | `awaiting_memory_live
+    | `changing_VCPUs_live
+    | `changing_dynamic_range
+    | `changing_memory_live
+    | `changing_shadow_memory_live
+    | `changing_static_range
+    | `checkpoint
+    | `clean_reboot
+    | `clean_shutdown
+    | `clone
+    | `copy
+    | `csvm
+    | `data_source_op
+    | `destroy
+    | `export
+    | `get_boot_record
+    | `hard_reboot
+    | `hard_shutdown
+    | `import
+    | `make_into_template
+    | `metadata_export
+    | `migrate
+    | `pause
+    | `pool_migrate
+    | `power_state_reset
+    | `provision
+    | `resume
+    | `resume_on
+    | `revert
+    | `reverting
+    | `send_sysrq
+    | `send_trigger
+    | `snapshot
+    | `snapshot_with_quiesce
+    | `start
+    | `start_on
+    | `suspend
+    | `unpause
+    | `update_allowed_operations ])
+  list
+)
+"record_util.ml" 79 2511 2525 "record_util.ml" 79 2511 2533
+type(
+  (([> `assert_operation_valid
+     | `awaiting_memory_live
+     | `changing_VCPUs_live
+     | `changing_dynamic_range
+     | `changing_memory_live
+     | `changing_shadow_memory_live
+     | `changing_static_range
+     | `checkpoint
+     | `clean_reboot
+     | `clean_shutdown
+     | `clone
+     | `copy
+     | `csvm
+     | `data_source_op
+     | `destroy
+     | `export
+     | `get_boot_record
+     | `hard_reboot
+     | `hard_shutdown
+     | `import
+     | `make_into_template
+     | `metadata_export
+     | `migrate
+     | `pause
+     | `pool_migrate
+     | `power_state_reset
+     | `provision
+     | `resume
+     | `resume_on
+     | `revert
+     | `reverting
+     | `send_sysrq
+     | `send_trigger
+     | `snapshot
+     | `snapshot_with_quiesce
+     | `start
+     | `start_on
+     | `suspend
+     | `unpause
+     | `update_allowed_operations ]
+    as 'a) *
+   string -> string * 'a) ->
+  ('a * string) list -> (string * 'a) list
+)
+ident(
+  ext_ref List.map
+)
+"record_util.ml" 79 2511 2540 "record_util.ml" 79 2511 2541
+type(
+  'a
+)
+ident(
+  def a "record_util.ml" 79 2511 2549 "record_util.ml" 79 2511 2553
+)
+"record_util.ml" 79 2511 2543 "record_util.ml" 79 2511 2544
+type(
+  string
+)
+ident(
+  def b "record_util.ml" 79 2511 2549 "record_util.ml" 79 2511 2553
+)
+"record_util.ml" 79 2511 2539 "record_util.ml" 79 2511 2545
+type(
+  'a * string
+)
+"record_util.ml" 79 2511 2549 "record_util.ml" 79 2511 2550
+type(
+  string
+)
+ident(
+  int_ref b "record_util.ml" 79 2511 2543 "record_util.ml" 79 2511 2544
+)
+"record_util.ml" 79 2511 2552 "record_util.ml" 79 2511 2553
+type(
+  'a
+)
+ident(
+  int_ref a "record_util.ml" 79 2511 2540 "record_util.ml" 79 2511 2541
+)
+"record_util.ml" 79 2511 2549 "record_util.ml" 79 2511 2553
+type(
+  string * 'a
+)
+"record_util.ml" 79 2511 2534 "record_util.ml" 79 2511 2554
+type(
+  'a * string -> string * 'a
+)
+"record_util.ml" 79 2511 2555 "record_util.ml" 79 2511 2573
+type(
+  ('a * string) list
+)
+ident(
+  int_ref vm_operation_table "record_util.ml" 29 884 888 "record_util.ml" 29 884 906
+)
+"record_util.ml" 79 2511 2525 "record_util.ml" 79 2511 2573
+type(
+  (string * 'a) list
+)
+"record_util.ml" 80 2577 2582 "record_util.ml" 80 2577 2585
+type(
+  bool -> bool
+)
+ident(
+  ext_ref Pervasives.not
+)
+"record_util.ml" 80 2577 2586 "record_util.ml" 80 2577 2600
+type(
+  string ->
+  (string *
+   _[> `assert_operation_valid
+     | `awaiting_memory_live
+     | `changing_VCPUs_live
+     | `changing_dynamic_range
+     | `changing_memory_live
+     | `changing_shadow_memory_live
+     | `changing_static_range
+     | `checkpoint
+     | `clean_reboot
+     | `clean_shutdown
+     | `clone
+     | `copy
+     | `csvm
+     | `data_source_op
+     | `destroy
+     | `export
+     | `get_boot_record
+     | `hard_reboot
+     | `hard_shutdown
+     | `import
+     | `make_into_template
+     | `metadata_export
+     | `migrate
+     | `pause
+     | `pool_migrate
+     | `power_state_reset
+     | `provision
+     | `resume
+     | `resume_on
+     | `revert
+     | `reverting
+     | `send_sysrq
+     | `send_trigger
+     | `snapshot
+     | `snapshot_with_quiesce
+     | `start
+     | `start_on
+     | `suspend
+     | `unpause
+     | `update_allowed_operations ])
+  list -> bool
+)
+ident(
+  ext_ref List.mem_assoc
+)
+"record_util.ml" 80 2577 2601 "record_util.ml" 80 2577 2602
+type(
+  string
+)
+ident(
+  int_ref x "record_util.ml" 78 2479 2506 "record_util.ml" 78 2479 2507
+)
+"record_util.ml" 80 2577 2603 "record_util.ml" 80 2577 2608
+type(
+  (string *
+   (_[> `assert_operation_valid
+      | `awaiting_memory_live
+      | `changing_VCPUs_live
+      | `changing_dynamic_range
+      | `changing_memory_live
+      | `changing_shadow_memory_live
+      | `changing_static_range
+      | `checkpoint
+      | `clean_reboot
+      | `clean_shutdown
+      | `clone
+      | `copy
+      | `csvm
+      | `data_source_op
+      | `destroy
+      | `export
+      | `get_boot_record
+      | `hard_reboot
+      | `hard_shutdown
+      | `import
+      | `make_into_template
+      | `metadata_export
+      | `migrate
+      | `pause
+      | `pool_migrate
+      | `power_state_reset
+      | `provision
+      | `resume
+      | `resume_on
+      | `revert
+      | `reverting
+      | `send_sysrq
+      | `send_trigger
+      | `snapshot
+      | `snapshot_with_quiesce
+      | `start
+      | `start_on
+      | `suspend
+      | `unpause
+      | `update_allowed_operations ]
+    as 'b))
+  list
+)
+ident(
+  int_ref table "record_util.ml" 79 2511 2517 "record_util.ml" 79 2511 2522
+)
+"record_util.ml" 80 2577 2585 "record_util.ml" 80 2577 2609
+type(
+  bool
+)
+"record_util.ml" 80 2577 2582 "record_util.ml" 80 2577 2609
+type(
+  bool
+)
+"record_util.ml" 81 2610 2618 "record_util.ml" 81 2610 2623
+type(
+  exn ->
+  ([> `assert_operation_valid
+    | `awaiting_memory_live
+    | `changing_VCPUs_live
+    | `changing_dynamic_range
+    | `changing_memory_live
+    | `changing_shadow_memory_live
+    | `changing_static_range
+    | `checkpoint
+    | `clean_reboot
+    | `clean_shutdown
+    | `clone
+    | `copy
+    | `csvm
+    | `data_source_op
+    | `destroy
+    | `export
+    | `get_boot_record
+    | `hard_reboot
+    | `hard_shutdown
+    | `import
+    | `make_into_template
+    | `metadata_export
+    | `migrate
+    | `pause
+    | `pool_migrate
+    | `power_state_reset
+    | `provision
+    | `resume
+    | `resume_on
+    | `revert
+    | `reverting
+    | `send_sysrq
+    | `send_trigger
+    | `snapshot
+    | `snapshot_with_quiesce
+    | `start
+    | `start_on
+    | `suspend
+    | `unpause
+    | `update_allowed_operations ]
+   as 'c)
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"record_util.ml" 81 2610 2649 "record_util.ml" 81 2610 2673
+type(
+  string
+)
+ident(
+  ext_ref Api_errors.invalid_value
+)
+"record_util.ml" 81 2610 2677 "record_util.ml" 81 2610 2696
+type(
+  string
+)
+"record_util.ml" 81 2610 2698 "record_util.ml" 81 2610 2699
+type(
+  string
+)
+ident(
+  int_ref x "record_util.ml" 78 2479 2506 "record_util.ml" 78 2479 2507
+)
+"record_util.ml" 81 2610 2675 "record_util.ml" 81 2610 2701
+type(
+  string list
+)
+"record_util.ml" 81 2610 2624 "record_util.ml" 81 2610 2703
+type(
+  exn
+)
+"record_util.ml" 81 2610 2617 "record_util.ml" 81 2610 2704
+type(
+  'c
+)
+"record_util.ml" 82 2705 2712 "record_util.ml" 82 2705 2722
+type(
+  string -> (string * 'c) list -> 'c
+)
+ident(
+  ext_ref List.assoc
+)
+"record_util.ml" 82 2705 2723 "record_util.ml" 82 2705 2724
+type(
+  string
+)
+ident(
+  int_ref x "record_util.ml" 78 2479 2506 "record_util.ml" 78 2479 2507
+)
+"record_util.ml" 82 2705 2725 "record_util.ml" 82 2705 2730
+type(
+  (string * 'c) list
+)
+ident(
+  int_ref table "record_util.ml" 79 2511 2517 "record_util.ml" 79 2511 2522
+)
+"record_util.ml" 82 2705 2712 "record_util.ml" 82 2705 2730
+type(
+  'c
+)
+"record_util.ml" 80 2577 2579 "record_util.ml" 82 2705 2730
+type(
+  'c
+)
+"record_util.ml" 79 2511 2513 "record_util.ml" 82 2705 2730
+type(
+  'c
+)
+"record_util.ml" 84 2732 2736 "record_util.ml" 84 2732 2760
+type(
+  [< `evacuate
+   | `power_on
+   | `provision
+   | `reboot
+   | `shutdown
+   | `vm_migrate
+   | `vm_resume
+   | `vm_start ] ->
+  string
+)
+ident(
+  def host_operation_to_string "record_util.ml" 94 3001 3001 --
+)
+"record_util.ml" 85 2772 2776 "record_util.ml" 85 2772 2786
+type(
+  [< `evacuate
+   | `power_on
+   | `provision
+   | `reboot
+   | `shutdown
+   | `vm_migrate
+   | `vm_resume
+   | `vm_start ]
+  as 'a
+)
+"record_util.ml" 85 2772 2790 "record_util.ml" 85 2772 2801
+type(
+  string
+)
+"record_util.ml" 86 2802 2806 "record_util.ml" 86 2802 2815
+type(
+  'a
+)
+"record_util.ml" 86 2802 2819 "record_util.ml" 86 2802 2829
+type(
+  string
+)
+"record_util.ml" 87 2830 2834 "record_util.ml" 87 2830 2843
+type(
+  'a
+)
+"record_util.ml" 87 2830 2847 "record_util.ml" 87 2830 2857
+type(
+  string
+)
+"record_util.ml" 88 2858 2862 "record_util.ml" 88 2858 2869
+type(
+  'a
+)
+"record_util.ml" 88 2858 2873 "record_util.ml" 88 2858 2881
+type(
+  string
+)
+"record_util.ml" 89 2882 2886 "record_util.ml" 89 2882 2895
+type(
+  'a
+)
+"record_util.ml" 89 2882 2899 "record_util.ml" 89 2882 2909
+type(
+  string
+)
+"record_util.ml" 90 2910 2914 "record_util.ml" 90 2910 2923
+type(
+  'a
+)
+"record_util.ml" 90 2910 2927 "record_util.ml" 90 2910 2937
+type(
+  string
+)
+"record_util.ml" 91 2938 2942 "record_util.ml" 91 2938 2952
+type(
+  'a
+)
+"record_util.ml" 91 2938 2956 "record_util.ml" 91 2938 2967
+type(
+  string
+)
+"record_util.ml" 92 2968 2972 "record_util.ml" 92 2968 2983
+type(
+  'a
+)
+"record_util.ml" 92 2968 2987 "record_util.ml" 92 2968 2999
+type(
+  string
+)
+"record_util.ml" 84 2732 2763 "record_util.ml" 92 2968 2999
+type(
+  'a -> string
+)
+"record_util.ml" 94 3001 3005 "record_util.ml" 94 3001 3028
+type(
+  [< `blocked
+   | `clone
+   | `copy
+   | `destroy
+   | `force_unlock
+   | `forget
+   | `generate_config
+   | `resize
+   | `resize_online
+   | `scan
+   | `snapshot
+   | `update ] ->
+  string
+)
+ident(
+  def vdi_operation_to_string "record_util.ml" 108 3371 3371 --
+)
+"record_util.ml" 95 3040 3044 "record_util.ml" 95 3040 3049
+type(
+  [< `blocked
+   | `clone
+   | `copy
+   | `destroy
+   | `force_unlock
+   | `forget
+   | `generate_config
+   | `resize
+   | `resize_online
+   | `scan
+   | `snapshot
+   | `update ]
+  as 'a
+)
+"record_util.ml" 95 3040 3053 "record_util.ml" 95 3040 3059
+type(
+  string
+)
+"record_util.ml" 96 3060 3064 "record_util.ml" 96 3060 3070
+type(
+  'a
+)
+"record_util.ml" 96 3060 3074 "record_util.ml" 96 3060 3081
+type(
+  string
+)
+"record_util.ml" 97 3082 3086 "record_util.ml" 97 3082 3091
+type(
+  'a
+)
+"record_util.ml" 97 3082 3095 "record_util.ml" 97 3082 3101
+type(
+  string
+)
+"record_util.ml" 98 3102 3106 "record_util.ml" 98 3102 3113
+type(
+  'a
+)
+"record_util.ml" 98 3102 3117 "record_util.ml" 98 3102 3125
+type(
+  string
+)
+"record_util.ml" 99 3126 3130 "record_util.ml" 99 3126 3144
+type(
+  'a
+)
+"record_util.ml" 99 3126 3148 "record_util.ml" 99 3126 3163
+type(
+  string
+)
+"record_util.ml" 100 3164 3168 "record_util.ml" 100 3164 3176
+type(
+  'a
+)
+"record_util.ml" 100 3164 3180 "record_util.ml" 100 3164 3189
+type(
+  string
+)
+"record_util.ml" 101 3190 3194 "record_util.ml" 101 3190 3207
+type(
+  'a
+)
+"record_util.ml" 101 3190 3211 "record_util.ml" 101 3190 3225
+type(
+  string
+)
+"record_util.ml" 102 3226 3230 "record_util.ml" 102 3226 3239
+type(
+  'a
+)
+"record_util.ml" 102 3226 3243 "record_util.ml" 102 3226 3253
+type(
+  string
+)
+"record_util.ml" 103 3254 3258 "record_util.ml" 103 3254 3265
+type(
+  'a
+)
+"record_util.ml" 103 3254 3269 "record_util.ml" 103 3254 3277
+type(
+  string
+)
+"record_util.ml" 104 3278 3282 "record_util.ml" 104 3278 3289
+type(
+  'a
+)
+"record_util.ml" 104 3278 3293 "record_util.ml" 104 3278 3301
+type(
+  string
+)
+"record_util.ml" 105 3302 3306 "record_util.ml" 105 3302 3322
+type(
+  'a
+)
+"record_util.ml" 105 3302 3326 "record_util.ml" 105 3302 3343
+type(
+  string
+)
+"record_util.ml" 106 3344 3348 "record_util.ml" 106 3344 3356
+type(
+  'a
+)
+"record_util.ml" 106 3344 3360 "record_util.ml" 106 3344 3369
+type(
+  string
+)
+"record_util.ml" 94 3001 3031 "record_util.ml" 106 3344 3369
+type(
+  'a -> string
+)
+"record_util.ml" 108 3371 3375 "record_util.ml" 108 3371 3397
+type(
+  [< `destroy
+   | `forget
+   | `plug
+   | `scan
+   | `unplug
+   | `update
+   | `vdi_clone
+   | `vdi_create
+   | `vdi_destroy
+   | `vdi_introduce
+   | `vdi_resize
+   | `vdi_snapshot ] ->
+  string
+)
+ident(
+  def sr_operation_to_string "record_util.ml" 122 3750 3750 --
+)
+"record_util.ml" 109 3409 3413 "record_util.ml" 109 3409 3418
+type(
+  [< `destroy
+   | `forget
+   | `plug
+   | `scan
+   | `unplug
+   | `update
+   | `vdi_clone
+   | `vdi_create
+   | `vdi_destroy
+   | `vdi_introduce
+   | `vdi_resize
+   | `vdi_snapshot ]
+  as 'a
+)
+"record_util.ml" 109 3409 3422 "record_util.ml" 109 3409 3428
+type(
+  string
+)
+"record_util.ml" 110 3429 3433 "record_util.ml" 110 3429 3441
+type(
+  'a
+)
+"record_util.ml" 110 3429 3445 "record_util.ml" 110 3429 3454
+type(
+  string
+)
+"record_util.ml" 111 3455 3459 "record_util.ml" 111 3455 3466
+type(
+  'a
+)
+"record_util.ml" 111 3455 3470 "record_util.ml" 111 3455 3478
+type(
+  string
+)
+"record_util.ml" 112 3479 3483 "record_util.ml" 112 3479 3488
+type(
+  'a
+)
+"record_util.ml" 112 3479 3492 "record_util.ml" 112 3479 3498
+type(
+  string
+)
+"record_util.ml" 113 3499 3503 "record_util.ml" 113 3499 3510
+type(
+  'a
+)
+"record_util.ml" 113 3499 3514 "record_util.ml" 113 3499 3522
+type(
+  string
+)
+"record_util.ml" 114 3523 3527 "record_util.ml" 114 3523 3534
+type(
+  'a
+)
+"record_util.ml" 114 3523 3538 "record_util.ml" 114 3523 3546
+type(
+  string
+)
+"record_util.ml" 115 3547 3551 "record_util.ml" 115 3547 3562
+type(
+  'a
+)
+"record_util.ml" 115 3547 3566 "record_util.ml" 115 3547 3578
+type(
+  string
+)
+"record_util.ml" 116 3579 3583 "record_util.ml" 116 3579 3597
+type(
+  'a
+)
+"record_util.ml" 116 3579 3601 "record_util.ml" 116 3579 3616
+type(
+  string
+)
+"record_util.ml" 117 3617 3621 "record_util.ml" 117 3617 3633
+type(
+  'a
+)
+"record_util.ml" 117 3617 3637 "record_util.ml" 117 3617 3650
+type(
+  string
+)
+"record_util.ml" 118 3651 3655 "record_util.ml" 118 3651 3666
+type(
+  'a
+)
+"record_util.ml" 118 3651 3670 "record_util.ml" 118 3651 3682
+type(
+  string
+)
+"record_util.ml" 119 3683 3687 "record_util.ml" 119 3683 3697
+type(
+  'a
+)
+"record_util.ml" 119 3683 3701 "record_util.ml" 119 3683 3712
+type(
+  string
+)
+"record_util.ml" 120 3713 3717 "record_util.ml" 120 3713 3730
+type(
+  'a
+)
+"record_util.ml" 120 3713 3734 "record_util.ml" 120 3713 3748
+type(
+  string
+)
+"record_util.ml" 108 3371 3400 "record_util.ml" 120 3713 3748
+type(
+  'a -> string
+)
+"record_util.ml" 122 3750 3754 "record_util.ml" 122 3750 3777
+type(
+  [< `attach
+   | `eject
+   | `insert
+   | `pause
+   | `plug
+   | `unpause
+   | `unplug
+   | `unplug_force ] ->
+  string
+)
+ident(
+  def vbd_operation_to_string "record_util.ml" 132 3988 3988 --
+)
+"record_util.ml" 123 3789 3793 "record_util.ml" 123 3789 3800
+type(
+  [< `attach
+   | `eject
+   | `insert
+   | `pause
+   | `plug
+   | `unpause
+   | `unplug
+   | `unplug_force ]
+  as 'a
+)
+"record_util.ml" 123 3789 3804 "record_util.ml" 123 3789 3812
+type(
+  string
+)
+"record_util.ml" 124 3813 3817 "record_util.ml" 124 3813 3823
+type(
+  'a
+)
+"record_util.ml" 124 3813 3827 "record_util.ml" 124 3813 3834
+type(
+  string
+)
+"record_util.ml" 125 3835 3839 "record_util.ml" 125 3835 3846
+type(
+  'a
+)
+"record_util.ml" 125 3835 3850 "record_util.ml" 125 3835 3858
+type(
+  string
+)
+"record_util.ml" 126 3859 3863 "record_util.ml" 126 3859 3868
+type(
+  'a
+)
+"record_util.ml" 126 3859 3872 "record_util.ml" 126 3859 3878
+type(
+  string
+)
+"record_util.ml" 127 3879 3883 "record_util.ml" 127 3879 3890
+type(
+  'a
+)
+"record_util.ml" 127 3879 3894 "record_util.ml" 127 3879 3902
+type(
+  string
+)
+"record_util.ml" 128 3903 3907 "record_util.ml" 128 3903 3920
+type(
+  'a
+)
+"record_util.ml" 128 3903 3924 "record_util.ml" 128 3903 3938
+type(
+  string
+)
+"record_util.ml" 129 3939 3943 "record_util.ml" 129 3939 3949
+type(
+  'a
+)
+"record_util.ml" 129 3939 3953 "record_util.ml" 129 3939 3960
+type(
+  string
+)
+"record_util.ml" 130 3961 3965 "record_util.ml" 130 3961 3973
+type(
+  'a
+)
+"record_util.ml" 130 3961 3977 "record_util.ml" 130 3961 3986
+type(
+  string
+)
+"record_util.ml" 122 3750 3780 "record_util.ml" 130 3961 3986
+type(
+  'a -> string
+)
+"record_util.ml" 132 3988 3992 "record_util.ml" 132 3988 4015
+type(
+  [< `attach | `plug | `unplug ] -> string
+)
+ident(
+  def vif_operation_to_string "record_util.ml" 137 4096 4096 --
+)
+"record_util.ml" 133 4027 4031 "record_util.ml" 133 4027 4038
+type(
+  [< `attach | `plug | `unplug ] as 'a
+)
+"record_util.ml" 133 4027 4042 "record_util.ml" 133 4027 4050
+type(
+  string
+)
+"record_util.ml" 134 4051 4055 "record_util.ml" 134 4051 4060
+type(
+  'a
+)
+"record_util.ml" 134 4051 4064 "record_util.ml" 134 4051 4070
+type(
+  string
+)
+"record_util.ml" 135 4071 4075 "record_util.ml" 135 4071 4082
+type(
+  'a
+)
+"record_util.ml" 135 4071 4086 "record_util.ml" 135 4071 4094
+type(
+  string
+)
+"record_util.ml" 132 3988 4018 "record_util.ml" 135 4071 4094
+type(
+  'a -> string
+)
+"record_util.ml" 137 4096 4100 "record_util.ml" 137 4096 4132
+type(
+  [< `clean_shutdown | `hard_shutdown | `shutdown | `start ] -> string
+)
+ident(
+  def vm_appliance_operation_to_string "record_util.ml" 143 4273 4273 --
+)
+"record_util.ml" 138 4144 4148 "record_util.ml" 138 4144 4154
+type(
+  [< `clean_shutdown | `hard_shutdown | `shutdown | `start ] as 'a
+)
+"record_util.ml" 138 4144 4158 "record_util.ml" 138 4144 4165
+type(
+  string
+)
+"record_util.ml" 139 4166 4170 "record_util.ml" 139 4166 4185
+type(
+  'a
+)
+"record_util.ml" 139 4166 4189 "record_util.ml" 139 4166 4205
+type(
+  string
+)
+"record_util.ml" 140 4206 4210 "record_util.ml" 140 4206 4224
+type(
+  'a
+)
+"record_util.ml" 140 4206 4228 "record_util.ml" 140 4206 4243
+type(
+  string
+)
+"record_util.ml" 141 4244 4248 "record_util.ml" 141 4244 4257
+type(
+  'a
+)
+"record_util.ml" 141 4244 4261 "record_util.ml" 141 4244 4271
+type(
+  string
+)
+"record_util.ml" 137 4096 4135 "record_util.ml" 141 4244 4271
+type(
+  'a -> string
+)
+"record_util.ml" 143 4273 4277 "record_util.ml" 143 4273 4298
+type(
+  [< `ACC
+   | `ACPI
+   | `APIC
+   | `CENTAURMCR
+   | `CID
+   | `CLFLSH
+   | `CMOV
+   | `CMPLEGACY
+   | `CONSTANTTSC
+   | `CX16
+   | `CX8
+   | `CXMMX
+   | `CYRIXARR
+   | `DE
+   | `DSCPL
+   | `DTES
+   | `EST
+   | `FPU
+   | `FXSAVELEAK
+   | `FXSR
+   | `HT
+   | `IA64
+   | `K6MTRR
+   | `K7
+   | `K8
+   | `LAHFLM
+   | `LM
+   | `LONGRUN
+   | `LRTI
+   | `MCA
+   | `MCE
+   | `MMX
+   | `MMXEXT
+   | `MP
+   | `MSR
+   | `MTRR
+   | `MWAIT
+   | `NX
+   | `P3
+   | `P4
+   | `PAE
+   | `PAT
+   | `PGE
+   | `PN
+   | `PSE
+   | `PSE36
+   | `RECOVERY
+   | `SELFSNOOP
+   | `SEP
+   | `SYSCALL
+   | `THREEDNOW
+   | `THREEDNOWEXT
+   | `TM2
+   | `TSC
+   | `VME
+   | `VMX
+   | `XCRYPT
+   | `XCRYPTEN
+   | `XMM
+   | `XMM2
+   | `XMM3
+   | `XSTORE
+   | `XSTOREEN
+   | `XTPR ] ->
+  string
+)
+ident(
+  def cpu_feature_to_string "record_util.ml" 210 5673 5673 --
+)
+"record_util.ml" 143 4273 4299 "record_util.ml" 143 4273 4300
+type(
+  [< `ACC
+   | `ACPI
+   | `APIC
+   | `CENTAURMCR
+   | `CID
+   | `CLFLSH
+   | `CMOV
+   | `CMPLEGACY
+   | `CONSTANTTSC
+   | `CX16
+   | `CX8
+   | `CXMMX
+   | `CYRIXARR
+   | `DE
+   | `DSCPL
+   | `DTES
+   | `EST
+   | `FPU
+   | `FXSAVELEAK
+   | `FXSR
+   | `HT
+   | `IA64
+   | `K6MTRR
+   | `K7
+   | `K8
+   | `LAHFLM
+   | `LM
+   | `LONGRUN
+   | `LRTI
+   | `MCA
+   | `MCE
+   | `MMX
+   | `MMXEXT
+   | `MP
+   | `MSR
+   | `MTRR
+   | `MWAIT
+   | `NX
+   | `P3
+   | `P4
+   | `PAE
+   | `PAT
+   | `PGE
+   | `PN
+   | `PSE
+   | `PSE36
+   | `RECOVERY
+   | `SELFSNOOP
+   | `SEP
+   | `SYSCALL
+   | `THREEDNOW
+   | `THREEDNOWEXT
+   | `TM2
+   | `TSC
+   | `VME
+   | `VMX
+   | `XCRYPT
+   | `XCRYPTEN
+   | `XMM
+   | `XMM2
+   | `XMM3
+   | `XSTORE
+   | `XSTOREEN
+   | `XTPR ]
+  as 'a
+)
+ident(
+  def f "record_util.ml" 144 4303 4305 "record_util.ml" 208 5654 5671
+)
+"record_util.ml" 144 4303 4311 "record_util.ml" 144 4303 4312
+type(
+  'a
+)
+ident(
+  int_ref f "record_util.ml" 143 4273 4299 "record_util.ml" 143 4273 4300
+)
+"record_util.ml" 145 4318 4322 "record_util.ml" 145 4318 4326
+type(
+  'a
+)
+"record_util.ml" 145 4318 4330 "record_util.ml" 145 4318 4335
+type(
+  string
+)
+"record_util.ml" 146 4336 4340 "record_util.ml" 146 4336 4344
+type(
+  'a
+)
+"record_util.ml" 146 4336 4348 "record_util.ml" 146 4336 4353
+type(
+  string
+)
+"record_util.ml" 147 4354 4358 "record_util.ml" 147 4354 4361
+type(
+  'a
+)
+"record_util.ml" 147 4354 4365 "record_util.ml" 147 4354 4369
+type(
+  string
+)
+"record_util.ml" 148 4370 4374 "record_util.ml" 148 4370 4378
+type(
+  'a
+)
+"record_util.ml" 148 4370 4382 "record_util.ml" 148 4370 4387
+type(
+  string
+)
+"record_util.ml" 149 4388 4392 "record_util.ml" 149 4388 4396
+type(
+  'a
+)
+"record_util.ml" 149 4388 4400 "record_util.ml" 149 4388 4405
+type(
+  string
+)
+"record_util.ml" 150 4406 4410 "record_util.ml" 150 4406 4414
+type(
+  'a
+)
+"record_util.ml" 150 4406 4418 "record_util.ml" 150 4406 4423
+type(
+  string
+)
+"record_util.ml" 151 4424 4428 "record_util.ml" 151 4424 4432
+type(
+  'a
+)
+"record_util.ml" 151 4424 4436 "record_util.ml" 151 4424 4441
+type(
+  string
+)
+"record_util.ml" 152 4442 4446 "record_util.ml" 152 4442 4450
+type(
+  'a
+)
+"record_util.ml" 152 4442 4454 "record_util.ml" 152 4442 4459
+type(
+  string
+)
+"record_util.ml" 153 4460 4464 "record_util.ml" 153 4460 4468
+type(
+  'a
+)
+"record_util.ml" 153 4460 4472 "record_util.ml" 153 4460 4477
+type(
+  string
+)
+"record_util.ml" 154 4478 4482 "record_util.ml" 154 4478 4487
+type(
+  'a
+)
+"record_util.ml" 154 4478 4491 "record_util.ml" 154 4478 4497
+type(
+  string
+)
+"record_util.ml" 155 4498 4502 "record_util.ml" 155 4498 4506
+type(
+  'a
+)
+"record_util.ml" 155 4498 4510 "record_util.ml" 155 4498 4515
+type(
+  string
+)
+"record_util.ml" 156 4516 4520 "record_util.ml" 156 4516 4525
+type(
+  'a
+)
+"record_util.ml" 156 4516 4529 "record_util.ml" 156 4516 4535
+type(
+  string
+)
+"record_util.ml" 157 4536 4540 "record_util.ml" 157 4536 4544
+type(
+  'a
+)
+"record_util.ml" 157 4536 4548 "record_util.ml" 157 4536 4553
+type(
+  string
+)
+"record_util.ml" 158 4554 4558 "record_util.ml" 158 4554 4562
+type(
+  'a
+)
+"record_util.ml" 158 4554 4566 "record_util.ml" 158 4554 4571
+type(
+  string
+)
+"record_util.ml" 159 4572 4576 "record_util.ml" 159 4572 4581
+type(
+  'a
+)
+"record_util.ml" 159 4572 4585 "record_util.ml" 159 4572 4591
+type(
+  string
+)
+"record_util.ml" 160 4592 4596 "record_util.ml" 160 4592 4600
+type(
+  'a
+)
+"record_util.ml" 160 4592 4604 "record_util.ml" 160 4592 4609
+type(
+  string
+)
+"record_util.ml" 161 4610 4614 "record_util.ml" 161 4610 4620
+type(
+  'a
+)
+"record_util.ml" 161 4610 4624 "record_util.ml" 161 4610 4631
+type(
+  string
+)
+"record_util.ml" 162 4632 4636 "record_util.ml" 162 4632 4639
+type(
+  'a
+)
+"record_util.ml" 162 4632 4643 "record_util.ml" 162 4632 4647
+type(
+  string
+)
+"record_util.ml" 163 4648 4652 "record_util.ml" 163 4648 4659
+type(
+  'a
+)
+"record_util.ml" 163 4648 4663 "record_util.ml" 163 4648 4671
+type(
+  string
+)
+"record_util.ml" 164 4672 4676 "record_util.ml" 164 4672 4681
+type(
+  'a
+)
+"record_util.ml" 164 4672 4685 "record_util.ml" 164 4672 4691
+type(
+  string
+)
+"record_util.ml" 165 4692 4696 "record_util.ml" 165 4692 4701
+type(
+  'a
+)
+"record_util.ml" 165 4692 4705 "record_util.ml" 165 4692 4711
+type(
+  string
+)
+"record_util.ml" 166 4712 4716 "record_util.ml" 166 4712 4720
+type(
+  'a
+)
+"record_util.ml" 166 4712 4724 "record_util.ml" 166 4712 4729
+type(
+  string
+)
+"record_util.ml" 167 4730 4734 "record_util.ml" 167 4730 4739
+type(
+  'a
+)
+"record_util.ml" 167 4730 4743 "record_util.ml" 167 4730 4749
+type(
+  string
+)
+"record_util.ml" 168 4750 4754 "record_util.ml" 168 4750 4758
+type(
+  'a
+)
+"record_util.ml" 168 4750 4762 "record_util.ml" 168 4750 4767
+type(
+  string
+)
+"record_util.ml" 169 4768 4772 "record_util.ml" 169 4768 4777
+type(
+  'a
+)
+"record_util.ml" 169 4768 4781 "record_util.ml" 169 4768 4787
+type(
+  string
+)
+"record_util.ml" 170 4788 4792 "record_util.ml" 170 4788 4802
+type(
+  'a
+)
+"record_util.ml" 170 4788 4806 "record_util.ml" 170 4788 4817
+type(
+  string
+)
+"record_util.ml" 171 4818 4822 "record_util.ml" 171 4818 4825
+type(
+  'a
+)
+"record_util.ml" 171 4818 4829 "record_util.ml" 171 4818 4833
+type(
+  string
+)
+"record_util.ml" 172 4834 4838 "record_util.ml" 172 4834 4842
+type(
+  'a
+)
+"record_util.ml" 172 4834 4846 "record_util.ml" 172 4834 4851
+type(
+  string
+)
+"record_util.ml" 173 4852 4856 "record_util.ml" 173 4852 4861
+type(
+  'a
+)
+"record_util.ml" 173 4852 4865 "record_util.ml" 173 4852 4871
+type(
+  string
+)
+"record_util.ml" 174 4872 4876 "record_util.ml" 174 4872 4884
+type(
+  'a
+)
+"record_util.ml" 174 4872 4888 "record_util.ml" 174 4872 4897
+type(
+  string
+)
+"record_util.ml" 175 4898 4902 "record_util.ml" 175 4898 4905
+type(
+  'a
+)
+"record_util.ml" 175 4898 4909 "record_util.ml" 175 4898 4913
+type(
+  string
+)
+"record_util.ml" 176 4914 4918 "record_util.ml" 176 4914 4921
+type(
+  'a
+)
+"record_util.ml" 176 4914 4925 "record_util.ml" 176 4914 4929
+type(
+  string
+)
+"record_util.ml" 177 4930 4934 "record_util.ml" 177 4930 4941
+type(
+  'a
+)
+"record_util.ml" 177 4930 4945 "record_util.ml" 177 4930 4953
+type(
+  string
+)
+"record_util.ml" 178 4954 4958 "record_util.ml" 178 4954 4961
+type(
+  'a
+)
+"record_util.ml" 178 4954 4965 "record_util.ml" 178 4954 4969
+type(
+  string
+)
+"record_util.ml" 179 4970 4974 "record_util.ml" 179 4970 4987
+type(
+  'a
+)
+"record_util.ml" 179 4970 4991 "record_util.ml" 179 4970 5001
+type(
+  string
+)
+"record_util.ml" 180 5002 5006 "record_util.ml" 180 5002 5016
+type(
+  'a
+)
+"record_util.ml" 180 5002 5020 "record_util.ml" 180 5002 5027
+type(
+  string
+)
+"record_util.ml" 181 5028 5032 "record_util.ml" 181 5028 5041
+type(
+  'a
+)
+"record_util.ml" 181 5028 5045 "record_util.ml" 181 5028 5055
+type(
+  string
+)
+"record_util.ml" 182 5056 5060 "record_util.ml" 182 5056 5068
+type(
+  'a
+)
+"record_util.ml" 182 5056 5072 "record_util.ml" 182 5056 5081
+type(
+  string
+)
+"record_util.ml" 183 5082 5086 "record_util.ml" 183 5082 5091
+type(
+  'a
+)
+"record_util.ml" 183 5082 5095 "record_util.ml" 183 5082 5101
+type(
+  string
+)
+"record_util.ml" 184 5102 5106 "record_util.ml" 184 5102 5112
+type(
+  'a
+)
+"record_util.ml" 184 5102 5116 "record_util.ml" 184 5102 5123
+type(
+  string
+)
+"record_util.ml" 185 5124 5128 "record_util.ml" 185 5124 5135
+type(
+  'a
+)
+"record_util.ml" 185 5124 5139 "record_util.ml" 185 5124 5147
+type(
+  string
+)
+"record_util.ml" 186 5148 5152 "record_util.ml" 186 5148 5161
+type(
+  'a
+)
+"record_util.ml" 186 5148 5165 "record_util.ml" 186 5148 5175
+type(
+  string
+)
+"record_util.ml" 187 5176 5180 "record_util.ml" 187 5176 5191
+type(
+  'a
+)
+"record_util.ml" 187 5176 5195 "record_util.ml" 187 5176 5207
+type(
+  string
+)
+"record_util.ml" 188 5208 5212 "record_util.ml" 188 5208 5215
+type(
+  'a
+)
+"record_util.ml" 188 5208 5219 "record_util.ml" 188 5208 5223
+type(
+  string
+)
+"record_util.ml" 189 5224 5228 "record_util.ml" 189 5224 5231
+type(
+  'a
+)
+"record_util.ml" 189 5224 5235 "record_util.ml" 189 5224 5239
+type(
+  string
+)
+"record_util.ml" 190 5240 5244 "record_util.ml" 190 5240 5247
+type(
+  'a
+)
+"record_util.ml" 190 5240 5251 "record_util.ml" 190 5240 5255
+type(
+  string
+)
+"record_util.ml" 191 5256 5260 "record_util.ml" 191 5256 5263
+type(
+  'a
+)
+"record_util.ml" 191 5256 5267 "record_util.ml" 191 5256 5271
+type(
+  string
+)
+"record_util.ml" 192 5272 5276 "record_util.ml" 192 5272 5288
+type(
+  'a
+)
+"record_util.ml" 192 5272 5292 "record_util.ml" 192 5272 5305
+type(
+  string
+)
+"record_util.ml" 193 5306 5310 "record_util.ml" 193 5306 5321
+type(
+  'a
+)
+"record_util.ml" 193 5306 5325 "record_util.ml" 193 5306 5337
+type(
+  string
+)
+"record_util.ml" 194 5338 5342 "record_util.ml" 194 5338 5347
+type(
+  'a
+)
+"record_util.ml" 194 5338 5351 "record_util.ml" 194 5338 5357
+type(
+  string
+)
+"record_util.ml" 195 5358 5362 "record_util.ml" 195 5358 5368
+type(
+  'a
+)
+"record_util.ml" 195 5358 5372 "record_util.ml" 195 5358 5379
+type(
+  string
+)
+"record_util.ml" 196 5380 5384 "record_util.ml" 196 5380 5390
+type(
+  'a
+)
+"record_util.ml" 196 5380 5394 "record_util.ml" 196 5380 5401
+type(
+  string
+)
+"record_util.ml" 197 5402 5406 "record_util.ml" 197 5402 5410
+type(
+  'a
+)
+"record_util.ml" 197 5402 5414 "record_util.ml" 197 5402 5419
+type(
+  string
+)
+"record_util.ml" 198 5420 5424 "record_util.ml" 198 5420 5428
+type(
+  'a
+)
+"record_util.ml" 198 5420 5432 "record_util.ml" 198 5420 5437
+type(
+  string
+)
+"record_util.ml" 199 5438 5442 "record_util.ml" 199 5438 5446
+type(
+  'a
+)
+"record_util.ml" 199 5438 5450 "record_util.ml" 199 5438 5455
+type(
+  string
+)
+"record_util.ml" 200 5456 5460 "record_util.ml" 200 5456 5465
+type(
+  'a
+)
+"record_util.ml" 200 5456 5469 "record_util.ml" 200 5456 5475
+type(
+  string
+)
+"record_util.ml" 201 5476 5480 "record_util.ml" 201 5476 5485
+type(
+  'a
+)
+"record_util.ml" 201 5476 5489 "record_util.ml" 201 5476 5495
+type(
+  string
+)
+"record_util.ml" 202 5496 5500 "record_util.ml" 202 5496 5507
+type(
+  'a
+)
+"record_util.ml" 202 5496 5511 "record_util.ml" 202 5496 5519
+type(
+  string
+)
+"record_util.ml" 203 5520 5524 "record_util.ml" 203 5520 5533
+type(
+  'a
+)
+"record_util.ml" 203 5520 5537 "record_util.ml" 203 5520 5547
+type(
+  string
+)
+"record_util.ml" 204 5548 5552 "record_util.ml" 204 5548 5559
+type(
+  'a
+)
+"record_util.ml" 204 5548 5563 "record_util.ml" 204 5548 5571
+type(
+  string
+)
+"record_util.ml" 205 5572 5576 "record_util.ml" 205 5572 5585
+type(
+  'a
+)
+"record_util.ml" 205 5572 5589 "record_util.ml" 205 5572 5599
+type(
+  string
+)
+"record_util.ml" 206 5600 5604 "record_util.ml" 206 5600 5611
+type(
+  'a
+)
+"record_util.ml" 206 5600 5615 "record_util.ml" 206 5600 5623
+type(
+  string
+)
+"record_util.ml" 207 5624 5628 "record_util.ml" 207 5624 5638
+type(
+  'a
+)
+"record_util.ml" 207 5624 5642 "record_util.ml" 207 5624 5653
+type(
+  string
+)
+"record_util.ml" 208 5654 5658 "record_util.ml" 208 5654 5662
+type(
+  'a
+)
+"record_util.ml" 208 5654 5666 "record_util.ml" 208 5654 5671
+type(
+  string
+)
+"record_util.ml" 144 4303 4305 "record_util.ml" 208 5654 5671
+type(
+  string
+)
+"record_util.ml" 210 5673 5677 "record_util.ml" 210 5673 5703
+type(
+  [< `cancelled | `cancelling | `failure | `pending | `success ] -> string
+)
+ident(
+  def task_status_type_to_string "record_util.ml" 218 5874 5874 --
+)
+"record_util.ml" 210 5673 5704 "record_util.ml" 210 5673 5705
+type(
+  [< `cancelled | `cancelling | `failure | `pending | `success ] as 'a
+)
+ident(
+  def s "record_util.ml" 211 5708 5710 "record_util.ml" 216 5841 5872
+)
+"record_util.ml" 211 5708 5716 "record_util.ml" 211 5708 5717
+type(
+  'a
+)
+ident(
+  int_ref s "record_util.ml" 210 5673 5704 "record_util.ml" 210 5673 5705
+)
+"record_util.ml" 212 5723 5729 "record_util.ml" 212 5723 5737
+type(
+  'a
+)
+"record_util.ml" 212 5723 5741 "record_util.ml" 212 5723 5750
+type(
+  string
+)
+"record_util.ml" 213 5751 5757 "record_util.ml" 213 5751 5765
+type(
+  'a
+)
+"record_util.ml" 213 5751 5769 "record_util.ml" 213 5751 5778
+type(
+  string
+)
+"record_util.ml" 214 5779 5785 "record_util.ml" 214 5779 5793
+type(
+  'a
+)
+"record_util.ml" 214 5779 5797 "record_util.ml" 214 5779 5806
+type(
+  string
+)
+"record_util.ml" 215 5807 5813 "record_util.ml" 215 5807 5824
+type(
+  'a
+)
+"record_util.ml" 215 5807 5828 "record_util.ml" 215 5807 5840
+type(
+  string
+)
+"record_util.ml" 216 5841 5847 "record_util.ml" 216 5841 5857
+type(
+  'a
+)
+"record_util.ml" 216 5841 5861 "record_util.ml" 216 5841 5872
+type(
+  string
+)
+"record_util.ml" 211 5708 5710 "record_util.ml" 216 5841 5872
+type(
+  string
+)
+"record_util.ml" 218 5874 5878 "record_util.ml" 218 5874 5896
+type(
+  [< `rdp | `rfb | `vt100 ] -> string
+)
+ident(
+  def protocol_to_string "record_util.ml" 223 5967 5967 --
+)
+"record_util.ml" 219 5908 5912 "record_util.ml" 219 5908 5918
+type(
+  [< `rdp | `rfb | `vt100 ] as 'a
+)
+"record_util.ml" 219 5908 5922 "record_util.ml" 219 5908 5929
+type(
+  string
+)
+"record_util.ml" 220 5930 5934 "record_util.ml" 220 5930 5938
+type(
+  'a
+)
+"record_util.ml" 220 5930 5942 "record_util.ml" 220 5930 5947
+type(
+  string
+)
+"record_util.ml" 221 5948 5952 "record_util.ml" 221 5948 5956
+type(
+  'a
+)
+"record_util.ml" 221 5948 5960 "record_util.ml" 221 5948 5965
+type(
+  string
+)
+"record_util.ml" 218 5874 5899 "record_util.ml" 221 5948 5965
+type(
+  'a -> string
+)
+"record_util.ml" 223 5967 5971 "record_util.ml" 223 5967 5997
+type(
+  [< `ACC
+   | `ACPI
+   | `APIC
+   | `CENTAURMCR
+   | `CID
+   | `CLFLSH
+   | `CMOV
+   | `CMPLEGACY
+   | `CONSTANTTSC
+   | `CX16
+   | `CX8
+   | `CXMMX
+   | `CYRIXARR
+   | `DE
+   | `DSCPL
+   | `DTES
+   | `EST
+   | `FPU
+   | `FXSAVELEAK
+   | `FXSR
+   | `HT
+   | `IA64
+   | `K6MTRR
+   | `K7
+   | `K8
+   | `LAHFLM
+   | `LM
+   | `LONGRUN
+   | `LRTI
+   | `MCA
+   | `MCE
+   | `MMX
+   | `MMXEXT
+   | `MP
+   | `MSR
+   | `MTRR
+   | `MWAIT
+   | `NX
+   | `P3
+   | `P4
+   | `PAE
+   | `PAT
+   | `PGE
+   | `PN
+   | `PSE
+   | `PSE36
+   | `RECOVERY
+   | `SELFSNOOP
+   | `SEP
+   | `SYSCALL
+   | `THREEDNOW
+   | `THREEDNOWEXT
+   | `TM2
+   | `TSC
+   | `VME
+   | `VMX
+   | `XCRYPT
+   | `XCRYPTEN
+   | `XMM
+   | `XMM2
+   | `XMM3
+   | `XSTORE
+   | `XSTOREEN
+   | `XTPR ]
+  list -> string
+)
+ident(
+  def cpu_feature_list_to_string "record_util.ml" 226 6077 6077 --
+)
+"record_util.ml" 223 5967 5998 "record_util.ml" 223 5967 6002
+type(
+  ([< `ACC
+    | `ACPI
+    | `APIC
+    | `CENTAURMCR
+    | `CID
+    | `CLFLSH
+    | `CMOV
+    | `CMPLEGACY
+    | `CONSTANTTSC
+    | `CX16
+    | `CX8
+    | `CXMMX
+    | `CYRIXARR
+    | `DE
+    | `DSCPL
+    | `DTES
+    | `EST
+    | `FPU
+    | `FXSAVELEAK
+    | `FXSR
+    | `HT
+    | `IA64
+    | `K6MTRR
+    | `K7
+    | `K8
+    | `LAHFLM
+    | `LM
+    | `LONGRUN
+    | `LRTI
+    | `MCA
+    | `MCE
+    | `MMX
+    | `MMXEXT
+    | `MP
+    | `MSR
+    | `MTRR
+    | `MWAIT
+    | `NX
+    | `P3
+    | `P4
+    | `PAE
+    | `PAT
+    | `PGE
+    | `PN
+    | `PSE
+    | `PSE36
+    | `RECOVERY
+    | `SELFSNOOP
+    | `SEP
+    | `SYSCALL
+    | `THREEDNOW
+    | `THREEDNOWEXT
+    | `TM2
+    | `TSC
+    | `VME
+    | `VMX
+    | `XCRYPT
+    | `XCRYPTEN
+    | `XMM
+    | `XMM2
+    | `XMM3
+    | `XSTORE
+    | `XSTOREEN
+    | `XTPR ]
+   as 'a)
+  list
+)
+ident(
+  def list "record_util.ml" 224 6005 6007 "record_util.ml" 224 6005 6075
+)
+"record_util.ml" 224 6005 6007 "record_util.ml" 224 6005 6020
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"record_util.ml" 224 6005 6021 "record_util.ml" 224 6005 6024
+type(
+  string
+)
+"record_util.ml" 224 6005 6026 "record_util.ml" 224 6005 6034
+type(
+  ('a -> string) -> 'a list -> string list
+)
+ident(
+  ext_ref List.map
+)
+"record_util.ml" 224 6005 6040 "record_util.ml" 224 6005 6041
+type(
+  'a
+)
+ident(
+  def x "record_util.ml" 224 6005 6045 "record_util.ml" 224 6005 6068
+)
+"record_util.ml" 224 6005 6045 "record_util.ml" 224 6005 6066
+type(
+  'a -> string
+)
+ident(
+  int_ref cpu_feature_to_string "record_util.ml" 143 4273 4277 "record_util.ml" 143 4273 4298
+)
+"record_util.ml" 224 6005 6067 "record_util.ml" 224 6005 6068
+type(
+  'a
+)
+ident(
+  int_ref x "record_util.ml" 224 6005 6040 "record_util.ml" 224 6005 6041
+)
+"record_util.ml" 224 6005 6045 "record_util.ml" 224 6005 6068
+type(
+  string
+)
+"record_util.ml" 224 6005 6035 "record_util.ml" 224 6005 6069
+type(
+  'a -> string
+)
+"record_util.ml" 224 6005 6070 "record_util.ml" 224 6005 6074
+type(
+  'a list
+)
+ident(
+  int_ref list "record_util.ml" 223 5967 5998 "record_util.ml" 223 5967 6002
+)
+"record_util.ml" 224 6005 6025 "record_util.ml" 224 6005 6075
+type(
+  string list
+)
+"record_util.ml" 224 6005 6007 "record_util.ml" 224 6005 6075
+type(
+  string
+)
+"record_util.ml" 226 6077 6081 "record_util.ml" 226 6077 6114
+type(
+  [< `cancel ] -> string
+)
+ident(
+  def task_allowed_operations_to_string "record_util.ml" 230 6161 6161 --
+)
+"record_util.ml" 226 6077 6115 "record_util.ml" 226 6077 6116
+type(
+  [< `cancel ] as 'a
+)
+ident(
+  def s "record_util.ml" 227 6119 6121 "record_util.ml" 228 6134 6159
+)
+"record_util.ml" 227 6119 6127 "record_util.ml" 227 6119 6128
+type(
+  'a
+)
+ident(
+  int_ref s "record_util.ml" 226 6077 6115 "record_util.ml" 226 6077 6116
+)
+"record_util.ml" 228 6134 6140 "record_util.ml" 228 6134 6147
+type(
+  'a
+)
+"record_util.ml" 228 6134 6151 "record_util.ml" 228 6134 6159
+type(
+  string
+)
+"record_util.ml" 227 6119 6121 "record_util.ml" 228 6134 6159
+type(
+  string
+)
+"record_util.ml" 230 6161 6165 "record_util.ml" 230 6161 6186
+type(
+  [< `Error | `Info | `Warn ] -> string
+)
+ident(
+  def alert_level_to_string "record_util.ml" 236 6272 6272 --
+)
+"record_util.ml" 230 6161 6187 "record_util.ml" 230 6161 6188
+type(
+  [< `Error | `Info | `Warn ] as 'a
+)
+ident(
+  def s "record_util.ml" 231 6191 6193 "record_util.ml" 234 6249 6270
+)
+"record_util.ml" 231 6191 6199 "record_util.ml" 231 6191 6200
+type(
+  'a
+)
+ident(
+  int_ref s "record_util.ml" 230 6161 6187 "record_util.ml" 230 6161 6188
+)
+"record_util.ml" 232 6206 6210 "record_util.ml" 232 6206 6215
+type(
+  'a
+)
+"record_util.ml" 232 6206 6219 "record_util.ml" 232 6206 6225
+type(
+  string
+)
+"record_util.ml" 233 6226 6230 "record_util.ml" 233 6226 6235
+type(
+  'a
+)
+"record_util.ml" 233 6226 6239 "record_util.ml" 233 6226 6248
+type(
+  string
+)
+"record_util.ml" 234 6249 6253 "record_util.ml" 234 6249 6259
+type(
+  'a
+)
+"record_util.ml" 234 6249 6263 "record_util.ml" 234 6249 6270
+type(
+  string
+)
+"record_util.ml" 231 6191 6193 "record_util.ml" 234 6249 6270
+type(
+  string
+)
+"record_util.ml" 236 6272 6276 "record_util.ml" 236 6272 6300
+type(
+  [< `destroy | `restart ] -> string
+)
+ident(
+  def on_normal_exit_to_string "record_util.ml" 241 6373 6373 --
+)
+"record_util.ml" 236 6272 6301 "record_util.ml" 236 6272 6302
+type(
+  [< `destroy | `restart ] as 'a
+)
+ident(
+  def x "record_util.ml" 237 6305 6307 "record_util.ml" 239 6346 6371
+)
+"record_util.ml" 237 6305 6313 "record_util.ml" 237 6305 6314
+type(
+  'a
+)
+ident(
+  int_ref x "record_util.ml" 236 6272 6301 "record_util.ml" 236 6272 6302
+)
+"record_util.ml" 238 6320 6324 "record_util.ml" 238 6320 6332
+type(
+  'a
+)
+"record_util.ml" 238 6320 6336 "record_util.ml" 238 6320 6345
+type(
+  string
+)
+"record_util.ml" 239 6346 6350 "record_util.ml" 239 6346 6358
+type(
+  'a
+)
+"record_util.ml" 239 6346 6362 "record_util.ml" 239 6346 6371
+type(
+  string
+)
+"record_util.ml" 237 6305 6307 "record_util.ml" 239 6346 6371
+type(
+  string
+)
+"record_util.ml" 241 6373 6377 "record_util.ml" 241 6373 6401
+type(
+  string -> [> `destroy | `restart ]
+)
+ident(
+  def string_to_on_normal_exit "record_util.ml" 247 6567 6567 --
+)
+"record_util.ml" 241 6373 6402 "record_util.ml" 241 6373 6403
+type(
+  string
+)
+ident(
+  def s "record_util.ml" 242 6406 6408 "record_util.ml" 245 6490 6565
+)
+"record_util.ml" 242 6406 6414 "record_util.ml" 242 6406 6430
+type(
+  string -> string
+)
+ident(
+  ext_ref Stringext.( String ).lowercase
+)
+"record_util.ml" 242 6406 6431 "record_util.ml" 242 6406 6432
+type(
+  string
+)
+ident(
+  int_ref s "record_util.ml" 241 6373 6402 "record_util.ml" 241 6373 6403
+)
+"record_util.ml" 242 6406 6414 "record_util.ml" 242 6406 6432
+type(
+  string
+)
+"record_util.ml" 243 6438 6442 "record_util.ml" 243 6438 6451
+type(
+  string
+)
+"record_util.ml" 243 6438 6455 "record_util.ml" 243 6438 6463
+type(
+  [> `destroy | `restart ] as 'a
+)
+"record_util.ml" 244 6464 6468 "record_util.ml" 244 6464 6477
+type(
+  string
+)
+"record_util.ml" 244 6464 6481 "record_util.ml" 244 6464 6489
+type(
+  'a
+)
+"record_util.ml" 245 6490 6494 "record_util.ml" 245 6490 6495
+type(
+  string
+)
+"record_util.ml" 245 6490 6499 "record_util.ml" 245 6490 6504
+type(
+  exn -> 'a
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"record_util.ml" 245 6490 6522 "record_util.ml" 245 6490 6561
+type(
+  string
+)
+"record_util.ml" 245 6490 6561 "record_util.ml" 245 6490 6562
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"record_util.ml" 245 6490 6562 "record_util.ml" 245 6490 6563
+type(
+  string
+)
+ident(
+  int_ref s "record_util.ml" 241 6373 6402 "record_util.ml" 241 6373 6403
+)
+"record_util.ml" 245 6490 6521 "record_util.ml" 245 6490 6564
+type(
+  string
+)
+"record_util.ml" 245 6490 6505 "record_util.ml" 245 6490 6565
+type(
+  exn
+)
+"record_util.ml" 245 6490 6499 "record_util.ml" 245 6490 6565
+type(
+  'a
+)
+"record_util.ml" 242 6406 6408 "record_util.ml" 245 6490 6565
+type(
+  'a
+)
+"record_util.ml" 247 6567 6571 "record_util.ml" 247 6567 6599
+type(
+  [< `coredump_and_destroy
+   | `coredump_and_restart
+   | `destroy
+   | `preserve
+   | `rename_restart
+   | `restart ] ->
+  string
+)
+ident(
+  def on_crash_behaviour_to_string "record_util.ml" 256 6838 6838 --
+)
+"record_util.ml" 247 6567 6600 "record_util.ml" 247 6567 6601
+type(
+  [< `coredump_and_destroy
+   | `coredump_and_restart
+   | `destroy
+   | `preserve
+   | `rename_restart
+   | `restart ]
+  as 'a
+)
+ident(
+  def x "record_util.ml" 248 6603 6604 "record_util.ml" 254 6798 6836
+)
+"record_util.ml" 248 6603 6610 "record_util.ml" 248 6603 6611
+type(
+  'a
+)
+ident(
+  int_ref x "record_util.ml" 247 6567 6600 "record_util.ml" 247 6567 6601
+)
+"record_util.ml" 249 6617 6620 "record_util.ml" 249 6617 6628
+type(
+  'a
+)
+"record_util.ml" 249 6617 6632 "record_util.ml" 249 6617 6641
+type(
+  string
+)
+"record_util.ml" 250 6642 6645 "record_util.ml" 250 6642 6666
+type(
+  'a
+)
+"record_util.ml" 250 6642 6670 "record_util.ml" 250 6642 6693
+type(
+  string
+)
+"record_util.ml" 251 6694 6697 "record_util.ml" 251 6694 6705
+type(
+  'a
+)
+"record_util.ml" 251 6694 6709 "record_util.ml" 251 6694 6718
+type(
+  string
+)
+"record_util.ml" 252 6719 6722 "record_util.ml" 252 6719 6743
+type(
+  'a
+)
+"record_util.ml" 252 6719 6747 "record_util.ml" 252 6719 6770
+type(
+  string
+)
+"record_util.ml" 253 6771 6774 "record_util.ml" 253 6771 6783
+type(
+  'a
+)
+"record_util.ml" 253 6771 6787 "record_util.ml" 253 6771 6797
+type(
+  string
+)
+"record_util.ml" 254 6798 6801 "record_util.ml" 254 6798 6816
+type(
+  'a
+)
+"record_util.ml" 254 6798 6820 "record_util.ml" 254 6798 6836
+type(
+  string
+)
+"record_util.ml" 248 6603 6604 "record_util.ml" 254 6798 6836
+type(
+  string
+)
+"record_util.ml" 256 6838 6842 "record_util.ml" 256 6838 6870
+type(
+  string ->
+  [> `coredump_and_destroy
+   | `coredump_and_restart
+   | `destroy
+   | `preserve
+   | `rename_restart
+   | `restart ]
+)
+ident(
+  def string_to_on_crash_behaviour "record_util.ml" 267 7283 7283 --
+)
+"record_util.ml" 256 6838 6871 "record_util.ml" 256 6838 6872
+type(
+  string
+)
+ident(
+  def s "record_util.ml" 257 6874 6875 "record_util.ml" 265 7202 7281
+)
+"record_util.ml" 257 6874 6881 "record_util.ml" 257 6874 6897
+type(
+  string -> string
+)
+ident(
+  ext_ref Stringext.( String ).lowercase
+)
+"record_util.ml" 257 6874 6898 "record_util.ml" 257 6874 6899
+type(
+  string
+)
+ident(
+  int_ref s "record_util.ml" 256 6838 6871 "record_util.ml" 256 6838 6872
+)
+"record_util.ml" 257 6874 6881 "record_util.ml" 257 6874 6899
+type(
+  string
+)
+"record_util.ml" 258 6905 6908 "record_util.ml" 258 6905 6917
+type(
+  string
+)
+"record_util.ml" 258 6905 6921 "record_util.ml" 258 6905 6929
+type(
+  [> `coredump_and_destroy
+   | `coredump_and_restart
+   | `destroy
+   | `preserve
+   | `rename_restart
+   | `restart ]
+  as 'a
+)
+"record_util.ml" 259 6930 6933 "record_util.ml" 259 6930 6955
+type(
+  string
+)
+"record_util.ml" 259 6930 6959 "record_util.ml" 259 6930 6980
+type(
+  'a
+)
+"record_util.ml" 260 6981 6984 "record_util.ml" 260 6981 6993
+type(
+  string
+)
+"record_util.ml" 260 6981 6997 "record_util.ml" 260 6981 7005
+type(
+  'a
+)
+"record_util.ml" 261 7006 7009 "record_util.ml" 261 7006 7031
+type(
+  string
+)
+"record_util.ml" 261 7006 7035 "record_util.ml" 261 7006 7056
+type(
+  'a
+)
+"record_util.ml" 262 7057 7060 "record_util.ml" 262 7057 7070
+type(
+  string
+)
+"record_util.ml" 262 7057 7074 "record_util.ml" 262 7057 7083
+type(
+  'a
+)
+"record_util.ml" 263 7084 7087 "record_util.ml" 263 7084 7103
+type(
+  string
+)
+"record_util.ml" 263 7084 7107 "record_util.ml" 263 7084 7122
+type(
+  'a
+)
+"record_util.ml" 264 7123 7126 "record_util.ml" 264 7123 7127
+type(
+  string
+)
+"record_util.ml" 264 7123 7131 "record_util.ml" 264 7123 7136
+type(
+  exn -> 'a
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"record_util.ml" 264 7123 7154 "record_util.ml" 264 7123 7199
+type(
+  string
+)
+"record_util.ml" 264 7123 7200 "record_util.ml" 264 7123 7201
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"record_util.ml" 265 7202 7204 "record_util.ml" 265 7202 7277
+type(
+  string
+)
+"record_util.ml" 265 7202 7277 "record_util.ml" 265 7202 7278
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"record_util.ml" 265 7202 7278 "record_util.ml" 265 7202 7279
+type(
+  string
+)
+ident(
+  int_ref s "record_util.ml" 256 6838 6871 "record_util.ml" 256 6838 6872
+)
+"record_util.ml" 265 7202 7204 "record_util.ml" 265 7202 7279
+type(
+  string
+)
+"record_util.ml" 264 7123 7153 "record_util.ml" 265 7202 7280
+type(
+  string
+)
+"record_util.ml" 264 7123 7137 "record_util.ml" 265 7202 7281
+type(
+  exn
+)
+"record_util.ml" 264 7123 7131 "record_util.ml" 265 7202 7281
+type(
+  'a
+)
+"record_util.ml" 257 6874 6875 "record_util.ml" 265 7202 7281
+type(
+  'a
+)
+"record_util.ml" 267 7283 7287 "record_util.ml" 267 7283 7306
+type(
+  [< `bios | `grub | `kernelexternal ] -> string
+)
+ident(
+  def boot_type_to_string "record_util.ml" 273 7408 7408 --
+)
+"record_util.ml" 267 7283 7307 "record_util.ml" 267 7283 7308
+type(
+  [< `bios | `grub | `kernelexternal ] as 'a
+)
+ident(
+  def x "record_util.ml" 268 7311 7313 "record_util.ml" 271 7366 7406
+)
+"record_util.ml" 268 7311 7319 "record_util.ml" 268 7311 7320
+type(
+  'a
+)
+ident(
+  int_ref x "record_util.ml" 267 7283 7307 "record_util.ml" 267 7283 7308
+)
+"record_util.ml" 269 7326 7330 "record_util.ml" 269 7326 7335
+type(
+  'a
+)
+"record_util.ml" 269 7326 7339 "record_util.ml" 269 7326 7345
+type(
+  string
+)
+"record_util.ml" 270 7346 7350 "record_util.ml" 270 7346 7355
+type(
+  'a
+)
+"record_util.ml" 270 7346 7359 "record_util.ml" 270 7346 7365
+type(
+  string
+)
+"record_util.ml" 271 7366 7370 "record_util.ml" 271 7366 7385
+type(
+  'a
+)
+"record_util.ml" 271 7366 7389 "record_util.ml" 271 7366 7406
+type(
+  string
+)
+"record_util.ml" 268 7311 7313 "record_util.ml" 271 7366 7406
+type(
+  string
+)
+"record_util.ml" 273 7408 7412 "record_util.ml" 273 7408 7431
+type(
+  string -> [> `bios | `grub | `kernelexternal ]
+)
+ident(
+  def string_to_boot_type "record_util.ml" 280 7637 7637 --
+)
+"record_util.ml" 273 7408 7432 "record_util.ml" 273 7408 7433
+type(
+  string
+)
+ident(
+  def s "record_util.ml" 274 7436 7438 "record_util.ml" 278 7548 7635
+)
+"record_util.ml" 274 7436 7444 "record_util.ml" 274 7436 7460
+type(
+  string -> string
+)
+ident(
+  ext_ref Stringext.( String ).lowercase
+)
+"record_util.ml" 274 7436 7461 "record_util.ml" 274 7436 7462
+type(
+  string
+)
+ident(
+  int_ref s "record_util.ml" 273 7408 7432 "record_util.ml" 273 7408 7433
+)
+"record_util.ml" 274 7436 7444 "record_util.ml" 274 7436 7462
+type(
+  string
+)
+"record_util.ml" 275 7468 7472 "record_util.ml" 275 7468 7478
+type(
+  string
+)
+"record_util.ml" 275 7468 7482 "record_util.ml" 275 7468 7487
+type(
+  [> `bios | `grub | `kernelexternal ] as 'a
+)
+"record_util.ml" 276 7488 7492 "record_util.ml" 276 7488 7498
+type(
+  string
+)
+"record_util.ml" 276 7488 7502 "record_util.ml" 276 7488 7507
+type(
+  'a
+)
+"record_util.ml" 277 7508 7512 "record_util.ml" 277 7508 7528
+type(
+  string
+)
+"record_util.ml" 277 7508 7532 "record_util.ml" 277 7508 7547
+type(
+  'a
+)
+"record_util.ml" 278 7548 7552 "record_util.ml" 278 7548 7553
+type(
+  string
+)
+"record_util.ml" 278 7548 7557 "record_util.ml" 278 7548 7562
+type(
+  exn -> 'a
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"record_util.ml" 278 7548 7580 "record_util.ml" 278 7548 7631
+type(
+  string
+)
+"record_util.ml" 278 7548 7631 "record_util.ml" 278 7548 7632
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"record_util.ml" 278 7548 7632 "record_util.ml" 278 7548 7633
+type(
+  string
+)
+ident(
+  int_ref s "record_util.ml" 273 7408 7432 "record_util.ml" 273 7408 7433
+)
+"record_util.ml" 278 7548 7579 "record_util.ml" 278 7548 7634
+type(
+  string
+)
+"record_util.ml" 278 7548 7563 "record_util.ml" 278 7548 7635
+type(
+  exn
+)
+"record_util.ml" 278 7548 7557 "record_util.ml" 278 7548 7635
+type(
+  'a
+)
+"record_util.ml" 274 7436 7438 "record_util.ml" 278 7548 7635
+type(
+  'a
+)
+"record_util.ml" 280 7637 7641 "record_util.ml" 280 7637 7661
+type(
+  string -> [> `persist | `reset ]
+)
+ident(
+  def string_to_vdi_onboot "record_util.ml" 286 7820 7820 --
+)
+"record_util.ml" 280 7637 7662 "record_util.ml" 280 7637 7663
+type(
+  string
+)
+ident(
+  def s "record_util.ml" 281 7666 7667 "record_util.ml" 284 7745 7818
+)
+"record_util.ml" 281 7666 7673 "record_util.ml" 281 7666 7689
+type(
+  string -> string
+)
+ident(
+  ext_ref Stringext.( String ).lowercase
+)
+"record_util.ml" 281 7666 7690 "record_util.ml" 281 7666 7691
+type(
+  string
+)
+ident(
+  int_ref s "record_util.ml" 280 7637 7662 "record_util.ml" 280 7637 7663
+)
+"record_util.ml" 281 7666 7673 "record_util.ml" 281 7666 7691
+type(
+  string
+)
+"record_util.ml" 282 7697 7701 "record_util.ml" 282 7697 7710
+type(
+  string
+)
+"record_util.ml" 282 7697 7714 "record_util.ml" 282 7697 7722
+type(
+  [> `persist | `reset ] as 'a
+)
+"record_util.ml" 283 7723 7727 "record_util.ml" 283 7723 7734
+type(
+  string
+)
+"record_util.ml" 283 7723 7738 "record_util.ml" 283 7723 7744
+type(
+  'a
+)
+"record_util.ml" 284 7745 7749 "record_util.ml" 284 7745 7750
+type(
+  string
+)
+"record_util.ml" 284 7745 7754 "record_util.ml" 284 7745 7759
+type(
+  exn -> 'a
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"record_util.ml" 284 7745 7777 "record_util.ml" 284 7745 7814
+type(
+  string
+)
+"record_util.ml" 284 7745 7814 "record_util.ml" 284 7745 7815
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"record_util.ml" 284 7745 7815 "record_util.ml" 284 7745 7816
+type(
+  string
+)
+ident(
+  int_ref s "record_util.ml" 280 7637 7662 "record_util.ml" 280 7637 7663
+)
+"record_util.ml" 284 7745 7776 "record_util.ml" 284 7745 7817
+type(
+  string
+)
+"record_util.ml" 284 7745 7760 "record_util.ml" 284 7745 7818
+type(
+  exn
+)
+"record_util.ml" 284 7745 7754 "record_util.ml" 284 7745 7818
+type(
+  'a
+)
+"record_util.ml" 281 7666 7667 "record_util.ml" 284 7745 7818
+type(
+  'a
+)
+"record_util.ml" 286 7820 7824 "record_util.ml" 286 7820 7842
+type(
+  string -> [> `RO | `RW ]
+)
+ident(
+  def string_to_vbd_mode "record_util.ml" 292 7977 7977 --
+)
+"record_util.ml" 286 7820 7843 "record_util.ml" 286 7820 7844
+type(
+  string
+)
+ident(
+  def s "record_util.ml" 287 7847 7848 "record_util.ml" 290 7910 7975
+)
+"record_util.ml" 287 7847 7854 "record_util.ml" 287 7847 7870
+type(
+  string -> string
+)
+ident(
+  ext_ref Stringext.( String ).lowercase
+)
+"record_util.ml" 287 7847 7871 "record_util.ml" 287 7847 7872
+type(
+  string
+)
+ident(
+  int_ref s "record_util.ml" 286 7820 7843 "record_util.ml" 286 7820 7844
+)
+"record_util.ml" 287 7847 7854 "record_util.ml" 287 7847 7872
+type(
+  string
+)
+"record_util.ml" 288 7878 7882 "record_util.ml" 288 7878 7886
+type(
+  string
+)
+"record_util.ml" 288 7878 7890 "record_util.ml" 288 7878 7893
+type(
+  [> `RO | `RW ] as 'a
+)
+"record_util.ml" 289 7894 7898 "record_util.ml" 289 7894 7902
+type(
+  string
+)
+"record_util.ml" 289 7894 7906 "record_util.ml" 289 7894 7909
+type(
+  'a
+)
+"record_util.ml" 290 7910 7914 "record_util.ml" 290 7910 7915
+type(
+  string
+)
+"record_util.ml" 290 7910 7919 "record_util.ml" 290 7910 7924
+type(
+  exn -> 'a
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"record_util.ml" 290 7910 7942 "record_util.ml" 290 7910 7971
+type(
+  string
+)
+"record_util.ml" 290 7910 7971 "record_util.ml" 290 7910 7972
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"record_util.ml" 290 7910 7972 "record_util.ml" 290 7910 7973
+type(
+  string
+)
+ident(
+  int_ref s "record_util.ml" 286 7820 7843 "record_util.ml" 286 7820 7844
+)
+"record_util.ml" 290 7910 7941 "record_util.ml" 290 7910 7974
+type(
+  string
+)
+"record_util.ml" 290 7910 7925 "record_util.ml" 290 7910 7975
+type(
+  exn
+)
+"record_util.ml" 290 7910 7919 "record_util.ml" 290 7910 7975
+type(
+  'a
+)
+"record_util.ml" 287 7847 7848 "record_util.ml" 290 7910 7975
+type(
+  'a
+)
+"record_util.ml" 292 7977 7981 "record_util.ml" 292 7977 7999
+type(
+  string -> [> `CD | `Disk ]
+)
+ident(
+  def string_to_vbd_type "record_util.ml" 298 8140 8140 --
+)
+"record_util.ml" 292 7977 8000 "record_util.ml" 292 7977 8001
+type(
+  string
+)
+ident(
+  def s "record_util.ml" 293 8004 8005 "record_util.ml" 296 8071 8138
+)
+"record_util.ml" 293 8004 8011 "record_util.ml" 293 8004 8027
+type(
+  string -> string
+)
+ident(
+  ext_ref Stringext.( String ).lowercase
+)
+"record_util.ml" 293 8004 8028 "record_util.ml" 293 8004 8029
+type(
+  string
+)
+ident(
+  int_ref s "record_util.ml" 292 7977 8000 "record_util.ml" 292 7977 8001
+)
+"record_util.ml" 293 8004 8011 "record_util.ml" 293 8004 8029
+type(
+  string
+)
+"record_util.ml" 294 8035 8039 "record_util.ml" 294 8035 8043
+type(
+  string
+)
+"record_util.ml" 294 8035 8047 "record_util.ml" 294 8035 8050
+type(
+  [> `CD | `Disk ] as 'a
+)
+"record_util.ml" 295 8051 8055 "record_util.ml" 295 8051 8061
+type(
+  string
+)
+"record_util.ml" 295 8051 8065 "record_util.ml" 295 8051 8070
+type(
+  'a
+)
+"record_util.ml" 296 8071 8075 "record_util.ml" 296 8071 8076
+type(
+  string
+)
+"record_util.ml" 296 8071 8080 "record_util.ml" 296 8071 8085
+type(
+  exn -> 'a
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"record_util.ml" 296 8071 8103 "record_util.ml" 296 8071 8134
+type(
+  string
+)
+"record_util.ml" 296 8071 8134 "record_util.ml" 296 8071 8135
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"record_util.ml" 296 8071 8135 "record_util.ml" 296 8071 8136
+type(
+  string
+)
+ident(
+  int_ref s "record_util.ml" 292 7977 8000 "record_util.ml" 292 7977 8001
+)
+"record_util.ml" 296 8071 8102 "record_util.ml" 296 8071 8137
+type(
+  string
+)
+"record_util.ml" 296 8071 8086 "record_util.ml" 296 8071 8138
+type(
+  exn
+)
+"record_util.ml" 296 8071 8080 "record_util.ml" 296 8071 8138
+type(
+  'a
+)
+"record_util.ml" 293 8004 8005 "record_util.ml" 296 8071 8138
+type(
+  'a
+)
+"record_util.ml" 298 8140 8144 "record_util.ml" 298 8140 8159
+type(
+  [< `Halted | `Migrating | `Paused | `Running | `ShuttingDown | `Suspended ] ->
+  string
+)
+ident(
+  def power_to_string "record_util.ml" 307 8363 8363 --
+)
+"record_util.ml" 298 8140 8160 "record_util.ml" 298 8140 8161
+type(
+  [< `Halted | `Migrating | `Paused | `Running | `ShuttingDown | `Suspended ]
+  as 'a
+)
+ident(
+  def h "record_util.ml" 299 8164 8166 "record_util.ml" 305 8330 8361
+)
+"record_util.ml" 299 8164 8172 "record_util.ml" 299 8164 8173
+type(
+  'a
+)
+ident(
+  int_ref h "record_util.ml" 298 8140 8160 "record_util.ml" 298 8140 8161
+)
+"record_util.ml" 300 8179 8185 "record_util.ml" 300 8179 8192
+type(
+  'a
+)
+"record_util.ml" 300 8179 8196 "record_util.ml" 300 8179 8204
+type(
+  string
+)
+"record_util.ml" 301 8205 8211 "record_util.ml" 301 8205 8218
+type(
+  'a
+)
+"record_util.ml" 301 8205 8222 "record_util.ml" 301 8205 8230
+type(
+  string
+)
+"record_util.ml" 302 8231 8237 "record_util.ml" 302 8231 8245
+type(
+  'a
+)
+"record_util.ml" 302 8231 8249 "record_util.ml" 302 8231 8258
+type(
+  string
+)
+"record_util.ml" 303 8259 8265 "record_util.ml" 303 8259 8275
+type(
+  'a
+)
+"record_util.ml" 303 8259 8279 "record_util.ml" 303 8259 8290
+type(
+  string
+)
+"record_util.ml" 304 8291 8297 "record_util.ml" 304 8291 8310
+type(
+  'a
+)
+"record_util.ml" 304 8291 8314 "record_util.ml" 304 8291 8329
+type(
+  string
+)
+"record_util.ml" 305 8330 8336 "record_util.ml" 305 8330 8346
+type(
+  'a
+)
+"record_util.ml" 305 8330 8350 "record_util.ml" 305 8330 8361
+type(
+  string
+)
+"record_util.ml" 299 8164 8166 "record_util.ml" 305 8330 8361
+type(
+  string
+)
+"record_util.ml" 307 8363 8367 "record_util.ml" 307 8363 8385
+type(
+  [< `crashdump
+   | `ephemeral
+   | `ha_statefile
+   | `metadata
+   | `redo_log
+   | `suspend
+   | `system
+   | `user ] ->
+  string
+)
+ident(
+  def vdi_type_to_string "record_util.ml" 318 8628 8628 --
+)
+"record_util.ml" 307 8363 8386 "record_util.ml" 307 8363 8387
+type(
+  [< `crashdump
+   | `ephemeral
+   | `ha_statefile
+   | `metadata
+   | `redo_log
+   | `suspend
+   | `system
+   | `user ]
+  as 'a
+)
+ident(
+  def t "record_util.ml" 308 8390 8392 "record_util.ml" 316 8599 8626
+)
+"record_util.ml" 308 8390 8398 "record_util.ml" 308 8390 8399
+type(
+  'a
+)
+ident(
+  int_ref t "record_util.ml" 307 8363 8386 "record_util.ml" 307 8363 8387
+)
+"record_util.ml" 309 8405 8409 "record_util.ml" 309 8405 8416
+type(
+  'a
+)
+"record_util.ml" 309 8405 8420 "record_util.ml" 309 8405 8428
+type(
+  string
+)
+"record_util.ml" 310 8429 8433 "record_util.ml" 310 8429 8438
+type(
+  'a
+)
+"record_util.ml" 310 8429 8442 "record_util.ml" 310 8429 8448
+type(
+  string
+)
+"record_util.ml" 311 8449 8453 "record_util.ml" 311 8449 8463
+type(
+  'a
+)
+"record_util.ml" 311 8449 8467 "record_util.ml" 311 8449 8478
+type(
+  string
+)
+"record_util.ml" 312 8479 8483 "record_util.ml" 312 8479 8491
+type(
+  'a
+)
+"record_util.ml" 312 8479 8495 "record_util.ml" 312 8479 8504
+type(
+  string
+)
+"record_util.ml" 313 8505 8509 "record_util.ml" 313 8505 8519
+type(
+  'a
+)
+"record_util.ml" 313 8505 8523 "record_util.ml" 313 8505 8534
+type(
+  string
+)
+"record_util.ml" 314 8535 8539 "record_util.ml" 314 8535 8552
+type(
+  'a
+)
+"record_util.ml" 314 8535 8556 "record_util.ml" 314 8535 8570
+type(
+  string
+)
+"record_util.ml" 315 8571 8575 "record_util.ml" 315 8571 8584
+type(
+  'a
+)
+"record_util.ml" 315 8571 8588 "record_util.ml" 315 8571 8598
+type(
+  string
+)
+"record_util.ml" 316 8599 8603 "record_util.ml" 316 8599 8612
+type(
+  'a
+)
+"record_util.ml" 316 8599 8616 "record_util.ml" 316 8599 8626
+type(
+  string
+)
+"record_util.ml" 308 8390 8392 "record_util.ml" 316 8599 8626
+type(
+  string
+)
+"record_util.ml" 318 8628 8632 "record_util.ml" 318 8628 8663
+type(
+  [< `DHCP | `None | `Static ] -> string
+)
+ident(
+  def ip_configuration_mode_to_string "record_util.ml" 323 8740 8740 --
+)
+"record_util.ml" 319 8675 8679 "record_util.ml" 319 8675 8684
+type(
+  [< `DHCP | `None | `Static ] as 'a
+)
+"record_util.ml" 319 8675 8688 "record_util.ml" 319 8675 8694
+type(
+  string
+)
+"record_util.ml" 320 8695 8699 "record_util.ml" 320 8695 8704
+type(
+  'a
+)
+"record_util.ml" 320 8695 8708 "record_util.ml" 320 8695 8714
+type(
+  string
+)
+"record_util.ml" 321 8715 8719 "record_util.ml" 321 8715 8726
+type(
+  'a
+)
+"record_util.ml" 321 8715 8730 "record_util.ml" 321 8715 8738
+type(
+  string
+)
+"record_util.ml" 318 8628 8666 "record_util.ml" 321 8715 8738
+type(
+  'a -> string
+)
+"record_util.ml" 323 8740 8744 "record_util.ml" 323 8740 8775
+type(
+  string -> [> `DHCP | `None | `Static ]
+)
+ident(
+  def ip_configuration_mode_of_string "record_util.ml" 330 8967 8967 --
+)
+"record_util.ml" 323 8740 8776 "record_util.ml" 323 8740 8777
+type(
+  string
+)
+ident(
+  def m "record_util.ml" 324 8780 8782 "record_util.ml" 328 8880 8965
+)
+"record_util.ml" 324 8780 8788 "record_util.ml" 324 8780 8804
+type(
+  string -> string
+)
+ident(
+  ext_ref Stringext.( String ).lowercase
+)
+"record_util.ml" 324 8780 8805 "record_util.ml" 324 8780 8806
+type(
+  string
+)
+ident(
+  int_ref m "record_util.ml" 323 8740 8776 "record_util.ml" 323 8740 8777
+)
+"record_util.ml" 324 8780 8788 "record_util.ml" 324 8780 8806
+type(
+  string
+)
+"record_util.ml" 325 8812 8816 "record_util.ml" 325 8812 8822
+type(
+  string
+)
+"record_util.ml" 325 8812 8828 "record_util.ml" 325 8812 8833
+type(
+  [> `DHCP | `None | `Static ] as 'a
+)
+"record_util.ml" 326 8834 8838 "record_util.ml" 326 8834 8844
+type(
+  string
+)
+"record_util.ml" 326 8834 8850 "record_util.ml" 326 8834 8855
+type(
+  'a
+)
+"record_util.ml" 327 8856 8860 "record_util.ml" 327 8856 8868
+type(
+  string
+)
+"record_util.ml" 327 8856 8872 "record_util.ml" 327 8856 8879
+type(
+  'a
+)
+"record_util.ml" 328 8880 8884 "record_util.ml" 328 8880 8885
+type(
+  string
+)
+ident(
+  def s "record_util.ml" 328 8880 8896 "record_util.ml" 328 8880 8965
+)
+"record_util.ml" 328 8880 8896 "record_util.ml" 328 8880 8901
+type(
+  exn -> 'a
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"record_util.ml" 328 8880 8919 "record_util.ml" 328 8880 8961
+type(
+  string
+)
+"record_util.ml" 328 8880 8961 "record_util.ml" 328 8880 8962
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"record_util.ml" 328 8880 8962 "record_util.ml" 328 8880 8963
+type(
+  string
+)
+ident(
+  int_ref s "record_util.ml" 328 8880 8884 "record_util.ml" 328 8880 8885
+)
+"record_util.ml" 328 8880 8918 "record_util.ml" 328 8880 8964
+type(
+  string
+)
+"record_util.ml" 328 8880 8902 "record_util.ml" 328 8880 8965
+type(
+  exn
+)
+"record_util.ml" 328 8880 8896 "record_util.ml" 328 8880 8965
+type(
+  'a
+)
+"record_util.ml" 324 8780 8782 "record_util.ml" 328 8880 8965
+type(
+  'a
+)
+"record_util.ml" 330 8967 8971 "record_util.ml" 330 8967 8990
+type(
+  [< `activebackup | `balanceslb ] -> string
+)
+ident(
+  def bond_mode_to_string "record_util.ml" 334 9071 9071 --
+)
+"record_util.ml" 331 9002 9005 "record_util.ml" 331 9002 9016
+type(
+  [< `activebackup | `balanceslb ] as 'a
+)
+"record_util.ml" 331 9002 9020 "record_util.ml" 331 9002 9033
+type(
+  string
+)
+"record_util.ml" 332 9034 9037 "record_util.ml" 332 9034 9050
+type(
+  'a
+)
+"record_util.ml" 332 9034 9054 "record_util.ml" 332 9034 9069
+type(
+  string
+)
+"record_util.ml" 330 8967 8993 "record_util.ml" 332 9034 9069
+type(
+  'a -> string
+)
+"record_util.ml" 334 9071 9075 "record_util.ml" 334 9071 9094
+type(
+  string -> [> `activebackup | `balanceslb ]
+)
+ident(
+  def bond_mode_of_string "record_util.ml" 340 9267 9267 --
+)
+"record_util.ml" 334 9071 9095 "record_util.ml" 334 9071 9096
+type(
+  string
+)
+ident(
+  def m "record_util.ml" 335 9099 9100 "record_util.ml" 338 9203 9265
+)
+"record_util.ml" 335 9099 9106 "record_util.ml" 335 9099 9122
+type(
+  string -> string
+)
+ident(
+  ext_ref Stringext.( String ).lowercase
+)
+"record_util.ml" 335 9099 9123 "record_util.ml" 335 9099 9124
+type(
+  string
+)
+ident(
+  int_ref m "record_util.ml" 334 9071 9095 "record_util.ml" 334 9071 9096
+)
+"record_util.ml" 335 9099 9106 "record_util.ml" 335 9099 9124
+type(
+  string
+)
+"record_util.ml" 336 9130 9133 "record_util.ml" 336 9130 9146
+type(
+  string
+)
+"record_util.ml" 336 9130 9149 "record_util.ml" 336 9130 9151
+type(
+  string
+)
+"record_util.ml" 336 9130 9133 "record_util.ml" 336 9130 9151
+type(
+  string
+)
+"record_util.ml" 336 9130 9155 "record_util.ml" 336 9130 9166
+type(
+  [> `activebackup | `balanceslb ] as 'a
+)
+"record_util.ml" 337 9167 9170 "record_util.ml" 337 9167 9185
+type(
+  string
+)
+"record_util.ml" 337 9167 9189 "record_util.ml" 337 9167 9202
+type(
+  'a
+)
+"record_util.ml" 338 9203 9206 "record_util.ml" 338 9203 9207
+type(
+  string
+)
+ident(
+  def s "record_util.ml" 338 9203 9211 "record_util.ml" 338 9203 9265
+)
+"record_util.ml" 338 9203 9211 "record_util.ml" 338 9203 9216
+type(
+  exn -> 'a
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"record_util.ml" 338 9203 9234 "record_util.ml" 338 9203 9259
+type(
+  string
+)
+"record_util.ml" 338 9203 9260 "record_util.ml" 338 9203 9261
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"record_util.ml" 338 9203 9262 "record_util.ml" 338 9203 9263
+type(
+  string
+)
+ident(
+  int_ref s "record_util.ml" 338 9203 9206 "record_util.ml" 338 9203 9207
+)
+"record_util.ml" 338 9203 9233 "record_util.ml" 338 9203 9264
+type(
+  string
+)
+"record_util.ml" 338 9203 9217 "record_util.ml" 338 9203 9265
+type(
+  exn
+)
+"record_util.ml" 338 9203 9211 "record_util.ml" 338 9203 9265
+type(
+  'a
+)
+"record_util.ml" 335 9099 9100 "record_util.ml" 338 9203 9265
+type(
+  'a
+)
+"record_util.ml" 340 9267 9271 "record_util.ml" 340 9267 9285
+type(
+  string -> bool
+)
+ident(
+  def bool_of_string "record_util.ml" 347 9481 9481 --
+)
+"record_util.ml" 340 9267 9286 "record_util.ml" 340 9267 9287
+type(
+  string
+)
+ident(
+  def s "record_util.ml" 341 9290 9291 "record_util.ml" 344 9366 9442
+)
+"record_util.ml" 341 9290 9297 "record_util.ml" 341 9290 9313
+type(
+  string -> string
+)
+ident(
+  ext_ref Stringext.( String ).lowercase
+)
+"record_util.ml" 341 9290 9314 "record_util.ml" 341 9290 9315
+type(
+  string
+)
+ident(
+  int_ref s "record_util.ml" 340 9267 9286 "record_util.ml" 340 9267 9287
+)
+"record_util.ml" 341 9290 9297 "record_util.ml" 341 9290 9315
+type(
+  string
+)
+"record_util.ml" 342 9321 9324 "record_util.ml" 342 9321 9330
+type(
+  string
+)
+"record_util.ml" 342 9321 9331 "record_util.ml" 342 9321 9336
+type(
+  string
+)
+"record_util.ml" 342 9321 9324 "record_util.ml" 342 9321 9336
+type(
+  string
+)
+"record_util.ml" 342 9321 9338 "record_util.ml" 342 9321 9342
+type(
+  bool
+)
+"record_util.ml" 343 9343 9346 "record_util.ml" 343 9343 9353
+type(
+  string
+)
+"record_util.ml" 343 9343 9354 "record_util.ml" 343 9343 9358
+type(
+  string
+)
+"record_util.ml" 343 9343 9346 "record_util.ml" 343 9343 9358
+type(
+  string
+)
+"record_util.ml" 343 9343 9360 "record_util.ml" 343 9343 9365
+type(
+  bool
+)
+"record_util.ml" 344 9366 9369 "record_util.ml" 344 9366 9370
+type(
+  string
+)
+"record_util.ml" 344 9366 9373 "record_util.ml" 344 9366 9378
+type(
+  exn -> bool
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"record_util.ml" 344 9366 9396 "record_util.ml" 344 9366 9438
+type(
+  string
+)
+"record_util.ml" 344 9366 9438 "record_util.ml" 344 9366 9439
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"record_util.ml" 344 9366 9439 "record_util.ml" 344 9366 9440
+type(
+  string
+)
+ident(
+  int_ref s "record_util.ml" 340 9267 9286 "record_util.ml" 340 9267 9287
+)
+"record_util.ml" 344 9366 9395 "record_util.ml" 344 9366 9441
+type(
+  string
+)
+"record_util.ml" 344 9366 9379 "record_util.ml" 344 9366 9442
+type(
+  exn
+)
+"record_util.ml" 344 9366 9373 "record_util.ml" 344 9366 9442
+type(
+  bool
+)
+"record_util.ml" 341 9290 9291 "record_util.ml" 344 9366 9442
+type(
+  bool
+)
+"record_util.ml" 347 9481 9485 "record_util.ml" 347 9481 9499
+type(
+  string -> (string * string) list -> string
+)
+ident(
+  def s2sm_to_string "record_util.ml" 351 9605 9605 --
+)
+"record_util.ml" 347 9481 9500 "record_util.ml" 347 9481 9503
+type(
+  string
+)
+ident(
+  def sep "record_util.ml" 347 9481 9504 "record_util.ml" 348 9508 9564
+)
+"record_util.ml" 347 9481 9504 "record_util.ml" 347 9481 9505
+type(
+  (string * string) list
+)
+ident(
+  def x "record_util.ml" 348 9508 9510 "record_util.ml" 348 9508 9564
+)
+"record_util.ml" 348 9508 9510 "record_util.ml" 348 9508 9523
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"record_util.ml" 348 9508 9524 "record_util.ml" 348 9508 9527
+type(
+  string
+)
+ident(
+  int_ref sep "record_util.ml" 347 9481 9500 "record_util.ml" 347 9481 9503
+)
+"record_util.ml" 348 9508 9529 "record_util.ml" 348 9508 9537
+type(
+  (string * string -> string) -> (string * string) list -> string list
+)
+ident(
+  ext_ref List.map
+)
+"record_util.ml" 348 9508 9544 "record_util.ml" 348 9508 9545
+type(
+  string
+)
+ident(
+  def a "record_util.ml" 348 9508 9552 "record_util.ml" 348 9508 9560
+)
+"record_util.ml" 348 9508 9546 "record_util.ml" 348 9508 9547
+type(
+  string
+)
+ident(
+  def b "record_util.ml" 348 9508 9552 "record_util.ml" 348 9508 9560
+)
+"record_util.ml" 348 9508 9543 "record_util.ml" 348 9508 9548
+type(
+  string * string
+)
+"record_util.ml" 348 9508 9552 "record_util.ml" 348 9508 9553
+type(
+  string
+)
+ident(
+  int_ref a "record_util.ml" 348 9508 9544 "record_util.ml" 348 9508 9545
+)
+"record_util.ml" 348 9508 9553 "record_util.ml" 348 9508 9554
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"record_util.ml" 348 9508 9554 "record_util.ml" 348 9508 9558
+type(
+  string
+)
+"record_util.ml" 348 9508 9558 "record_util.ml" 348 9508 9559
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"record_util.ml" 348 9508 9559 "record_util.ml" 348 9508 9560
+type(
+  string
+)
+ident(
+  int_ref b "record_util.ml" 348 9508 9546 "record_util.ml" 348 9508 9547
+)
+"record_util.ml" 348 9508 9554 "record_util.ml" 348 9508 9560
+type(
+  string
+)
+"record_util.ml" 348 9508 9552 "record_util.ml" 348 9508 9560
+type(
+  string
+)
+"record_util.ml" 348 9508 9538 "record_util.ml" 348 9508 9561
+type(
+  string * string -> string
+)
+"record_util.ml" 348 9508 9562 "record_util.ml" 348 9508 9563
+type(
+  (string * string) list
+)
+ident(
+  int_ref x "record_util.ml" 347 9481 9504 "record_util.ml" 347 9481 9505
+)
+"record_util.ml" 348 9508 9528 "record_util.ml" 348 9508 9564
+type(
+  string list
+)
+"record_util.ml" 348 9508 9510 "record_util.ml" 348 9508 9564
+type(
+  string
+)
+"record_util.ml" 351 9605 9609 "record_util.ml" 351 9605 9624
+type(
+  ('a -> string) -> string -> (string * 'a) list -> string
+)
+ident(
+  def s2brm_to_string "record_util.ml" 355 9768 9768 --
+)
+"record_util.ml" 351 9605 9625 "record_util.ml" 351 9605 9642
+type(
+  'a -> string
+)
+ident(
+  def get_uuid_from_ref "record_util.ml" 351 9605 9643 "record_util.ml" 352 9651 9731
+)
+"record_util.ml" 351 9605 9643 "record_util.ml" 351 9605 9646
+type(
+  string
+)
+ident(
+  def sep "record_util.ml" 351 9605 9647 "record_util.ml" 352 9651 9731
+)
+"record_util.ml" 351 9605 9647 "record_util.ml" 351 9605 9648
+type(
+  (string * 'a) list
+)
+ident(
+  def x "record_util.ml" 352 9651 9653 "record_util.ml" 352 9651 9731
+)
+"record_util.ml" 352 9651 9653 "record_util.ml" 352 9651 9666
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"record_util.ml" 352 9651 9667 "record_util.ml" 352 9651 9670
+type(
+  string
+)
+ident(
+  int_ref sep "record_util.ml" 351 9605 9643 "record_util.ml" 351 9605 9646
+)
+"record_util.ml" 352 9651 9672 "record_util.ml" 352 9651 9680
+type(
+  (string * 'a -> string) -> (string * 'a) list -> string list
+)
+ident(
+  ext_ref List.map
+)
+"record_util.ml" 352 9651 9687 "record_util.ml" 352 9651 9688
+type(
+  string
+)
+ident(
+  def n "record_util.ml" 352 9651 9695 "record_util.ml" 352 9651 9727
+)
+"record_util.ml" 352 9651 9689 "record_util.ml" 352 9651 9690
+type(
+  'a
+)
+ident(
+  def r "record_util.ml" 352 9651 9695 "record_util.ml" 352 9651 9727
+)
+"record_util.ml" 352 9651 9686 "record_util.ml" 352 9651 9691
+type(
+  string * 'a
+)
+"record_util.ml" 352 9651 9695 "record_util.ml" 352 9651 9696
+type(
+  string
+)
+ident(
+  int_ref n "record_util.ml" 352 9651 9687 "record_util.ml" 352 9651 9688
+)
+"record_util.ml" 352 9651 9697 "record_util.ml" 352 9651 9698
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"record_util.ml" 352 9651 9699 "record_util.ml" 352 9651 9703
+type(
+  string
+)
+"record_util.ml" 352 9651 9704 "record_util.ml" 352 9651 9705
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"record_util.ml" 352 9651 9707 "record_util.ml" 352 9651 9724
+type(
+  'a -> string
+)
+ident(
+  int_ref get_uuid_from_ref "record_util.ml" 351 9605 9625 "record_util.ml" 351 9605 9642
+)
+"record_util.ml" 352 9651 9725 "record_util.ml" 352 9651 9726
+type(
+  'a
+)
+ident(
+  int_ref r "record_util.ml" 352 9651 9689 "record_util.ml" 352 9651 9690
+)
+"record_util.ml" 352 9651 9706 "record_util.ml" 352 9651 9727
+type(
+  string
+)
+"record_util.ml" 352 9651 9699 "record_util.ml" 352 9651 9727
+type(
+  string
+)
+"record_util.ml" 352 9651 9695 "record_util.ml" 352 9651 9727
+type(
+  string
+)
+"record_util.ml" 352 9651 9681 "record_util.ml" 352 9651 9728
+type(
+  string * 'a -> string
+)
+"record_util.ml" 352 9651 9729 "record_util.ml" 352 9651 9730
+type(
+  (string * 'a) list
+)
+ident(
+  int_ref x "record_util.ml" 351 9605 9647 "record_util.ml" 351 9605 9648
+)
+"record_util.ml" 352 9651 9671 "record_util.ml" 352 9651 9731
+type(
+  string list
+)
+"record_util.ml" 352 9651 9653 "record_util.ml" 352 9651 9731
+type(
+  string
+)
+"record_util.ml" 355 9768 9772 "record_util.ml" 355 9768 9788
+type(
+  string -> (int64 * float) list -> string
+)
+ident(
+  def i642fm_to_string "record_util.ml" 359 9910 9910 --
+)
+"record_util.ml" 355 9768 9789 "record_util.ml" 355 9768 9792
+type(
+  string
+)
+ident(
+  def sep "record_util.ml" 355 9768 9793 "record_util.ml" 356 9797 9872
+)
+"record_util.ml" 355 9768 9793 "record_util.ml" 355 9768 9794
+type(
+  (int64 * float) list
+)
+ident(
+  def x "record_util.ml" 356 9797 9799 "record_util.ml" 356 9797 9872
+)
+"record_util.ml" 356 9797 9799 "record_util.ml" 356 9797 9812
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"record_util.ml" 356 9797 9813 "record_util.ml" 356 9797 9816
+type(
+  string
+)
+ident(
+  int_ref sep "record_util.ml" 355 9768 9789 "record_util.ml" 355 9768 9792
+)
+"record_util.ml" 356 9797 9818 "record_util.ml" 356 9797 9826
+type(
+  (int64 * float -> string) -> (int64 * float) list -> string list
+)
+ident(
+  ext_ref List.map
+)
+"record_util.ml" 356 9797 9833 "record_util.ml" 356 9797 9834
+type(
+  int64
+)
+ident(
+  def a "record_util.ml" 356 9797 9841 "record_util.ml" 356 9797 9868
+)
+"record_util.ml" 356 9797 9835 "record_util.ml" 356 9797 9836
+type(
+  float
+)
+ident(
+  def b "record_util.ml" 356 9797 9841 "record_util.ml" 356 9797 9868
+)
+"record_util.ml" 356 9797 9832 "record_util.ml" 356 9797 9837
+type(
+  int64 * float
+)
+"record_util.ml" 356 9797 9841 "record_util.ml" 356 9797 9855
+type(
+  (int64 -> float -> string, unit, string) format -> int64 -> float -> string
+)
+ident(
+  ext_ref Printf.sprintf
+)
+"record_util.ml" 356 9797 9856 "record_util.ml" 356 9797 9864
+type(
+  (int64 -> float -> string, unit, string) format
+)
+"record_util.ml" 356 9797 9865 "record_util.ml" 356 9797 9866
+type(
+  int64
+)
+ident(
+  int_ref a "record_util.ml" 356 9797 9833 "record_util.ml" 356 9797 9834
+)
+"record_util.ml" 356 9797 9867 "record_util.ml" 356 9797 9868
+type(
+  float
+)
+ident(
+  int_ref b "record_util.ml" 356 9797 9835 "record_util.ml" 356 9797 9836
+)
+"record_util.ml" 356 9797 9841 "record_util.ml" 356 9797 9868
+type(
+  string
+)
+"record_util.ml" 356 9797 9827 "record_util.ml" 356 9797 9869
+type(
+  int64 * float -> string
+)
+"record_util.ml" 356 9797 9870 "record_util.ml" 356 9797 9871
+type(
+  (int64 * float) list
+)
+ident(
+  int_ref x "record_util.ml" 355 9768 9793 "record_util.ml" 355 9768 9794
+)
+"record_util.ml" 356 9797 9817 "record_util.ml" 356 9797 9872
+type(
+  string list
+)
+"record_util.ml" 356 9797 9799 "record_util.ml" 356 9797 9872
+type(
+  string
+)
+"record_util.ml" 359 9910 9914 "record_util.ml" 359 9910 9930
+type(
+  string -> (int64 * string) list -> string
+)
+ident(
+  def i642sm_to_string "record_util.ml" 362 10016 10016 --
+)
+"record_util.ml" 359 9910 9931 "record_util.ml" 359 9910 9934
+type(
+  string
+)
+ident(
+  def sep "record_util.ml" 359 9910 9935 "record_util.ml" 360 9939 10014
+)
+"record_util.ml" 359 9910 9935 "record_util.ml" 359 9910 9936
+type(
+  (int64 * string) list
+)
+ident(
+  def x "record_util.ml" 360 9939 9941 "record_util.ml" 360 9939 10014
+)
+"record_util.ml" 360 9939 9941 "record_util.ml" 360 9939 9954
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"record_util.ml" 360 9939 9955 "record_util.ml" 360 9939 9958
+type(
+  string
+)
+ident(
+  int_ref sep "record_util.ml" 359 9910 9931 "record_util.ml" 359 9910 9934
+)
+"record_util.ml" 360 9939 9960 "record_util.ml" 360 9939 9968
+type(
+  (int64 * string -> string) -> (int64 * string) list -> string list
+)
+ident(
+  ext_ref List.map
+)
+"record_util.ml" 360 9939 9975 "record_util.ml" 360 9939 9976
+type(
+  int64
+)
+ident(
+  def a "record_util.ml" 360 9939 9983 "record_util.ml" 360 9939 10010
+)
+"record_util.ml" 360 9939 9977 "record_util.ml" 360 9939 9978
+type(
+  string
+)
+ident(
+  def b "record_util.ml" 360 9939 9983 "record_util.ml" 360 9939 10010
+)
+"record_util.ml" 360 9939 9974 "record_util.ml" 360 9939 9979
+type(
+  int64 * string
+)
+"record_util.ml" 360 9939 9983 "record_util.ml" 360 9939 9997
+type(
+  (int64 -> string -> string, unit, string) format ->
+  int64 -> string -> string
+)
+ident(
+  ext_ref Printf.sprintf
+)
+"record_util.ml" 360 9939 9998 "record_util.ml" 360 9939 10006
+type(
+  (int64 -> string -> string, unit, string) format
+)
+"record_util.ml" 360 9939 10007 "record_util.ml" 360 9939 10008
+type(
+  int64
+)
+ident(
+  int_ref a "record_util.ml" 360 9939 9975 "record_util.ml" 360 9939 9976
+)
+"record_util.ml" 360 9939 10009 "record_util.ml" 360 9939 10010
+type(
+  string
+)
+ident(
+  int_ref b "record_util.ml" 360 9939 9977 "record_util.ml" 360 9939 9978
+)
+"record_util.ml" 360 9939 9983 "record_util.ml" 360 9939 10010
+type(
+  string
+)
+"record_util.ml" 360 9939 9969 "record_util.ml" 360 9939 10011
+type(
+  int64 * string -> string
+)
+"record_util.ml" 360 9939 10012 "record_util.ml" 360 9939 10013
+type(
+  (int64 * string) list
+)
+ident(
+  int_ref x "record_util.ml" 359 9910 9935 "record_util.ml" 359 9910 9936
+)
+"record_util.ml" 360 9939 9959 "record_util.ml" 360 9939 10014
+type(
+  string list
+)
+"record_util.ml" 360 9939 9941 "record_util.ml" 360 9939 10014
+type(
+  string
+)
+"record_util.ml" 362 10016 10020 "record_util.ml" 362 10016 10037
+type(
+  [< `persist | `reset ] -> string
+)
+ident(
+  def on_boot_to_string "record_util.ml" 368 10180 10180 --
+)
+"record_util.ml" 362 10016 10038 "record_util.ml" 362 10016 10044
+type(
+  [< `persist | `reset ] as 'a
+)
+ident(
+  def onboot "record_util.ml" 363 10047 10048 "record_util.ml" 365 10088 10113
+)
+"record_util.ml" 363 10047 10054 "record_util.ml" 363 10047 10060
+type(
+  'a
+)
+ident(
+  int_ref onboot "record_util.ml" 362 10016 10038 "record_util.ml" 362 10016 10044
+)
+"record_util.ml" 364 10066 10070 "record_util.ml" 364 10066 10076
+type(
+  'a
+)
+"record_util.ml" 364 10066 10080 "record_util.ml" 364 10066 10087
+type(
+  string
+)
+"record_util.ml" 365 10088 10092 "record_util.ml" 365 10088 10100
+type(
+  'a
+)
+"record_util.ml" 365 10088 10104 "record_util.ml" 365 10088 10113
+type(
+  string
+)
+"record_util.ml" 363 10047 10048 "record_util.ml" 365 10088 10113
+type(
+  string
+)
+"record_util.ml" 368 10180 10184 "record_util.ml" 368 10180 10199
+type(
+  string -> string -> int64
+)
+ident(
+  def bytes_of_string "record_util.ml" 409 12131 12131 --
+)
+"record_util.ml" 368 10180 10200 "record_util.ml" 368 10180 10205
+type(
+  string
+)
+ident(
+  def field "record_util.ml" 368 10180 10206 "record_util.ml" 404 11909 12037
+)
+"record_util.ml" 368 10180 10206 "record_util.ml" 368 10180 10207
+type(
+  string
+)
+ident(
+  def x "record_util.ml" 369 10210 10212 "record_util.ml" 404 11909 12037
+)
+"record_util.ml" 369 10210 10216 "record_util.ml" 369 10210 10223
+type(
+  char -> bool
+)
+"record_util.ml" 369 10210 10224 "record_util.ml" 369 10210 10225
+type(
+  char
+)
+ident(
+  def c "record_util.ml" 369 10210 10228 "record_util.ml" 369 10210 10248
+)
+"record_util.ml" 369 10210 10228 "record_util.ml" 369 10210 10229
+type(
+  char
+)
+ident(
+  int_ref c "record_util.ml" 369 10210 10224 "record_util.ml" 369 10210 10225
+)
+"record_util.ml" 369 10210 10230 "record_util.ml" 369 10210 10232
+type(
+  char -> char -> bool
+)
+ident(
+  ext_ref Pervasives.( >= )
+)
+"record_util.ml" 369 10210 10233 "record_util.ml" 369 10210 10236
+type(
+  char
+)
+"record_util.ml" 369 10210 10228 "record_util.ml" 369 10210 10236
+type(
+  bool
+)
+"record_util.ml" 369 10210 10237 "record_util.ml" 369 10210 10239
+type(
+  bool -> bool -> bool
+)
+ident(
+  ext_ref Pervasives.( && )
+)
+"record_util.ml" 369 10210 10240 "record_util.ml" 369 10210 10241
+type(
+  char
+)
+ident(
+  int_ref c "record_util.ml" 369 10210 10224 "record_util.ml" 369 10210 10225
+)
+"record_util.ml" 369 10210 10242 "record_util.ml" 369 10210 10244
+type(
+  char -> char -> bool
+)
+ident(
+  ext_ref Pervasives.( <= )
+)
+"record_util.ml" 369 10210 10245 "record_util.ml" 369 10210 10248
+type(
+  char
+)
+"record_util.ml" 369 10210 10240 "record_util.ml" 369 10210 10248
+type(
+  bool
+)
+"record_util.ml" 369 10210 10228 "record_util.ml" 369 10210 10248
+type(
+  bool
+)
+"record_util.ml" 370 10252 10258 "record_util.ml" 370 10252 10264
+type(
+  int64 -> int64 -> int64
+)
+"record_util.ml" 370 10252 10265 "record_util.ml" 370 10252 10266
+type(
+  int64
+)
+ident(
+  def a "record_util.ml" 370 10252 10267 "record_util.ml" 370 10252 10284
+)
+"record_util.ml" 370 10252 10267 "record_util.ml" 370 10252 10268
+type(
+  int64
+)
+ident(
+  def b "record_util.ml" 370 10252 10271 "record_util.ml" 370 10252 10284
+)
+"record_util.ml" 370 10252 10271 "record_util.ml" 370 10252 10280
+type(
+  int64 -> int64 -> int64
+)
+ident(
+  ext_ref Int64.mul
+)
+"record_util.ml" 370 10252 10281 "record_util.ml" 370 10252 10282
+type(
+  int64
+)
+ident(
+  int_ref a "record_util.ml" 370 10252 10265 "record_util.ml" 370 10252 10266
+)
+"record_util.ml" 370 10252 10283 "record_util.ml" 370 10252 10284
+type(
+  int64
+)
+ident(
+  int_ref b "record_util.ml" 370 10252 10267 "record_util.ml" 370 10252 10268
+)
+"record_util.ml" 370 10252 10271 "record_util.ml" 370 10252 10284
+type(
+  int64
+)
+"record_util.ml" 371 10288 10294 "record_util.ml" 371 10288 10306
+type(
+  int64
+)
+"record_util.ml" 371 10288 10309 "record_util.ml" 371 10288 10318
+type(
+  int64 -> int64 -> int64
+)
+ident(
+  ext_ref Int64.div
+)
+"record_util.ml" 371 10288 10319 "record_util.ml" 371 10288 10332
+type(
+  int64
+)
+ident(
+  ext_ref Int64.max_int
+)
+"record_util.ml" 371 10288 10334 "record_util.ml" 371 10288 10339
+type(
+  int64
+)
+"record_util.ml" 371 10288 10340 "record_util.ml" 371 10288 10342
+type(
+  int64 -> int64 -> int64
+)
+ident(
+  int_ref ** "record_util.ml" 370 10252 10258 "record_util.ml" 370 10252 10264
+)
+"record_util.ml" 371 10288 10343 "record_util.ml" 371 10288 10348
+type(
+  int64
+)
+"record_util.ml" 371 10288 10349 "record_util.ml" 371 10288 10351
+type(
+  int64 -> int64 -> int64
+)
+ident(
+  int_ref ** "record_util.ml" 370 10252 10258 "record_util.ml" 370 10252 10264
+)
+"record_util.ml" 371 10288 10352 "record_util.ml" 371 10288 10357
+type(
+  int64
+)
+"record_util.ml" 371 10288 10358 "record_util.ml" 371 10288 10360
+type(
+  int64 -> int64 -> int64
+)
+ident(
+  int_ref ** "record_util.ml" 370 10252 10258 "record_util.ml" 370 10252 10264
+)
+"record_util.ml" 371 10288 10361 "record_util.ml" 371 10288 10366
+type(
+  int64
+)
+"record_util.ml" 371 10288 10352 "record_util.ml" 371 10288 10366
+type(
+  int64
+)
+"record_util.ml" 371 10288 10343 "record_util.ml" 371 10288 10366
+type(
+  int64
+)
+"record_util.ml" 371 10288 10333 "record_util.ml" 371 10288 10367
+type(
+  int64
+)
+"record_util.ml" 371 10288 10309 "record_util.ml" 371 10288 10367
+type(
+  int64
+)
+"record_util.ml" 373 10434 10440 "record_util.ml" 373 10434 10455
+type(
+  string -> int64
+)
+"record_util.ml" 373 10434 10456 "record_util.ml" 373 10434 10457
+type(
+  string
+)
+ident(
+  def s "record_util.ml" 374 10460 10464 "record_util.ml" 384 10966 11094
+)
+"record_util.ml" 375 10468 10474 "record_util.ml" 375 10468 10489
+type(
+  string -> int64
+)
+ident(
+  ext_ref Int64.of_string
+)
+"record_util.ml" 375 10468 10490 "record_util.ml" 375 10468 10491
+type(
+  string
+)
+ident(
+  int_ref s "record_util.ml" 373 10434 10456 "record_util.ml" 373 10434 10457
+)
+"record_util.ml" 375 10468 10474 "record_util.ml" 375 10468 10491
+type(
+  int64
+)
+"record_util.ml" 376 10492 10501 "record_util.ml" 376 10492 10502
+type(
+  exn
+)
+"record_util.ml" 377 10506 10515 "record_util.ml" 377 10506 10516
+type(
+  string
+)
+ident(
+  int_ref s "record_util.ml" 373 10434 10456 "record_util.ml" 373 10434 10457
+)
+"record_util.ml" 377 10506 10517 "record_util.ml" 377 10506 10518
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"record_util.ml" 377 10506 10519 "record_util.ml" 377 10506 10521
+type(
+  string
+)
+"record_util.ml" 377 10506 10515 "record_util.ml" 377 10506 10521
+type(
+  bool
+)
+"record_util.ml" 378 10527 10535 "record_util.ml" 378 10527 10540
+type(
+  exn -> unit
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"record_util.ml" 378 10527 10558 "record_util.ml" 378 10527 10572
+type(
+  (string -> string, unit, string) format -> string -> string
+)
+ident(
+  ext_ref Printf.sprintf
+)
+"record_util.ml" 378 10527 10573 "record_util.ml" 378 10527 10646
+type(
+  (string -> string, unit, string) format
+)
+"record_util.ml" 378 10527 10647 "record_util.ml" 378 10527 10652
+type(
+  string
+)
+ident(
+  int_ref field "record_util.ml" 368 10180 10200 "record_util.ml" 368 10180 10205
+)
+"record_util.ml" 378 10527 10557 "record_util.ml" 378 10527 10653
+type(
+  string
+)
+"record_util.ml" 378 10527 10541 "record_util.ml" 378 10527 10654
+type(
+  exn
+)
+"record_util.ml" 378 10527 10535 "record_util.ml" 378 10527 10654
+type(
+  unit
+)
+"record_util.ml" 377 10506 10512 "record_util.ml" 378 10527 10654
+type(
+  unit
+)
+"record_util.ml" 379 10656 10666 "record_util.ml" 379 10656 10674
+type(
+  bool ref
+)
+"record_util.ml" 379 10656 10677 "record_util.ml" 379 10656 10680
+type(
+  bool -> bool ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"record_util.ml" 379 10656 10681 "record_util.ml" 379 10656 10685
+type(
+  bool
+)
+"record_util.ml" 379 10656 10677 "record_util.ml" 379 10656 10685
+type(
+  bool ref
+)
+"record_util.ml" 379 10656 10690 "record_util.ml" 379 10656 10691
+type(
+  int ref
+)
+"record_util.ml" 379 10656 10694 "record_util.ml" 379 10656 10697
+type(
+  int -> int ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"record_util.ml" 379 10656 10699 "record_util.ml" 379 10656 10712
+type(
+  string -> int
+)
+ident(
+  ext_ref Stringext.( String ).length
+)
+"record_util.ml" 379 10656 10713 "record_util.ml" 379 10656 10714
+type(
+  string
+)
+ident(
+  int_ref s "record_util.ml" 373 10434 10456 "record_util.ml" 373 10434 10457
+)
+"record_util.ml" 379 10656 10699 "record_util.ml" 379 10656 10714
+type(
+  int
+)
+"record_util.ml" 379 10656 10715 "record_util.ml" 379 10656 10716
+type(
+  int -> int -> int
+)
+ident(
+  ext_ref Pervasives.( - )
+)
+"record_util.ml" 379 10656 10717 "record_util.ml" 379 10656 10718
+type(
+  int
+)
+"record_util.ml" 379 10656 10698 "record_util.ml" 379 10656 10719
+type(
+  int
+)
+"record_util.ml" 379 10656 10694 "record_util.ml" 379 10656 10719
+type(
+  int ref
+)
+"record_util.ml" 380 10723 10735 "record_util.ml" 380 10723 10736
+type(
+  bool ref -> bool
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"record_util.ml" 380 10723 10736 "record_util.ml" 380 10723 10744
+type(
+  bool ref
+)
+ident(
+  int_ref alldigit "record_util.ml" 379 10656 10666 "record_util.ml" 379 10656 10674
+)
+"record_util.ml" 380 10723 10735 "record_util.ml" 380 10723 10744
+type(
+  bool
+)
+"record_util.ml" 380 10723 10745 "record_util.ml" 380 10723 10747
+type(
+  bool -> bool -> bool
+)
+ident(
+  ext_ref Pervasives.( && )
+)
+"record_util.ml" 380 10723 10748 "record_util.ml" 380 10723 10749
+type(
+  int ref -> int
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"record_util.ml" 380 10723 10749 "record_util.ml" 380 10723 10750
+type(
+  int ref
+)
+ident(
+  int_ref i "record_util.ml" 379 10656 10690 "record_util.ml" 379 10656 10691
+)
+"record_util.ml" 380 10723 10748 "record_util.ml" 380 10723 10750
+type(
+  int
+)
+"record_util.ml" 380 10723 10751 "record_util.ml" 380 10723 10752
+type(
+  int -> int -> bool
+)
+ident(
+  ext_ref Pervasives.( > )
+)
+"record_util.ml" 380 10723 10753 "record_util.ml" 380 10723 10754
+type(
+  int
+)
+"record_util.ml" 380 10723 10748 "record_util.ml" 380 10723 10754
+type(
+  bool
+)
+"record_util.ml" 380 10723 10735 "record_util.ml" 380 10723 10754
+type(
+  bool
+)
+"record_util.ml" 380 10723 10758 "record_util.ml" 380 10723 10766
+type(
+  bool ref
+)
+ident(
+  int_ref alldigit "record_util.ml" 379 10656 10666 "record_util.ml" 379 10656 10674
+)
+"record_util.ml" 380 10723 10767 "record_util.ml" 380 10723 10769
+type(
+  bool ref -> bool -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"record_util.ml" 380 10723 10770 "record_util.ml" 380 10723 10777
+type(
+  char -> bool
+)
+ident(
+  int_ref isdigit "record_util.ml" 369 10210 10216 "record_util.ml" 369 10210 10223
+)
+"record_util.ml" 380 10723 10778 "record_util.ml" 380 10723 10779
+type(
+  string
+)
+ident(
+  int_ref s "record_util.ml" 373 10434 10456 "record_util.ml" 373 10434 10457
+)
+"record_util.ml" 380 10723 10781 "record_util.ml" 380 10723 10782
+type(
+  int ref -> int
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"record_util.ml" 380 10723 10782 "record_util.ml" 380 10723 10783
+type(
+  int ref
+)
+ident(
+  int_ref i "record_util.ml" 379 10656 10690 "record_util.ml" 379 10656 10691
+)
+"record_util.ml" 380 10723 10781 "record_util.ml" 380 10723 10783
+type(
+  int
+)
+"record_util.ml" 380 10723 10778 "record_util.ml" 380 10723 10784
+type(
+  char
+)
+"record_util.ml" 380 10723 10770 "record_util.ml" 380 10723 10784
+type(
+  bool
+)
+"record_util.ml" 380 10723 10758 "record_util.ml" 380 10723 10784
+type(
+  unit
+)
+"record_util.ml" 380 10723 10786 "record_util.ml" 380 10723 10790
+type(
+  int ref -> unit
+)
+ident(
+  ext_ref Pervasives.decr
+)
+"record_util.ml" 380 10723 10791 "record_util.ml" 380 10723 10792
+type(
+  int ref
+)
+ident(
+  int_ref i "record_util.ml" 379 10656 10690 "record_util.ml" 379 10656 10691
+)
+"record_util.ml" 380 10723 10786 "record_util.ml" 380 10723 10792
+type(
+  unit
+)
+"record_util.ml" 380 10723 10758 "record_util.ml" 380 10723 10792
+type(
+  unit
+)
+"record_util.ml" 380 10723 10729 "record_util.ml" 380 10723 10797
+type(
+  unit
+)
+"record_util.ml" 381 10799 10808 "record_util.ml" 381 10799 10809
+type(
+  bool ref -> bool
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"record_util.ml" 381 10799 10809 "record_util.ml" 381 10799 10817
+type(
+  bool ref
+)
+ident(
+  int_ref alldigit "record_util.ml" 379 10656 10666 "record_util.ml" 379 10656 10674
+)
+"record_util.ml" 381 10799 10808 "record_util.ml" 381 10799 10817
+type(
+  bool
+)
+"record_util.ml" 382 10823 10831 "record_util.ml" 382 10823 10836
+type(
+  exn -> int64
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"record_util.ml" 382 10823 10854 "record_util.ml" 382 10823 10868
+type(
+  (string -> int64 -> string, unit, string) format ->
+  string -> int64 -> string
+)
+ident(
+  ext_ref Printf.sprintf
+)
+"record_util.ml" 382 10823 10869 "record_util.ml" 382 10823 10933
+type(
+  (string -> int64 -> string, unit, string) format
+)
+"record_util.ml" 382 10823 10934 "record_util.ml" 382 10823 10939
+type(
+  string
+)
+ident(
+  int_ref field "record_util.ml" 368 10180 10200 "record_util.ml" 368 10180 10205
+)
+"record_util.ml" 382 10823 10940 "record_util.ml" 382 10823 10952
+type(
+  int64
+)
+ident(
+  int_ref max_size_TiB "record_util.ml" 371 10288 10294 "record_util.ml" 371 10288 10306
+)
+"record_util.ml" 382 10823 10853 "record_util.ml" 382 10823 10953
+type(
+  string
+)
+"record_util.ml" 382 10823 10837 "record_util.ml" 382 10823 10954
+type(
+  exn
+)
+"record_util.ml" 382 10823 10831 "record_util.ml" 382 10823 10954
+type(
+  int64
+)
+"record_util.ml" 384 10966 10974 "record_util.ml" 384 10966 10979
+type(
+  exn -> int64
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"record_util.ml" 384 10966 10997 "record_util.ml" 384 10966 11011
+type(
+  (string -> string, unit, string) format -> string -> string
+)
+ident(
+  ext_ref Printf.sprintf
+)
+"record_util.ml" 384 10966 11012 "record_util.ml" 384 10966 11085
+type(
+  (string -> string, unit, string) format
+)
+"record_util.ml" 384 10966 11086 "record_util.ml" 384 10966 11091
+type(
+  string
+)
+ident(
+  int_ref field "record_util.ml" 368 10180 10200 "record_util.ml" 368 10180 10205
+)
+"record_util.ml" 384 10966 10996 "record_util.ml" 384 10966 11092
+type(
+  string
+)
+"record_util.ml" 384 10966 10980 "record_util.ml" 384 10966 11093
+type(
+  exn
+)
+"record_util.ml" 384 10966 10974 "record_util.ml" 384 10966 11093
+type(
+  int64
+)
+"record_util.ml" 381 10799 10805 "record_util.ml" 384 10966 11094
+type(
+  int64
+)
+"record_util.ml" 380 10723 10729 "record_util.ml" 384 10966 11094
+type(
+  int64
+)
+"record_util.ml" 379 10656 10662 "record_util.ml" 384 10966 11094
+type(
+  int64
+)
+"record_util.ml" 377 10506 10512 "record_util.ml" 384 10966 11094
+type(
+  int64
+)
+"record_util.ml" 374 10460 10464 "record_util.ml" 384 10966 11094
+type(
+  int64
+)
+"record_util.ml" 386 11102 11111 "record_util.ml" 386 11102 11125
+type(
+  (char -> bool) -> string -> string list
+)
+ident(
+  ext_ref Stringext.( String ).split_f
+)
+"record_util.ml" 386 11102 11131 "record_util.ml" 386 11102 11132
+type(
+  char
+)
+ident(
+  def c "record_util.ml" 386 11102 11136 "record_util.ml" 386 11102 11167
+)
+"record_util.ml" 386 11102 11136 "record_util.ml" 386 11102 11150
+type(
+  char -> bool
+)
+ident(
+  ext_ref Stringext.( String ).isspace
+)
+"record_util.ml" 386 11102 11151 "record_util.ml" 386 11102 11152
+type(
+  char
+)
+ident(
+  int_ref c "record_util.ml" 386 11102 11131 "record_util.ml" 386 11102 11132
+)
+"record_util.ml" 386 11102 11136 "record_util.ml" 386 11102 11152
+type(
+  bool
+)
+"record_util.ml" 386 11102 11153 "record_util.ml" 386 11102 11155
+type(
+  bool -> bool -> bool
+)
+ident(
+  ext_ref Pervasives.( || )
+)
+"record_util.ml" 386 11102 11157 "record_util.ml" 386 11102 11164
+type(
+  char -> bool
+)
+ident(
+  int_ref isdigit "record_util.ml" 369 10210 10216 "record_util.ml" 369 10210 10223
+)
+"record_util.ml" 386 11102 11165 "record_util.ml" 386 11102 11166
+type(
+  char
+)
+ident(
+  int_ref c "record_util.ml" 386 11102 11131 "record_util.ml" 386 11102 11132
+)
+"record_util.ml" 386 11102 11156 "record_util.ml" 386 11102 11167
+type(
+  bool
+)
+"record_util.ml" 386 11102 11136 "record_util.ml" 386 11102 11167
+type(
+  bool
+)
+"record_util.ml" 386 11102 11126 "record_util.ml" 386 11102 11168
+type(
+  char -> bool
+)
+"record_util.ml" 386 11102 11169 "record_util.ml" 386 11102 11170
+type(
+  string
+)
+ident(
+  int_ref x "record_util.ml" 368 10180 10206 "record_util.ml" 368 10180 10207
+)
+"record_util.ml" 386 11102 11110 "record_util.ml" 386 11102 11171
+type(
+  string list
+)
+"record_util.ml" 387 11177 11181 "record_util.ml" 387 11177 11183
+type(
+  string list
+)
+"record_util.ml" 389 11220 11226 "record_util.ml" 389 11220 11241
+type(
+  string -> int64
+)
+ident(
+  int_ref int64_of_string "record_util.ml" 373 10434 10440 "record_util.ml" 373 10434 10455
+)
+"record_util.ml" 389 11220 11242 "record_util.ml" 389 11220 11243
+type(
+  string
+)
+ident(
+  int_ref x "record_util.ml" 368 10180 10206 "record_util.ml" 368 10180 10207
+)
+"record_util.ml" 389 11220 11226 "record_util.ml" 389 11220 11243
+type(
+  int64
+)
+"record_util.ml" 390 11244 11250 "record_util.ml" 390 11244 11256
+type(
+  string
+)
+ident(
+  def suffix "record_util.ml" 390 11244 11262 "record_util.ml" 403 11901 11908
+)
+"record_util.ml" 390 11244 11248 "record_util.ml" 390 11244 11258
+type(
+  string list
+)
+"record_util.ml" 391 11268 11273 "record_util.ml" 391 11268 11279
+type(
+  int64
+)
+"record_util.ml" 391 11268 11289 "record_util.ml" 391 11268 11303
+type(
+  (char -> bool) -> string -> string list
+)
+ident(
+  ext_ref Stringext.( String ).split_f
+)
+"record_util.ml" 391 11268 11309 "record_util.ml" 391 11268 11310
+type(
+  char
+)
+ident(
+  def x "record_util.ml" 391 11268 11314 "record_util.ml" 391 11268 11329
+)
+"record_util.ml" 391 11268 11314 "record_util.ml" 391 11268 11317
+type(
+  bool -> bool
+)
+ident(
+  ext_ref Pervasives.not
+)
+"record_util.ml" 391 11268 11319 "record_util.ml" 391 11268 11326
+type(
+  char -> bool
+)
+ident(
+  int_ref isdigit "record_util.ml" 369 10210 10216 "record_util.ml" 369 10210 10223
+)
+"record_util.ml" 391 11268 11327 "record_util.ml" 391 11268 11328
+type(
+  char
+)
+ident(
+  int_ref x "record_util.ml" 391 11268 11309 "record_util.ml" 391 11268 11310
+)
+"record_util.ml" 391 11268 11318 "record_util.ml" 391 11268 11329
+type(
+  bool
+)
+"record_util.ml" 391 11268 11314 "record_util.ml" 391 11268 11329
+type(
+  bool
+)
+"record_util.ml" 391 11268 11304 "record_util.ml" 391 11268 11330
+type(
+  char -> bool
+)
+"record_util.ml" 391 11268 11331 "record_util.ml" 391 11268 11332
+type(
+  string
+)
+ident(
+  int_ref x "record_util.ml" 368 10180 10206 "record_util.ml" 368 10180 10207
+)
+"record_util.ml" 391 11268 11288 "record_util.ml" 391 11268 11333
+type(
+  string list
+)
+"record_util.ml" 392 11339 11346 "record_util.ml" 392 11339 11352
+type(
+  string
+)
+ident(
+  def number "record_util.ml" 392 11339 11358 "record_util.ml" 392 11339 11380
+)
+"record_util.ml" 392 11339 11344 "record_util.ml" 392 11339 11354
+type(
+  string list
+)
+"record_util.ml" 392 11339 11358 "record_util.ml" 392 11339 11373
+type(
+  string -> int64
+)
+ident(
+  int_ref int64_of_string "record_util.ml" 373 10434 10440 "record_util.ml" 373 10434 10455
+)
+"record_util.ml" 392 11339 11374 "record_util.ml" 392 11339 11380
+type(
+  string
+)
+ident(
+  int_ref number "record_util.ml" 392 11339 11346 "record_util.ml" 392 11339 11352
+)
+"record_util.ml" 392 11339 11358 "record_util.ml" 392 11339 11380
+type(
+  int64
+)
+"record_util.ml" 393 11381 11386 "record_util.ml" 393 11381 11387
+type(
+  string list
+)
+"record_util.ml" 393 11381 11391 "record_util.ml" 393 11381 11396
+type(
+  exn -> int64
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"record_util.ml" 393 11381 11414 "record_util.ml" 393 11381 11428
+type(
+  (string -> string, unit, string) format -> string -> string
+)
+ident(
+  ext_ref Printf.sprintf
+)
+"record_util.ml" 393 11381 11429 "record_util.ml" 393 11381 11502
+type(
+  (string -> string, unit, string) format
+)
+"record_util.ml" 393 11381 11503 "record_util.ml" 393 11381 11508
+type(
+  string
+)
+ident(
+  int_ref field "record_util.ml" 368 10180 10200 "record_util.ml" 368 10180 10205
+)
+"record_util.ml" 393 11381 11413 "record_util.ml" 393 11381 11509
+type(
+  string
+)
+"record_util.ml" 393 11381 11397 "record_util.ml" 393 11381 11510
+type(
+  exn
+)
+"record_util.ml" 393 11381 11391 "record_util.ml" 393 11381 11510
+type(
+  int64
+)
+"record_util.ml" 391 11268 11282 "record_util.ml" 393 11381 11510
+type(
+  int64
+)
+"record_util.ml" 394 11514 11519 "record_util.ml" 394 11514 11529
+type(
+  int64
+)
+"record_util.ml" 394 11514 11538 "record_util.ml" 394 11514 11544
+type(
+  string
+)
+ident(
+  int_ref suffix "record_util.ml" 390 11244 11250 "record_util.ml" 390 11244 11256
+)
+"record_util.ml" 395 11550 11555 "record_util.ml" 395 11550 11562
+type(
+  string
+)
+"record_util.ml" 395 11550 11566 "record_util.ml" 395 11550 11568
+type(
+  int64
+)
+"record_util.ml" 396 11569 11574 "record_util.ml" 396 11569 11579
+type(
+  string
+)
+"record_util.ml" 396 11569 11583 "record_util.ml" 396 11569 11588
+type(
+  int64
+)
+"record_util.ml" 397 11589 11594 "record_util.ml" 397 11589 11599
+type(
+  string
+)
+"record_util.ml" 397 11589 11603 "record_util.ml" 397 11589 11608
+type(
+  int64
+)
+"record_util.ml" 397 11589 11609 "record_util.ml" 397 11589 11611
+type(
+  int64 -> int64 -> int64
+)
+ident(
+  int_ref ** "record_util.ml" 370 10252 10258 "record_util.ml" 370 10252 10264
+)
+"record_util.ml" 397 11589 11612 "record_util.ml" 397 11589 11617
+type(
+  int64
+)
+"record_util.ml" 397 11589 11603 "record_util.ml" 397 11589 11617
+type(
+  int64
+)
+"record_util.ml" 398 11618 11623 "record_util.ml" 398 11618 11628
+type(
+  string
+)
+"record_util.ml" 398 11618 11632 "record_util.ml" 398 11618 11637
+type(
+  int64
+)
+"record_util.ml" 398 11618 11638 "record_util.ml" 398 11618 11640
+type(
+  int64 -> int64 -> int64
+)
+ident(
+  int_ref ** "record_util.ml" 370 10252 10258 "record_util.ml" 370 10252 10264
+)
+"record_util.ml" 398 11618 11641 "record_util.ml" 398 11618 11646
+type(
+  int64
+)
+"record_util.ml" 398 11618 11647 "record_util.ml" 398 11618 11649
+type(
+  int64 -> int64 -> int64
+)
+ident(
+  int_ref ** "record_util.ml" 370 10252 10258 "record_util.ml" 370 10252 10264
+)
+"record_util.ml" 398 11618 11650 "record_util.ml" 398 11618 11655
+type(
+  int64
+)
+"record_util.ml" 398 11618 11641 "record_util.ml" 398 11618 11655
+type(
+  int64
+)
+"record_util.ml" 398 11618 11632 "record_util.ml" 398 11618 11655
+type(
+  int64
+)
+"record_util.ml" 399 11656 11661 "record_util.ml" 399 11656 11666
+type(
+  string
+)
+"record_util.ml" 399 11656 11670 "record_util.ml" 399 11656 11675
+type(
+  int64
+)
+"record_util.ml" 399 11656 11676 "record_util.ml" 399 11656 11678
+type(
+  int64 -> int64 -> int64
+)
+ident(
+  int_ref ** "record_util.ml" 370 10252 10258 "record_util.ml" 370 10252 10264
+)
+"record_util.ml" 399 11656 11679 "record_util.ml" 399 11656 11684
+type(
+  int64
+)
+"record_util.ml" 399 11656 11685 "record_util.ml" 399 11656 11687
+type(
+  int64 -> int64 -> int64
+)
+ident(
+  int_ref ** "record_util.ml" 370 10252 10258 "record_util.ml" 370 10252 10264
+)
+"record_util.ml" 399 11656 11688 "record_util.ml" 399 11656 11693
+type(
+  int64
+)
+"record_util.ml" 399 11656 11694 "record_util.ml" 399 11656 11696
+type(
+  int64 -> int64 -> int64
+)
+ident(
+  int_ref ** "record_util.ml" 370 10252 10258 "record_util.ml" 370 10252 10264
+)
+"record_util.ml" 399 11656 11697 "record_util.ml" 399 11656 11702
+type(
+  int64
+)
+"record_util.ml" 399 11656 11688 "record_util.ml" 399 11656 11702
+type(
+  int64
+)
+"record_util.ml" 399 11656 11679 "record_util.ml" 399 11656 11702
+type(
+  int64
+)
+"record_util.ml" 399 11656 11670 "record_util.ml" 399 11656 11702
+type(
+  int64
+)
+"record_util.ml" 400 11703 11708 "record_util.ml" 400 11703 11709
+type(
+  string
+)
+ident(
+  def x "record_util.ml" 400 11703 11713 "record_util.ml" 400 11703 11838
+)
+"record_util.ml" 400 11703 11713 "record_util.ml" 400 11703 11718
+type(
+  exn -> int64
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"record_util.ml" 400 11703 11736 "record_util.ml" 400 11703 11750
+type(
+  (string -> string -> string, unit, string) format ->
+  string -> string -> string
+)
+ident(
+  ext_ref Printf.sprintf
+)
+"record_util.ml" 400 11703 11751 "record_util.ml" 400 11703 11828
+type(
+  (string -> string -> string, unit, string) format
+)
+"record_util.ml" 400 11703 11829 "record_util.ml" 400 11703 11834
+type(
+  string
+)
+ident(
+  int_ref field "record_util.ml" 368 10180 10200 "record_util.ml" 368 10180 10205
+)
+"record_util.ml" 400 11703 11835 "record_util.ml" 400 11703 11836
+type(
+  string
+)
+ident(
+  int_ref x "record_util.ml" 400 11703 11708 "record_util.ml" 400 11703 11709
+)
+"record_util.ml" 400 11703 11735 "record_util.ml" 400 11703 11837
+type(
+  string
+)
+"record_util.ml" 400 11703 11719 "record_util.ml" 400 11703 11838
+type(
+  exn
+)
+"record_util.ml" 400 11703 11713 "record_util.ml" 400 11703 11838
+type(
+  int64
+)
+"record_util.ml" 394 11514 11532 "record_util.ml" 400 11703 11838
+type(
+  int64
+)
+"record_util.ml" 402 11879 11880 "record_util.ml" 402 11879 11886
+type(
+  int64
+)
+ident(
+  int_ref number "record_util.ml" 391 11268 11273 "record_util.ml" 391 11268 11279
+)
+"record_util.ml" 402 11879 11887 "record_util.ml" 402 11879 11889
+type(
+  int64 -> int64 -> int64
+)
+ident(
+  int_ref ** "record_util.ml" 370 10252 10258 "record_util.ml" 370 10252 10264
+)
+"record_util.ml" 402 11879 11890 "record_util.ml" 402 11879 11900
+type(
+  int64
+)
+ident(
+  int_ref multiplier "record_util.ml" 394 11514 11519 "record_util.ml" 394 11514 11529
+)
+"record_util.ml" 402 11879 11880 "record_util.ml" 402 11879 11900
+type(
+  int64
+)
+"record_util.ml" 394 11514 11515 "record_util.ml" 402 11879 11900
+type(
+  int64
+)
+"record_util.ml" 390 11244 11262 "record_util.ml" 403 11901 11908
+type(
+  int64
+)
+"record_util.ml" 404 11909 11913 "record_util.ml" 404 11909 11914
+type(
+  string list
+)
+"record_util.ml" 404 11909 11918 "record_util.ml" 404 11909 11923
+type(
+  exn -> int64
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"record_util.ml" 404 11909 11941 "record_util.ml" 404 11909 11955
+type(
+  (string -> string, unit, string) format -> string -> string
+)
+ident(
+  ext_ref Printf.sprintf
+)
+"record_util.ml" 404 11909 11956 "record_util.ml" 404 11909 12029
+type(
+  (string -> string, unit, string) format
+)
+"record_util.ml" 404 11909 12030 "record_util.ml" 404 11909 12035
+type(
+  string
+)
+ident(
+  int_ref field "record_util.ml" 368 10180 10200 "record_util.ml" 368 10180 10205
+)
+"record_util.ml" 404 11909 11940 "record_util.ml" 404 11909 12036
+type(
+  string
+)
+"record_util.ml" 404 11909 11924 "record_util.ml" 404 11909 12037
+type(
+  exn
+)
+"record_util.ml" 404 11909 11918 "record_util.ml" 404 11909 12037
+type(
+  int64
+)
+"record_util.ml" 386 11102 11104 "record_util.ml" 404 11909 12037
+type(
+  int64
+)
+"record_util.ml" 373 10434 10436 "record_util.ml" 404 11909 12037
+type(
+  int64
+)
+"record_util.ml" 371 10288 10290 "record_util.ml" 404 11909 12037
+type(
+  int64
+)
+"record_util.ml" 370 10252 10254 "record_util.ml" 404 11909 12037
+type(
+  int64
+)
+"record_util.ml" 369 10210 10212 "record_util.ml" 404 11909 12037
+type(
+  int64
+)
+"record_util.ml" 409 12131 12135 "record_util.ml" 409 12131 12145
+type(
+  unit -> string
+)
+ident(
+  def random_mac "record_util.ml" 413 12290 12290 --
+)
+"record_util.ml" 409 12131 12146 "record_util.ml" 409 12131 12148
+type(
+  unit
+)
+"record_util.ml" 410 12151 12156 "record_util.ml" 410 12151 12160
+type(
+  int list
+)
+"record_util.ml" 410 12151 12164 "record_util.ml" 410 12151 12168
+type(
+  int
+)
+"record_util.ml" 410 12151 12170 "record_util.ml" 410 12151 12174
+type(
+  int
+)
+"record_util.ml" 410 12151 12176 "record_util.ml" 410 12151 12180
+type(
+  int
+)
+"record_util.ml" 410 12151 12163 "record_util.ml" 410 12151 12181
+type(
+  int list
+)
+"record_util.ml" 410 12151 12182 "record_util.ml" 410 12151 12183
+type(
+  int list -> int list -> int list
+)
+ident(
+  ext_ref Pervasives.( @ )
+)
+"record_util.ml" 410 12151 12185 "record_util.ml" 410 12151 12193
+type(
+  (int -> int) -> int list -> int list
+)
+ident(
+  ext_ref List.map
+)
+"record_util.ml" 410 12151 12194 "record_util.ml" 410 12151 12204
+type(
+  int -> int
+)
+ident(
+  ext_ref Random.int
+)
+"record_util.ml" 410 12151 12206 "record_util.ml" 410 12151 12210
+type(
+  int
+)
+"record_util.ml" 410 12151 12212 "record_util.ml" 410 12151 12217
+type(
+  int
+)
+"record_util.ml" 410 12151 12219 "record_util.ml" 410 12151 12224
+type(
+  int
+)
+"record_util.ml" 410 12151 12205 "record_util.ml" 410 12151 12225
+type(
+  int list
+)
+"record_util.ml" 410 12151 12184 "record_util.ml" 410 12151 12226
+type(
+  int list
+)
+"record_util.ml" 410 12151 12163 "record_util.ml" 410 12151 12226
+type(
+  int list
+)
+"record_util.ml" 411 12230 12231 "record_util.ml" 411 12230 12244
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"record_util.ml" 411 12230 12245 "record_util.ml" 411 12230 12248
+type(
+  string
+)
+"record_util.ml" 411 12230 12250 "record_util.ml" 411 12230 12258
+type(
+  (int -> string) -> int list -> string list
+)
+ident(
+  ext_ref List.map
+)
+"record_util.ml" 411 12230 12260 "record_util.ml" 411 12230 12274
+type(
+  (int -> string, unit, string) format -> int -> string
+)
+ident(
+  ext_ref Printf.sprintf
+)
+"record_util.ml" 411 12230 12275 "record_util.ml" 411 12230 12281
+type(
+  (int -> string, unit, string) format
+)
+"record_util.ml" 411 12230 12259 "record_util.ml" 411 12230 12282
+type(
+  int -> string
+)
+"record_util.ml" 411 12230 12283 "record_util.ml" 411 12230 12287
+type(
+  int list
+)
+ident(
+  int_ref macs "record_util.ml" 410 12151 12156 "record_util.ml" 410 12151 12160
+)
+"record_util.ml" 411 12230 12249 "record_util.ml" 411 12230 12288
+type(
+  string list
+)
+"record_util.ml" 411 12230 12231 "record_util.ml" 411 12230 12288
+type(
+  string
+)
+"record_util.ml" 410 12151 12152 "record_util.ml" 411 12230 12288
+type(
+  string
+)
+"record_util.ml" 413 12290 12294 "record_util.ml" 413 12290 12312
+type(
+  int array -> string
+)
+ident(
+  def mac_from_int_array "record_util.ml" 420 12605 12605 --
+)
+"record_util.ml" 413 12290 12313 "record_util.ml" 413 12290 12317
+type(
+  int array
+)
+ident(
+  def macs "record_util.ml" 415 12388 12390 "record_util.ml" 417 12516 12546
+)
+"record_util.ml" 415 12388 12390 "record_util.ml" 415 12388 12394
+type(
+  int array
+)
+ident(
+  int_ref macs "record_util.ml" 413 12290 12313 "record_util.ml" 413 12290 12317
+)
+"record_util.ml" 415 12388 12396 "record_util.ml" 415 12388 12397
+type(
+  int
+)
+"record_util.ml" 415 12388 12404 "record_util.ml" 415 12388 12408
+type(
+  int array
+)
+ident(
+  int_ref macs "record_util.ml" 413 12290 12313 "record_util.ml" 413 12290 12317
+)
+"record_util.ml" 415 12388 12410 "record_util.ml" 415 12388 12411
+type(
+  int
+)
+"record_util.ml" 415 12388 12404 "record_util.ml" 415 12388 12412
+type(
+  int
+)
+"record_util.ml" 415 12388 12413 "record_util.ml" 415 12388 12416
+type(
+  int -> int -> int
+)
+ident(
+  ext_ref Pervasives.( lor )
+)
+"record_util.ml" 415 12388 12417 "record_util.ml" 415 12388 12420
+type(
+  int
+)
+"record_util.ml" 415 12388 12403 "record_util.ml" 415 12388 12421
+type(
+  int
+)
+"record_util.ml" 415 12388 12422 "record_util.ml" 415 12388 12426
+type(
+  int -> int -> int
+)
+ident(
+  ext_ref Pervasives.( land )
+)
+"record_util.ml" 415 12388 12428 "record_util.ml" 415 12388 12432
+type(
+  int -> int
+)
+ident(
+  ext_ref Pervasives.lnot
+)
+"record_util.ml" 415 12388 12433 "record_util.ml" 415 12388 12436
+type(
+  int
+)
+"record_util.ml" 415 12388 12427 "record_util.ml" 415 12388 12437
+type(
+  int
+)
+"record_util.ml" 415 12388 12402 "record_util.ml" 415 12388 12438
+type(
+  int
+)
+"record_util.ml" 415 12388 12390 "record_util.ml" 415 12388 12438
+type(
+  unit
+)
+"record_util.ml" 416 12440 12442 "record_util.ml" 416 12440 12456
+type(
+  (int -> int -> int -> int -> int -> int -> string, unit, string) format ->
+  int -> int -> int -> int -> int -> int -> string
+)
+ident(
+  ext_ref Printf.sprintf
+)
+"record_util.ml" 416 12440 12457 "record_util.ml" 416 12440 12488
+type(
+  (int -> int -> int -> int -> int -> int -> string, unit, string) format
+)
+"record_util.ml" 416 12440 12489 "record_util.ml" 416 12440 12493
+type(
+  int array
+)
+ident(
+  int_ref macs "record_util.ml" 413 12290 12313 "record_util.ml" 413 12290 12317
+)
+"record_util.ml" 416 12440 12495 "record_util.ml" 416 12440 12496
+type(
+  int
+)
+"record_util.ml" 416 12440 12489 "record_util.ml" 416 12440 12497
+type(
+  int
+)
+"record_util.ml" 416 12440 12498 "record_util.ml" 416 12440 12502
+type(
+  int array
+)
+ident(
+  int_ref macs "record_util.ml" 413 12290 12313 "record_util.ml" 413 12290 12317
+)
+"record_util.ml" 416 12440 12504 "record_util.ml" 416 12440 12505
+type(
+  int
+)
+"record_util.ml" 416 12440 12498 "record_util.ml" 416 12440 12506
+type(
+  int
+)
+"record_util.ml" 416 12440 12507 "record_util.ml" 416 12440 12511
+type(
+  int array
+)
+ident(
+  int_ref macs "record_util.ml" 413 12290 12313 "record_util.ml" 413 12290 12317
+)
+"record_util.ml" 416 12440 12513 "record_util.ml" 416 12440 12514
+type(
+  int
+)
+"record_util.ml" 416 12440 12507 "record_util.ml" 416 12440 12515
+type(
+  int
+)
+"record_util.ml" 417 12516 12520 "record_util.ml" 417 12516 12524
+type(
+  int array
+)
+ident(
+  int_ref macs "record_util.ml" 413 12290 12313 "record_util.ml" 413 12290 12317
+)
+"record_util.ml" 417 12516 12526 "record_util.ml" 417 12516 12527
+type(
+  int
+)
+"record_util.ml" 417 12516 12520 "record_util.ml" 417 12516 12528
+type(
+  int
+)
+"record_util.ml" 417 12516 12529 "record_util.ml" 417 12516 12533
+type(
+  int array
+)
+ident(
+  int_ref macs "record_util.ml" 413 12290 12313 "record_util.ml" 413 12290 12317
+)
+"record_util.ml" 417 12516 12535 "record_util.ml" 417 12516 12536
+type(
+  int
+)
+"record_util.ml" 417 12516 12529 "record_util.ml" 417 12516 12537
+type(
+  int
+)
+"record_util.ml" 417 12516 12538 "record_util.ml" 417 12516 12542
+type(
+  int array
+)
+ident(
+  int_ref macs "record_util.ml" 413 12290 12313 "record_util.ml" 413 12290 12317
+)
+"record_util.ml" 417 12516 12544 "record_util.ml" 417 12516 12545
+type(
+  int
+)
+"record_util.ml" 417 12516 12538 "record_util.ml" 417 12516 12546
+type(
+  int
+)
+"record_util.ml" 416 12440 12442 "record_util.ml" 417 12516 12546
+type(
+  string
+)
+"record_util.ml" 415 12388 12390 "record_util.ml" 417 12516 12546
+type(
+  string
+)
+"record_util.ml" 420 12605 12609 "record_util.ml" 420 12605 12625
+type(
+  unit -> string
+)
+ident(
+  def random_mac_local "record_util.ml" 421 12631 12694 --
+)
+"record_util.ml" 420 12605 12626 "record_util.ml" 420 12605 12628
+type(
+  unit
+)
+"record_util.ml" 421 12631 12633 "record_util.ml" 421 12631 12651
+type(
+  int array -> string
+)
+ident(
+  int_ref mac_from_int_array "record_util.ml" 413 12290 12294 "record_util.ml" 413 12290 12312
+)
+"record_util.ml" 421 12631 12653 "record_util.ml" 421 12631 12663
+type(
+  int -> (int -> int) -> int array
+)
+ident(
+  ext_ref Array.init
+)
+"record_util.ml" 421 12631 12664 "record_util.ml" 421 12631 12665
+type(
+  int
+)
+"record_util.ml" 421 12631 12671 "record_util.ml" 421 12631 12672
+type(
+  int
+)
+ident(
+  def i "record_util.ml" 421 12631 12676 "record_util.ml" 421 12631 12692
+)
+"record_util.ml" 421 12631 12676 "record_util.ml" 421 12631 12686
+type(
+  int -> int
+)
+ident(
+  ext_ref Random.int
+)
+"record_util.ml" 421 12631 12687 "record_util.ml" 421 12631 12692
+type(
+  int
+)
+"record_util.ml" 421 12631 12676 "record_util.ml" 421 12631 12692
+type(
+  int
+)
+"record_util.ml" 421 12631 12666 "record_util.ml" 421 12631 12693
+type(
+  int -> int
+)
+"record_util.ml" 421 12631 12652 "record_util.ml" 421 12631 12694
+type(
+  int array
+)
+"record_util.ml" 421 12631 12633 "record_util.ml" 421 12631 12694
+type(
+  string
+)
--- /dev/null
+++ xen-api-0.1/ocaml/client_records/records.annot
@@ -0,0 +1,60828 @@
+"records.ml" 22 710 714 "records.ml" 22 710 721
+type(
+  string
+)
+ident(
+  def nullref "records.ml" 23 749 749 --
+)
+"records.ml" 22 710 724 "records.ml" 22 710 737
+type(
+  '_a Ref.t -> string
+)
+ident(
+  ext_ref Ref.string_of
+)
+"records.ml" 22 710 738 "records.ml" 22 710 748
+type(
+  '_a Ref.t
+)
+ident(
+  ext_ref Ref.null
+)
+"records.ml" 22 710 724 "records.ml" 22 710 748
+type(
+  string
+)
+"records.ml" 23 749 753 "records.ml" 23 749 756
+type(
+  string
+)
+ident(
+  def nid "records.ml" 24 779 779 --
+)
+"records.ml" 23 749 759 "records.ml" 23 749 778
+type(
+  string
+)
+"records.ml" 24 779 783 "records.ml" 24 779 795
+type(
+  string
+)
+ident(
+  def unknown_time "records.ml" 26 816 816 --
+)
+"records.ml" 24 779 798 "records.ml" 24 779 814
+type(
+  string
+)
+"records.ml" 26 816 820 "records.ml" 26 816 829
+type(
+  ('a Ref.t -> string) -> 'a Ref.t -> string
+)
+ident(
+  def checknull "records.ml" 32 911 911 --
+)
+"records.ml" 26 816 830 "records.ml" 26 816 831
+type(
+  'a Ref.t -> string
+)
+ident(
+  def f "records.ml" 26 816 832 "records.ml" 28 882 907
+)
+"records.ml" 26 816 832 "records.ml" 26 816 833
+type(
+  'a Ref.t
+)
+ident(
+  def r "records.ml" 27 837 839 "records.ml" 28 882 907
+)
+"records.ml" 27 837 843 "records.ml" 27 837 856
+type(
+  'a Ref.t -> string
+)
+ident(
+  ext_ref Ref.string_of
+)
+"records.ml" 27 837 857 "records.ml" 27 837 858
+type(
+  'a Ref.t
+)
+ident(
+  int_ref r "records.ml" 26 816 832 "records.ml" 26 816 833
+)
+"records.ml" 27 837 842 "records.ml" 27 837 859
+type(
+  string
+)
+"records.ml" 27 837 859 "records.ml" 27 837 860
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"records.ml" 27 837 860 "records.ml" 27 837 867
+type(
+  string
+)
+ident(
+  int_ref nullref "records.ml" 22 710 714 "records.ml" 22 710 721
+)
+"records.ml" 27 837 842 "records.ml" 27 837 867
+type(
+  bool
+)
+"records.ml" 27 837 873 "records.ml" 27 837 876
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 28 882 890 "records.ml" 28 882 891
+type(
+  'a Ref.t -> string
+)
+ident(
+  int_ref f "records.ml" 26 816 830 "records.ml" 26 816 831
+)
+"records.ml" 28 882 892 "records.ml" 28 882 893
+type(
+  'a Ref.t
+)
+ident(
+  int_ref r "records.ml" 26 816 832 "records.ml" 26 816 833
+)
+"records.ml" 28 882 890 "records.ml" 28 882 893
+type(
+  string
+)
+"records.ml" 28 882 899 "records.ml" 28 882 900
+type(
+  exn
+)
+"records.ml" 28 882 904 "records.ml" 28 882 907
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 28 882 886 "records.ml" 28 882 907
+type(
+  string
+)
+"records.ml" 27 837 839 "records.ml" 28 882 907
+type(
+  string
+)
+"records.ml" 32 911 915 "records.ml" 32 911 923
+type(
+  'a -> ('a * 'b) list -> 'b option
+)
+ident(
+  def getparam "records.ml" 34 990 990 --
+)
+"records.ml" 32 911 924 "records.ml" 32 911 929
+type(
+  'a
+)
+ident(
+  def param "records.ml" 32 911 930 "records.ml" 32 911 988
+)
+"records.ml" 32 911 930 "records.ml" 32 911 936
+type(
+  ('a * 'b) list
+)
+ident(
+  def params "records.ml" 32 911 939 "records.ml" 32 911 988
+)
+"records.ml" 32 911 949 "records.ml" 32 911 959
+type(
+  'a -> ('a * 'b) list -> 'b
+)
+ident(
+  ext_ref List.assoc
+)
+"records.ml" 32 911 960 "records.ml" 32 911 965
+type(
+  'a
+)
+ident(
+  int_ref param "records.ml" 32 911 924 "records.ml" 32 911 929
+)
+"records.ml" 32 911 966 "records.ml" 32 911 972
+type(
+  ('a * 'b) list
+)
+ident(
+  int_ref params "records.ml" 32 911 930 "records.ml" 32 911 936
+)
+"records.ml" 32 911 948 "records.ml" 32 911 973
+type(
+  'b
+)
+"records.ml" 32 911 943 "records.ml" 32 911 973
+type(
+  'b option
+)
+"records.ml" 32 911 979 "records.ml" 32 911 980
+type(
+  exn
+)
+"records.ml" 32 911 984 "records.ml" 32 911 988
+type(
+  'b option
+)
+"records.ml" 32 911 939 "records.ml" 32 911 988
+type(
+  'b option
+)
+"records.ml" 34 990 994 "records.ml" 34 990 1009
+type(
+  float -> string
+)
+ident(
+  def string_of_float "records.ml" 36 1039 1039 --
+)
+"records.ml" 34 990 1010 "records.ml" 34 990 1011
+type(
+  float
+)
+ident(
+  def f "records.ml" 34 990 1014 "records.ml" 34 990 1037
+)
+"records.ml" 34 990 1014 "records.ml" 34 990 1028
+type(
+  (float -> string, unit, string) format -> float -> string
+)
+ident(
+  ext_ref Printf.sprintf
+)
+"records.ml" 34 990 1029 "records.ml" 34 990 1035
+type(
+  (float -> string, unit, string) format
+)
+"records.ml" 34 990 1036 "records.ml" 34 990 1037
+type(
+  float
+)
+ident(
+  int_ref f "records.ml" 34 990 1010 "records.ml" 34 990 1011
+)
+"records.ml" 34 990 1014 "records.ml" 34 990 1037
+type(
+  string
+)
+"records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  def make_field "records.ml" 66 2461 2461 --
+)
+"records.ml" 57 1941 1957 "records.ml" 57 1941 1967
+type(
+  (string -> unit) option
+)
+ident(
+  def add_to_set "records.ml" 57 1941 1968 "records.ml" 64 2456 2459
+)
+"records.ml" 57 1941 1969 "records.ml" 57 1941 1984
+type(
+  (string -> unit) option
+)
+ident(
+  def remove_from_set "records.ml" 57 1941 1985 "records.ml" 64 2456 2459
+)
+"records.ml" 57 1941 1986 "records.ml" 57 1941 1996
+type(
+  (string -> string -> unit) option
+)
+ident(
+  def add_to_map "records.ml" 57 1941 1997 "records.ml" 64 2456 2459
+)
+"records.ml" 57 1941 1998 "records.ml" 57 1941 2013
+type(
+  (string -> unit) option
+)
+ident(
+  def remove_from_map "records.ml" 57 1941 2014 "records.ml" 64 2456 2459
+)
+"records.ml" 57 1941 2015 "records.ml" 57 1941 2018
+type(
+  (string -> unit) option
+)
+ident(
+  def set "records.ml" 57 1941 2019 "records.ml" 64 2456 2459
+)
+"records.ml" 57 1941 2020 "records.ml" 57 1941 2027
+type(
+  (unit -> string list) option
+)
+ident(
+  def get_set "records.ml" 57 1941 2028 "records.ml" 64 2456 2459
+)
+"records.ml" 57 1941 2029 "records.ml" 57 1941 2036
+type(
+  (unit -> (string * string) list) option
+)
+ident(
+  def get_map "records.ml" 57 1941 2037 "records.ml" 64 2456 2459
+)
+"records.ml" 57 1941 2039 "records.ml" 57 1941 2048
+type(
+  bool
+)
+"records.ml" 57 1941 2049 "records.ml" 57 1941 2054
+type(
+  bool
+)
+type(
+  bool
+)
+ident(
+  int_ref *sth* "records.ml" 57 1941 2049 "records.ml" 57 1941 2054
+)
+type(
+  bool option
+)
+type(
+  bool option
+)
+type(
+  bool
+)
+ident(
+  def *sth* "records.ml" 57 1941 2049 "records.ml" 57 1941 2054
+)
+"records.ml" 57 1941 2058 "records.ml" 57 1941 2064
+type(
+  bool
+)
+"records.ml" 57 1941 2065 "records.ml" 57 1941 2070
+type(
+  bool
+)
+type(
+  bool
+)
+ident(
+  int_ref *sth* "records.ml" 57 1941 2065 "records.ml" 57 1941 2070
+)
+type(
+  bool option
+)
+type(
+  bool option
+)
+type(
+  bool
+)
+ident(
+  def *sth* "records.ml" 57 1941 2065 "records.ml" 57 1941 2070
+)
+"records.ml" 57 1941 2074 "records.ml" 57 1941 2084
+type(
+  bool
+)
+"records.ml" 57 1941 2085 "records.ml" 57 1941 2090
+type(
+  bool
+)
+type(
+  bool
+)
+ident(
+  int_ref *sth* "records.ml" 57 1941 2085 "records.ml" 57 1941 2090
+)
+type(
+  bool option
+)
+type(
+  bool option
+)
+type(
+  bool
+)
+ident(
+  def *sth* "records.ml" 57 1941 2085 "records.ml" 57 1941 2090
+)
+"records.ml" 57 1941 2094 "records.ml" 57 1941 2110
+type(
+  bool
+)
+"records.ml" 57 1941 2111 "records.ml" 57 1941 2116
+type(
+  bool
+)
+type(
+  bool
+)
+ident(
+  int_ref *sth* "records.ml" 57 1941 2111 "records.ml" 57 1941 2116
+)
+type(
+  bool option
+)
+type(
+  bool option
+)
+type(
+  bool
+)
+ident(
+  def *sth* "records.ml" 57 1941 2111 "records.ml" 57 1941 2116
+)
+"records.ml" 57 1941 2119 "records.ml" 57 1941 2123
+type(
+  string
+)
+ident(
+  def name "records.ml" 57 1941 2124 "records.ml" 64 2456 2459
+)
+"records.ml" 57 1941 2125 "records.ml" 57 1941 2128
+type(
+  unit -> string
+)
+ident(
+  def get "records.ml" 57 1941 2129 "records.ml" 64 2456 2459
+)
+"records.ml" 57 1941 2129 "records.ml" 57 1941 2131
+type(
+  unit
+)
+"records.ml" 58 2135 2146 "records.ml" 58 2135 2150
+type(
+  string
+)
+ident(
+  int_ref name "records.ml" 57 1941 2119 "records.ml" 57 1941 2123
+)
+"records.ml" 58 2135 2158 "records.ml" 58 2135 2161
+type(
+  unit -> string
+)
+ident(
+  int_ref get "records.ml" 57 1941 2125 "records.ml" 57 1941 2128
+)
+"records.ml" 58 2135 2169 "records.ml" 58 2135 2172
+type(
+  (string -> unit) option
+)
+ident(
+  int_ref set "records.ml" 57 1941 2015 "records.ml" 57 1941 2018
+)
+"records.ml" 59 2175 2192 "records.ml" 59 2175 2202
+type(
+  (string -> unit) option
+)
+ident(
+  int_ref add_to_set "records.ml" 57 1941 1957 "records.ml" 57 1941 1967
+)
+"records.ml" 59 2175 2222 "records.ml" 59 2175 2237
+type(
+  (string -> unit) option
+)
+ident(
+  int_ref remove_from_set "records.ml" 57 1941 1969 "records.ml" 57 1941 1984
+)
+"records.ml" 60 2239 2256 "records.ml" 60 2239 2266
+type(
+  (string -> string -> unit) option
+)
+ident(
+  int_ref add_to_map "records.ml" 57 1941 1986 "records.ml" 57 1941 1996
+)
+"records.ml" 60 2239 2286 "records.ml" 60 2239 2301
+type(
+  (string -> unit) option
+)
+ident(
+  int_ref remove_from_map "records.ml" 57 1941 1998 "records.ml" 57 1941 2013
+)
+"records.ml" 61 2304 2318 "records.ml" 61 2304 2325
+type(
+  (unit -> string list) option
+)
+ident(
+  int_ref get_set "records.ml" 57 1941 2020 "records.ml" 57 1941 2027
+)
+"records.ml" 61 2304 2337 "records.ml" 61 2304 2344
+type(
+  (unit -> (string * string) list) option
+)
+ident(
+  int_ref get_map "records.ml" 57 1941 2029 "records.ml" 57 1941 2036
+)
+"records.ml" 61 2304 2358 "records.ml" 61 2304 2367
+type(
+  bool
+)
+ident(
+  int_ref expensive "records.ml" 57 1941 2039 "records.ml" 57 1941 2048
+)
+"records.ml" 62 2369 2382 "records.ml" 62 2369 2388
+type(
+  bool
+)
+ident(
+  int_ref hidden "records.ml" 57 1941 2058 "records.ml" 57 1941 2064
+)
+"records.ml" 62 2369 2409 "records.ml" 62 2369 2425
+type(
+  bool
+)
+ident(
+  int_ref case_insensitive "records.ml" 57 1941 2094 "records.ml" 57 1941 2110
+)
+"records.ml" 63 2428 2445 "records.ml" 63 2428 2455
+type(
+  bool
+)
+ident(
+  int_ref deprecated "records.ml" 57 1941 2074 "records.ml" 57 1941 2084
+)
+"records.ml" 58 2135 2137 "records.ml" 64 2456 2459
+type(
+  field
+)
+"records.ml" 66 2461 2465 "records.ml" 66 2461 2483
+type(
+  field -> field
+)
+ident(
+  def makeexpensivefield "records.ml" 69 2547 2547 --
+)
+"records.ml" 66 2461 2484 "records.ml" 66 2461 2489
+type(
+  field
+)
+ident(
+  def field "records.ml" 67 2493 2495 "records.ml" 67 2493 2545
+)
+"records.ml" 67 2493 2497 "records.ml" 67 2493 2502
+type(
+  field
+)
+ident(
+  int_ref field "records.ml" 66 2461 2484 "records.ml" 66 2461 2489
+)
+"records.ml" 67 2493 2517 "records.ml" 67 2493 2519
+type(
+  unit
+)
+"records.ml" 67 2493 2523 "records.ml" 67 2493 2542
+type(
+  string
+)
+"records.ml" 67 2493 2512 "records.ml" 67 2493 2543
+type(
+  unit -> string
+)
+"records.ml" 67 2493 2495 "records.ml" 67 2493 2545
+type(
+  field
+)
+"records.ml" 69 2547 2551 "records.ml" 69 2547 2569
+type(
+  string -> string -> int64
+)
+ident(
+  def safe_i64_of_string "records.ml" 72 2718 2718 --
+)
+"records.ml" 69 2547 2570 "records.ml" 69 2547 2575
+type(
+  string
+)
+ident(
+  def field "records.ml" 69 2547 2576 "records.ml" 70 2582 2716
+)
+"records.ml" 69 2547 2576 "records.ml" 69 2547 2579
+type(
+  string
+)
+ident(
+  def str "records.ml" 70 2582 2584 "records.ml" 70 2582 2716
+)
+"records.ml" 70 2582 2588 "records.ml" 70 2582 2603
+type(
+  string -> int64
+)
+ident(
+  ext_ref Int64.of_string
+)
+"records.ml" 70 2582 2604 "records.ml" 70 2582 2607
+type(
+  string
+)
+ident(
+  int_ref str "records.ml" 69 2547 2576 "records.ml" 69 2547 2579
+)
+"records.ml" 70 2582 2588 "records.ml" 70 2582 2607
+type(
+  int64
+)
+"records.ml" 70 2582 2613 "records.ml" 70 2582 2614
+type(
+  exn
+)
+"records.ml" 70 2582 2618 "records.ml" 70 2582 2623
+type(
+  exn -> int64
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"records.ml" 70 2582 2653 "records.ml" 70 2582 2682
+type(
+  string
+)
+"records.ml" 70 2582 2682 "records.ml" 70 2582 2683
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"records.ml" 70 2582 2683 "records.ml" 70 2582 2688
+type(
+  string
+)
+ident(
+  int_ref field "records.ml" 69 2547 2570 "records.ml" 69 2547 2575
+)
+"records.ml" 70 2582 2688 "records.ml" 70 2582 2689
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"records.ml" 70 2582 2689 "records.ml" 70 2582 2714
+type(
+  string
+)
+"records.ml" 70 2582 2683 "records.ml" 70 2582 2714
+type(
+  string
+)
+"records.ml" 70 2582 2652 "records.ml" 70 2582 2715
+type(
+  string
+)
+"records.ml" 70 2582 2624 "records.ml" 70 2582 2716
+type(
+  exn
+)
+"records.ml" 70 2582 2618 "records.ml" 70 2582 2716
+type(
+  int64
+)
+"records.ml" 70 2582 2584 "records.ml" 70 2582 2716
+type(
+  int64
+)
+"records.ml" 72 2718 2722 "records.ml" 72 2718 2741
+type(
+  string -> string -> bool
+)
+ident(
+  def safe_bool_of_string "records.ml" 76 2939 2939 --
+)
+"records.ml" 72 2718 2742 "records.ml" 72 2718 2747
+type(
+  string
+)
+ident(
+  def field "records.ml" 72 2718 2748 "records.ml" 73 2754 2902
+)
+"records.ml" 72 2718 2748 "records.ml" 72 2718 2751
+type(
+  string
+)
+ident(
+  def str "records.ml" 73 2754 2756 "records.ml" 73 2754 2902
+)
+"records.ml" 73 2754 2760 "records.ml" 73 2754 2774
+type(
+  string -> bool
+)
+ident(
+  ext_ref Pervasives.bool_of_string
+)
+"records.ml" 73 2754 2775 "records.ml" 73 2754 2778
+type(
+  string
+)
+ident(
+  int_ref str "records.ml" 72 2718 2748 "records.ml" 72 2718 2751
+)
+"records.ml" 73 2754 2760 "records.ml" 73 2754 2778
+type(
+  bool
+)
+"records.ml" 73 2754 2784 "records.ml" 73 2754 2785
+type(
+  exn
+)
+"records.ml" 73 2754 2789 "records.ml" 73 2754 2794
+type(
+  exn -> bool
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"records.ml" 73 2754 2824 "records.ml" 73 2754 2853
+type(
+  string
+)
+"records.ml" 73 2754 2853 "records.ml" 73 2754 2854
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"records.ml" 73 2754 2854 "records.ml" 73 2754 2859
+type(
+  string
+)
+ident(
+  int_ref field "records.ml" 72 2718 2742 "records.ml" 72 2718 2747
+)
+"records.ml" 73 2754 2859 "records.ml" 73 2754 2860
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"records.ml" 73 2754 2860 "records.ml" 73 2754 2900
+type(
+  string
+)
+"records.ml" 73 2754 2854 "records.ml" 73 2754 2900
+type(
+  string
+)
+"records.ml" 73 2754 2823 "records.ml" 73 2754 2901
+type(
+  string
+)
+"records.ml" 73 2754 2795 "records.ml" 73 2754 2902
+type(
+  exn
+)
+"records.ml" 73 2754 2789 "records.ml" 73 2754 2902
+type(
+  bool
+)
+"records.ml" 73 2754 2756 "records.ml" 73 2754 2902
+type(
+  bool
+)
+"records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+type(
+  'a lzy ref -> 'a
+)
+ident(
+  def lzy_get "records.ml" 85 3110 3110 --
+)
+"records.ml" 78 2988 3000 "records.ml" 78 2988 3001
+type(
+  'a lzy ref
+)
+ident(
+  def a "records.ml" 79 3004 3006 "records.ml" 81 3037 3083
+)
+"records.ml" 79 3004 3012 "records.ml" 79 3004 3013
+type(
+  'a lzy ref -> 'a lzy
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 79 3004 3013 "records.ml" 79 3004 3014
+type(
+  'a lzy ref
+)
+ident(
+  int_ref a "records.ml" 78 2988 3000 "records.ml" 78 2988 3001
+)
+"records.ml" 79 3004 3012 "records.ml" 79 3004 3014
+type(
+  'a lzy
+)
+"records.ml" 80 3020 3030 "records.ml" 80 3020 3031
+type(
+  'a
+)
+ident(
+  def x "records.ml" 80 3020 3035 "records.ml" 80 3020 3036
+)
+"records.ml" 80 3020 3026 "records.ml" 80 3020 3031
+type(
+  'a lzy
+)
+"records.ml" 80 3020 3035 "records.ml" 80 3020 3036
+type(
+  'a
+)
+ident(
+  int_ref x "records.ml" 80 3020 3030 "records.ml" 80 3020 3031
+)
+"records.ml" 81 3037 3049 "records.ml" 81 3037 3050
+type(
+  unit -> 'a
+)
+ident(
+  def f "records.ml" 81 3037 3054 "records.ml" 81 3037 3083
+)
+"records.ml" 81 3037 3043 "records.ml" 81 3037 3050
+type(
+  'a lzy
+)
+"records.ml" 81 3037 3058 "records.ml" 81 3037 3059
+type(
+  'a
+)
+"records.ml" 81 3037 3062 "records.ml" 81 3037 3063
+type(
+  unit -> 'a
+)
+ident(
+  int_ref f "records.ml" 81 3037 3049 "records.ml" 81 3037 3050
+)
+"records.ml" 81 3037 3064 "records.ml" 81 3037 3066
+type(
+  unit
+)
+"records.ml" 81 3037 3062 "records.ml" 81 3037 3066
+type(
+  'a
+)
+"records.ml" 81 3037 3070 "records.ml" 81 3037 3071
+type(
+  'a lzy ref
+)
+ident(
+  int_ref a "records.ml" 78 2988 3000 "records.ml" 78 2988 3001
+)
+"records.ml" 81 3037 3072 "records.ml" 81 3037 3074
+type(
+  'a lzy ref -> 'a lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 81 3037 3079 "records.ml" 81 3037 3080
+type(
+  'a
+)
+ident(
+  int_ref x "records.ml" 81 3037 3058 "records.ml" 81 3037 3059
+)
+"records.ml" 81 3037 3075 "records.ml" 81 3037 3080
+type(
+  'a lzy
+)
+"records.ml" 81 3037 3070 "records.ml" 81 3037 3080
+type(
+  unit
+)
+"records.ml" 81 3037 3082 "records.ml" 81 3037 3083
+type(
+  'a
+)
+ident(
+  int_ref x "records.ml" 81 3037 3058 "records.ml" 81 3037 3059
+)
+"records.ml" 81 3037 3070 "records.ml" 81 3037 3083
+type(
+  'a
+)
+"records.ml" 81 3037 3054 "records.ml" 81 3037 3083
+type(
+  'a
+)
+"records.ml" 79 3004 3006 "records.ml" 81 3037 3083
+type(
+  'a
+)
+"records.ml" 86 3155 3159 "records.ml" 86 3155 3171
+type(
+  field list -> string -> field
+)
+ident(
+  def field_lookup "records.ml" 90 3300 3300 --
+)
+"records.ml" 86 3155 3172 "records.ml" 86 3155 3176
+type(
+  field list
+)
+ident(
+  def recs "records.ml" 86 3155 3177 "records.ml" 88 3252 3298
+)
+"records.ml" 86 3155 3177 "records.ml" 86 3155 3181
+type(
+  string
+)
+ident(
+  def name "records.ml" 86 3155 3184 "records.ml" 88 3252 3298
+)
+"records.ml" 86 3155 3190 "records.ml" 86 3155 3201
+type(
+  (field -> bool) -> field list -> field list
+)
+ident(
+  ext_ref List.filter
+)
+"records.ml" 86 3155 3207 "records.ml" 86 3155 3208
+type(
+  field
+)
+ident(
+  def x "records.ml" 86 3155 3212 "records.ml" 86 3155 3225
+)
+"records.ml" 86 3155 3212 "records.ml" 86 3155 3213
+type(
+  field
+)
+ident(
+  int_ref x "records.ml" 86 3155 3207 "records.ml" 86 3155 3208
+)
+"records.ml" 86 3155 3212 "records.ml" 86 3155 3218
+type(
+  string
+)
+"records.ml" 86 3155 3219 "records.ml" 86 3155 3220
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"records.ml" 86 3155 3221 "records.ml" 86 3155 3225
+type(
+  string
+)
+ident(
+  int_ref name "records.ml" 86 3155 3177 "records.ml" 86 3155 3181
+)
+"records.ml" 86 3155 3212 "records.ml" 86 3155 3225
+type(
+  bool
+)
+"records.ml" 86 3155 3202 "records.ml" 86 3155 3226
+type(
+  field -> bool
+)
+"records.ml" 86 3155 3227 "records.ml" 86 3155 3231
+type(
+  field list
+)
+ident(
+  int_ref recs "records.ml" 86 3155 3172 "records.ml" 86 3155 3176
+)
+"records.ml" 86 3155 3190 "records.ml" 86 3155 3231
+type(
+  field list
+)
+"records.ml" 87 3237 3243 "records.ml" 87 3237 3244
+type(
+  field
+)
+ident(
+  def x "records.ml" 87 3237 3250 "records.ml" 87 3237 3251
+)
+"records.ml" 87 3237 3241 "records.ml" 87 3237 3246
+type(
+  field list
+)
+"records.ml" 87 3237 3250 "records.ml" 87 3237 3251
+type(
+  field
+)
+ident(
+  int_ref x "records.ml" 87 3237 3243 "records.ml" 87 3237 3244
+)
+"records.ml" 88 3252 3256 "records.ml" 88 3252 3257
+type(
+  field list
+)
+"records.ml" 88 3252 3261 "records.ml" 88 3252 3266
+type(
+  exn -> field
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"records.ml" 88 3252 3293 "records.ml" 88 3252 3297
+type(
+  string
+)
+ident(
+  int_ref name "records.ml" 86 3155 3177 "records.ml" 86 3155 3181
+)
+"records.ml" 88 3252 3267 "records.ml" 88 3252 3298
+type(
+  exn
+)
+"records.ml" 88 3252 3261 "records.ml" 88 3252 3298
+type(
+  field
+)
+"records.ml" 86 3155 3184 "records.ml" 88 3252 3298
+type(
+  field
+)
+"records.ml" 90 3300 3304 "records.ml" 90 3300 3318
+type(
+  field -> string
+)
+ident(
+  def safe_get_field "records.ml" 96 3478 3478 --
+)
+"records.ml" 90 3300 3319 "records.ml" 90 3300 3320
+type(
+  field
+)
+ident(
+  def x "records.ml" 91 3323 3325 "records.ml" 94 3458 3476
+)
+"records.ml" 91 3323 3329 "records.ml" 91 3323 3330
+type(
+  field
+)
+ident(
+  int_ref x "records.ml" 90 3300 3319 "records.ml" 90 3300 3320
+)
+"records.ml" 91 3323 3329 "records.ml" 91 3323 3334
+type(
+  unit -> string
+)
+"records.ml" 91 3323 3335 "records.ml" 91 3323 3337
+type(
+  unit
+)
+"records.ml" 91 3323 3329 "records.ml" 91 3323 3337
+type(
+  string
+)
+"records.ml" 93 3345 3375 "records.ml" 93 3345 3376
+type(
+  string
+)
+ident(
+  def s "records.ml" 93 3345 3387 "records.ml" 93 3345 3457
+)
+"records.ml" 93 3345 3377 "records.ml" 93 3345 3378
+type(
+  string list
+)
+"records.ml" 93 3345 3351 "records.ml" 93 3345 3379
+type(
+  exn
+)
+"records.ml" 93 3345 3351 "records.ml" 93 3345 3384
+type(
+  exn
+)
+ident(
+  def e "records.ml" 93 3345 3387 "records.ml" 93 3345 3457
+)
+"records.ml" 93 3345 3390 "records.ml" 93 3345 3391
+type(
+  string
+)
+ident(
+  int_ref s "records.ml" 93 3345 3375 "records.ml" 93 3345 3376
+)
+"records.ml" 93 3345 3391 "records.ml" 93 3345 3392
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"records.ml" 93 3345 3392 "records.ml" 93 3345 3417
+type(
+  string
+)
+ident(
+  ext_ref Api_errors.handle_invalid
+)
+"records.ml" 93 3345 3390 "records.ml" 93 3345 3417
+type(
+  bool
+)
+"records.ml" 93 3345 3423 "records.ml" 93 3345 3444
+type(
+  string
+)
+"records.ml" 93 3345 3450 "records.ml" 93 3345 3455
+type(
+  exn -> string
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"records.ml" 93 3345 3456 "records.ml" 93 3345 3457
+type(
+  exn
+)
+ident(
+  int_ref e "records.ml" 93 3345 3351 "records.ml" 93 3345 3384
+)
+"records.ml" 93 3345 3450 "records.ml" 93 3345 3457
+type(
+  string
+)
+"records.ml" 93 3345 3387 "records.ml" 93 3345 3457
+type(
+  string
+)
+"records.ml" 94 3458 3464 "records.ml" 94 3458 3465
+type(
+  exn
+)
+ident(
+  def e "records.ml" 94 3458 3469 "records.ml" 94 3458 3476
+)
+"records.ml" 94 3458 3469 "records.ml" 94 3458 3474
+type(
+  exn -> string
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"records.ml" 94 3458 3475 "records.ml" 94 3458 3476
+type(
+  exn
+)
+ident(
+  int_ref e "records.ml" 94 3458 3464 "records.ml" 94 3458 3465
+)
+"records.ml" 94 3458 3469 "records.ml" 94 3458 3476
+type(
+  string
+)
+"records.ml" 91 3323 3325 "records.ml" 94 3458 3476
+type(
+  string
+)
+"records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+type(
+  'a Ref.t -> string
+)
+ident(
+  def get_uuid_from_ref "records.ml" 103 3658 3658 --
+)
+"records.ml" 96 3478 3500 "records.ml" 96 3478 3501
+type(
+  'a Ref.t
+)
+ident(
+  def r "records.ml" 97 3504 3505 "records.ml" 101 3642 3656
+)
+"records.ml" 98 3509 3517 "records.ml" 98 3509 3533
+type(
+  string -> Ref_index.indexrec option
+)
+ident(
+  ext_ref Ref_index.lookup
+)
+"records.ml" 98 3509 3535 "records.ml" 98 3509 3548
+type(
+  'a Ref.t -> string
+)
+ident(
+  ext_ref Ref.string_of
+)
+"records.ml" 98 3509 3549 "records.ml" 98 3509 3550
+type(
+  'a Ref.t
+)
+ident(
+  int_ref r "records.ml" 96 3478 3500 "records.ml" 96 3478 3501
+)
+"records.ml" 98 3509 3534 "records.ml" 98 3509 3551
+type(
+  string
+)
+"records.ml" 98 3509 3517 "records.ml" 98 3509 3551
+type(
+  Ref_index.indexrec option
+)
+"records.ml" 99 3557 3562 "records.ml" 99 3557 3566
+type(
+  Ref_index.indexrec option
+)
+"records.ml" 99 3557 3570 "records.ml" 99 3557 3575
+type(
+  exn -> string
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"records.ml" 99 3557 3602 "records.ml" 99 3557 3608
+type(
+  string
+)
+"records.ml" 99 3557 3576 "records.ml" 99 3557 3609
+type(
+  exn
+)
+"records.ml" 99 3557 3570 "records.ml" 99 3557 3609
+type(
+  string
+)
+"records.ml" 100 3610 3620 "records.ml" 100 3610 3621
+type(
+  Ref_index.indexrec
+)
+ident(
+  def x "records.ml" 100 3610 3625 "records.ml" 100 3610 3641
+)
+"records.ml" 100 3610 3615 "records.ml" 100 3610 3621
+type(
+  Ref_index.indexrec option
+)
+"records.ml" 100 3610 3625 "records.ml" 100 3610 3626
+type(
+  Ref_index.indexrec
+)
+ident(
+  int_ref x "records.ml" 100 3610 3620 "records.ml" 100 3610 3621
+)
+"records.ml" 100 3610 3625 "records.ml" 100 3610 3641
+type(
+  string
+)
+"records.ml" 98 3509 3511 "records.ml" 100 3610 3641
+type(
+  string
+)
+"records.ml" 101 3642 3648 "records.ml" 101 3642 3649
+type(
+  exn
+)
+"records.ml" 101 3642 3653 "records.ml" 101 3642 3656
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 97 3504 3505 "records.ml" 101 3642 3656
+type(
+  string
+)
+"records.ml" 103 3658 3662 "records.ml" 103 3658 3679
+type(
+  'a Ref.t -> string
+)
+ident(
+  def get_name_from_ref "records.ml" 118 4054 4054 --
+)
+"records.ml" 103 3658 3680 "records.ml" 103 3658 3681
+type(
+  'a Ref.t
+)
+ident(
+  def r "records.ml" 104 3684 3685 "records.ml" 113 3936 3950
+)
+"records.ml" 105 3689 3697 "records.ml" 105 3689 3713
+type(
+  string -> Ref_index.indexrec option
+)
+ident(
+  ext_ref Ref_index.lookup
+)
+"records.ml" 105 3689 3715 "records.ml" 105 3689 3728
+type(
+  'a Ref.t -> string
+)
+ident(
+  ext_ref Ref.string_of
+)
+"records.ml" 105 3689 3729 "records.ml" 105 3689 3730
+type(
+  'a Ref.t
+)
+ident(
+  int_ref r "records.ml" 103 3658 3680 "records.ml" 103 3658 3681
+)
+"records.ml" 105 3689 3714 "records.ml" 105 3689 3731
+type(
+  string
+)
+"records.ml" 105 3689 3697 "records.ml" 105 3689 3731
+type(
+  Ref_index.indexrec option
+)
+"records.ml" 106 3737 3742 "records.ml" 106 3737 3746
+type(
+  Ref_index.indexrec option
+)
+"records.ml" 106 3737 3750 "records.ml" 106 3737 3755
+type(
+  exn -> string
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"records.ml" 106 3737 3782 "records.ml" 106 3737 3788
+type(
+  string
+)
+"records.ml" 106 3737 3756 "records.ml" 106 3737 3789
+type(
+  exn
+)
+"records.ml" 106 3737 3750 "records.ml" 106 3737 3789
+type(
+  string
+)
+"records.ml" 107 3790 3800 "records.ml" 107 3790 3801
+type(
+  Ref_index.indexrec
+)
+ident(
+  def x "records.ml" 108 3805 3809 "records.ml" 112 3928 3935
+)
+"records.ml" 107 3790 3795 "records.ml" 107 3790 3801
+type(
+  Ref_index.indexrec option
+)
+"records.ml" 109 3815 3826 "records.ml" 109 3815 3827
+type(
+  Ref_index.indexrec
+)
+ident(
+  int_ref x "records.ml" 107 3790 3800 "records.ml" 107 3790 3801
+)
+"records.ml" 109 3815 3826 "records.ml" 109 3815 3848
+type(
+  string option
+)
+"records.ml" 110 3854 3861 "records.ml" 110 3854 3865
+type(
+  string option
+)
+"records.ml" 110 3854 3869 "records.ml" 110 3854 3874
+type(
+  exn -> string
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"records.ml" 110 3854 3901 "records.ml" 110 3854 3907
+type(
+  string
+)
+"records.ml" 110 3854 3875 "records.ml" 110 3854 3908
+type(
+  exn
+)
+"records.ml" 110 3854 3869 "records.ml" 110 3854 3908
+type(
+  string
+)
+"records.ml" 111 3909 3921 "records.ml" 111 3909 3922
+type(
+  string
+)
+ident(
+  def y "records.ml" 111 3909 3926 "records.ml" 111 3909 3927
+)
+"records.ml" 111 3909 3916 "records.ml" 111 3909 3922
+type(
+  string option
+)
+"records.ml" 111 3909 3926 "records.ml" 111 3909 3927
+type(
+  string
+)
+ident(
+  int_ref y "records.ml" 111 3909 3921 "records.ml" 111 3909 3922
+)
+"records.ml" 108 3805 3809 "records.ml" 112 3928 3935
+type(
+  string
+)
+"records.ml" 105 3689 3691 "records.ml" 112 3928 3935
+type(
+  string
+)
+"records.ml" 113 3936 3942 "records.ml" 113 3936 3943
+type(
+  exn
+)
+"records.ml" 113 3936 3947 "records.ml" 113 3936 3950
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 104 3684 3685 "records.ml" 113 3936 3950
+type(
+  string
+)
+"records.ml" 118 4054 4058 "records.ml" 118 4054 4071
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_PBD list -> API.ref_host
+)
+ident(
+  def get_pbds_host "records.ml" 127 4326 4326 --
+)
+"records.ml" 118 4054 4072 "records.ml" 118 4054 4075
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 118 4054 4076 "records.ml" 123 4185 4201
+)
+"records.ml" 118 4054 4076 "records.ml" 118 4054 4086
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 118 4054 4087 "records.ml" 123 4185 4201
+)
+"records.ml" 118 4054 4087 "records.ml" 118 4054 4091
+type(
+  API.ref_PBD list
+)
+ident(
+  def pbds "records.ml" 119 4094 4096 "records.ml" 123 4185 4201
+)
+"records.ml" 119 4094 4102 "records.ml" 119 4094 4106
+type(
+  API.ref_PBD list
+)
+ident(
+  int_ref pbds "records.ml" 118 4054 4087 "records.ml" 118 4054 4091
+)
+"records.ml" 120 4112 4119 "records.ml" 120 4112 4122
+type(
+  API.ref_PBD
+)
+ident(
+  def pbd "records.ml" 121 4127 4135 "records.ml" 121 4127 4173
+)
+"records.ml" 120 4112 4118 "records.ml" 120 4112 4123
+type(
+  API.ref_PBD list
+)
+"records.ml" 121 4127 4135 "records.ml" 121 4127 4154
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_PBD -> API.ref_host
+)
+ident(
+  ext_ref Client.( Client ).( PBD ).get_host
+)
+"records.ml" 121 4127 4155 "records.ml" 121 4127 4158
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 118 4054 4072 "records.ml" 118 4054 4075
+)
+"records.ml" 121 4127 4159 "records.ml" 121 4127 4169
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 118 4054 4076 "records.ml" 118 4054 4086
+)
+"records.ml" 121 4127 4170 "records.ml" 121 4127 4173
+type(
+  API.ref_PBD
+)
+ident(
+  int_ref pbd "records.ml" 120 4112 4119 "records.ml" 120 4112 4122
+)
+"records.ml" 121 4127 4135 "records.ml" 121 4127 4173
+type(
+  API.ref_host
+)
+"records.ml" 122 4174 4180 "records.ml" 122 4174 4181
+type(
+  API.ref_PBD list
+)
+"records.ml" 123 4185 4193 "records.ml" 123 4185 4201
+type(
+  API.ref_host
+)
+ident(
+  ext_ref Ref.null
+)
+"records.ml" 119 4094 4096 "records.ml" 123 4185 4201
+type(
+  API.ref_host
+)
+"records.ml" 127 4326 4330 "records.ml" 127 4326 4341
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.sR_t -> API.ref_host
+)
+ident(
+  def get_sr_host "records.ml" 131 4420 4420 --
+)
+"records.ml" 127 4326 4342 "records.ml" 127 4326 4345
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 127 4326 4346 "records.ml" 128 4366 4417
+)
+"records.ml" 127 4326 4346 "records.ml" 127 4326 4356
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 127 4326 4357 "records.ml" 128 4366 4417
+)
+"records.ml" 127 4326 4357 "records.ml" 127 4326 4363
+type(
+  API.sR_t
+)
+ident(
+  def record "records.ml" 128 4366 4368 "records.ml" 128 4366 4417
+)
+"records.ml" 128 4366 4368 "records.ml" 128 4366 4381
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_PBD_set -> API.ref_host
+)
+ident(
+  int_ref get_pbds_host "records.ml" 118 4054 4058 "records.ml" 118 4054 4071
+)
+"records.ml" 128 4366 4382 "records.ml" 128 4366 4385
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 127 4326 4342 "records.ml" 127 4326 4345
+)
+"records.ml" 128 4366 4386 "records.ml" 128 4366 4396
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 127 4326 4346 "records.ml" 127 4326 4356
+)
+"records.ml" 128 4366 4398 "records.ml" 128 4366 4404
+type(
+  API.sR_t
+)
+ident(
+  int_ref record "records.ml" 127 4326 4357 "records.ml" 127 4326 4363
+)
+"records.ml" 128 4366 4397 "records.ml" 128 4366 4417
+type(
+  API.ref_PBD_set
+)
+"records.ml" 128 4366 4368 "records.ml" 128 4366 4417
+type(
+  API.ref_host
+)
+"records.ml" 131 4420 4424 "records.ml" 131 4420 4435
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_Bond -> ([ `Bond ], API.bond_t) record
+)
+ident(
+  def bond_record "records.ml" 150 5359 5359 --
+)
+"records.ml" 131 4420 4436 "records.ml" 131 4420 4439
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 131 4420 4440 "records.ml" 148 5354 5357
+)
+"records.ml" 131 4420 4440 "records.ml" 131 4420 4450
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 131 4420 4451 "records.ml" 148 5354 5357
+)
+"records.ml" 131 4420 4451 "records.ml" 131 4420 4455
+type(
+  API.ref_Bond
+)
+ident(
+  def bond "records.ml" 132 4459 4461 "records.ml" 148 5354 5357
+)
+"records.ml" 132 4459 4465 "records.ml" 132 4459 4469
+type(
+  API.ref_Bond ref
+)
+"records.ml" 132 4459 4472 "records.ml" 132 4459 4475
+type(
+  API.ref_Bond -> API.ref_Bond ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 132 4459 4476 "records.ml" 132 4459 4480
+type(
+  API.ref_Bond
+)
+ident(
+  int_ref bond "records.ml" 131 4420 4451 "records.ml" 131 4420 4455
+)
+"records.ml" 132 4459 4472 "records.ml" 132 4459 4480
+type(
+  API.ref_Bond ref
+)
+"records.ml" 133 4484 4490 "records.ml" 133 4484 4502
+type(
+  API.bond_t lzy
+)
+"records.ml" 133 4484 4516 "records.ml" 133 4484 4518
+type(
+  unit
+)
+"records.ml" 133 4484 4522 "records.ml" 133 4484 4544
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_Bond -> API.bond_t
+)
+ident(
+  ext_ref Client.( Client ).( Bond ).get_record
+)
+"records.ml" 133 4484 4545 "records.ml" 133 4484 4548
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 131 4420 4436 "records.ml" 131 4420 4439
+)
+"records.ml" 133 4484 4549 "records.ml" 133 4484 4559
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 131 4420 4440 "records.ml" 131 4420 4450
+)
+"records.ml" 133 4484 4560 "records.ml" 133 4484 4561
+type(
+  API.ref_Bond ref -> API.ref_Bond
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 133 4484 4561 "records.ml" 133 4484 4565
+type(
+  API.ref_Bond ref
+)
+ident(
+  int_ref _ref "records.ml" 132 4459 4465 "records.ml" 132 4459 4469
+)
+"records.ml" 133 4484 4560 "records.ml" 133 4484 4565
+type(
+  API.ref_Bond
+)
+"records.ml" 133 4484 4522 "records.ml" 133 4484 4565
+type(
+  API.bond_t
+)
+"records.ml" 133 4484 4511 "records.ml" 133 4484 4566
+type(
+  unit -> API.bond_t
+)
+"records.ml" 133 4484 4505 "records.ml" 133 4484 4566
+type(
+  API.bond_t lzy
+)
+"records.ml" 134 4570 4576 "records.ml" 134 4570 4582
+type(
+  API.bond_t lzy ref
+)
+"records.ml" 134 4570 4585 "records.ml" 134 4570 4588
+type(
+  API.bond_t lzy -> API.bond_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 134 4570 4589 "records.ml" 134 4570 4601
+type(
+  API.bond_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 133 4484 4490 "records.ml" 133 4484 4502
+)
+"records.ml" 134 4570 4585 "records.ml" 134 4570 4601
+type(
+  API.bond_t lzy ref
+)
+"records.ml" 135 4605 4611 "records.ml" 135 4605 4612
+type(
+  unit -> API.bond_t
+)
+"records.ml" 135 4605 4613 "records.ml" 135 4605 4615
+type(
+  unit
+)
+"records.ml" 135 4605 4618 "records.ml" 135 4605 4625
+type(
+  API.bond_t lzy ref -> API.bond_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 135 4605 4626 "records.ml" 135 4605 4632
+type(
+  API.bond_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 134 4570 4576 "records.ml" 134 4570 4582
+)
+"records.ml" 135 4605 4618 "records.ml" 135 4605 4632
+type(
+  API.bond_t
+)
+"records.ml" 136 4636 4652 "records.ml" 136 4636 4653
+type(
+  API.ref_Bond
+)
+ident(
+  def r "records.ml" 136 4636 4657 "records.ml" 136 4636 4690
+)
+"records.ml" 136 4636 4657 "records.ml" 136 4636 4661
+type(
+  API.ref_Bond ref
+)
+ident(
+  int_ref _ref "records.ml" 132 4459 4465 "records.ml" 132 4459 4469
+)
+"records.ml" 136 4636 4662 "records.ml" 136 4636 4664
+type(
+  API.ref_Bond ref -> API.ref_Bond -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 136 4636 4665 "records.ml" 136 4636 4666
+type(
+  API.ref_Bond
+)
+ident(
+  int_ref r "records.ml" 136 4636 4652 "records.ml" 136 4636 4653
+)
+"records.ml" 136 4636 4657 "records.ml" 136 4636 4666
+type(
+  unit
+)
+"records.ml" 136 4636 4668 "records.ml" 136 4636 4674
+type(
+  API.bond_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 134 4570 4576 "records.ml" 134 4570 4582
+)
+"records.ml" 136 4636 4675 "records.ml" 136 4636 4677
+type(
+  API.bond_t lzy ref -> API.bond_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 136 4636 4678 "records.ml" 136 4636 4690
+type(
+  API.bond_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 133 4484 4490 "records.ml" 133 4484 4502
+)
+"records.ml" 136 4636 4668 "records.ml" 136 4636 4690
+type(
+  unit
+)
+"records.ml" 136 4636 4657 "records.ml" 136 4636 4690
+type(
+  unit
+)
+"records.ml" 136 4636 4647 "records.ml" 136 4636 4691
+type(
+  API.ref_Bond -> unit
+)
+"records.ml" 137 4693 4713 "records.ml" 137 4693 4714
+type(
+  API.ref_Bond
+)
+ident(
+  def a "records.ml" 137 4693 4721 "records.ml" 137 4693 4747
+)
+"records.ml" 137 4693 4715 "records.ml" 137 4693 4716
+type(
+  API.bond_t
+)
+ident(
+  def b "records.ml" 137 4693 4721 "records.ml" 137 4693 4747
+)
+"records.ml" 137 4693 4712 "records.ml" 137 4693 4717
+type(
+  API.ref_Bond * API.bond_t
+)
+"records.ml" 137 4693 4721 "records.ml" 137 4693 4725
+type(
+  API.ref_Bond ref
+)
+ident(
+  int_ref _ref "records.ml" 132 4459 4465 "records.ml" 132 4459 4469
+)
+"records.ml" 137 4693 4726 "records.ml" 137 4693 4728
+type(
+  API.ref_Bond ref -> API.ref_Bond -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 137 4693 4729 "records.ml" 137 4693 4730
+type(
+  API.ref_Bond
+)
+ident(
+  int_ref a "records.ml" 137 4693 4713 "records.ml" 137 4693 4714
+)
+"records.ml" 137 4693 4721 "records.ml" 137 4693 4730
+type(
+  unit
+)
+"records.ml" 137 4693 4732 "records.ml" 137 4693 4738
+type(
+  API.bond_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 134 4570 4576 "records.ml" 134 4570 4582
+)
+"records.ml" 137 4693 4739 "records.ml" 137 4693 4741
+type(
+  API.bond_t lzy ref -> API.bond_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 137 4693 4746 "records.ml" 137 4693 4747
+type(
+  API.bond_t
+)
+ident(
+  int_ref b "records.ml" 137 4693 4715 "records.ml" 137 4693 4716
+)
+"records.ml" 137 4693 4742 "records.ml" 137 4693 4747
+type(
+  API.bond_t lzy
+)
+"records.ml" 137 4693 4732 "records.ml" 137 4693 4747
+type(
+  unit
+)
+"records.ml" 137 4693 4721 "records.ml" 137 4693 4747
+type(
+  unit
+)
+"records.ml" 137 4693 4707 "records.ml" 137 4693 4748
+type(
+  API.ref_Bond * API.bond_t -> unit
+)
+"records.ml" 138 4750 4761 "records.ml" 138 4750 4762
+type(
+  unit -> API.bond_t
+)
+ident(
+  int_ref x "records.ml" 135 4605 4611 "records.ml" 135 4605 4612
+)
+"records.ml" 139 4764 4780 "records.ml" 139 4764 4782
+type(
+  unit
+)
+"records.ml" 139 4764 4786 "records.ml" 139 4764 4787
+type(
+  API.ref_Bond ref -> API.ref_Bond
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 139 4764 4787 "records.ml" 139 4764 4791
+type(
+  API.ref_Bond ref
+)
+ident(
+  int_ref _ref "records.ml" 132 4459 4465 "records.ml" 132 4459 4469
+)
+"records.ml" 139 4764 4786 "records.ml" 139 4764 4791
+type(
+  API.ref_Bond
+)
+"records.ml" 139 4764 4775 "records.ml" 139 4764 4792
+type(
+  unit -> API.ref_Bond
+)
+"records.ml" 142 4814 4822 "records.ml" 142 4814 4832
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 142 4814 4839 "records.ml" 142 4814 4845
+type(
+  string
+)
+"records.ml" 142 4814 4864 "records.ml" 142 4814 4866
+type(
+  unit
+)
+"records.ml" 142 4814 4871 "records.ml" 142 4814 4872
+type(
+  unit -> API.bond_t
+)
+ident(
+  int_ref x "records.ml" 135 4605 4611 "records.ml" 135 4605 4612
+)
+"records.ml" 142 4814 4873 "records.ml" 142 4814 4875
+type(
+  unit
+)
+"records.ml" 142 4814 4870 "records.ml" 142 4814 4876
+type(
+  API.bond_t
+)
+"records.ml" 142 4814 4870 "records.ml" 142 4814 4890
+type(
+  string
+)
+"records.ml" 142 4814 4859 "records.ml" 142 4814 4891
+type(
+  unit -> string
+)
+"records.ml" 142 4814 4892 "records.ml" 142 4814 4894
+type(
+  unit
+)
+"records.ml" 142 4814 4822 "records.ml" 142 4814 4894
+type(
+  field
+)
+"records.ml" 143 4896 4904 "records.ml" 143 4896 4914
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 143 4896 4921 "records.ml" 143 4896 4929
+type(
+  string
+)
+"records.ml" 143 4896 4946 "records.ml" 143 4896 4948
+type(
+  unit
+)
+"records.ml" 143 4896 4952 "records.ml" 143 4896 4969
+type(
+  API.ref_PIF -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 143 4896 4971 "records.ml" 143 4896 4972
+type(
+  unit -> API.bond_t
+)
+ident(
+  int_ref x "records.ml" 135 4605 4611 "records.ml" 135 4605 4612
+)
+"records.ml" 143 4896 4973 "records.ml" 143 4896 4975
+type(
+  unit
+)
+"records.ml" 143 4896 4970 "records.ml" 143 4896 4976
+type(
+  API.bond_t
+)
+"records.ml" 143 4896 4970 "records.ml" 143 4896 4992
+type(
+  API.ref_PIF
+)
+"records.ml" 143 4896 4952 "records.ml" 143 4896 4992
+type(
+  string
+)
+"records.ml" 143 4896 4941 "records.ml" 143 4896 4993
+type(
+  unit -> string
+)
+"records.ml" 143 4896 4994 "records.ml" 143 4896 4996
+type(
+  unit
+)
+"records.ml" 143 4896 4904 "records.ml" 143 4896 4996
+type(
+  field
+)
+"records.ml" 144 4998 5006 "records.ml" 144 4998 5016
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 144 4998 5023 "records.ml" 144 4998 5031
+type(
+  string
+)
+"records.ml" 144 4998 5048 "records.ml" 144 4998 5050
+type(
+  unit
+)
+"records.ml" 144 4998 5054 "records.ml" 144 4998 5067
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 144 4998 5068 "records.ml" 144 4998 5072
+type(
+  string
+)
+"records.ml" 144 4998 5074 "records.ml" 144 4998 5082
+type(
+  ([ `PIF ] Ref.t -> string) -> API.ref_PIF_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 144 4998 5083 "records.ml" 144 4998 5100
+type(
+  [ `PIF ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 144 4998 5102 "records.ml" 144 4998 5103
+type(
+  unit -> API.bond_t
+)
+ident(
+  int_ref x "records.ml" 135 4605 4611 "records.ml" 135 4605 4612
+)
+"records.ml" 144 4998 5104 "records.ml" 144 4998 5106
+type(
+  unit
+)
+"records.ml" 144 4998 5101 "records.ml" 144 4998 5107
+type(
+  API.bond_t
+)
+"records.ml" 144 4998 5101 "records.ml" 144 4998 5123
+type(
+  API.ref_PIF_set
+)
+"records.ml" 144 4998 5073 "records.ml" 144 4998 5124
+type(
+  string list
+)
+"records.ml" 144 4998 5054 "records.ml" 144 4998 5124
+type(
+  string
+)
+"records.ml" 144 4998 5043 "records.ml" 144 4998 5125
+type(
+  unit -> string
+)
+"records.ml" 144 4998 5126 "records.ml" 144 4998 5128
+type(
+  unit
+)
+"records.ml" 144 4998 5006 "records.ml" 144 4998 5128
+type(
+  field
+)
+"records.ml" 145 5130 5138 "records.ml" 145 5130 5148
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 145 5130 5155 "records.ml" 145 5130 5161
+type(
+  string
+)
+"records.ml" 145 5130 5172 "records.ml" 145 5130 5174
+type(
+  unit
+)
+"records.ml" 145 5130 5178 "records.ml" 145 5130 5209
+type(
+  API.bond_mode -> string
+)
+ident(
+  ext_ref Record_util.bond_mode_to_string
+)
+"records.ml" 145 5130 5211 "records.ml" 145 5130 5212
+type(
+  unit -> API.bond_t
+)
+ident(
+  int_ref x "records.ml" 135 4605 4611 "records.ml" 135 4605 4612
+)
+"records.ml" 145 5130 5213 "records.ml" 145 5130 5215
+type(
+  unit
+)
+"records.ml" 145 5130 5210 "records.ml" 145 5130 5216
+type(
+  API.bond_t
+)
+"records.ml" 145 5130 5210 "records.ml" 145 5130 5230
+type(
+  API.bond_mode
+)
+"records.ml" 145 5130 5178 "records.ml" 145 5130 5230
+type(
+  string
+)
+"records.ml" 145 5130 5167 "records.ml" 145 5130 5231
+type(
+  unit -> string
+)
+"records.ml" 145 5130 5232 "records.ml" 145 5130 5234
+type(
+  unit
+)
+"records.ml" 145 5130 5138 "records.ml" 145 5130 5234
+type(
+  field
+)
+"records.ml" 146 5236 5244 "records.ml" 146 5236 5254
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 146 5236 5261 "records.ml" 146 5236 5276
+type(
+  string
+)
+"records.ml" 146 5236 5287 "records.ml" 146 5236 5289
+type(
+  unit
+)
+"records.ml" 146 5236 5293 "records.ml" 146 5236 5310
+type(
+  API.ref_PIF -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 146 5236 5312 "records.ml" 146 5236 5313
+type(
+  unit -> API.bond_t
+)
+ident(
+  int_ref x "records.ml" 135 4605 4611 "records.ml" 135 4605 4612
+)
+"records.ml" 146 5236 5314 "records.ml" 146 5236 5316
+type(
+  unit
+)
+"records.ml" 146 5236 5311 "records.ml" 146 5236 5317
+type(
+  API.bond_t
+)
+"records.ml" 146 5236 5311 "records.ml" 146 5236 5340
+type(
+  API.ref_PIF
+)
+"records.ml" 146 5236 5293 "records.ml" 146 5236 5340
+type(
+  string
+)
+"records.ml" 146 5236 5282 "records.ml" 146 5236 5341
+type(
+  unit -> string
+)
+"records.ml" 146 5236 5342 "records.ml" 146 5236 5344
+type(
+  unit
+)
+"records.ml" 146 5236 5244 "records.ml" 146 5236 5344
+type(
+  field
+)
+"records.ml" 141 4806 4812 "records.ml" 147 5346 5353
+type(
+  field list
+)
+"records.ml" 136 4636 4638 "records.ml" 148 5354 5357
+type(
+  ([ `Bond ], API.bond_t) record
+)
+"records.ml" 135 4605 4607 "records.ml" 148 5354 5357
+type(
+  ([ `Bond ], API.bond_t) record
+)
+"records.ml" 134 4570 4572 "records.ml" 148 5354 5357
+type(
+  ([ `Bond ], API.bond_t) record
+)
+"records.ml" 133 4484 4486 "records.ml" 148 5354 5357
+type(
+  ([ `Bond ], API.bond_t) record
+)
+"records.ml" 132 4459 4461 "records.ml" 148 5354 5357
+type(
+  ([ `Bond ], API.bond_t) record
+)
+"records.ml" 150 5359 5363 "records.ml" 150 5359 5374
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_VLAN -> ([ `VLAN ], API.vLAN_t) record
+)
+ident(
+  def vlan_record "records.ml" 168 6134 6134 --
+)
+"records.ml" 150 5359 5375 "records.ml" 150 5359 5378
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 150 5359 5379 "records.ml" 166 6127 6130
+)
+"records.ml" 150 5359 5379 "records.ml" 150 5359 5389
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 150 5359 5390 "records.ml" 166 6127 6130
+)
+"records.ml" 150 5359 5390 "records.ml" 150 5359 5394
+type(
+  API.ref_VLAN
+)
+ident(
+  def vlan "records.ml" 151 5398 5400 "records.ml" 166 6127 6130
+)
+"records.ml" 151 5398 5404 "records.ml" 151 5398 5408
+type(
+  API.ref_VLAN ref
+)
+"records.ml" 151 5398 5411 "records.ml" 151 5398 5414
+type(
+  API.ref_VLAN -> API.ref_VLAN ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 151 5398 5415 "records.ml" 151 5398 5419
+type(
+  API.ref_VLAN
+)
+ident(
+  int_ref vlan "records.ml" 150 5359 5390 "records.ml" 150 5359 5394
+)
+"records.ml" 151 5398 5411 "records.ml" 151 5398 5419
+type(
+  API.ref_VLAN ref
+)
+"records.ml" 152 5423 5429 "records.ml" 152 5423 5441
+type(
+  API.vLAN_t lzy
+)
+"records.ml" 152 5423 5455 "records.ml" 152 5423 5457
+type(
+  unit
+)
+"records.ml" 152 5423 5461 "records.ml" 152 5423 5483
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VLAN -> API.vLAN_t
+)
+ident(
+  ext_ref Client.( Client ).( VLAN ).get_record
+)
+"records.ml" 152 5423 5484 "records.ml" 152 5423 5487
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 150 5359 5375 "records.ml" 150 5359 5378
+)
+"records.ml" 152 5423 5488 "records.ml" 152 5423 5498
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 150 5359 5379 "records.ml" 150 5359 5389
+)
+"records.ml" 152 5423 5499 "records.ml" 152 5423 5500
+type(
+  API.ref_VLAN ref -> API.ref_VLAN
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 152 5423 5500 "records.ml" 152 5423 5504
+type(
+  API.ref_VLAN ref
+)
+ident(
+  int_ref _ref "records.ml" 151 5398 5404 "records.ml" 151 5398 5408
+)
+"records.ml" 152 5423 5499 "records.ml" 152 5423 5504
+type(
+  API.ref_VLAN
+)
+"records.ml" 152 5423 5461 "records.ml" 152 5423 5504
+type(
+  API.vLAN_t
+)
+"records.ml" 152 5423 5450 "records.ml" 152 5423 5505
+type(
+  unit -> API.vLAN_t
+)
+"records.ml" 152 5423 5444 "records.ml" 152 5423 5505
+type(
+  API.vLAN_t lzy
+)
+"records.ml" 153 5509 5515 "records.ml" 153 5509 5521
+type(
+  API.vLAN_t lzy ref
+)
+"records.ml" 153 5509 5524 "records.ml" 153 5509 5527
+type(
+  API.vLAN_t lzy -> API.vLAN_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 153 5509 5528 "records.ml" 153 5509 5540
+type(
+  API.vLAN_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 152 5423 5429 "records.ml" 152 5423 5441
+)
+"records.ml" 153 5509 5524 "records.ml" 153 5509 5540
+type(
+  API.vLAN_t lzy ref
+)
+"records.ml" 154 5544 5550 "records.ml" 154 5544 5551
+type(
+  unit -> API.vLAN_t
+)
+"records.ml" 154 5544 5552 "records.ml" 154 5544 5554
+type(
+  unit
+)
+"records.ml" 154 5544 5557 "records.ml" 154 5544 5564
+type(
+  API.vLAN_t lzy ref -> API.vLAN_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 154 5544 5565 "records.ml" 154 5544 5571
+type(
+  API.vLAN_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 153 5509 5515 "records.ml" 153 5509 5521
+)
+"records.ml" 154 5544 5557 "records.ml" 154 5544 5571
+type(
+  API.vLAN_t
+)
+"records.ml" 155 5575 5591 "records.ml" 155 5575 5592
+type(
+  API.ref_VLAN
+)
+ident(
+  def r "records.ml" 155 5575 5596 "records.ml" 155 5575 5629
+)
+"records.ml" 155 5575 5596 "records.ml" 155 5575 5600
+type(
+  API.ref_VLAN ref
+)
+ident(
+  int_ref _ref "records.ml" 151 5398 5404 "records.ml" 151 5398 5408
+)
+"records.ml" 155 5575 5601 "records.ml" 155 5575 5603
+type(
+  API.ref_VLAN ref -> API.ref_VLAN -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 155 5575 5604 "records.ml" 155 5575 5605
+type(
+  API.ref_VLAN
+)
+ident(
+  int_ref r "records.ml" 155 5575 5591 "records.ml" 155 5575 5592
+)
+"records.ml" 155 5575 5596 "records.ml" 155 5575 5605
+type(
+  unit
+)
+"records.ml" 155 5575 5607 "records.ml" 155 5575 5613
+type(
+  API.vLAN_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 153 5509 5515 "records.ml" 153 5509 5521
+)
+"records.ml" 155 5575 5614 "records.ml" 155 5575 5616
+type(
+  API.vLAN_t lzy ref -> API.vLAN_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 155 5575 5617 "records.ml" 155 5575 5629
+type(
+  API.vLAN_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 152 5423 5429 "records.ml" 152 5423 5441
+)
+"records.ml" 155 5575 5607 "records.ml" 155 5575 5629
+type(
+  unit
+)
+"records.ml" 155 5575 5596 "records.ml" 155 5575 5629
+type(
+  unit
+)
+"records.ml" 155 5575 5586 "records.ml" 155 5575 5631
+type(
+  API.ref_VLAN -> unit
+)
+"records.ml" 156 5633 5653 "records.ml" 156 5633 5654
+type(
+  API.ref_VLAN
+)
+ident(
+  def a "records.ml" 156 5633 5661 "records.ml" 156 5633 5687
+)
+"records.ml" 156 5633 5655 "records.ml" 156 5633 5656
+type(
+  API.vLAN_t
+)
+ident(
+  def b "records.ml" 156 5633 5661 "records.ml" 156 5633 5687
+)
+"records.ml" 156 5633 5652 "records.ml" 156 5633 5657
+type(
+  API.ref_VLAN * API.vLAN_t
+)
+"records.ml" 156 5633 5661 "records.ml" 156 5633 5665
+type(
+  API.ref_VLAN ref
+)
+ident(
+  int_ref _ref "records.ml" 151 5398 5404 "records.ml" 151 5398 5408
+)
+"records.ml" 156 5633 5666 "records.ml" 156 5633 5668
+type(
+  API.ref_VLAN ref -> API.ref_VLAN -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 156 5633 5669 "records.ml" 156 5633 5670
+type(
+  API.ref_VLAN
+)
+ident(
+  int_ref a "records.ml" 156 5633 5653 "records.ml" 156 5633 5654
+)
+"records.ml" 156 5633 5661 "records.ml" 156 5633 5670
+type(
+  unit
+)
+"records.ml" 156 5633 5672 "records.ml" 156 5633 5678
+type(
+  API.vLAN_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 153 5509 5515 "records.ml" 153 5509 5521
+)
+"records.ml" 156 5633 5679 "records.ml" 156 5633 5681
+type(
+  API.vLAN_t lzy ref -> API.vLAN_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 156 5633 5686 "records.ml" 156 5633 5687
+type(
+  API.vLAN_t
+)
+ident(
+  int_ref b "records.ml" 156 5633 5655 "records.ml" 156 5633 5656
+)
+"records.ml" 156 5633 5682 "records.ml" 156 5633 5687
+type(
+  API.vLAN_t lzy
+)
+"records.ml" 156 5633 5672 "records.ml" 156 5633 5687
+type(
+  unit
+)
+"records.ml" 156 5633 5661 "records.ml" 156 5633 5687
+type(
+  unit
+)
+"records.ml" 156 5633 5647 "records.ml" 156 5633 5688
+type(
+  API.ref_VLAN * API.vLAN_t -> unit
+)
+"records.ml" 157 5690 5701 "records.ml" 157 5690 5702
+type(
+  unit -> API.vLAN_t
+)
+ident(
+  int_ref x "records.ml" 154 5544 5550 "records.ml" 154 5544 5551
+)
+"records.ml" 158 5704 5720 "records.ml" 158 5704 5722
+type(
+  unit
+)
+"records.ml" 158 5704 5726 "records.ml" 158 5704 5727
+type(
+  API.ref_VLAN ref -> API.ref_VLAN
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 158 5704 5727 "records.ml" 158 5704 5731
+type(
+  API.ref_VLAN ref
+)
+ident(
+  int_ref _ref "records.ml" 151 5398 5404 "records.ml" 151 5398 5408
+)
+"records.ml" 158 5704 5726 "records.ml" 158 5704 5731
+type(
+  API.ref_VLAN
+)
+"records.ml" 158 5704 5715 "records.ml" 158 5704 5732
+type(
+  unit -> API.ref_VLAN
+)
+"records.ml" 161 5754 5755 "records.ml" 161 5754 5765
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 161 5754 5772 "records.ml" 161 5754 5778
+type(
+  string
+)
+"records.ml" 161 5754 5797 "records.ml" 161 5754 5799
+type(
+  unit
+)
+"records.ml" 161 5754 5804 "records.ml" 161 5754 5805
+type(
+  unit -> API.vLAN_t
+)
+ident(
+  int_ref x "records.ml" 154 5544 5550 "records.ml" 154 5544 5551
+)
+"records.ml" 161 5754 5806 "records.ml" 161 5754 5808
+type(
+  unit
+)
+"records.ml" 161 5754 5803 "records.ml" 161 5754 5809
+type(
+  API.vLAN_t
+)
+"records.ml" 161 5754 5803 "records.ml" 161 5754 5823
+type(
+  string
+)
+"records.ml" 161 5754 5792 "records.ml" 161 5754 5824
+type(
+  unit -> string
+)
+"records.ml" 161 5754 5825 "records.ml" 161 5754 5827
+type(
+  unit
+)
+"records.ml" 161 5754 5755 "records.ml" 161 5754 5827
+type(
+  field
+)
+"records.ml" 162 5829 5830 "records.ml" 162 5829 5840
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 162 5829 5847 "records.ml" 162 5829 5859
+type(
+  string
+)
+"records.ml" 162 5829 5872 "records.ml" 162 5829 5874
+type(
+  unit
+)
+"records.ml" 162 5829 5878 "records.ml" 162 5829 5895
+type(
+  API.ref_PIF -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 162 5829 5897 "records.ml" 162 5829 5898
+type(
+  unit -> API.vLAN_t
+)
+ident(
+  int_ref x "records.ml" 154 5544 5550 "records.ml" 154 5544 5551
+)
+"records.ml" 162 5829 5899 "records.ml" 162 5829 5901
+type(
+  unit
+)
+"records.ml" 162 5829 5896 "records.ml" 162 5829 5902
+type(
+  API.vLAN_t
+)
+"records.ml" 162 5829 5896 "records.ml" 162 5829 5922
+type(
+  API.ref_PIF
+)
+"records.ml" 162 5829 5878 "records.ml" 162 5829 5922
+type(
+  string
+)
+"records.ml" 162 5829 5867 "records.ml" 162 5829 5923
+type(
+  unit -> string
+)
+"records.ml" 162 5829 5924 "records.ml" 162 5829 5926
+type(
+  unit
+)
+"records.ml" 162 5829 5830 "records.ml" 162 5829 5926
+type(
+  field
+)
+"records.ml" 163 5928 5929 "records.ml" 163 5928 5939
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 163 5928 5946 "records.ml" 163 5928 5960
+type(
+  string
+)
+"records.ml" 163 5928 5971 "records.ml" 163 5928 5973
+type(
+  unit
+)
+"records.ml" 163 5928 5977 "records.ml" 163 5928 5994
+type(
+  API.ref_PIF -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 163 5928 5996 "records.ml" 163 5928 5997
+type(
+  unit -> API.vLAN_t
+)
+ident(
+  int_ref x "records.ml" 154 5544 5550 "records.ml" 154 5544 5551
+)
+"records.ml" 163 5928 5998 "records.ml" 163 5928 6000
+type(
+  unit
+)
+"records.ml" 163 5928 5995 "records.ml" 163 5928 6001
+type(
+  API.vLAN_t
+)
+"records.ml" 163 5928 5995 "records.ml" 163 5928 6023
+type(
+  API.ref_PIF
+)
+"records.ml" 163 5928 5977 "records.ml" 163 5928 6023
+type(
+  string
+)
+"records.ml" 163 5928 5966 "records.ml" 163 5928 6024
+type(
+  unit -> string
+)
+"records.ml" 163 5928 6025 "records.ml" 163 5928 6027
+type(
+  unit
+)
+"records.ml" 163 5928 5929 "records.ml" 163 5928 6027
+type(
+  field
+)
+"records.ml" 164 6029 6030 "records.ml" 164 6029 6040
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 164 6029 6047 "records.ml" 164 6029 6052
+type(
+  string
+)
+"records.ml" 164 6029 6072 "records.ml" 164 6029 6074
+type(
+  unit
+)
+"records.ml" 164 6029 6078 "records.ml" 164 6029 6093
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 164 6029 6095 "records.ml" 164 6029 6096
+type(
+  unit -> API.vLAN_t
+)
+ident(
+  int_ref x "records.ml" 154 5544 5550 "records.ml" 154 5544 5551
+)
+"records.ml" 164 6029 6097 "records.ml" 164 6029 6099
+type(
+  unit
+)
+"records.ml" 164 6029 6094 "records.ml" 164 6029 6100
+type(
+  API.vLAN_t
+)
+"records.ml" 164 6029 6094 "records.ml" 164 6029 6113
+type(
+  int64
+)
+"records.ml" 164 6029 6078 "records.ml" 164 6029 6113
+type(
+  string
+)
+"records.ml" 164 6029 6067 "records.ml" 164 6029 6114
+type(
+  unit -> string
+)
+"records.ml" 164 6029 6115 "records.ml" 164 6029 6117
+type(
+  unit
+)
+"records.ml" 164 6029 6030 "records.ml" 164 6029 6117
+type(
+  field
+)
+"records.ml" 160 5746 5752 "records.ml" 165 6119 6126
+type(
+  field list
+)
+"records.ml" 155 5575 5577 "records.ml" 166 6127 6130
+type(
+  ([ `VLAN ], API.vLAN_t) record
+)
+"records.ml" 154 5544 5546 "records.ml" 166 6127 6130
+type(
+  ([ `VLAN ], API.vLAN_t) record
+)
+"records.ml" 153 5509 5511 "records.ml" 166 6127 6130
+type(
+  ([ `VLAN ], API.vLAN_t) record
+)
+"records.ml" 152 5423 5425 "records.ml" 166 6127 6130
+type(
+  ([ `VLAN ], API.vLAN_t) record
+)
+"records.ml" 151 5398 5400 "records.ml" 166 6127 6130
+type(
+  ([ `VLAN ], API.vLAN_t) record
+)
+"records.ml" 168 6134 6138 "records.ml" 168 6134 6151
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_tunnel -> ([ `tunnel ], API.tunnel_t) record
+)
+ident(
+  def tunnel_record "records.ml" 191 7298 7298 --
+)
+"records.ml" 168 6134 6152 "records.ml" 168 6134 6155
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 168 6134 6156 "records.ml" 189 7293 7296
+)
+"records.ml" 168 6134 6156 "records.ml" 168 6134 6166
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 168 6134 6167 "records.ml" 189 7293 7296
+)
+"records.ml" 168 6134 6167 "records.ml" 168 6134 6173
+type(
+  API.ref_tunnel
+)
+ident(
+  def tunnel "records.ml" 169 6177 6179 "records.ml" 189 7293 7296
+)
+"records.ml" 169 6177 6183 "records.ml" 169 6177 6187
+type(
+  API.ref_tunnel ref
+)
+"records.ml" 169 6177 6190 "records.ml" 169 6177 6193
+type(
+  API.ref_tunnel -> API.ref_tunnel ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 169 6177 6194 "records.ml" 169 6177 6200
+type(
+  API.ref_tunnel
+)
+ident(
+  int_ref tunnel "records.ml" 168 6134 6167 "records.ml" 168 6134 6173
+)
+"records.ml" 169 6177 6190 "records.ml" 169 6177 6200
+type(
+  API.ref_tunnel ref
+)
+"records.ml" 170 6204 6210 "records.ml" 170 6204 6222
+type(
+  API.tunnel_t lzy
+)
+"records.ml" 170 6204 6236 "records.ml" 170 6204 6238
+type(
+  unit
+)
+"records.ml" 170 6204 6242 "records.ml" 170 6204 6266
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_tunnel -> API.tunnel_t
+)
+ident(
+  ext_ref Client.( Client ).( Tunnel ).get_record
+)
+"records.ml" 170 6204 6267 "records.ml" 170 6204 6270
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 168 6134 6152 "records.ml" 168 6134 6155
+)
+"records.ml" 170 6204 6271 "records.ml" 170 6204 6281
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 168 6134 6156 "records.ml" 168 6134 6166
+)
+"records.ml" 170 6204 6282 "records.ml" 170 6204 6283
+type(
+  API.ref_tunnel ref -> API.ref_tunnel
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 170 6204 6283 "records.ml" 170 6204 6287
+type(
+  API.ref_tunnel ref
+)
+ident(
+  int_ref _ref "records.ml" 169 6177 6183 "records.ml" 169 6177 6187
+)
+"records.ml" 170 6204 6282 "records.ml" 170 6204 6287
+type(
+  API.ref_tunnel
+)
+"records.ml" 170 6204 6242 "records.ml" 170 6204 6287
+type(
+  API.tunnel_t
+)
+"records.ml" 170 6204 6231 "records.ml" 170 6204 6288
+type(
+  unit -> API.tunnel_t
+)
+"records.ml" 170 6204 6225 "records.ml" 170 6204 6288
+type(
+  API.tunnel_t lzy
+)
+"records.ml" 171 6292 6298 "records.ml" 171 6292 6304
+type(
+  API.tunnel_t lzy ref
+)
+"records.ml" 171 6292 6307 "records.ml" 171 6292 6310
+type(
+  API.tunnel_t lzy -> API.tunnel_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 171 6292 6311 "records.ml" 171 6292 6323
+type(
+  API.tunnel_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 170 6204 6210 "records.ml" 170 6204 6222
+)
+"records.ml" 171 6292 6307 "records.ml" 171 6292 6323
+type(
+  API.tunnel_t lzy ref
+)
+"records.ml" 172 6327 6333 "records.ml" 172 6327 6334
+type(
+  unit -> API.tunnel_t
+)
+"records.ml" 172 6327 6335 "records.ml" 172 6327 6337
+type(
+  unit
+)
+"records.ml" 172 6327 6340 "records.ml" 172 6327 6347
+type(
+  API.tunnel_t lzy ref -> API.tunnel_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 172 6327 6348 "records.ml" 172 6327 6354
+type(
+  API.tunnel_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 171 6292 6298 "records.ml" 171 6292 6304
+)
+"records.ml" 172 6327 6340 "records.ml" 172 6327 6354
+type(
+  API.tunnel_t
+)
+"records.ml" 173 6358 6374 "records.ml" 173 6358 6375
+type(
+  API.ref_tunnel
+)
+ident(
+  def r "records.ml" 173 6358 6379 "records.ml" 173 6358 6412
+)
+"records.ml" 173 6358 6379 "records.ml" 173 6358 6383
+type(
+  API.ref_tunnel ref
+)
+ident(
+  int_ref _ref "records.ml" 169 6177 6183 "records.ml" 169 6177 6187
+)
+"records.ml" 173 6358 6384 "records.ml" 173 6358 6386
+type(
+  API.ref_tunnel ref -> API.ref_tunnel -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 173 6358 6387 "records.ml" 173 6358 6388
+type(
+  API.ref_tunnel
+)
+ident(
+  int_ref r "records.ml" 173 6358 6374 "records.ml" 173 6358 6375
+)
+"records.ml" 173 6358 6379 "records.ml" 173 6358 6388
+type(
+  unit
+)
+"records.ml" 173 6358 6390 "records.ml" 173 6358 6396
+type(
+  API.tunnel_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 171 6292 6298 "records.ml" 171 6292 6304
+)
+"records.ml" 173 6358 6397 "records.ml" 173 6358 6399
+type(
+  API.tunnel_t lzy ref -> API.tunnel_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 173 6358 6400 "records.ml" 173 6358 6412
+type(
+  API.tunnel_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 170 6204 6210 "records.ml" 170 6204 6222
+)
+"records.ml" 173 6358 6390 "records.ml" 173 6358 6412
+type(
+  unit
+)
+"records.ml" 173 6358 6379 "records.ml" 173 6358 6412
+type(
+  unit
+)
+"records.ml" 173 6358 6369 "records.ml" 173 6358 6414
+type(
+  API.ref_tunnel -> unit
+)
+"records.ml" 174 6416 6436 "records.ml" 174 6416 6437
+type(
+  API.ref_tunnel
+)
+ident(
+  def a "records.ml" 174 6416 6444 "records.ml" 174 6416 6470
+)
+"records.ml" 174 6416 6438 "records.ml" 174 6416 6439
+type(
+  API.tunnel_t
+)
+ident(
+  def b "records.ml" 174 6416 6444 "records.ml" 174 6416 6470
+)
+"records.ml" 174 6416 6435 "records.ml" 174 6416 6440
+type(
+  API.ref_tunnel * API.tunnel_t
+)
+"records.ml" 174 6416 6444 "records.ml" 174 6416 6448
+type(
+  API.ref_tunnel ref
+)
+ident(
+  int_ref _ref "records.ml" 169 6177 6183 "records.ml" 169 6177 6187
+)
+"records.ml" 174 6416 6449 "records.ml" 174 6416 6451
+type(
+  API.ref_tunnel ref -> API.ref_tunnel -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 174 6416 6452 "records.ml" 174 6416 6453
+type(
+  API.ref_tunnel
+)
+ident(
+  int_ref a "records.ml" 174 6416 6436 "records.ml" 174 6416 6437
+)
+"records.ml" 174 6416 6444 "records.ml" 174 6416 6453
+type(
+  unit
+)
+"records.ml" 174 6416 6455 "records.ml" 174 6416 6461
+type(
+  API.tunnel_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 171 6292 6298 "records.ml" 171 6292 6304
+)
+"records.ml" 174 6416 6462 "records.ml" 174 6416 6464
+type(
+  API.tunnel_t lzy ref -> API.tunnel_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 174 6416 6469 "records.ml" 174 6416 6470
+type(
+  API.tunnel_t
+)
+ident(
+  int_ref b "records.ml" 174 6416 6438 "records.ml" 174 6416 6439
+)
+"records.ml" 174 6416 6465 "records.ml" 174 6416 6470
+type(
+  API.tunnel_t lzy
+)
+"records.ml" 174 6416 6455 "records.ml" 174 6416 6470
+type(
+  unit
+)
+"records.ml" 174 6416 6444 "records.ml" 174 6416 6470
+type(
+  unit
+)
+"records.ml" 174 6416 6430 "records.ml" 174 6416 6471
+type(
+  API.ref_tunnel * API.tunnel_t -> unit
+)
+"records.ml" 175 6473 6484 "records.ml" 175 6473 6485
+type(
+  unit -> API.tunnel_t
+)
+ident(
+  int_ref x "records.ml" 172 6327 6333 "records.ml" 172 6327 6334
+)
+"records.ml" 176 6487 6503 "records.ml" 176 6487 6505
+type(
+  unit
+)
+"records.ml" 176 6487 6509 "records.ml" 176 6487 6510
+type(
+  API.ref_tunnel ref -> API.ref_tunnel
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 176 6487 6510 "records.ml" 176 6487 6514
+type(
+  API.ref_tunnel ref
+)
+ident(
+  int_ref _ref "records.ml" 169 6177 6183 "records.ml" 169 6177 6187
+)
+"records.ml" 176 6487 6509 "records.ml" 176 6487 6514
+type(
+  API.ref_tunnel
+)
+"records.ml" 176 6487 6498 "records.ml" 176 6487 6515
+type(
+  unit -> API.ref_tunnel
+)
+"records.ml" 179 6537 6538 "records.ml" 179 6537 6548
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 179 6537 6555 "records.ml" 179 6537 6561
+type(
+  string
+)
+"records.ml" 179 6537 6580 "records.ml" 179 6537 6582
+type(
+  unit
+)
+"records.ml" 179 6537 6587 "records.ml" 179 6537 6588
+type(
+  unit -> API.tunnel_t
+)
+ident(
+  int_ref x "records.ml" 172 6327 6333 "records.ml" 172 6327 6334
+)
+"records.ml" 179 6537 6589 "records.ml" 179 6537 6591
+type(
+  unit
+)
+"records.ml" 179 6537 6586 "records.ml" 179 6537 6592
+type(
+  API.tunnel_t
+)
+"records.ml" 179 6537 6586 "records.ml" 179 6537 6608
+type(
+  string
+)
+"records.ml" 179 6537 6575 "records.ml" 179 6537 6609
+type(
+  unit -> string
+)
+"records.ml" 179 6537 6610 "records.ml" 179 6537 6612
+type(
+  unit
+)
+"records.ml" 179 6537 6538 "records.ml" 179 6537 6612
+type(
+  field
+)
+"records.ml" 180 6614 6615 "records.ml" 180 6614 6625
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 180 6614 6632 "records.ml" 180 6614 6644
+type(
+  string
+)
+"records.ml" 180 6614 6657 "records.ml" 180 6614 6659
+type(
+  unit
+)
+"records.ml" 180 6614 6663 "records.ml" 180 6614 6680
+type(
+  API.ref_PIF -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 180 6614 6682 "records.ml" 180 6614 6683
+type(
+  unit -> API.tunnel_t
+)
+ident(
+  int_ref x "records.ml" 172 6327 6333 "records.ml" 172 6327 6334
+)
+"records.ml" 180 6614 6684 "records.ml" 180 6614 6686
+type(
+  unit
+)
+"records.ml" 180 6614 6681 "records.ml" 180 6614 6687
+type(
+  API.tunnel_t
+)
+"records.ml" 180 6614 6681 "records.ml" 180 6614 6709
+type(
+  API.ref_PIF
+)
+"records.ml" 180 6614 6663 "records.ml" 180 6614 6709
+type(
+  string
+)
+"records.ml" 180 6614 6652 "records.ml" 180 6614 6710
+type(
+  unit -> string
+)
+"records.ml" 180 6614 6711 "records.ml" 180 6614 6713
+type(
+  unit
+)
+"records.ml" 180 6614 6615 "records.ml" 180 6614 6713
+type(
+  field
+)
+"records.ml" 181 6715 6716 "records.ml" 181 6715 6726
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 181 6715 6733 "records.ml" 181 6715 6748
+type(
+  string
+)
+"records.ml" 181 6715 6759 "records.ml" 181 6715 6761
+type(
+  unit
+)
+"records.ml" 181 6715 6765 "records.ml" 181 6715 6782
+type(
+  API.ref_PIF -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 181 6715 6784 "records.ml" 181 6715 6785
+type(
+  unit -> API.tunnel_t
+)
+ident(
+  int_ref x "records.ml" 172 6327 6333 "records.ml" 172 6327 6334
+)
+"records.ml" 181 6715 6786 "records.ml" 181 6715 6788
+type(
+  unit
+)
+"records.ml" 181 6715 6783 "records.ml" 181 6715 6789
+type(
+  API.tunnel_t
+)
+"records.ml" 181 6715 6783 "records.ml" 181 6715 6814
+type(
+  API.ref_PIF
+)
+"records.ml" 181 6715 6765 "records.ml" 181 6715 6814
+type(
+  string
+)
+"records.ml" 181 6715 6754 "records.ml" 181 6715 6815
+type(
+  unit -> string
+)
+"records.ml" 181 6715 6816 "records.ml" 181 6715 6818
+type(
+  unit
+)
+"records.ml" 181 6715 6716 "records.ml" 181 6715 6818
+type(
+  field
+)
+"records.ml" 182 6820 6821 "records.ml" 182 6820 6831
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 182 6820 6838 "records.ml" 182 6820 6846
+type(
+  string
+)
+"records.ml" 182 6820 6864 "records.ml" 182 6820 6866
+type(
+  unit
+)
+"records.ml" 182 6820 6870 "records.ml" 182 6820 6896
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 182 6820 6897 "records.ml" 182 6820 6901
+type(
+  string
+)
+"records.ml" 182 6820 6903 "records.ml" 182 6820 6904
+type(
+  unit -> API.tunnel_t
+)
+ident(
+  int_ref x "records.ml" 172 6327 6333 "records.ml" 172 6327 6334
+)
+"records.ml" 182 6820 6905 "records.ml" 182 6820 6907
+type(
+  unit
+)
+"records.ml" 182 6820 6902 "records.ml" 182 6820 6908
+type(
+  API.tunnel_t
+)
+"records.ml" 182 6820 6902 "records.ml" 182 6820 6926
+type(
+  API.string_to_string_map
+)
+"records.ml" 182 6820 6870 "records.ml" 182 6820 6926
+type(
+  string
+)
+"records.ml" 182 6820 6859 "records.ml" 182 6820 6927
+type(
+  unit -> string
+)
+"records.ml" 182 6820 6928 "records.ml" 182 6820 6930
+type(
+  unit
+)
+"records.ml" 182 6820 6821 "records.ml" 182 6820 6930
+type(
+  field
+)
+"records.ml" 183 6932 6933 "records.ml" 183 6932 6943
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 183 6932 6950 "records.ml" 183 6932 6964
+type(
+  string
+)
+"records.ml" 183 6932 6975 "records.ml" 183 6932 6977
+type(
+  unit
+)
+"records.ml" 183 6932 6981 "records.ml" 183 6932 7007
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 183 6932 7008 "records.ml" 183 6932 7012
+type(
+  string
+)
+"records.ml" 183 6932 7014 "records.ml" 183 6932 7015
+type(
+  unit -> API.tunnel_t
+)
+ident(
+  int_ref x "records.ml" 172 6327 6333 "records.ml" 172 6327 6334
+)
+"records.ml" 183 6932 7016 "records.ml" 183 6932 7018
+type(
+  unit
+)
+"records.ml" 183 6932 7013 "records.ml" 183 6932 7019
+type(
+  API.tunnel_t
+)
+"records.ml" 183 6932 7013 "records.ml" 183 6932 7043
+type(
+  API.string_to_string_map
+)
+"records.ml" 183 6932 6981 "records.ml" 183 6932 7043
+type(
+  string
+)
+"records.ml" 183 6932 6970 "records.ml" 183 6932 7044
+type(
+  unit -> string
+)
+"records.ml" 184 7045 7064 "records.ml" 184 7045 7065
+type(
+  string
+)
+ident(
+  def k "records.ml" 184 7045 7066 "records.ml" 184 7045 7130
+)
+"records.ml" 184 7045 7066 "records.ml" 184 7045 7067
+type(
+  string
+)
+ident(
+  def v "records.ml" 184 7045 7071 "records.ml" 184 7045 7130
+)
+"records.ml" 184 7045 7071 "records.ml" 184 7045 7104
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_tunnel -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Tunnel ).add_to_other_config
+)
+"records.ml" 184 7045 7105 "records.ml" 184 7045 7108
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 168 6134 6152 "records.ml" 168 6134 6155
+)
+"records.ml" 184 7045 7109 "records.ml" 184 7045 7119
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 168 6134 6156 "records.ml" 168 6134 6166
+)
+"records.ml" 184 7045 7120 "records.ml" 184 7045 7126
+type(
+  API.ref_tunnel
+)
+ident(
+  int_ref tunnel "records.ml" 168 6134 6167 "records.ml" 168 6134 6173
+)
+"records.ml" 184 7045 7127 "records.ml" 184 7045 7128
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 184 7045 7064 "records.ml" 184 7045 7065
+)
+"records.ml" 184 7045 7129 "records.ml" 184 7045 7130
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 184 7045 7066 "records.ml" 184 7045 7067
+)
+"records.ml" 184 7045 7071 "records.ml" 184 7045 7130
+type(
+  unit
+)
+"records.ml" 184 7045 7059 "records.ml" 184 7045 7131
+type(
+  string -> string -> unit
+)
+"records.ml" 185 7132 7156 "records.ml" 185 7132 7157
+type(
+  string
+)
+ident(
+  def k "records.ml" 185 7132 7161 "records.ml" 185 7132 7223
+)
+"records.ml" 185 7132 7161 "records.ml" 185 7132 7199
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_tunnel -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Tunnel ).remove_from_other_config
+)
+"records.ml" 185 7132 7200 "records.ml" 185 7132 7203
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 168 6134 6152 "records.ml" 168 6134 6155
+)
+"records.ml" 185 7132 7204 "records.ml" 185 7132 7214
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 168 6134 6156 "records.ml" 168 6134 6166
+)
+"records.ml" 185 7132 7215 "records.ml" 185 7132 7221
+type(
+  API.ref_tunnel
+)
+ident(
+  int_ref tunnel "records.ml" 168 6134 6167 "records.ml" 168 6134 6173
+)
+"records.ml" 185 7132 7222 "records.ml" 185 7132 7223
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 185 7132 7156 "records.ml" 185 7132 7157
+)
+"records.ml" 185 7132 7161 "records.ml" 185 7132 7223
+type(
+  unit
+)
+"records.ml" 185 7132 7151 "records.ml" 185 7132 7224
+type(
+  string -> unit
+)
+"records.ml" 186 7226 7242 "records.ml" 186 7226 7244
+type(
+  unit
+)
+"records.ml" 186 7226 7249 "records.ml" 186 7226 7250
+type(
+  unit -> API.tunnel_t
+)
+ident(
+  int_ref x "records.ml" 172 6327 6333 "records.ml" 172 6327 6334
+)
+"records.ml" 186 7226 7251 "records.ml" 186 7226 7253
+type(
+  unit
+)
+"records.ml" 186 7226 7248 "records.ml" 186 7226 7254
+type(
+  API.tunnel_t
+)
+"records.ml" 186 7226 7248 "records.ml" 186 7226 7278
+type(
+  API.string_to_string_map
+)
+"records.ml" 186 7226 7237 "records.ml" 186 7226 7279
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 186 7226 7280 "records.ml" 186 7226 7282
+type(
+  unit
+)
+"records.ml" 183 6932 6933 "records.ml" 186 7226 7282
+type(
+  field
+)
+"records.ml" 178 6529 6535 "records.ml" 188 7285 7292
+type(
+  field list
+)
+"records.ml" 173 6358 6360 "records.ml" 189 7293 7296
+type(
+  ([ `tunnel ], API.tunnel_t) record
+)
+"records.ml" 172 6327 6329 "records.ml" 189 7293 7296
+type(
+  ([ `tunnel ], API.tunnel_t) record
+)
+"records.ml" 171 6292 6294 "records.ml" 189 7293 7296
+type(
+  ([ `tunnel ], API.tunnel_t) record
+)
+"records.ml" 170 6204 6206 "records.ml" 189 7293 7296
+type(
+  ([ `tunnel ], API.tunnel_t) record
+)
+"records.ml" 169 6177 6179 "records.ml" 189 7293 7296
+type(
+  ([ `tunnel ], API.tunnel_t) record
+)
+"records.ml" 191 7298 7302 "records.ml" 191 7298 7316
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_message -> ([ `message ], API.message_t) record
+)
+ident(
+  def message_record "records.ml" 213 8399 8399 --
+)
+"records.ml" 191 7298 7317 "records.ml" 191 7298 7320
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 191 7298 7321 "records.ml" 210 8393 8396
+)
+"records.ml" 191 7298 7321 "records.ml" 191 7298 7331
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 191 7298 7332 "records.ml" 210 8393 8396
+)
+"records.ml" 191 7298 7332 "records.ml" 191 7298 7339
+type(
+  API.ref_message
+)
+ident(
+  def message "records.ml" 192 7343 7345 "records.ml" 210 8393 8396
+)
+"records.ml" 192 7343 7349 "records.ml" 192 7343 7353
+type(
+  API.ref_message ref
+)
+"records.ml" 192 7343 7356 "records.ml" 192 7343 7359
+type(
+  API.ref_message -> API.ref_message ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 192 7343 7360 "records.ml" 192 7343 7367
+type(
+  API.ref_message
+)
+ident(
+  int_ref message "records.ml" 191 7298 7332 "records.ml" 191 7298 7339
+)
+"records.ml" 192 7343 7356 "records.ml" 192 7343 7367
+type(
+  API.ref_message ref
+)
+"records.ml" 193 7371 7377 "records.ml" 193 7371 7389
+type(
+  API.message_t lzy
+)
+"records.ml" 193 7371 7403 "records.ml" 193 7371 7405
+type(
+  unit
+)
+"records.ml" 193 7371 7409 "records.ml" 193 7371 7434
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_message -> API.message_t
+)
+ident(
+  ext_ref Client.( Client ).( Message ).get_record
+)
+"records.ml" 193 7371 7435 "records.ml" 193 7371 7438
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 191 7298 7317 "records.ml" 191 7298 7320
+)
+"records.ml" 193 7371 7439 "records.ml" 193 7371 7449
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 191 7298 7321 "records.ml" 191 7298 7331
+)
+"records.ml" 193 7371 7450 "records.ml" 193 7371 7451
+type(
+  API.ref_message ref -> API.ref_message
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 193 7371 7451 "records.ml" 193 7371 7455
+type(
+  API.ref_message ref
+)
+ident(
+  int_ref _ref "records.ml" 192 7343 7349 "records.ml" 192 7343 7353
+)
+"records.ml" 193 7371 7450 "records.ml" 193 7371 7455
+type(
+  API.ref_message
+)
+"records.ml" 193 7371 7409 "records.ml" 193 7371 7455
+type(
+  API.message_t
+)
+"records.ml" 193 7371 7398 "records.ml" 193 7371 7456
+type(
+  unit -> API.message_t
+)
+"records.ml" 193 7371 7392 "records.ml" 193 7371 7456
+type(
+  API.message_t lzy
+)
+"records.ml" 194 7460 7466 "records.ml" 194 7460 7472
+type(
+  API.message_t lzy ref
+)
+"records.ml" 194 7460 7475 "records.ml" 194 7460 7478
+type(
+  API.message_t lzy -> API.message_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 194 7460 7479 "records.ml" 194 7460 7491
+type(
+  API.message_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 193 7371 7377 "records.ml" 193 7371 7389
+)
+"records.ml" 194 7460 7475 "records.ml" 194 7460 7491
+type(
+  API.message_t lzy ref
+)
+"records.ml" 195 7495 7501 "records.ml" 195 7495 7502
+type(
+  unit -> API.message_t
+)
+"records.ml" 195 7495 7503 "records.ml" 195 7495 7505
+type(
+  unit
+)
+"records.ml" 195 7495 7508 "records.ml" 195 7495 7515
+type(
+  API.message_t lzy ref -> API.message_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 195 7495 7516 "records.ml" 195 7495 7522
+type(
+  API.message_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 194 7460 7466 "records.ml" 194 7460 7472
+)
+"records.ml" 195 7495 7508 "records.ml" 195 7495 7522
+type(
+  API.message_t
+)
+"records.ml" 196 7526 7542 "records.ml" 196 7526 7543
+type(
+  API.ref_message
+)
+ident(
+  def r "records.ml" 196 7526 7547 "records.ml" 196 7526 7580
+)
+"records.ml" 196 7526 7547 "records.ml" 196 7526 7551
+type(
+  API.ref_message ref
+)
+ident(
+  int_ref _ref "records.ml" 192 7343 7349 "records.ml" 192 7343 7353
+)
+"records.ml" 196 7526 7552 "records.ml" 196 7526 7554
+type(
+  API.ref_message ref -> API.ref_message -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 196 7526 7555 "records.ml" 196 7526 7556
+type(
+  API.ref_message
+)
+ident(
+  int_ref r "records.ml" 196 7526 7542 "records.ml" 196 7526 7543
+)
+"records.ml" 196 7526 7547 "records.ml" 196 7526 7556
+type(
+  unit
+)
+"records.ml" 196 7526 7558 "records.ml" 196 7526 7564
+type(
+  API.message_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 194 7460 7466 "records.ml" 194 7460 7472
+)
+"records.ml" 196 7526 7565 "records.ml" 196 7526 7567
+type(
+  API.message_t lzy ref -> API.message_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 196 7526 7568 "records.ml" 196 7526 7580
+type(
+  API.message_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 193 7371 7377 "records.ml" 193 7371 7389
+)
+"records.ml" 196 7526 7558 "records.ml" 196 7526 7580
+type(
+  unit
+)
+"records.ml" 196 7526 7547 "records.ml" 196 7526 7580
+type(
+  unit
+)
+"records.ml" 196 7526 7537 "records.ml" 196 7526 7582
+type(
+  API.ref_message -> unit
+)
+"records.ml" 197 7584 7604 "records.ml" 197 7584 7605
+type(
+  API.ref_message
+)
+ident(
+  def a "records.ml" 197 7584 7612 "records.ml" 197 7584 7638
+)
+"records.ml" 197 7584 7606 "records.ml" 197 7584 7607
+type(
+  API.message_t
+)
+ident(
+  def b "records.ml" 197 7584 7612 "records.ml" 197 7584 7638
+)
+"records.ml" 197 7584 7603 "records.ml" 197 7584 7608
+type(
+  API.ref_message * API.message_t
+)
+"records.ml" 197 7584 7612 "records.ml" 197 7584 7616
+type(
+  API.ref_message ref
+)
+ident(
+  int_ref _ref "records.ml" 192 7343 7349 "records.ml" 192 7343 7353
+)
+"records.ml" 197 7584 7617 "records.ml" 197 7584 7619
+type(
+  API.ref_message ref -> API.ref_message -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 197 7584 7620 "records.ml" 197 7584 7621
+type(
+  API.ref_message
+)
+ident(
+  int_ref a "records.ml" 197 7584 7604 "records.ml" 197 7584 7605
+)
+"records.ml" 197 7584 7612 "records.ml" 197 7584 7621
+type(
+  unit
+)
+"records.ml" 197 7584 7623 "records.ml" 197 7584 7629
+type(
+  API.message_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 194 7460 7466 "records.ml" 194 7460 7472
+)
+"records.ml" 197 7584 7630 "records.ml" 197 7584 7632
+type(
+  API.message_t lzy ref -> API.message_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 197 7584 7637 "records.ml" 197 7584 7638
+type(
+  API.message_t
+)
+ident(
+  int_ref b "records.ml" 197 7584 7606 "records.ml" 197 7584 7607
+)
+"records.ml" 197 7584 7633 "records.ml" 197 7584 7638
+type(
+  API.message_t lzy
+)
+"records.ml" 197 7584 7623 "records.ml" 197 7584 7638
+type(
+  unit
+)
+"records.ml" 197 7584 7612 "records.ml" 197 7584 7638
+type(
+  unit
+)
+"records.ml" 197 7584 7598 "records.ml" 197 7584 7639
+type(
+  API.ref_message * API.message_t -> unit
+)
+"records.ml" 198 7641 7652 "records.ml" 198 7641 7653
+type(
+  unit -> API.message_t
+)
+ident(
+  int_ref x "records.ml" 195 7495 7501 "records.ml" 195 7495 7502
+)
+"records.ml" 199 7655 7671 "records.ml" 199 7655 7673
+type(
+  unit
+)
+"records.ml" 199 7655 7677 "records.ml" 199 7655 7678
+type(
+  API.ref_message ref -> API.ref_message
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 199 7655 7678 "records.ml" 199 7655 7682
+type(
+  API.ref_message ref
+)
+ident(
+  int_ref _ref "records.ml" 192 7343 7349 "records.ml" 192 7343 7353
+)
+"records.ml" 199 7655 7677 "records.ml" 199 7655 7682
+type(
+  API.ref_message
+)
+"records.ml" 199 7655 7666 "records.ml" 199 7655 7683
+type(
+  unit -> API.ref_message
+)
+"records.ml" 202 7705 7706 "records.ml" 202 7705 7716
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 202 7705 7723 "records.ml" 202 7705 7729
+type(
+  string
+)
+"records.ml" 202 7705 7748 "records.ml" 202 7705 7750
+type(
+  unit
+)
+"records.ml" 202 7705 7755 "records.ml" 202 7705 7756
+type(
+  unit -> API.message_t
+)
+ident(
+  int_ref x "records.ml" 195 7495 7501 "records.ml" 195 7495 7502
+)
+"records.ml" 202 7705 7757 "records.ml" 202 7705 7759
+type(
+  unit
+)
+"records.ml" 202 7705 7754 "records.ml" 202 7705 7760
+type(
+  API.message_t
+)
+"records.ml" 202 7705 7754 "records.ml" 202 7705 7777
+type(
+  string
+)
+"records.ml" 202 7705 7743 "records.ml" 202 7705 7778
+type(
+  unit -> string
+)
+"records.ml" 202 7705 7779 "records.ml" 202 7705 7781
+type(
+  unit
+)
+"records.ml" 202 7705 7706 "records.ml" 202 7705 7781
+type(
+  field
+)
+"records.ml" 203 7783 7784 "records.ml" 203 7783 7794
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 203 7783 7801 "records.ml" 203 7783 7807
+type(
+  string
+)
+"records.ml" 203 7783 7826 "records.ml" 203 7783 7828
+type(
+  unit
+)
+"records.ml" 203 7783 7833 "records.ml" 203 7783 7834
+type(
+  unit -> API.message_t
+)
+ident(
+  int_ref x "records.ml" 195 7495 7501 "records.ml" 195 7495 7502
+)
+"records.ml" 203 7783 7835 "records.ml" 203 7783 7837
+type(
+  unit
+)
+"records.ml" 203 7783 7832 "records.ml" 203 7783 7838
+type(
+  API.message_t
+)
+"records.ml" 203 7783 7832 "records.ml" 203 7783 7855
+type(
+  string
+)
+"records.ml" 203 7783 7821 "records.ml" 203 7783 7856
+type(
+  unit -> string
+)
+"records.ml" 203 7783 7857 "records.ml" 203 7783 7859
+type(
+  unit
+)
+"records.ml" 203 7783 7784 "records.ml" 203 7783 7859
+type(
+  field
+)
+"records.ml" 204 7861 7862 "records.ml" 204 7861 7872
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 204 7861 7879 "records.ml" 204 7861 7889
+type(
+  string
+)
+"records.ml" 204 7861 7904 "records.ml" 204 7861 7906
+type(
+  unit
+)
+"records.ml" 204 7861 7910 "records.ml" 204 7861 7925
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 204 7861 7927 "records.ml" 204 7861 7928
+type(
+  unit -> API.message_t
+)
+ident(
+  int_ref x "records.ml" 195 7495 7501 "records.ml" 195 7495 7502
+)
+"records.ml" 204 7861 7929 "records.ml" 204 7861 7931
+type(
+  unit
+)
+"records.ml" 204 7861 7926 "records.ml" 204 7861 7932
+type(
+  API.message_t
+)
+"records.ml" 204 7861 7926 "records.ml" 204 7861 7953
+type(
+  int64
+)
+"records.ml" 204 7861 7910 "records.ml" 204 7861 7953
+type(
+  string
+)
+"records.ml" 204 7861 7899 "records.ml" 204 7861 7954
+type(
+  unit -> string
+)
+"records.ml" 204 7861 7955 "records.ml" 204 7861 7957
+type(
+  unit
+)
+"records.ml" 204 7861 7862 "records.ml" 204 7861 7957
+type(
+  field
+)
+"records.ml" 205 7959 7960 "records.ml" 205 7959 7970
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 205 7959 7977 "records.ml" 205 7959 7984
+type(
+  string
+)
+"records.ml" 205 7959 8002 "records.ml" 205 7959 8004
+type(
+  unit
+)
+"records.ml" 205 7959 8015 "records.ml" 205 7959 8016
+type(
+  unit -> API.message_t
+)
+ident(
+  int_ref x "records.ml" 195 7495 7501 "records.ml" 195 7495 7502
+)
+"records.ml" 205 7959 8017 "records.ml" 205 7959 8019
+type(
+  unit
+)
+"records.ml" 205 7959 8014 "records.ml" 205 7959 8020
+type(
+  API.message_t
+)
+"records.ml" 205 7959 8014 "records.ml" 205 7959 8036
+type(
+  API.cls
+)
+"records.ml" 205 7959 8042 "records.ml" 205 7959 8045
+type(
+  API.cls
+)
+"records.ml" 205 7959 8049 "records.ml" 205 7959 8053
+type(
+  string
+)
+"records.ml" 205 7959 8056 "records.ml" 205 7959 8061
+type(
+  API.cls
+)
+"records.ml" 205 7959 8065 "records.ml" 205 7959 8071
+type(
+  string
+)
+"records.ml" 205 7959 8074 "records.ml" 205 7959 8077
+type(
+  API.cls
+)
+"records.ml" 205 7959 8081 "records.ml" 205 7959 8085
+type(
+  string
+)
+"records.ml" 205 7959 8088 "records.ml" 205 7959 8093
+type(
+  API.cls
+)
+"records.ml" 205 7959 8097 "records.ml" 205 7959 8103
+type(
+  string
+)
+"records.ml" 205 7959 8106 "records.ml" 205 7959 8111
+type(
+  API.cls
+)
+"records.ml" 205 7959 8115 "records.ml" 205 7959 8121
+type(
+  string
+)
+"records.ml" 205 7959 8008 "records.ml" 205 7959 8121
+type(
+  string
+)
+"records.ml" 205 7959 7997 "records.ml" 205 7959 8122
+type(
+  unit -> string
+)
+"records.ml" 205 7959 8123 "records.ml" 205 7959 8125
+type(
+  unit
+)
+"records.ml" 205 7959 7960 "records.ml" 205 7959 8125
+type(
+  field
+)
+"records.ml" 206 8127 8128 "records.ml" 206 8127 8138
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 206 8127 8145 "records.ml" 206 8127 8155
+type(
+  string
+)
+"records.ml" 206 8127 8170 "records.ml" 206 8127 8172
+type(
+  unit
+)
+"records.ml" 206 8127 8177 "records.ml" 206 8127 8178
+type(
+  unit -> API.message_t
+)
+ident(
+  int_ref x "records.ml" 195 7495 7501 "records.ml" 195 7495 7502
+)
+"records.ml" 206 8127 8179 "records.ml" 206 8127 8181
+type(
+  unit
+)
+"records.ml" 206 8127 8176 "records.ml" 206 8127 8182
+type(
+  API.message_t
+)
+"records.ml" 206 8127 8176 "records.ml" 206 8127 8203
+type(
+  string
+)
+"records.ml" 206 8127 8165 "records.ml" 206 8127 8204
+type(
+  unit -> string
+)
+"records.ml" 206 8127 8205 "records.ml" 206 8127 8207
+type(
+  unit
+)
+"records.ml" 206 8127 8128 "records.ml" 206 8127 8207
+type(
+  field
+)
+"records.ml" 207 8209 8210 "records.ml" 207 8209 8220
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 207 8209 8227 "records.ml" 207 8209 8238
+type(
+  string
+)
+"records.ml" 207 8209 8252 "records.ml" 207 8209 8254
+type(
+  unit
+)
+"records.ml" 207 8209 8258 "records.ml" 207 8209 8272
+type(
+  API.datetime -> string
+)
+ident(
+  ext_ref Date.to_string
+)
+"records.ml" 207 8209 8274 "records.ml" 207 8209 8275
+type(
+  unit -> API.message_t
+)
+ident(
+  int_ref x "records.ml" 195 7495 7501 "records.ml" 195 7495 7502
+)
+"records.ml" 207 8209 8276 "records.ml" 207 8209 8278
+type(
+  unit
+)
+"records.ml" 207 8209 8273 "records.ml" 207 8209 8279
+type(
+  API.message_t
+)
+"records.ml" 207 8209 8273 "records.ml" 207 8209 8301
+type(
+  API.datetime
+)
+"records.ml" 207 8209 8258 "records.ml" 207 8209 8301
+type(
+  string
+)
+"records.ml" 207 8209 8247 "records.ml" 207 8209 8302
+type(
+  unit -> string
+)
+"records.ml" 207 8209 8303 "records.ml" 207 8209 8305
+type(
+  unit
+)
+"records.ml" 207 8209 8210 "records.ml" 207 8209 8305
+type(
+  field
+)
+"records.ml" 208 8307 8308 "records.ml" 208 8307 8318
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 208 8307 8325 "records.ml" 208 8307 8331
+type(
+  string
+)
+"records.ml" 208 8307 8350 "records.ml" 208 8307 8352
+type(
+  unit
+)
+"records.ml" 208 8307 8357 "records.ml" 208 8307 8358
+type(
+  unit -> API.message_t
+)
+ident(
+  int_ref x "records.ml" 195 7495 7501 "records.ml" 195 7495 7502
+)
+"records.ml" 208 8307 8359 "records.ml" 208 8307 8361
+type(
+  unit
+)
+"records.ml" 208 8307 8356 "records.ml" 208 8307 8362
+type(
+  API.message_t
+)
+"records.ml" 208 8307 8356 "records.ml" 208 8307 8379
+type(
+  string
+)
+"records.ml" 208 8307 8345 "records.ml" 208 8307 8380
+type(
+  unit -> string
+)
+"records.ml" 208 8307 8381 "records.ml" 208 8307 8383
+type(
+  unit
+)
+"records.ml" 208 8307 8308 "records.ml" 208 8307 8383
+type(
+  field
+)
+"records.ml" 201 7697 7703 "records.ml" 209 8385 8392
+type(
+  field list
+)
+"records.ml" 196 7526 7528 "records.ml" 210 8393 8396
+type(
+  ([ `message ], API.message_t) record
+)
+"records.ml" 195 7495 7497 "records.ml" 210 8393 8396
+type(
+  ([ `message ], API.message_t) record
+)
+"records.ml" 194 7460 7462 "records.ml" 210 8393 8396
+type(
+  ([ `message ], API.message_t) record
+)
+"records.ml" 193 7371 7373 "records.ml" 210 8393 8396
+type(
+  ([ `message ], API.message_t) record
+)
+"records.ml" 192 7343 7345 "records.ml" 210 8393 8396
+type(
+  ([ `message ], API.message_t) record
+)
+"records.ml" 213 8399 8403 "records.ml" 213 8399 8413
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_PIF -> ([ `PIF ], API.pIF_t) record
+)
+ident(
+  def pif_record "records.ml" 278 13424 13424 --
+)
+"records.ml" 213 8399 8414 "records.ml" 213 8399 8417
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 213 8399 8418 "records.ml" 276 13413 13422
+)
+"records.ml" 213 8399 8418 "records.ml" 213 8399 8428
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 213 8399 8429 "records.ml" 276 13413 13422
+)
+"records.ml" 213 8399 8429 "records.ml" 213 8399 8432
+type(
+  API.ref_PIF
+)
+ident(
+  def pif "records.ml" 214 8435 8437 "records.ml" 276 13413 13422
+)
+"records.ml" 214 8435 8441 "records.ml" 214 8435 8445
+type(
+  API.ref_PIF ref
+)
+"records.ml" 214 8435 8448 "records.ml" 214 8435 8451
+type(
+  API.ref_PIF -> API.ref_PIF ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 214 8435 8452 "records.ml" 214 8435 8455
+type(
+  API.ref_PIF
+)
+ident(
+  int_ref pif "records.ml" 213 8399 8429 "records.ml" 213 8399 8432
+)
+"records.ml" 214 8435 8448 "records.ml" 214 8435 8455
+type(
+  API.ref_PIF ref
+)
+"records.ml" 215 8459 8465 "records.ml" 215 8459 8477
+type(
+  API.pIF_t lzy
+)
+"records.ml" 215 8459 8491 "records.ml" 215 8459 8493
+type(
+  unit
+)
+"records.ml" 215 8459 8497 "records.ml" 215 8459 8518
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_PIF -> API.pIF_t
+)
+ident(
+  ext_ref Client.( Client ).( PIF ).get_record
+)
+"records.ml" 215 8459 8519 "records.ml" 215 8459 8522
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 213 8399 8414 "records.ml" 213 8399 8417
+)
+"records.ml" 215 8459 8523 "records.ml" 215 8459 8533
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 213 8399 8418 "records.ml" 213 8399 8428
+)
+"records.ml" 215 8459 8534 "records.ml" 215 8459 8535
+type(
+  API.ref_PIF ref -> API.ref_PIF
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 215 8459 8535 "records.ml" 215 8459 8539
+type(
+  API.ref_PIF ref
+)
+ident(
+  int_ref _ref "records.ml" 214 8435 8441 "records.ml" 214 8435 8445
+)
+"records.ml" 215 8459 8534 "records.ml" 215 8459 8539
+type(
+  API.ref_PIF
+)
+"records.ml" 215 8459 8497 "records.ml" 215 8459 8539
+type(
+  API.pIF_t
+)
+"records.ml" 215 8459 8486 "records.ml" 215 8459 8540
+type(
+  unit -> API.pIF_t
+)
+"records.ml" 215 8459 8480 "records.ml" 215 8459 8540
+type(
+  API.pIF_t lzy
+)
+"records.ml" 216 8544 8550 "records.ml" 216 8544 8556
+type(
+  API.pIF_t lzy ref
+)
+"records.ml" 216 8544 8559 "records.ml" 216 8544 8562
+type(
+  API.pIF_t lzy -> API.pIF_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 216 8544 8563 "records.ml" 216 8544 8575
+type(
+  API.pIF_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 215 8459 8465 "records.ml" 215 8459 8477
+)
+"records.ml" 216 8544 8559 "records.ml" 216 8544 8575
+type(
+  API.pIF_t lzy ref
+)
+"records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+type(
+  unit -> API.pIF_t
+)
+"records.ml" 217 8579 8587 "records.ml" 217 8579 8589
+type(
+  unit
+)
+"records.ml" 217 8579 8592 "records.ml" 217 8579 8599
+type(
+  API.pIF_t lzy ref -> API.pIF_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 217 8579 8600 "records.ml" 217 8579 8606
+type(
+  API.pIF_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 216 8544 8550 "records.ml" 216 8544 8556
+)
+"records.ml" 217 8579 8592 "records.ml" 217 8579 8606
+type(
+  API.pIF_t
+)
+"records.ml" 218 8610 8616 "records.ml" 218 8610 8623
+type(
+  API.pIF_metrics_t option lzy ref
+)
+"records.ml" 218 8610 8626 "records.ml" 218 8610 8629
+type(
+  API.pIF_metrics_t option lzy -> API.pIF_metrics_t option lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 218 8610 8642 "records.ml" 218 8610 8644
+type(
+  unit
+)
+"records.ml" 218 8610 8658 "records.ml" 218 8610 8687
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_PIF_metrics -> API.pIF_metrics_t
+)
+ident(
+  ext_ref Client.( Client ).( PIF_metrics ).get_record
+)
+"records.ml" 218 8610 8688 "records.ml" 218 8610 8691
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 213 8399 8414 "records.ml" 213 8399 8417
+)
+"records.ml" 218 8610 8692 "records.ml" 218 8610 8702
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 213 8399 8418 "records.ml" 213 8399 8428
+)
+"records.ml" 218 8610 8704 "records.ml" 218 8610 8705
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 218 8610 8706 "records.ml" 218 8610 8708
+type(
+  unit
+)
+"records.ml" 218 8610 8703 "records.ml" 218 8610 8709
+type(
+  API.pIF_t
+)
+"records.ml" 218 8610 8703 "records.ml" 218 8610 8725
+type(
+  API.ref_PIF_metrics
+)
+"records.ml" 218 8610 8657 "records.ml" 218 8610 8726
+type(
+  API.pIF_metrics_t
+)
+"records.ml" 218 8610 8652 "records.ml" 218 8610 8726
+type(
+  API.pIF_metrics_t option
+)
+"records.ml" 218 8610 8732 "records.ml" 218 8610 8733
+type(
+  exn
+)
+"records.ml" 218 8610 8737 "records.ml" 218 8610 8741
+type(
+  API.pIF_metrics_t option
+)
+"records.ml" 218 8610 8648 "records.ml" 218 8610 8741
+type(
+  API.pIF_metrics_t option
+)
+"records.ml" 218 8610 8637 "records.ml" 218 8610 8742
+type(
+  unit -> API.pIF_metrics_t option
+)
+"records.ml" 218 8610 8630 "records.ml" 218 8610 8743
+type(
+  API.pIF_metrics_t option lzy
+)
+"records.ml" 218 8610 8626 "records.ml" 218 8610 8743
+type(
+  API.pIF_metrics_t option lzy ref
+)
+"records.ml" 219 8747 8753 "records.ml" 219 8747 8755
+type(
+  unit -> API.pIF_metrics_t option
+)
+"records.ml" 219 8747 8756 "records.ml" 219 8747 8758
+type(
+  unit
+)
+"records.ml" 219 8747 8761 "records.ml" 219 8747 8768
+type(
+  API.pIF_metrics_t option lzy ref -> API.pIF_metrics_t option
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 219 8747 8769 "records.ml" 219 8747 8776
+type(
+  API.pIF_metrics_t option lzy ref
+)
+ident(
+  int_ref metrics "records.ml" 218 8610 8616 "records.ml" 218 8610 8623
+)
+"records.ml" 219 8747 8761 "records.ml" 219 8747 8776
+type(
+  API.pIF_metrics_t option
+)
+"records.ml" 220 8780 8796 "records.ml" 220 8780 8797
+type(
+  API.ref_PIF
+)
+ident(
+  def r "records.ml" 220 8780 8801 "records.ml" 220 8780 8834
+)
+"records.ml" 220 8780 8801 "records.ml" 220 8780 8805
+type(
+  API.ref_PIF ref
+)
+ident(
+  int_ref _ref "records.ml" 214 8435 8441 "records.ml" 214 8435 8445
+)
+"records.ml" 220 8780 8806 "records.ml" 220 8780 8808
+type(
+  API.ref_PIF ref -> API.ref_PIF -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 220 8780 8809 "records.ml" 220 8780 8810
+type(
+  API.ref_PIF
+)
+ident(
+  int_ref r "records.ml" 220 8780 8796 "records.ml" 220 8780 8797
+)
+"records.ml" 220 8780 8801 "records.ml" 220 8780 8810
+type(
+  unit
+)
+"records.ml" 220 8780 8812 "records.ml" 220 8780 8818
+type(
+  API.pIF_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 216 8544 8550 "records.ml" 216 8544 8556
+)
+"records.ml" 220 8780 8819 "records.ml" 220 8780 8821
+type(
+  API.pIF_t lzy ref -> API.pIF_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 220 8780 8822 "records.ml" 220 8780 8834
+type(
+  API.pIF_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 215 8459 8465 "records.ml" 215 8459 8477
+)
+"records.ml" 220 8780 8812 "records.ml" 220 8780 8834
+type(
+  unit
+)
+"records.ml" 220 8780 8801 "records.ml" 220 8780 8834
+type(
+  unit
+)
+"records.ml" 220 8780 8791 "records.ml" 220 8780 8835
+type(
+  API.ref_PIF -> unit
+)
+"records.ml" 221 8837 8857 "records.ml" 221 8837 8858
+type(
+  API.ref_PIF
+)
+ident(
+  def a "records.ml" 221 8837 8865 "records.ml" 221 8837 8891
+)
+"records.ml" 221 8837 8859 "records.ml" 221 8837 8860
+type(
+  API.pIF_t
+)
+ident(
+  def b "records.ml" 221 8837 8865 "records.ml" 221 8837 8891
+)
+"records.ml" 221 8837 8856 "records.ml" 221 8837 8861
+type(
+  API.ref_PIF * API.pIF_t
+)
+"records.ml" 221 8837 8865 "records.ml" 221 8837 8869
+type(
+  API.ref_PIF ref
+)
+ident(
+  int_ref _ref "records.ml" 214 8435 8441 "records.ml" 214 8435 8445
+)
+"records.ml" 221 8837 8870 "records.ml" 221 8837 8872
+type(
+  API.ref_PIF ref -> API.ref_PIF -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 221 8837 8873 "records.ml" 221 8837 8874
+type(
+  API.ref_PIF
+)
+ident(
+  int_ref a "records.ml" 221 8837 8857 "records.ml" 221 8837 8858
+)
+"records.ml" 221 8837 8865 "records.ml" 221 8837 8874
+type(
+  unit
+)
+"records.ml" 221 8837 8876 "records.ml" 221 8837 8882
+type(
+  API.pIF_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 216 8544 8550 "records.ml" 216 8544 8556
+)
+"records.ml" 221 8837 8883 "records.ml" 221 8837 8885
+type(
+  API.pIF_t lzy ref -> API.pIF_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 221 8837 8890 "records.ml" 221 8837 8891
+type(
+  API.pIF_t
+)
+ident(
+  int_ref b "records.ml" 221 8837 8859 "records.ml" 221 8837 8860
+)
+"records.ml" 221 8837 8886 "records.ml" 221 8837 8891
+type(
+  API.pIF_t lzy
+)
+"records.ml" 221 8837 8876 "records.ml" 221 8837 8891
+type(
+  unit
+)
+"records.ml" 221 8837 8865 "records.ml" 221 8837 8891
+type(
+  unit
+)
+"records.ml" 221 8837 8851 "records.ml" 221 8837 8892
+type(
+  API.ref_PIF * API.pIF_t -> unit
+)
+"records.ml" 222 8894 8905 "records.ml" 222 8894 8906
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 223 8908 8924 "records.ml" 223 8908 8926
+type(
+  unit
+)
+"records.ml" 223 8908 8930 "records.ml" 223 8908 8931
+type(
+  API.ref_PIF ref -> API.ref_PIF
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 223 8908 8931 "records.ml" 223 8908 8935
+type(
+  API.ref_PIF ref
+)
+ident(
+  int_ref _ref "records.ml" 214 8435 8441 "records.ml" 214 8435 8445
+)
+"records.ml" 223 8908 8930 "records.ml" 223 8908 8935
+type(
+  API.ref_PIF
+)
+"records.ml" 223 8908 8919 "records.ml" 223 8908 8936
+type(
+  unit -> API.ref_PIF
+)
+"records.ml" 226 8958 8959 "records.ml" 226 8958 8969
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 226 8958 8976 "records.ml" 226 8958 8982
+type(
+  string
+)
+"records.ml" 226 8958 9001 "records.ml" 226 8958 9003
+type(
+  unit
+)
+"records.ml" 226 8958 9008 "records.ml" 226 8958 9009
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 226 8958 9010 "records.ml" 226 8958 9012
+type(
+  unit
+)
+"records.ml" 226 8958 9007 "records.ml" 226 8958 9013
+type(
+  API.pIF_t
+)
+"records.ml" 226 8958 9007 "records.ml" 226 8958 9026
+type(
+  string
+)
+"records.ml" 226 8958 8996 "records.ml" 226 8958 9027
+type(
+  unit -> string
+)
+"records.ml" 226 8958 9028 "records.ml" 226 8958 9030
+type(
+  unit
+)
+"records.ml" 226 8958 8959 "records.ml" 226 8958 9030
+type(
+  field
+)
+"records.ml" 227 9032 9033 "records.ml" 227 9032 9043
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 227 9032 9050 "records.ml" 227 9032 9058
+type(
+  string
+)
+"records.ml" 227 9032 9075 "records.ml" 227 9032 9077
+type(
+  unit
+)
+"records.ml" 227 9032 9082 "records.ml" 227 9032 9083
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 227 9032 9084 "records.ml" 227 9032 9086
+type(
+  unit
+)
+"records.ml" 227 9032 9081 "records.ml" 227 9032 9087
+type(
+  API.pIF_t
+)
+"records.ml" 227 9032 9081 "records.ml" 227 9032 9102
+type(
+  string
+)
+"records.ml" 227 9032 9070 "records.ml" 227 9032 9103
+type(
+  unit -> string
+)
+"records.ml" 227 9032 9104 "records.ml" 227 9032 9106
+type(
+  unit
+)
+"records.ml" 227 9032 9033 "records.ml" 227 9032 9106
+type(
+  field
+)
+"records.ml" 228 9108 9109 "records.ml" 228 9108 9119
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 228 9108 9126 "records.ml" 228 9108 9131
+type(
+  string
+)
+"records.ml" 228 9108 9151 "records.ml" 228 9108 9153
+type(
+  unit
+)
+"records.ml" 228 9108 9158 "records.ml" 228 9108 9159
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 228 9108 9160 "records.ml" 228 9108 9162
+type(
+  unit
+)
+"records.ml" 228 9108 9157 "records.ml" 228 9108 9163
+type(
+  API.pIF_t
+)
+"records.ml" 228 9108 9157 "records.ml" 228 9108 9175
+type(
+  string
+)
+"records.ml" 228 9108 9146 "records.ml" 228 9108 9176
+type(
+  unit -> string
+)
+"records.ml" 229 9178 9199 "records.ml" 229 9178 9203
+type(
+  bool
+)
+"records.ml" 229 9178 9204 "records.ml" 229 9178 9206
+type(
+  unit
+)
+"records.ml" 228 9108 9109 "records.ml" 229 9178 9206
+type(
+  field
+)
+"records.ml" 230 9208 9209 "records.ml" 230 9208 9219
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 230 9208 9226 "records.ml" 230 9208 9236
+type(
+  string
+)
+"records.ml" 230 9208 9251 "records.ml" 230 9208 9253
+type(
+  unit
+)
+"records.ml" 230 9208 9257 "records.ml" 230 9208 9271
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 230 9208 9274 "records.ml" 230 9208 9275
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 230 9208 9276 "records.ml" 230 9208 9278
+type(
+  unit
+)
+"records.ml" 230 9208 9273 "records.ml" 230 9208 9279
+type(
+  API.pIF_t
+)
+"records.ml" 230 9208 9272 "records.ml" 230 9208 9297
+type(
+  bool
+)
+"records.ml" 230 9208 9257 "records.ml" 230 9208 9297
+type(
+  string
+)
+"records.ml" 230 9208 9246 "records.ml" 230 9208 9298
+type(
+  unit -> string
+)
+"records.ml" 230 9208 9299 "records.ml" 230 9208 9301
+type(
+  unit
+)
+"records.ml" 230 9208 9209 "records.ml" 230 9208 9301
+type(
+  field
+)
+"records.ml" 231 9303 9304 "records.ml" 231 9303 9314
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 231 9303 9321 "records.ml" 231 9303 9341
+type(
+  string
+)
+"records.ml" 231 9303 9356 "records.ml" 231 9303 9358
+type(
+  unit
+)
+"records.ml" 231 9303 9362 "records.ml" 231 9303 9376
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 231 9303 9379 "records.ml" 231 9303 9380
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 231 9303 9381 "records.ml" 231 9303 9383
+type(
+  unit
+)
+"records.ml" 231 9303 9378 "records.ml" 231 9303 9384
+type(
+  API.pIF_t
+)
+"records.ml" 231 9303 9377 "records.ml" 231 9303 9412
+type(
+  bool
+)
+"records.ml" 231 9303 9362 "records.ml" 231 9303 9412
+type(
+  string
+)
+"records.ml" 231 9303 9351 "records.ml" 231 9303 9413
+type(
+  unit -> string
+)
+"records.ml" 231 9303 9414 "records.ml" 231 9303 9416
+type(
+  unit
+)
+"records.ml" 231 9303 9304 "records.ml" 231 9303 9416
+type(
+  field
+)
+"records.ml" 232 9418 9419 "records.ml" 232 9418 9429
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 232 9418 9436 "records.ml" 232 9418 9441
+type(
+  string
+)
+"records.ml" 232 9418 9461 "records.ml" 232 9418 9463
+type(
+  unit
+)
+"records.ml" 232 9418 9468 "records.ml" 232 9418 9483
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 232 9418 9485 "records.ml" 232 9418 9486
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 232 9418 9487 "records.ml" 232 9418 9489
+type(
+  unit
+)
+"records.ml" 232 9418 9484 "records.ml" 232 9418 9490
+type(
+  API.pIF_t
+)
+"records.ml" 232 9418 9484 "records.ml" 232 9418 9502
+type(
+  int64
+)
+"records.ml" 232 9418 9467 "records.ml" 232 9418 9503
+type(
+  string
+)
+"records.ml" 232 9418 9456 "records.ml" 232 9418 9504
+type(
+  unit -> string
+)
+"records.ml" 232 9418 9505 "records.ml" 232 9418 9507
+type(
+  unit
+)
+"records.ml" 232 9418 9419 "records.ml" 232 9418 9507
+type(
+  field
+)
+"records.ml" 233 9509 9510 "records.ml" 233 9509 9520
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 233 9509 9527 "records.ml" 233 9509 9533
+type(
+  string
+)
+"records.ml" 233 9509 9552 "records.ml" 233 9509 9554
+type(
+  unit
+)
+"records.ml" 233 9509 9559 "records.ml" 233 9509 9574
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 233 9509 9576 "records.ml" 233 9509 9577
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 233 9509 9578 "records.ml" 233 9509 9580
+type(
+  unit
+)
+"records.ml" 233 9509 9575 "records.ml" 233 9509 9581
+type(
+  API.pIF_t
+)
+"records.ml" 233 9509 9575 "records.ml" 233 9509 9594
+type(
+  int64
+)
+"records.ml" 233 9509 9558 "records.ml" 233 9509 9595
+type(
+  string
+)
+"records.ml" 233 9509 9547 "records.ml" 233 9509 9596
+type(
+  unit -> string
+)
+"records.ml" 233 9509 9597 "records.ml" 233 9509 9599
+type(
+  unit
+)
+"records.ml" 233 9509 9510 "records.ml" 233 9509 9599
+type(
+  field
+)
+"records.ml" 234 9601 9602 "records.ml" 234 9601 9612
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 234 9601 9619 "records.ml" 234 9601 9635
+type(
+  string
+)
+"records.ml" 234 9601 9646 "records.ml" 234 9601 9648
+type(
+  unit
+)
+"records.ml" 234 9601 9652 "records.ml" 234 9601 9665
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 234 9601 9666 "records.ml" 234 9601 9670
+type(
+  string
+)
+"records.ml" 234 9601 9672 "records.ml" 234 9601 9680
+type(
+  ([ `Bond ] Ref.t -> string) -> API.ref_Bond_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 234 9601 9686 "records.ml" 234 9601 9689
+type(
+  [ `Bond ] Ref.t
+)
+ident(
+  def pif "records.ml" 234 9601 9693 "records.ml" 234 9601 9714
+)
+"records.ml" 234 9601 9693 "records.ml" 234 9601 9710
+type(
+  [ `Bond ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 234 9601 9711 "records.ml" 234 9601 9714
+type(
+  [ `Bond ] Ref.t
+)
+ident(
+  int_ref pif "records.ml" 234 9601 9686 "records.ml" 234 9601 9689
+)
+"records.ml" 234 9601 9693 "records.ml" 234 9601 9714
+type(
+  string
+)
+"records.ml" 234 9601 9681 "records.ml" 234 9601 9715
+type(
+  [ `Bond ] Ref.t -> string
+)
+"records.ml" 234 9601 9717 "records.ml" 234 9601 9718
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 234 9601 9719 "records.ml" 234 9601 9721
+type(
+  unit
+)
+"records.ml" 234 9601 9716 "records.ml" 234 9601 9722
+type(
+  API.pIF_t
+)
+"records.ml" 234 9601 9716 "records.ml" 234 9601 9745
+type(
+  API.ref_Bond_set
+)
+"records.ml" 234 9601 9671 "records.ml" 234 9601 9746
+type(
+  string list
+)
+"records.ml" 234 9601 9652 "records.ml" 234 9601 9746
+type(
+  string
+)
+"records.ml" 234 9601 9641 "records.ml" 234 9601 9747
+type(
+  unit -> string
+)
+"records.ml" 234 9601 9748 "records.ml" 234 9601 9750
+type(
+  unit
+)
+"records.ml" 234 9601 9602 "records.ml" 234 9601 9750
+type(
+  field
+)
+"records.ml" 235 9752 9753 "records.ml" 235 9752 9763
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 235 9752 9770 "records.ml" 235 9752 9785
+type(
+  string
+)
+"records.ml" 235 9752 9797 "records.ml" 235 9752 9799
+type(
+  unit
+)
+"records.ml" 235 9752 9803 "records.ml" 235 9752 9820
+type(
+  API.ref_Bond -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 235 9752 9822 "records.ml" 235 9752 9823
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 235 9752 9824 "records.ml" 235 9752 9826
+type(
+  unit
+)
+"records.ml" 235 9752 9821 "records.ml" 235 9752 9827
+type(
+  API.pIF_t
+)
+"records.ml" 235 9752 9821 "records.ml" 235 9752 9849
+type(
+  API.ref_Bond
+)
+"records.ml" 235 9752 9803 "records.ml" 235 9752 9849
+type(
+  string
+)
+"records.ml" 235 9752 9792 "records.ml" 235 9752 9850
+type(
+  unit -> string
+)
+"records.ml" 235 9752 9851 "records.ml" 235 9752 9853
+type(
+  unit
+)
+"records.ml" 235 9752 9753 "records.ml" 235 9752 9853
+type(
+  field
+)
+"records.ml" 236 9855 9856 "records.ml" 236 9855 9866
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 236 9855 9873 "records.ml" 236 9855 9895
+type(
+  string
+)
+"records.ml" 236 9855 9906 "records.ml" 236 9855 9908
+type(
+  unit
+)
+"records.ml" 236 9855 9912 "records.ml" 236 9855 9925
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 236 9855 9926 "records.ml" 236 9855 9930
+type(
+  string
+)
+"records.ml" 236 9855 9932 "records.ml" 236 9855 9940
+type(
+  ([ `tunnel ] Ref.t -> string) -> API.ref_tunnel_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 236 9855 9946 "records.ml" 236 9855 9949
+type(
+  [ `tunnel ] Ref.t
+)
+ident(
+  def pif "records.ml" 236 9855 9953 "records.ml" 236 9855 9974
+)
+"records.ml" 236 9855 9953 "records.ml" 236 9855 9970
+type(
+  [ `tunnel ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 236 9855 9971 "records.ml" 236 9855 9974
+type(
+  [ `tunnel ] Ref.t
+)
+ident(
+  int_ref pif "records.ml" 236 9855 9946 "records.ml" 236 9855 9949
+)
+"records.ml" 236 9855 9953 "records.ml" 236 9855 9974
+type(
+  string
+)
+"records.ml" 236 9855 9941 "records.ml" 236 9855 9975
+type(
+  [ `tunnel ] Ref.t -> string
+)
+"records.ml" 236 9855 9977 "records.ml" 236 9855 9978
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 236 9855 9979 "records.ml" 236 9855 9981
+type(
+  unit
+)
+"records.ml" 236 9855 9976 "records.ml" 236 9855 9982
+type(
+  API.pIF_t
+)
+"records.ml" 236 9855 9976 "records.ml" 236 9855 10011
+type(
+  API.ref_tunnel_set
+)
+"records.ml" 236 9855 9931 "records.ml" 236 9855 10012
+type(
+  string list
+)
+"records.ml" 236 9855 9912 "records.ml" 236 9855 10012
+type(
+  string
+)
+"records.ml" 236 9855 9901 "records.ml" 236 9855 10013
+type(
+  unit -> string
+)
+"records.ml" 236 9855 10014 "records.ml" 236 9855 10016
+type(
+  unit
+)
+"records.ml" 236 9855 9856 "records.ml" 236 9855 10016
+type(
+  field
+)
+"records.ml" 237 10018 10019 "records.ml" 237 10018 10029
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 237 10018 10036 "records.ml" 237 10018 10061
+type(
+  string
+)
+"records.ml" 237 10018 10073 "records.ml" 237 10018 10075
+type(
+  unit
+)
+"records.ml" 237 10018 10079 "records.ml" 237 10018 10092
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 237 10018 10093 "records.ml" 237 10018 10097
+type(
+  string
+)
+"records.ml" 237 10018 10099 "records.ml" 237 10018 10107
+type(
+  ([ `tunnel ] Ref.t -> string) -> API.ref_tunnel_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 237 10018 10113 "records.ml" 237 10018 10116
+type(
+  [ `tunnel ] Ref.t
+)
+ident(
+  def pif "records.ml" 237 10018 10120 "records.ml" 237 10018 10141
+)
+"records.ml" 237 10018 10120 "records.ml" 237 10018 10137
+type(
+  [ `tunnel ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 237 10018 10138 "records.ml" 237 10018 10141
+type(
+  [ `tunnel ] Ref.t
+)
+ident(
+  int_ref pif "records.ml" 237 10018 10113 "records.ml" 237 10018 10116
+)
+"records.ml" 237 10018 10120 "records.ml" 237 10018 10141
+type(
+  string
+)
+"records.ml" 237 10018 10108 "records.ml" 237 10018 10142
+type(
+  [ `tunnel ] Ref.t -> string
+)
+"records.ml" 237 10018 10144 "records.ml" 237 10018 10145
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 237 10018 10146 "records.ml" 237 10018 10148
+type(
+  unit
+)
+"records.ml" 237 10018 10143 "records.ml" 237 10018 10149
+type(
+  API.pIF_t
+)
+"records.ml" 237 10018 10143 "records.ml" 237 10018 10181
+type(
+  API.ref_tunnel_set
+)
+"records.ml" 237 10018 10098 "records.ml" 237 10018 10182
+type(
+  string list
+)
+"records.ml" 237 10018 10079 "records.ml" 237 10018 10182
+type(
+  string
+)
+"records.ml" 237 10018 10068 "records.ml" 237 10018 10183
+type(
+  unit -> string
+)
+"records.ml" 237 10018 10184 "records.ml" 237 10018 10186
+type(
+  unit
+)
+"records.ml" 237 10018 10019 "records.ml" 237 10018 10186
+type(
+  field
+)
+"records.ml" 238 10188 10189 "records.ml" 238 10188 10199
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 238 10188 10206 "records.ml" 238 10188 10218
+type(
+  string
+)
+"records.ml" 238 10188 10231 "records.ml" 238 10188 10233
+type(
+  unit
+)
+"records.ml" 238 10188 10237 "records.ml" 238 10188 10251
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 238 10188 10254 "records.ml" 238 10188 10255
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 238 10188 10256 "records.ml" 238 10188 10258
+type(
+  unit
+)
+"records.ml" 238 10188 10253 "records.ml" 238 10188 10259
+type(
+  API.pIF_t
+)
+"records.ml" 238 10188 10252 "records.ml" 238 10188 10279
+type(
+  bool
+)
+"records.ml" 238 10188 10237 "records.ml" 238 10188 10279
+type(
+  string
+)
+"records.ml" 238 10188 10226 "records.ml" 238 10188 10280
+type(
+  unit -> string
+)
+"records.ml" 238 10188 10281 "records.ml" 238 10188 10283
+type(
+  unit
+)
+"records.ml" 238 10188 10189 "records.ml" 238 10188 10283
+type(
+  field
+)
+"records.ml" 239 10285 10286 "records.ml" 239 10285 10296
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 239 10285 10303 "records.ml" 239 10285 10317
+type(
+  string
+)
+"records.ml" 239 10285 10328 "records.ml" 239 10285 10330
+type(
+  unit
+)
+"records.ml" 239 10285 10338 "records.ml" 239 10285 10355
+type(
+  API.ref_network -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 239 10285 10357 "records.ml" 239 10285 10358
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 239 10285 10359 "records.ml" 239 10285 10361
+type(
+  unit
+)
+"records.ml" 239 10285 10356 "records.ml" 239 10285 10362
+type(
+  API.pIF_t
+)
+"records.ml" 239 10285 10356 "records.ml" 239 10285 10378
+type(
+  API.ref_network
+)
+"records.ml" 239 10285 10338 "records.ml" 239 10285 10378
+type(
+  string
+)
+"records.ml" 239 10285 10384 "records.ml" 239 10285 10385
+type(
+  exn
+)
+"records.ml" 239 10285 10389 "records.ml" 239 10285 10392
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 239 10285 10334 "records.ml" 239 10285 10392
+type(
+  string
+)
+"records.ml" 239 10285 10323 "records.ml" 239 10285 10393
+type(
+  unit -> string
+)
+"records.ml" 239 10285 10394 "records.ml" 239 10285 10396
+type(
+  unit
+)
+"records.ml" 239 10285 10286 "records.ml" 239 10285 10396
+type(
+  field
+)
+"records.ml" 240 10398 10399 "records.ml" 240 10398 10409
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 240 10398 10416 "records.ml" 240 10398 10436
+type(
+  string
+)
+"records.ml" 240 10398 10447 "records.ml" 240 10398 10449
+type(
+  unit
+)
+"records.ml" 240 10398 10457 "records.ml" 240 10398 10474
+type(
+  API.ref_network -> string
+)
+ident(
+  int_ref get_name_from_ref "records.ml" 103 3658 3662 "records.ml" 103 3658 3679
+)
+"records.ml" 240 10398 10476 "records.ml" 240 10398 10477
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 240 10398 10478 "records.ml" 240 10398 10480
+type(
+  unit
+)
+"records.ml" 240 10398 10475 "records.ml" 240 10398 10481
+type(
+  API.pIF_t
+)
+"records.ml" 240 10398 10475 "records.ml" 240 10398 10497
+type(
+  API.ref_network
+)
+"records.ml" 240 10398 10457 "records.ml" 240 10398 10497
+type(
+  string
+)
+"records.ml" 240 10398 10503 "records.ml" 240 10398 10504
+type(
+  exn
+)
+"records.ml" 240 10398 10508 "records.ml" 240 10398 10511
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 240 10398 10453 "records.ml" 240 10398 10511
+type(
+  string
+)
+"records.ml" 240 10398 10442 "records.ml" 240 10398 10512
+type(
+  unit -> string
+)
+"records.ml" 240 10398 10513 "records.ml" 240 10398 10515
+type(
+  unit
+)
+"records.ml" 240 10398 10399 "records.ml" 240 10398 10515
+type(
+  field
+)
+"records.ml" 241 10517 10518 "records.ml" 241 10517 10528
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 241 10517 10535 "records.ml" 241 10517 10546
+type(
+  string
+)
+"records.ml" 241 10517 10560 "records.ml" 241 10517 10562
+type(
+  unit
+)
+"records.ml" 241 10517 10570 "records.ml" 241 10517 10587
+type(
+  API.ref_host -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 241 10517 10589 "records.ml" 241 10517 10590
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 241 10517 10591 "records.ml" 241 10517 10593
+type(
+  unit
+)
+"records.ml" 241 10517 10588 "records.ml" 241 10517 10594
+type(
+  API.pIF_t
+)
+"records.ml" 241 10517 10588 "records.ml" 241 10517 10607
+type(
+  API.ref_host
+)
+"records.ml" 241 10517 10570 "records.ml" 241 10517 10607
+type(
+  string
+)
+"records.ml" 241 10517 10613 "records.ml" 241 10517 10614
+type(
+  exn
+)
+"records.ml" 241 10517 10618 "records.ml" 241 10517 10621
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 241 10517 10566 "records.ml" 241 10517 10621
+type(
+  string
+)
+"records.ml" 241 10517 10555 "records.ml" 241 10517 10622
+type(
+  unit -> string
+)
+"records.ml" 241 10517 10623 "records.ml" 241 10517 10625
+type(
+  unit
+)
+"records.ml" 241 10517 10518 "records.ml" 241 10517 10625
+type(
+  field
+)
+"records.ml" 242 10627 10628 "records.ml" 242 10627 10638
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 242 10627 10645 "records.ml" 242 10627 10662
+type(
+  string
+)
+"records.ml" 242 10627 10676 "records.ml" 242 10627 10678
+type(
+  unit
+)
+"records.ml" 242 10627 10686 "records.ml" 242 10627 10703
+type(
+  API.ref_host -> string
+)
+ident(
+  int_ref get_name_from_ref "records.ml" 103 3658 3662 "records.ml" 103 3658 3679
+)
+"records.ml" 242 10627 10705 "records.ml" 242 10627 10706
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 242 10627 10707 "records.ml" 242 10627 10709
+type(
+  unit
+)
+"records.ml" 242 10627 10704 "records.ml" 242 10627 10710
+type(
+  API.pIF_t
+)
+"records.ml" 242 10627 10704 "records.ml" 242 10627 10723
+type(
+  API.ref_host
+)
+"records.ml" 242 10627 10686 "records.ml" 242 10627 10723
+type(
+  string
+)
+"records.ml" 242 10627 10729 "records.ml" 242 10627 10730
+type(
+  exn
+)
+"records.ml" 242 10627 10734 "records.ml" 242 10627 10737
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 242 10627 10682 "records.ml" 242 10627 10737
+type(
+  string
+)
+"records.ml" 242 10627 10671 "records.ml" 242 10627 10738
+type(
+  unit -> string
+)
+"records.ml" 242 10627 10739 "records.ml" 242 10627 10741
+type(
+  unit
+)
+"records.ml" 242 10627 10628 "records.ml" 242 10627 10741
+type(
+  field
+)
+"records.ml" 243 10743 10744 "records.ml" 243 10743 10754
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 243 10743 10761 "records.ml" 243 10743 10784
+type(
+  string
+)
+"records.ml" 243 10743 10795 "records.ml" 243 10743 10797
+type(
+  unit
+)
+"records.ml" 243 10743 10801 "records.ml" 243 10743 10844
+type(
+  API.ip_configuration_mode -> string
+)
+ident(
+  ext_ref Record_util.ip_configuration_mode_to_string
+)
+"records.ml" 243 10743 10846 "records.ml" 243 10743 10847
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 243 10743 10848 "records.ml" 243 10743 10850
+type(
+  unit
+)
+"records.ml" 243 10743 10845 "records.ml" 243 10743 10851
+type(
+  API.pIF_t
+)
+"records.ml" 243 10743 10845 "records.ml" 243 10743 10881
+type(
+  API.ip_configuration_mode
+)
+"records.ml" 243 10743 10801 "records.ml" 243 10743 10881
+type(
+  string
+)
+"records.ml" 243 10743 10790 "records.ml" 243 10743 10882
+type(
+  unit -> string
+)
+"records.ml" 243 10743 10883 "records.ml" 243 10743 10885
+type(
+  unit
+)
+"records.ml" 243 10743 10744 "records.ml" 243 10743 10885
+type(
+  field
+)
+"records.ml" 244 10887 10888 "records.ml" 244 10887 10898
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 244 10887 10905 "records.ml" 244 10887 10909
+type(
+  string
+)
+"records.ml" 244 10887 10930 "records.ml" 244 10887 10932
+type(
+  unit
+)
+"records.ml" 244 10887 10937 "records.ml" 244 10887 10938
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 244 10887 10939 "records.ml" 244 10887 10941
+type(
+  unit
+)
+"records.ml" 244 10887 10936 "records.ml" 244 10887 10942
+type(
+  API.pIF_t
+)
+"records.ml" 244 10887 10936 "records.ml" 244 10887 10953
+type(
+  string
+)
+"records.ml" 244 10887 10925 "records.ml" 244 10887 10954
+type(
+  unit -> string
+)
+"records.ml" 244 10887 10955 "records.ml" 244 10887 10957
+type(
+  unit
+)
+"records.ml" 244 10887 10888 "records.ml" 244 10887 10957
+type(
+  field
+)
+"records.ml" 245 10959 10960 "records.ml" 245 10959 10970
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 245 10959 10977 "records.ml" 245 10959 10986
+type(
+  string
+)
+"records.ml" 245 10959 11002 "records.ml" 245 10959 11004
+type(
+  unit
+)
+"records.ml" 245 10959 11009 "records.ml" 245 10959 11010
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 245 10959 11011 "records.ml" 245 10959 11013
+type(
+  unit
+)
+"records.ml" 245 10959 11008 "records.ml" 245 10959 11014
+type(
+  API.pIF_t
+)
+"records.ml" 245 10959 11008 "records.ml" 245 10959 11030
+type(
+  string
+)
+"records.ml" 245 10959 10997 "records.ml" 245 10959 11031
+type(
+  unit -> string
+)
+"records.ml" 245 10959 11032 "records.ml" 245 10959 11034
+type(
+  unit
+)
+"records.ml" 245 10959 10960 "records.ml" 245 10959 11034
+type(
+  field
+)
+"records.ml" 246 11036 11037 "records.ml" 246 11036 11047
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 246 11036 11054 "records.ml" 246 11036 11063
+type(
+  string
+)
+"records.ml" 246 11036 11079 "records.ml" 246 11036 11081
+type(
+  unit
+)
+"records.ml" 246 11036 11086 "records.ml" 246 11036 11087
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 246 11036 11088 "records.ml" 246 11036 11090
+type(
+  unit
+)
+"records.ml" 246 11036 11085 "records.ml" 246 11036 11091
+type(
+  API.pIF_t
+)
+"records.ml" 246 11036 11085 "records.ml" 246 11036 11107
+type(
+  string
+)
+"records.ml" 246 11036 11074 "records.ml" 246 11036 11108
+type(
+  unit -> string
+)
+"records.ml" 246 11036 11109 "records.ml" 246 11036 11111
+type(
+  unit
+)
+"records.ml" 246 11036 11037 "records.ml" 246 11036 11111
+type(
+  field
+)
+"records.ml" 247 11113 11114 "records.ml" 247 11113 11124
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 247 11113 11131 "records.ml" 247 11113 11136
+type(
+  string
+)
+"records.ml" 247 11113 11156 "records.ml" 247 11113 11158
+type(
+  unit
+)
+"records.ml" 247 11113 11163 "records.ml" 247 11113 11164
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 247 11113 11165 "records.ml" 247 11113 11167
+type(
+  unit
+)
+"records.ml" 247 11113 11162 "records.ml" 247 11113 11168
+type(
+  API.pIF_t
+)
+"records.ml" 247 11113 11162 "records.ml" 247 11113 11180
+type(
+  string
+)
+"records.ml" 247 11113 11151 "records.ml" 247 11113 11181
+type(
+  unit -> string
+)
+"records.ml" 247 11113 11182 "records.ml" 247 11113 11184
+type(
+  unit
+)
+"records.ml" 247 11113 11114 "records.ml" 247 11113 11184
+type(
+  field
+)
+"records.ml" 248 11186 11187 "records.ml" 248 11186 11197
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 248 11186 11204 "records.ml" 248 11186 11217
+type(
+  string
+)
+"records.ml" 248 11186 11228 "records.ml" 248 11186 11230
+type(
+  unit
+)
+"records.ml" 250 11243 11252 "records.ml" 250 11243 11256
+type(
+  API.ref_host
+)
+ident(
+  def host "records.ml" 251 11282 11287 "records.ml" 253 11425 11463
+)
+"records.ml" 250 11243 11260 "records.ml" 250 11243 11261
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 250 11243 11262 "records.ml" 250 11243 11264
+type(
+  unit
+)
+"records.ml" 250 11243 11259 "records.ml" 250 11243 11265
+type(
+  API.pIF_t
+)
+"records.ml" 250 11243 11259 "records.ml" 250 11243 11278
+type(
+  API.ref_host
+)
+"records.ml" 251 11282 11291 "records.ml" 251 11282 11295
+type(
+  string
+)
+ident(
+  def name "records.ml" 252 11350 11355 "records.ml" 253 11425 11463
+)
+"records.ml" 251 11282 11298 "records.ml" 251 11282 11312
+type(
+  (string -> string, unit, string) format -> string -> string
+)
+ident(
+  ext_ref Printf.sprintf
+)
+"records.ml" 251 11282 11313 "records.ml" 251 11282 11324
+type(
+  (string -> string, unit, string) format
+)
+"records.ml" 251 11282 11326 "records.ml" 251 11282 11327
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 251 11282 11328 "records.ml" 251 11282 11330
+type(
+  unit
+)
+"records.ml" 251 11282 11325 "records.ml" 251 11282 11331
+type(
+  API.pIF_t
+)
+"records.ml" 251 11282 11325 "records.ml" 251 11282 11346
+type(
+  string
+)
+"records.ml" 251 11282 11298 "records.ml" 251 11282 11346
+type(
+  string
+)
+"records.ml" 252 11350 11359 "records.ml" 252 11350 11364
+type(
+  float
+)
+ident(
+  def value "records.ml" 253 11425 11430 "records.ml" 253 11425 11463
+)
+"records.ml" 252 11350 11367 "records.ml" 252 11350 11396
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  host:API.ref_host -> data_source:string -> float
+)
+ident(
+  ext_ref Client.( Client ).( Host ).query_data_source
+)
+"records.ml" 252 11350 11397 "records.ml" 252 11350 11400
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 213 8399 8414 "records.ml" 213 8399 8417
+)
+"records.ml" 252 11350 11401 "records.ml" 252 11350 11411
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 213 8399 8418 "records.ml" 213 8399 8428
+)
+"records.ml" 252 11350 11412 "records.ml" 252 11350 11416
+type(
+  API.ref_host
+)
+ident(
+  int_ref host "records.ml" 250 11243 11252 "records.ml" 250 11243 11256
+)
+"records.ml" 252 11350 11417 "records.ml" 252 11350 11421
+type(
+  string
+)
+ident(
+  int_ref name "records.ml" 251 11282 11291 "records.ml" 251 11282 11295
+)
+"records.ml" 252 11350 11367 "records.ml" 252 11350 11421
+type(
+  float
+)
+"records.ml" 253 11425 11430 "records.ml" 253 11425 11445
+type(
+  float -> string
+)
+ident(
+  int_ref string_of_float "records.ml" 34 990 994 "records.ml" 34 990 1009
+)
+"records.ml" 253 11425 11447 "records.ml" 253 11425 11452
+type(
+  float
+)
+ident(
+  int_ref value "records.ml" 252 11350 11359 "records.ml" 252 11350 11364
+)
+"records.ml" 253 11425 11453 "records.ml" 253 11425 11455
+type(
+  float -> float -> float
+)
+ident(
+  ext_ref Pervasives.( /. )
+)
+"records.ml" 253 11425 11456 "records.ml" 253 11425 11462
+type(
+  float
+)
+"records.ml" 253 11425 11446 "records.ml" 253 11425 11463
+type(
+  float
+)
+"records.ml" 253 11425 11430 "records.ml" 253 11425 11463
+type(
+  string
+)
+"records.ml" 252 11350 11355 "records.ml" 253 11425 11463
+type(
+  string
+)
+"records.ml" 251 11282 11287 "records.ml" 253 11425 11463
+type(
+  string
+)
+"records.ml" 250 11243 11248 "records.ml" 253 11425 11463
+type(
+  string
+)
+"records.ml" 254 11464 11472 "records.ml" 254 11464 11473
+type(
+  exn
+)
+"records.ml" 254 11464 11477 "records.ml" 254 11464 11488
+type(
+  string
+)
+"records.ml" 249 11235 11238 "records.ml" 254 11464 11488
+type(
+  string
+)
+"records.ml" 248 11186 11223 "records.ml" 254 11464 11489
+type(
+  unit -> string
+)
+"records.ml" 254 11464 11501 "records.ml" 254 11464 11505
+type(
+  bool
+)
+"records.ml" 254 11464 11506 "records.ml" 254 11464 11508
+type(
+  unit
+)
+"records.ml" 248 11186 11187 "records.ml" 254 11464 11508
+type(
+  field
+)
+"records.ml" 255 11510 11511 "records.ml" 255 11510 11521
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 255 11510 11528 "records.ml" 255 11510 11542
+type(
+  string
+)
+"records.ml" 255 11510 11553 "records.ml" 255 11510 11555
+type(
+  unit
+)
+"records.ml" 257 11568 11577 "records.ml" 257 11568 11581
+type(
+  API.ref_host
+)
+ident(
+  def host "records.ml" 258 11607 11612 "records.ml" 260 11750 11788
+)
+"records.ml" 257 11568 11585 "records.ml" 257 11568 11586
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 257 11568 11587 "records.ml" 257 11568 11589
+type(
+  unit
+)
+"records.ml" 257 11568 11584 "records.ml" 257 11568 11590
+type(
+  API.pIF_t
+)
+"records.ml" 257 11568 11584 "records.ml" 257 11568 11603
+type(
+  API.ref_host
+)
+"records.ml" 258 11607 11616 "records.ml" 258 11607 11620
+type(
+  string
+)
+ident(
+  def name "records.ml" 259 11675 11680 "records.ml" 260 11750 11788
+)
+"records.ml" 258 11607 11623 "records.ml" 258 11607 11637
+type(
+  (string -> string, unit, string) format -> string -> string
+)
+ident(
+  ext_ref Printf.sprintf
+)
+"records.ml" 258 11607 11638 "records.ml" 258 11607 11649
+type(
+  (string -> string, unit, string) format
+)
+"records.ml" 258 11607 11651 "records.ml" 258 11607 11652
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 258 11607 11653 "records.ml" 258 11607 11655
+type(
+  unit
+)
+"records.ml" 258 11607 11650 "records.ml" 258 11607 11656
+type(
+  API.pIF_t
+)
+"records.ml" 258 11607 11650 "records.ml" 258 11607 11671
+type(
+  string
+)
+"records.ml" 258 11607 11623 "records.ml" 258 11607 11671
+type(
+  string
+)
+"records.ml" 259 11675 11684 "records.ml" 259 11675 11689
+type(
+  float
+)
+ident(
+  def value "records.ml" 260 11750 11755 "records.ml" 260 11750 11788
+)
+"records.ml" 259 11675 11692 "records.ml" 259 11675 11721
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  host:API.ref_host -> data_source:string -> float
+)
+ident(
+  ext_ref Client.( Client ).( Host ).query_data_source
+)
+"records.ml" 259 11675 11722 "records.ml" 259 11675 11725
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 213 8399 8414 "records.ml" 213 8399 8417
+)
+"records.ml" 259 11675 11726 "records.ml" 259 11675 11736
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 213 8399 8418 "records.ml" 213 8399 8428
+)
+"records.ml" 259 11675 11737 "records.ml" 259 11675 11741
+type(
+  API.ref_host
+)
+ident(
+  int_ref host "records.ml" 257 11568 11577 "records.ml" 257 11568 11581
+)
+"records.ml" 259 11675 11742 "records.ml" 259 11675 11746
+type(
+  string
+)
+ident(
+  int_ref name "records.ml" 258 11607 11616 "records.ml" 258 11607 11620
+)
+"records.ml" 259 11675 11692 "records.ml" 259 11675 11746
+type(
+  float
+)
+"records.ml" 260 11750 11755 "records.ml" 260 11750 11770
+type(
+  float -> string
+)
+ident(
+  int_ref string_of_float "records.ml" 34 990 994 "records.ml" 34 990 1009
+)
+"records.ml" 260 11750 11772 "records.ml" 260 11750 11777
+type(
+  float
+)
+ident(
+  int_ref value "records.ml" 259 11675 11684 "records.ml" 259 11675 11689
+)
+"records.ml" 260 11750 11778 "records.ml" 260 11750 11780
+type(
+  float -> float -> float
+)
+ident(
+  ext_ref Pervasives.( /. )
+)
+"records.ml" 260 11750 11781 "records.ml" 260 11750 11787
+type(
+  float
+)
+"records.ml" 260 11750 11771 "records.ml" 260 11750 11788
+type(
+  float
+)
+"records.ml" 260 11750 11755 "records.ml" 260 11750 11788
+type(
+  string
+)
+"records.ml" 259 11675 11680 "records.ml" 260 11750 11788
+type(
+  string
+)
+"records.ml" 258 11607 11612 "records.ml" 260 11750 11788
+type(
+  string
+)
+"records.ml" 257 11568 11573 "records.ml" 260 11750 11788
+type(
+  string
+)
+"records.ml" 261 11789 11797 "records.ml" 261 11789 11798
+type(
+  exn
+)
+"records.ml" 261 11789 11802 "records.ml" 261 11789 11813
+type(
+  string
+)
+"records.ml" 256 11560 11563 "records.ml" 261 11789 11813
+type(
+  string
+)
+"records.ml" 255 11510 11548 "records.ml" 261 11789 11814
+type(
+  unit -> string
+)
+"records.ml" 261 11789 11826 "records.ml" 261 11789 11830
+type(
+  bool
+)
+"records.ml" 261 11789 11831 "records.ml" 261 11789 11833
+type(
+  unit
+)
+"records.ml" 255 11510 11511 "records.ml" 261 11789 11833
+type(
+  field
+)
+"records.ml" 262 11835 11836 "records.ml" 262 11835 11846
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 262 11835 11853 "records.ml" 262 11835 11862
+type(
+  string
+)
+"records.ml" 262 11835 11873 "records.ml" 262 11835 11875
+type(
+  unit
+)
+"records.ml" 262 11835 11879 "records.ml" 262 11835 11886
+type(
+  string -> string option -> string
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 262 11835 11887 "records.ml" 262 11835 11890
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 262 11835 11892 "records.ml" 262 11835 11895
+type(
+  (API.pIF_metrics_t -> string) -> API.pIF_metrics_t option -> string option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 262 11835 11901 "records.ml" 262 11835 11902
+type(
+  API.pIF_metrics_t
+)
+ident(
+  def m "records.ml" 262 11835 11906 "records.ml" 262 11835 11946
+)
+"records.ml" 262 11835 11906 "records.ml" 262 11835 11920
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 262 11835 11921 "records.ml" 262 11835 11922
+type(
+  API.pIF_metrics_t
+)
+ident(
+  int_ref m "records.ml" 262 11835 11901 "records.ml" 262 11835 11902
+)
+"records.ml" 262 11835 11921 "records.ml" 262 11835 11946
+type(
+  bool
+)
+"records.ml" 262 11835 11906 "records.ml" 262 11835 11946
+type(
+  string
+)
+"records.ml" 262 11835 11896 "records.ml" 262 11835 11947
+type(
+  API.pIF_metrics_t -> string
+)
+"records.ml" 262 11835 11949 "records.ml" 262 11835 11951
+type(
+  unit -> API.pIF_metrics_t option
+)
+ident(
+  int_ref xm "records.ml" 219 8747 8753 "records.ml" 219 8747 8755
+)
+"records.ml" 262 11835 11952 "records.ml" 262 11835 11954
+type(
+  unit
+)
+"records.ml" 262 11835 11948 "records.ml" 262 11835 11955
+type(
+  API.pIF_metrics_t option
+)
+"records.ml" 262 11835 11891 "records.ml" 262 11835 11956
+type(
+  string option
+)
+"records.ml" 262 11835 11879 "records.ml" 262 11835 11956
+type(
+  string
+)
+"records.ml" 262 11835 11868 "records.ml" 262 11835 11957
+type(
+  unit -> string
+)
+"records.ml" 262 11835 11958 "records.ml" 262 11835 11960
+type(
+  unit
+)
+"records.ml" 262 11835 11836 "records.ml" 262 11835 11960
+type(
+  field
+)
+"records.ml" 263 11962 11963 "records.ml" 263 11962 11973
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 263 11962 11980 "records.ml" 263 11962 11991
+type(
+  string
+)
+"records.ml" 263 11962 12002 "records.ml" 263 11962 12004
+type(
+  unit
+)
+"records.ml" 263 11962 12008 "records.ml" 263 11962 12015
+type(
+  string -> string option -> string
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 263 11962 12016 "records.ml" 263 11962 12019
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 263 11962 12021 "records.ml" 263 11962 12024
+type(
+  (API.pIF_metrics_t -> string) -> API.pIF_metrics_t option -> string option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 263 11962 12030 "records.ml" 263 11962 12031
+type(
+  API.pIF_metrics_t
+)
+ident(
+  def m "records.ml" 263 11962 12035 "records.ml" 263 11962 12062
+)
+"records.ml" 263 11962 12035 "records.ml" 263 11962 12036
+type(
+  API.pIF_metrics_t
+)
+ident(
+  int_ref m "records.ml" 263 11962 12030 "records.ml" 263 11962 12031
+)
+"records.ml" 263 11962 12035 "records.ml" 263 11962 12062
+type(
+  string
+)
+"records.ml" 263 11962 12025 "records.ml" 263 11962 12063
+type(
+  API.pIF_metrics_t -> string
+)
+"records.ml" 263 11962 12065 "records.ml" 263 11962 12067
+type(
+  unit -> API.pIF_metrics_t option
+)
+ident(
+  int_ref xm "records.ml" 219 8747 8753 "records.ml" 219 8747 8755
+)
+"records.ml" 263 11962 12068 "records.ml" 263 11962 12070
+type(
+  unit
+)
+"records.ml" 263 11962 12064 "records.ml" 263 11962 12071
+type(
+  API.pIF_metrics_t option
+)
+"records.ml" 263 11962 12020 "records.ml" 263 11962 12072
+type(
+  string option
+)
+"records.ml" 263 11962 12008 "records.ml" 263 11962 12072
+type(
+  string
+)
+"records.ml" 263 11962 11997 "records.ml" 263 11962 12073
+type(
+  unit -> string
+)
+"records.ml" 263 11962 12074 "records.ml" 263 11962 12076
+type(
+  unit
+)
+"records.ml" 263 11962 11963 "records.ml" 263 11962 12076
+type(
+  field
+)
+"records.ml" 264 12078 12079 "records.ml" 264 12078 12089
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 264 12078 12096 "records.ml" 264 12078 12109
+type(
+  string
+)
+"records.ml" 264 12078 12120 "records.ml" 264 12078 12122
+type(
+  unit
+)
+"records.ml" 264 12078 12126 "records.ml" 264 12078 12133
+type(
+  string -> string option -> string
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 264 12078 12134 "records.ml" 264 12078 12137
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 264 12078 12139 "records.ml" 264 12078 12142
+type(
+  (API.pIF_metrics_t -> string) -> API.pIF_metrics_t option -> string option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 264 12078 12148 "records.ml" 264 12078 12149
+type(
+  API.pIF_metrics_t
+)
+ident(
+  def m "records.ml" 264 12078 12153 "records.ml" 264 12078 12182
+)
+"records.ml" 264 12078 12153 "records.ml" 264 12078 12154
+type(
+  API.pIF_metrics_t
+)
+ident(
+  int_ref m "records.ml" 264 12078 12148 "records.ml" 264 12078 12149
+)
+"records.ml" 264 12078 12153 "records.ml" 264 12078 12182
+type(
+  string
+)
+"records.ml" 264 12078 12143 "records.ml" 264 12078 12183
+type(
+  API.pIF_metrics_t -> string
+)
+"records.ml" 264 12078 12185 "records.ml" 264 12078 12187
+type(
+  unit -> API.pIF_metrics_t option
+)
+ident(
+  int_ref xm "records.ml" 219 8747 8753 "records.ml" 219 8747 8755
+)
+"records.ml" 264 12078 12188 "records.ml" 264 12078 12190
+type(
+  unit
+)
+"records.ml" 264 12078 12184 "records.ml" 264 12078 12191
+type(
+  API.pIF_metrics_t option
+)
+"records.ml" 264 12078 12138 "records.ml" 264 12078 12192
+type(
+  string option
+)
+"records.ml" 264 12078 12126 "records.ml" 264 12078 12192
+type(
+  string
+)
+"records.ml" 264 12078 12115 "records.ml" 264 12078 12193
+type(
+  unit -> string
+)
+"records.ml" 264 12078 12194 "records.ml" 264 12078 12196
+type(
+  unit
+)
+"records.ml" 264 12078 12079 "records.ml" 264 12078 12196
+type(
+  field
+)
+"records.ml" 265 12198 12199 "records.ml" 265 12198 12209
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 265 12198 12216 "records.ml" 265 12198 12227
+type(
+  string
+)
+"records.ml" 265 12198 12238 "records.ml" 265 12198 12240
+type(
+  unit
+)
+"records.ml" 265 12198 12244 "records.ml" 265 12198 12251
+type(
+  string -> string option -> string
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 265 12198 12252 "records.ml" 265 12198 12255
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 265 12198 12257 "records.ml" 265 12198 12260
+type(
+  (API.pIF_metrics_t -> string) -> API.pIF_metrics_t option -> string option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 265 12198 12266 "records.ml" 265 12198 12267
+type(
+  API.pIF_metrics_t
+)
+ident(
+  def m "records.ml" 265 12198 12271 "records.ml" 265 12198 12298
+)
+"records.ml" 265 12198 12271 "records.ml" 265 12198 12272
+type(
+  API.pIF_metrics_t
+)
+ident(
+  int_ref m "records.ml" 265 12198 12266 "records.ml" 265 12198 12267
+)
+"records.ml" 265 12198 12271 "records.ml" 265 12198 12298
+type(
+  string
+)
+"records.ml" 265 12198 12261 "records.ml" 265 12198 12299
+type(
+  API.pIF_metrics_t -> string
+)
+"records.ml" 265 12198 12301 "records.ml" 265 12198 12303
+type(
+  unit -> API.pIF_metrics_t option
+)
+ident(
+  int_ref xm "records.ml" 219 8747 8753 "records.ml" 219 8747 8755
+)
+"records.ml" 265 12198 12304 "records.ml" 265 12198 12306
+type(
+  unit
+)
+"records.ml" 265 12198 12300 "records.ml" 265 12198 12307
+type(
+  API.pIF_metrics_t option
+)
+"records.ml" 265 12198 12256 "records.ml" 265 12198 12308
+type(
+  string option
+)
+"records.ml" 265 12198 12244 "records.ml" 265 12198 12308
+type(
+  string
+)
+"records.ml" 265 12198 12233 "records.ml" 265 12198 12309
+type(
+  unit -> string
+)
+"records.ml" 265 12198 12310 "records.ml" 265 12198 12312
+type(
+  unit
+)
+"records.ml" 265 12198 12199 "records.ml" 265 12198 12312
+type(
+  field
+)
+"records.ml" 266 12314 12315 "records.ml" 266 12314 12325
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 266 12314 12332 "records.ml" 266 12314 12345
+type(
+  string
+)
+"records.ml" 266 12314 12356 "records.ml" 266 12314 12358
+type(
+  unit
+)
+"records.ml" 266 12314 12362 "records.ml" 266 12314 12369
+type(
+  string -> string option -> string
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 266 12314 12370 "records.ml" 266 12314 12373
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 266 12314 12375 "records.ml" 266 12314 12378
+type(
+  (API.pIF_metrics_t -> string) -> API.pIF_metrics_t option -> string option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 266 12314 12384 "records.ml" 266 12314 12385
+type(
+  API.pIF_metrics_t
+)
+ident(
+  def m "records.ml" 266 12314 12389 "records.ml" 266 12314 12418
+)
+"records.ml" 266 12314 12389 "records.ml" 266 12314 12390
+type(
+  API.pIF_metrics_t
+)
+ident(
+  int_ref m "records.ml" 266 12314 12384 "records.ml" 266 12314 12385
+)
+"records.ml" 266 12314 12389 "records.ml" 266 12314 12418
+type(
+  string
+)
+"records.ml" 266 12314 12379 "records.ml" 266 12314 12419
+type(
+  API.pIF_metrics_t -> string
+)
+"records.ml" 266 12314 12421 "records.ml" 266 12314 12423
+type(
+  unit -> API.pIF_metrics_t option
+)
+ident(
+  int_ref xm "records.ml" 219 8747 8753 "records.ml" 219 8747 8755
+)
+"records.ml" 266 12314 12424 "records.ml" 266 12314 12426
+type(
+  unit
+)
+"records.ml" 266 12314 12420 "records.ml" 266 12314 12427
+type(
+  API.pIF_metrics_t option
+)
+"records.ml" 266 12314 12374 "records.ml" 266 12314 12428
+type(
+  string option
+)
+"records.ml" 266 12314 12362 "records.ml" 266 12314 12428
+type(
+  string
+)
+"records.ml" 266 12314 12351 "records.ml" 266 12314 12429
+type(
+  unit -> string
+)
+"records.ml" 266 12314 12430 "records.ml" 266 12314 12432
+type(
+  unit
+)
+"records.ml" 266 12314 12315 "records.ml" 266 12314 12432
+type(
+  field
+)
+"records.ml" 267 12434 12435 "records.ml" 267 12434 12445
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 267 12434 12452 "records.ml" 267 12434 12459
+type(
+  string
+)
+"records.ml" 267 12434 12470 "records.ml" 267 12434 12472
+type(
+  unit
+)
+"records.ml" 267 12434 12476 "records.ml" 267 12434 12483
+type(
+  string -> string option -> string
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 267 12434 12484 "records.ml" 267 12434 12487
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 267 12434 12489 "records.ml" 267 12434 12492
+type(
+  (API.pIF_metrics_t -> string) -> API.pIF_metrics_t option -> string option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 267 12434 12498 "records.ml" 267 12434 12499
+type(
+  API.pIF_metrics_t
+)
+ident(
+  def m "records.ml" 267 12434 12503 "records.ml" 267 12434 12556
+)
+"records.ml" 267 12434 12504 "records.ml" 267 12434 12519
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 267 12434 12520 "records.ml" 267 12434 12521
+type(
+  API.pIF_metrics_t
+)
+ident(
+  int_ref m "records.ml" 267 12434 12498 "records.ml" 267 12434 12499
+)
+"records.ml" 267 12434 12520 "records.ml" 267 12434 12543
+type(
+  int64
+)
+"records.ml" 267 12434 12503 "records.ml" 267 12434 12544
+type(
+  string
+)
+"records.ml" 267 12434 12545 "records.ml" 267 12434 12546
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"records.ml" 267 12434 12547 "records.ml" 267 12434 12556
+type(
+  string
+)
+"records.ml" 267 12434 12503 "records.ml" 267 12434 12556
+type(
+  string
+)
+"records.ml" 267 12434 12493 "records.ml" 267 12434 12557
+type(
+  API.pIF_metrics_t -> string
+)
+"records.ml" 267 12434 12559 "records.ml" 267 12434 12561
+type(
+  unit -> API.pIF_metrics_t option
+)
+ident(
+  int_ref xm "records.ml" 219 8747 8753 "records.ml" 219 8747 8755
+)
+"records.ml" 267 12434 12562 "records.ml" 267 12434 12564
+type(
+  unit
+)
+"records.ml" 267 12434 12558 "records.ml" 267 12434 12565
+type(
+  API.pIF_metrics_t option
+)
+"records.ml" 267 12434 12488 "records.ml" 267 12434 12566
+type(
+  string option
+)
+"records.ml" 267 12434 12476 "records.ml" 267 12434 12566
+type(
+  string
+)
+"records.ml" 267 12434 12465 "records.ml" 267 12434 12567
+type(
+  unit -> string
+)
+"records.ml" 267 12434 12568 "records.ml" 267 12434 12570
+type(
+  unit
+)
+"records.ml" 267 12434 12435 "records.ml" 267 12434 12570
+type(
+  field
+)
+"records.ml" 268 12572 12573 "records.ml" 268 12572 12583
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 268 12572 12590 "records.ml" 268 12572 12598
+type(
+  string
+)
+"records.ml" 268 12572 12609 "records.ml" 268 12572 12611
+type(
+  unit
+)
+"records.ml" 268 12572 12615 "records.ml" 268 12572 12622
+type(
+  string -> string option -> string
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 268 12572 12623 "records.ml" 268 12572 12626
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 268 12572 12628 "records.ml" 268 12572 12631
+type(
+  (API.pIF_metrics_t -> string) -> API.pIF_metrics_t option -> string option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 268 12572 12637 "records.ml" 268 12572 12638
+type(
+  API.pIF_metrics_t
+)
+ident(
+  def m "records.ml" 268 12572 12642 "records.ml" 268 12572 12693
+)
+"records.ml" 268 12572 12645 "records.ml" 268 12572 12646
+type(
+  API.pIF_metrics_t
+)
+ident(
+  int_ref m "records.ml" 268 12572 12637 "records.ml" 268 12572 12638
+)
+"records.ml" 268 12572 12645 "records.ml" 268 12572 12669
+type(
+  bool
+)
+"records.ml" 268 12572 12675 "records.ml" 268 12572 12681
+type(
+  string
+)
+"records.ml" 268 12572 12687 "records.ml" 268 12572 12693
+type(
+  string
+)
+"records.ml" 268 12572 12642 "records.ml" 268 12572 12693
+type(
+  string
+)
+"records.ml" 268 12572 12632 "records.ml" 268 12572 12694
+type(
+  API.pIF_metrics_t -> string
+)
+"records.ml" 268 12572 12696 "records.ml" 268 12572 12698
+type(
+  unit -> API.pIF_metrics_t option
+)
+ident(
+  int_ref xm "records.ml" 219 8747 8753 "records.ml" 219 8747 8755
+)
+"records.ml" 268 12572 12699 "records.ml" 268 12572 12701
+type(
+  unit
+)
+"records.ml" 268 12572 12695 "records.ml" 268 12572 12702
+type(
+  API.pIF_metrics_t option
+)
+"records.ml" 268 12572 12627 "records.ml" 268 12572 12703
+type(
+  string option
+)
+"records.ml" 268 12572 12615 "records.ml" 268 12572 12703
+type(
+  string
+)
+"records.ml" 268 12572 12604 "records.ml" 268 12572 12704
+type(
+  unit -> string
+)
+"records.ml" 268 12572 12705 "records.ml" 268 12572 12707
+type(
+  unit
+)
+"records.ml" 268 12572 12573 "records.ml" 268 12572 12707
+type(
+  field
+)
+"records.ml" 269 12709 12710 "records.ml" 269 12709 12720
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 269 12709 12727 "records.ml" 269 12709 12744
+type(
+  string
+)
+"records.ml" 269 12709 12755 "records.ml" 269 12709 12757
+type(
+  unit
+)
+"records.ml" 269 12709 12761 "records.ml" 269 12709 12775
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 269 12709 12778 "records.ml" 269 12709 12779
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 269 12709 12780 "records.ml" 269 12709 12782
+type(
+  unit
+)
+"records.ml" 269 12709 12777 "records.ml" 269 12709 12783
+type(
+  API.pIF_t
+)
+"records.ml" 269 12709 12776 "records.ml" 269 12709 12808
+type(
+  bool
+)
+"records.ml" 269 12709 12761 "records.ml" 269 12709 12808
+type(
+  string
+)
+"records.ml" 269 12709 12750 "records.ml" 269 12709 12809
+type(
+  unit -> string
+)
+"records.ml" 270 12810 12823 "records.ml" 270 12810 12838
+type(
+  string
+)
+ident(
+  def disallow_unplug "records.ml" 270 12810 12842 "records.ml" 270 12810 12947
+)
+"records.ml" 270 12810 12842 "records.ml" 270 12810 12872
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_PIF -> value:bool -> unit
+)
+ident(
+  ext_ref Client.( Client ).( PIF ).set_disallow_unplug
+)
+"records.ml" 270 12810 12873 "records.ml" 270 12810 12876
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 213 8399 8414 "records.ml" 213 8399 8417
+)
+"records.ml" 270 12810 12877 "records.ml" 270 12810 12887
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 213 8399 8418 "records.ml" 213 8399 8428
+)
+"records.ml" 270 12810 12888 "records.ml" 270 12810 12891
+type(
+  API.ref_PIF
+)
+ident(
+  int_ref pif "records.ml" 213 8399 8429 "records.ml" 213 8399 8432
+)
+"records.ml" 270 12810 12893 "records.ml" 270 12810 12912
+type(
+  string -> string -> bool
+)
+ident(
+  int_ref safe_bool_of_string "records.ml" 72 2718 2722 "records.ml" 72 2718 2741
+)
+"records.ml" 270 12810 12913 "records.ml" 270 12810 12930
+type(
+  string
+)
+"records.ml" 270 12810 12931 "records.ml" 270 12810 12946
+type(
+  string
+)
+ident(
+  int_ref disallow_unplug "records.ml" 270 12810 12823 "records.ml" 270 12810 12838
+)
+"records.ml" 270 12810 12892 "records.ml" 270 12810 12947
+type(
+  bool
+)
+"records.ml" 270 12810 12842 "records.ml" 270 12810 12947
+type(
+  unit
+)
+"records.ml" 270 12810 12818 "records.ml" 270 12810 12948
+type(
+  string -> unit
+)
+"records.ml" 270 12810 12949 "records.ml" 270 12810 12951
+type(
+  unit
+)
+"records.ml" 269 12709 12710 "records.ml" 270 12810 12951
+type(
+  field
+)
+"records.ml" 271 12953 12954 "records.ml" 271 12953 12964
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 271 12953 12971 "records.ml" 271 12953 12985
+type(
+  string
+)
+"records.ml" 271 12953 12996 "records.ml" 271 12953 12998
+type(
+  unit
+)
+"records.ml" 271 12953 13002 "records.ml" 271 12953 13009
+type(
+  string -> string option -> string
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 271 12953 13010 "records.ml" 271 12953 13013
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 271 12953 13015 "records.ml" 271 12953 13018
+type(
+  (API.pIF_metrics_t -> string) -> API.pIF_metrics_t option -> string option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 271 12953 13024 "records.ml" 271 12953 13025
+type(
+  API.pIF_metrics_t
+)
+ident(
+  def m "records.ml" 271 12953 13029 "records.ml" 271 12953 13059
+)
+"records.ml" 271 12953 13029 "records.ml" 271 12953 13030
+type(
+  API.pIF_metrics_t
+)
+ident(
+  int_ref m "records.ml" 271 12953 13024 "records.ml" 271 12953 13025
+)
+"records.ml" 271 12953 13029 "records.ml" 271 12953 13059
+type(
+  string
+)
+"records.ml" 271 12953 13019 "records.ml" 271 12953 13060
+type(
+  API.pIF_metrics_t -> string
+)
+"records.ml" 271 12953 13062 "records.ml" 271 12953 13064
+type(
+  unit -> API.pIF_metrics_t option
+)
+ident(
+  int_ref xm "records.ml" 219 8747 8753 "records.ml" 219 8747 8755
+)
+"records.ml" 271 12953 13065 "records.ml" 271 12953 13067
+type(
+  unit
+)
+"records.ml" 271 12953 13061 "records.ml" 271 12953 13068
+type(
+  API.pIF_metrics_t option
+)
+"records.ml" 271 12953 13014 "records.ml" 271 12953 13069
+type(
+  string option
+)
+"records.ml" 271 12953 13002 "records.ml" 271 12953 13069
+type(
+  string
+)
+"records.ml" 271 12953 12991 "records.ml" 271 12953 13070
+type(
+  unit -> string
+)
+"records.ml" 271 12953 13071 "records.ml" 271 12953 13073
+type(
+  unit
+)
+"records.ml" 271 12953 12954 "records.ml" 271 12953 13073
+type(
+  field
+)
+"records.ml" 272 13075 13076 "records.ml" 272 13075 13086
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 272 13075 13093 "records.ml" 272 13075 13107
+type(
+  string
+)
+"records.ml" 272 13075 13118 "records.ml" 272 13075 13120
+type(
+  unit
+)
+"records.ml" 272 13075 13124 "records.ml" 272 13075 13150
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 272 13075 13151 "records.ml" 272 13075 13155
+type(
+  string
+)
+"records.ml" 272 13075 13157 "records.ml" 272 13075 13158
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 272 13075 13159 "records.ml" 272 13075 13161
+type(
+  unit
+)
+"records.ml" 272 13075 13156 "records.ml" 272 13075 13162
+type(
+  API.pIF_t
+)
+"records.ml" 272 13075 13156 "records.ml" 272 13075 13183
+type(
+  API.string_to_string_map
+)
+"records.ml" 272 13075 13124 "records.ml" 272 13075 13183
+type(
+  string
+)
+"records.ml" 272 13075 13113 "records.ml" 272 13075 13184
+type(
+  unit -> string
+)
+"records.ml" 273 13186 13206 "records.ml" 273 13186 13207
+type(
+  string
+)
+ident(
+  def k "records.ml" 273 13186 13208 "records.ml" 273 13186 13266
+)
+"records.ml" 273 13186 13208 "records.ml" 273 13186 13209
+type(
+  string
+)
+ident(
+  def v "records.ml" 273 13186 13213 "records.ml" 273 13186 13266
+)
+"records.ml" 273 13186 13213 "records.ml" 273 13186 13243
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_PIF -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( PIF ).add_to_other_config
+)
+"records.ml" 273 13186 13244 "records.ml" 273 13186 13247
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 213 8399 8414 "records.ml" 213 8399 8417
+)
+"records.ml" 273 13186 13248 "records.ml" 273 13186 13258
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 213 8399 8418 "records.ml" 213 8399 8428
+)
+"records.ml" 273 13186 13259 "records.ml" 273 13186 13262
+type(
+  API.ref_PIF
+)
+ident(
+  int_ref pif "records.ml" 213 8399 8429 "records.ml" 213 8399 8432
+)
+"records.ml" 273 13186 13263 "records.ml" 273 13186 13264
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 273 13186 13206 "records.ml" 273 13186 13207
+)
+"records.ml" 273 13186 13265 "records.ml" 273 13186 13266
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 273 13186 13208 "records.ml" 273 13186 13209
+)
+"records.ml" 273 13186 13213 "records.ml" 273 13186 13266
+type(
+  unit
+)
+"records.ml" 273 13186 13201 "records.ml" 273 13186 13267
+type(
+  string -> string -> unit
+)
+"records.ml" 274 13268 13293 "records.ml" 274 13268 13294
+type(
+  string
+)
+ident(
+  def k "records.ml" 274 13268 13298 "records.ml" 274 13268 13354
+)
+"records.ml" 274 13268 13298 "records.ml" 274 13268 13333
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_PIF -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( PIF ).remove_from_other_config
+)
+"records.ml" 274 13268 13334 "records.ml" 274 13268 13337
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 213 8399 8414 "records.ml" 213 8399 8417
+)
+"records.ml" 274 13268 13338 "records.ml" 274 13268 13348
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 213 8399 8418 "records.ml" 213 8399 8428
+)
+"records.ml" 274 13268 13349 "records.ml" 274 13268 13352
+type(
+  API.ref_PIF
+)
+ident(
+  int_ref pif "records.ml" 213 8399 8429 "records.ml" 213 8399 8432
+)
+"records.ml" 274 13268 13353 "records.ml" 274 13268 13354
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 274 13268 13293 "records.ml" 274 13268 13294
+)
+"records.ml" 274 13268 13298 "records.ml" 274 13268 13354
+type(
+  unit
+)
+"records.ml" 274 13268 13288 "records.ml" 274 13268 13355
+type(
+  string -> unit
+)
+"records.ml" 275 13357 13374 "records.ml" 275 13357 13376
+type(
+  unit
+)
+"records.ml" 275 13357 13381 "records.ml" 275 13357 13382
+type(
+  unit -> API.pIF_t
+)
+ident(
+  int_ref x "records.ml" 217 8579 8585 "records.ml" 217 8579 8586
+)
+"records.ml" 275 13357 13383 "records.ml" 275 13357 13385
+type(
+  unit
+)
+"records.ml" 275 13357 13380 "records.ml" 275 13357 13386
+type(
+  API.pIF_t
+)
+"records.ml" 275 13357 13380 "records.ml" 275 13357 13407
+type(
+  API.string_to_string_map
+)
+"records.ml" 275 13357 13369 "records.ml" 275 13357 13408
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 275 13357 13409 "records.ml" 275 13357 13411
+type(
+  unit
+)
+"records.ml" 272 13075 13076 "records.ml" 275 13357 13411
+type(
+  field
+)
+"records.ml" 225 8950 8956 "records.ml" 276 13413 13420
+type(
+  field list
+)
+"records.ml" 220 8780 8782 "records.ml" 276 13413 13422
+type(
+  ([ `PIF ], API.pIF_t) record
+)
+"records.ml" 219 8747 8749 "records.ml" 276 13413 13422
+type(
+  ([ `PIF ], API.pIF_t) record
+)
+"records.ml" 218 8610 8612 "records.ml" 276 13413 13422
+type(
+  ([ `PIF ], API.pIF_t) record
+)
+"records.ml" 217 8579 8581 "records.ml" 276 13413 13422
+type(
+  ([ `PIF ], API.pIF_t) record
+)
+"records.ml" 216 8544 8546 "records.ml" 276 13413 13422
+type(
+  ([ `PIF ], API.pIF_t) record
+)
+"records.ml" 215 8459 8461 "records.ml" 276 13413 13422
+type(
+  ([ `PIF ], API.pIF_t) record
+)
+"records.ml" 214 8435 8437 "records.ml" 276 13413 13422
+type(
+  ([ `PIF ], API.pIF_t) record
+)
+"records.ml" 278 13424 13428 "records.ml" 278 13424 13439
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_task -> ([ `task ], API.task_t) record
+)
+ident(
+  def task_record "records.ml" 305 15290 15290 --
+)
+"records.ml" 278 13424 13440 "records.ml" 278 13424 13443
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 278 13424 13444 "records.ml" 302 15281 15287
+)
+"records.ml" 278 13424 13444 "records.ml" 278 13424 13454
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 278 13424 13455 "records.ml" 302 15281 15287
+)
+"records.ml" 278 13424 13455 "records.ml" 278 13424 13459
+type(
+  API.ref_task
+)
+ident(
+  def task "records.ml" 279 13462 13464 "records.ml" 302 15281 15287
+)
+"records.ml" 279 13462 13468 "records.ml" 279 13462 13472
+type(
+  API.ref_task ref
+)
+"records.ml" 279 13462 13475 "records.ml" 279 13462 13478
+type(
+  API.ref_task -> API.ref_task ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 279 13462 13479 "records.ml" 279 13462 13483
+type(
+  API.ref_task
+)
+ident(
+  int_ref task "records.ml" 278 13424 13455 "records.ml" 278 13424 13459
+)
+"records.ml" 279 13462 13475 "records.ml" 279 13462 13483
+type(
+  API.ref_task ref
+)
+"records.ml" 280 13487 13493 "records.ml" 280 13487 13505
+type(
+  API.task_t lzy
+)
+"records.ml" 280 13487 13519 "records.ml" 280 13487 13521
+type(
+  unit
+)
+"records.ml" 280 13487 13525 "records.ml" 280 13487 13547
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_task -> API.task_t
+)
+ident(
+  ext_ref Client.( Client ).( Task ).get_record
+)
+"records.ml" 280 13487 13548 "records.ml" 280 13487 13551
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 278 13424 13440 "records.ml" 278 13424 13443
+)
+"records.ml" 280 13487 13552 "records.ml" 280 13487 13562
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 278 13424 13444 "records.ml" 278 13424 13454
+)
+"records.ml" 280 13487 13563 "records.ml" 280 13487 13564
+type(
+  API.ref_task ref -> API.ref_task
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 280 13487 13564 "records.ml" 280 13487 13568
+type(
+  API.ref_task ref
+)
+ident(
+  int_ref _ref "records.ml" 279 13462 13468 "records.ml" 279 13462 13472
+)
+"records.ml" 280 13487 13563 "records.ml" 280 13487 13568
+type(
+  API.ref_task
+)
+"records.ml" 280 13487 13525 "records.ml" 280 13487 13568
+type(
+  API.task_t
+)
+"records.ml" 280 13487 13514 "records.ml" 280 13487 13569
+type(
+  unit -> API.task_t
+)
+"records.ml" 280 13487 13508 "records.ml" 280 13487 13569
+type(
+  API.task_t lzy
+)
+"records.ml" 281 13573 13579 "records.ml" 281 13573 13585
+type(
+  API.task_t lzy ref
+)
+"records.ml" 281 13573 13588 "records.ml" 281 13573 13591
+type(
+  API.task_t lzy -> API.task_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 281 13573 13592 "records.ml" 281 13573 13604
+type(
+  API.task_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 280 13487 13493 "records.ml" 280 13487 13505
+)
+"records.ml" 281 13573 13588 "records.ml" 281 13573 13604
+type(
+  API.task_t lzy ref
+)
+"records.ml" 282 13608 13614 "records.ml" 282 13608 13615
+type(
+  unit -> API.task_t
+)
+"records.ml" 282 13608 13616 "records.ml" 282 13608 13618
+type(
+  unit
+)
+"records.ml" 282 13608 13621 "records.ml" 282 13608 13628
+type(
+  API.task_t lzy ref -> API.task_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 282 13608 13629 "records.ml" 282 13608 13635
+type(
+  API.task_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 281 13573 13579 "records.ml" 281 13573 13585
+)
+"records.ml" 282 13608 13621 "records.ml" 282 13608 13635
+type(
+  API.task_t
+)
+"records.ml" 283 13639 13655 "records.ml" 283 13639 13656
+type(
+  API.ref_task
+)
+ident(
+  def r "records.ml" 283 13639 13660 "records.ml" 283 13639 13693
+)
+"records.ml" 283 13639 13660 "records.ml" 283 13639 13664
+type(
+  API.ref_task ref
+)
+ident(
+  int_ref _ref "records.ml" 279 13462 13468 "records.ml" 279 13462 13472
+)
+"records.ml" 283 13639 13665 "records.ml" 283 13639 13667
+type(
+  API.ref_task ref -> API.ref_task -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 283 13639 13668 "records.ml" 283 13639 13669
+type(
+  API.ref_task
+)
+ident(
+  int_ref r "records.ml" 283 13639 13655 "records.ml" 283 13639 13656
+)
+"records.ml" 283 13639 13660 "records.ml" 283 13639 13669
+type(
+  unit
+)
+"records.ml" 283 13639 13671 "records.ml" 283 13639 13677
+type(
+  API.task_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 281 13573 13579 "records.ml" 281 13573 13585
+)
+"records.ml" 283 13639 13678 "records.ml" 283 13639 13680
+type(
+  API.task_t lzy ref -> API.task_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 283 13639 13681 "records.ml" 283 13639 13693
+type(
+  API.task_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 280 13487 13493 "records.ml" 280 13487 13505
+)
+"records.ml" 283 13639 13671 "records.ml" 283 13639 13693
+type(
+  unit
+)
+"records.ml" 283 13639 13660 "records.ml" 283 13639 13693
+type(
+  unit
+)
+"records.ml" 283 13639 13650 "records.ml" 283 13639 13694
+type(
+  API.ref_task -> unit
+)
+"records.ml" 284 13696 13707 "records.ml" 284 13696 13708
+type(
+  unit -> API.task_t
+)
+ident(
+  int_ref x "records.ml" 282 13608 13614 "records.ml" 282 13608 13615
+)
+"records.ml" 285 13710 13730 "records.ml" 285 13710 13731
+type(
+  API.ref_task
+)
+ident(
+  def a "records.ml" 285 13710 13738 "records.ml" 285 13710 13764
+)
+"records.ml" 285 13710 13732 "records.ml" 285 13710 13733
+type(
+  API.task_t
+)
+ident(
+  def b "records.ml" 285 13710 13738 "records.ml" 285 13710 13764
+)
+"records.ml" 285 13710 13729 "records.ml" 285 13710 13734
+type(
+  API.ref_task * API.task_t
+)
+"records.ml" 285 13710 13738 "records.ml" 285 13710 13742
+type(
+  API.ref_task ref
+)
+ident(
+  int_ref _ref "records.ml" 279 13462 13468 "records.ml" 279 13462 13472
+)
+"records.ml" 285 13710 13743 "records.ml" 285 13710 13745
+type(
+  API.ref_task ref -> API.ref_task -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 285 13710 13746 "records.ml" 285 13710 13747
+type(
+  API.ref_task
+)
+ident(
+  int_ref a "records.ml" 285 13710 13730 "records.ml" 285 13710 13731
+)
+"records.ml" 285 13710 13738 "records.ml" 285 13710 13747
+type(
+  unit
+)
+"records.ml" 285 13710 13749 "records.ml" 285 13710 13755
+type(
+  API.task_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 281 13573 13579 "records.ml" 281 13573 13585
+)
+"records.ml" 285 13710 13756 "records.ml" 285 13710 13758
+type(
+  API.task_t lzy ref -> API.task_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 285 13710 13763 "records.ml" 285 13710 13764
+type(
+  API.task_t
+)
+ident(
+  int_ref b "records.ml" 285 13710 13732 "records.ml" 285 13710 13733
+)
+"records.ml" 285 13710 13759 "records.ml" 285 13710 13764
+type(
+  API.task_t lzy
+)
+"records.ml" 285 13710 13749 "records.ml" 285 13710 13764
+type(
+  unit
+)
+"records.ml" 285 13710 13738 "records.ml" 285 13710 13764
+type(
+  unit
+)
+"records.ml" 285 13710 13724 "records.ml" 285 13710 13765
+type(
+  API.ref_task * API.task_t -> unit
+)
+"records.ml" 286 13767 13783 "records.ml" 286 13767 13785
+type(
+  unit
+)
+"records.ml" 286 13767 13789 "records.ml" 286 13767 13790
+type(
+  API.ref_task ref -> API.ref_task
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 286 13767 13790 "records.ml" 286 13767 13794
+type(
+  API.ref_task ref
+)
+ident(
+  int_ref _ref "records.ml" 279 13462 13468 "records.ml" 279 13462 13472
+)
+"records.ml" 286 13767 13789 "records.ml" 286 13767 13794
+type(
+  API.ref_task
+)
+"records.ml" 286 13767 13778 "records.ml" 286 13767 13795
+type(
+  unit -> API.ref_task
+)
+"records.ml" 288 13812 13818 "records.ml" 288 13812 13828
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 288 13812 13835 "records.ml" 288 13812 13841
+type(
+  string
+)
+"records.ml" 288 13812 13860 "records.ml" 288 13812 13862
+type(
+  unit
+)
+"records.ml" 288 13812 13867 "records.ml" 288 13812 13868
+type(
+  unit -> API.task_t
+)
+ident(
+  int_ref x "records.ml" 282 13608 13614 "records.ml" 282 13608 13615
+)
+"records.ml" 288 13812 13869 "records.ml" 288 13812 13871
+type(
+  unit
+)
+"records.ml" 288 13812 13866 "records.ml" 288 13812 13872
+type(
+  API.task_t
+)
+"records.ml" 288 13812 13866 "records.ml" 288 13812 13886
+type(
+  string
+)
+"records.ml" 288 13812 13855 "records.ml" 288 13812 13887
+type(
+  unit -> string
+)
+"records.ml" 288 13812 13888 "records.ml" 288 13812 13890
+type(
+  unit
+)
+"records.ml" 288 13812 13818 "records.ml" 288 13812 13890
+type(
+  field
+)
+"records.ml" 289 13892 13898 "records.ml" 289 13892 13908
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 289 13892 13915 "records.ml" 289 13892 13927
+type(
+  string
+)
+"records.ml" 289 13892 13940 "records.ml" 289 13892 13942
+type(
+  unit
+)
+"records.ml" 289 13892 13947 "records.ml" 289 13892 13948
+type(
+  unit -> API.task_t
+)
+ident(
+  int_ref x "records.ml" 282 13608 13614 "records.ml" 282 13608 13615
+)
+"records.ml" 289 13892 13949 "records.ml" 289 13892 13951
+type(
+  unit
+)
+"records.ml" 289 13892 13946 "records.ml" 289 13892 13952
+type(
+  API.task_t
+)
+"records.ml" 289 13892 13946 "records.ml" 289 13892 13972
+type(
+  string
+)
+"records.ml" 289 13892 13935 "records.ml" 289 13892 13973
+type(
+  unit -> string
+)
+"records.ml" 289 13892 13974 "records.ml" 289 13892 13976
+type(
+  unit
+)
+"records.ml" 289 13892 13898 "records.ml" 289 13892 13976
+type(
+  field
+)
+"records.ml" 290 13978 13984 "records.ml" 290 13978 13994
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 290 13978 14001 "records.ml" 290 13978 14019
+type(
+  string
+)
+"records.ml" 290 13978 14031 "records.ml" 290 13978 14033
+type(
+  unit
+)
+"records.ml" 290 13978 14038 "records.ml" 290 13978 14039
+type(
+  unit -> API.task_t
+)
+ident(
+  int_ref x "records.ml" 282 13608 13614 "records.ml" 282 13608 13615
+)
+"records.ml" 290 13978 14040 "records.ml" 290 13978 14042
+type(
+  unit
+)
+"records.ml" 290 13978 14037 "records.ml" 290 13978 14043
+type(
+  API.task_t
+)
+"records.ml" 290 13978 14037 "records.ml" 290 13978 14069
+type(
+  string
+)
+"records.ml" 290 13978 14026 "records.ml" 290 13978 14070
+type(
+  unit -> string
+)
+"records.ml" 290 13978 14071 "records.ml" 290 13978 14073
+type(
+  unit
+)
+"records.ml" 290 13978 13984 "records.ml" 290 13978 14073
+type(
+  field
+)
+"records.ml" 291 14075 14081 "records.ml" 291 14075 14091
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 291 14075 14098 "records.ml" 291 14075 14110
+type(
+  string
+)
+"records.ml" 291 14075 14121 "records.ml" 291 14075 14123
+type(
+  unit
+)
+"records.ml" 291 14075 14127 "records.ml" 291 14075 14144
+type(
+  API.ref_task -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 291 14075 14146 "records.ml" 291 14075 14147
+type(
+  unit -> API.task_t
+)
+ident(
+  int_ref x "records.ml" 282 13608 13614 "records.ml" 282 13608 13615
+)
+"records.ml" 291 14075 14148 "records.ml" 291 14075 14150
+type(
+  unit
+)
+"records.ml" 291 14075 14145 "records.ml" 291 14075 14151
+type(
+  API.task_t
+)
+"records.ml" 291 14075 14145 "records.ml" 291 14075 14171
+type(
+  API.ref_task
+)
+"records.ml" 291 14075 14127 "records.ml" 291 14075 14171
+type(
+  string
+)
+"records.ml" 291 14075 14116 "records.ml" 291 14075 14172
+type(
+  unit -> string
+)
+"records.ml" 291 14075 14173 "records.ml" 291 14075 14175
+type(
+  unit
+)
+"records.ml" 291 14075 14081 "records.ml" 291 14075 14175
+type(
+  field
+)
+"records.ml" 292 14177 14183 "records.ml" 292 14177 14193
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 292 14177 14200 "records.ml" 292 14177 14210
+type(
+  string
+)
+"records.ml" 292 14177 14221 "records.ml" 292 14177 14223
+type(
+  unit
+)
+"records.ml" 292 14177 14227 "records.ml" 292 14177 14240
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 292 14177 14241 "records.ml" 292 14177 14244
+type(
+  string
+)
+"records.ml" 292 14177 14246 "records.ml" 292 14177 14254
+type(
+  ([ `task ] Ref.t -> string) -> API.ref_task_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 292 14177 14255 "records.ml" 292 14177 14272
+type(
+  [ `task ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 292 14177 14274 "records.ml" 292 14177 14275
+type(
+  unit -> API.task_t
+)
+ident(
+  int_ref x "records.ml" 282 13608 13614 "records.ml" 282 13608 13615
+)
+"records.ml" 292 14177 14276 "records.ml" 292 14177 14278
+type(
+  unit
+)
+"records.ml" 292 14177 14273 "records.ml" 292 14177 14279
+type(
+  API.task_t
+)
+"records.ml" 292 14177 14273 "records.ml" 292 14177 14297
+type(
+  API.ref_task_set
+)
+"records.ml" 292 14177 14245 "records.ml" 292 14177 14298
+type(
+  string list
+)
+"records.ml" 292 14177 14227 "records.ml" 292 14177 14298
+type(
+  string
+)
+"records.ml" 292 14177 14216 "records.ml" 292 14177 14299
+type(
+  unit -> string
+)
+"records.ml" 292 14177 14300 "records.ml" 292 14177 14302
+type(
+  unit
+)
+"records.ml" 292 14177 14183 "records.ml" 292 14177 14302
+type(
+  field
+)
+"records.ml" 293 14304 14310 "records.ml" 293 14304 14320
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 293 14304 14327 "records.ml" 293 14304 14340
+type(
+  string
+)
+"records.ml" 293 14304 14352 "records.ml" 293 14304 14354
+type(
+  unit
+)
+"records.ml" 293 14304 14358 "records.ml" 293 14304 14375
+type(
+  API.ref_host -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 293 14304 14377 "records.ml" 293 14304 14378
+type(
+  unit -> API.task_t
+)
+ident(
+  int_ref x "records.ml" 282 13608 13614 "records.ml" 282 13608 13615
+)
+"records.ml" 293 14304 14379 "records.ml" 293 14304 14381
+type(
+  unit
+)
+"records.ml" 293 14304 14376 "records.ml" 293 14304 14382
+type(
+  API.task_t
+)
+"records.ml" 293 14304 14376 "records.ml" 293 14304 14403
+type(
+  API.ref_host
+)
+"records.ml" 293 14304 14358 "records.ml" 293 14304 14403
+type(
+  string
+)
+"records.ml" 293 14304 14347 "records.ml" 293 14304 14404
+type(
+  unit -> string
+)
+"records.ml" 293 14304 14405 "records.ml" 293 14304 14407
+type(
+  unit
+)
+"records.ml" 293 14304 14310 "records.ml" 293 14304 14407
+type(
+  field
+)
+"records.ml" 294 14409 14415 "records.ml" 294 14409 14425
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 294 14409 14432 "records.ml" 294 14409 14440
+type(
+  string
+)
+"records.ml" 294 14409 14457 "records.ml" 294 14409 14459
+type(
+  unit
+)
+"records.ml" 294 14409 14464 "records.ml" 294 14409 14502
+type(
+  API.task_status_type -> string
+)
+ident(
+  ext_ref Record_util.task_status_type_to_string
+)
+"records.ml" 294 14409 14504 "records.ml" 294 14409 14505
+type(
+  unit -> API.task_t
+)
+ident(
+  int_ref x "records.ml" 282 13608 13614 "records.ml" 282 13608 13615
+)
+"records.ml" 294 14409 14506 "records.ml" 294 14409 14508
+type(
+  unit
+)
+"records.ml" 294 14409 14503 "records.ml" 294 14409 14509
+type(
+  API.task_t
+)
+"records.ml" 294 14409 14503 "records.ml" 294 14409 14525
+type(
+  API.task_status_type
+)
+"records.ml" 294 14409 14463 "records.ml" 294 14409 14526
+type(
+  string
+)
+"records.ml" 294 14409 14452 "records.ml" 294 14409 14527
+type(
+  unit -> string
+)
+"records.ml" 294 14409 14528 "records.ml" 294 14409 14530
+type(
+  unit
+)
+"records.ml" 294 14409 14415 "records.ml" 294 14409 14530
+type(
+  field
+)
+"records.ml" 295 14532 14538 "records.ml" 295 14532 14548
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 295 14532 14555 "records.ml" 295 14532 14565
+type(
+  string
+)
+"records.ml" 295 14532 14580 "records.ml" 295 14532 14582
+type(
+  unit
+)
+"records.ml" 295 14532 14587 "records.ml" 295 14532 14602
+type(
+  float -> string
+)
+ident(
+  int_ref string_of_float "records.ml" 34 990 994 "records.ml" 34 990 1009
+)
+"records.ml" 295 14532 14604 "records.ml" 295 14532 14605
+type(
+  unit -> API.task_t
+)
+ident(
+  int_ref x "records.ml" 282 13608 13614 "records.ml" 282 13608 13615
+)
+"records.ml" 295 14532 14606 "records.ml" 295 14532 14608
+type(
+  unit
+)
+"records.ml" 295 14532 14603 "records.ml" 295 14532 14609
+type(
+  API.task_t
+)
+"records.ml" 295 14532 14603 "records.ml" 295 14532 14627
+type(
+  float
+)
+"records.ml" 295 14532 14586 "records.ml" 295 14532 14628
+type(
+  string
+)
+"records.ml" 295 14532 14575 "records.ml" 295 14532 14629
+type(
+  unit -> string
+)
+"records.ml" 295 14532 14630 "records.ml" 295 14532 14632
+type(
+  unit
+)
+"records.ml" 295 14532 14538 "records.ml" 295 14532 14632
+type(
+  field
+)
+"records.ml" 296 14634 14640 "records.ml" 296 14634 14650
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 296 14634 14657 "records.ml" 296 14634 14663
+type(
+  string
+)
+"records.ml" 296 14634 14682 "records.ml" 296 14634 14684
+type(
+  unit
+)
+"records.ml" 296 14634 14689 "records.ml" 296 14634 14690
+type(
+  unit -> API.task_t
+)
+ident(
+  int_ref x "records.ml" 282 13608 13614 "records.ml" 282 13608 13615
+)
+"records.ml" 296 14634 14691 "records.ml" 296 14634 14693
+type(
+  unit
+)
+"records.ml" 296 14634 14688 "records.ml" 296 14634 14694
+type(
+  API.task_t
+)
+"records.ml" 296 14634 14688 "records.ml" 296 14634 14708
+type(
+  string
+)
+"records.ml" 296 14634 14677 "records.ml" 296 14634 14709
+type(
+  unit -> string
+)
+"records.ml" 296 14634 14710 "records.ml" 296 14634 14712
+type(
+  unit
+)
+"records.ml" 296 14634 14640 "records.ml" 296 14634 14712
+type(
+  field
+)
+"records.ml" 297 14714 14720 "records.ml" 297 14714 14730
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 297 14714 14737 "records.ml" 297 14714 14745
+type(
+  string
+)
+"records.ml" 297 14714 14764 "records.ml" 297 14714 14766
+type(
+  unit
+)
+"records.ml" 297 14714 14771 "records.ml" 297 14714 14772
+type(
+  unit -> API.task_t
+)
+ident(
+  int_ref x "records.ml" 282 13608 13614 "records.ml" 282 13608 13615
+)
+"records.ml" 297 14714 14773 "records.ml" 297 14714 14775
+type(
+  unit
+)
+"records.ml" 297 14714 14770 "records.ml" 297 14714 14776
+type(
+  API.task_t
+)
+"records.ml" 297 14714 14770 "records.ml" 297 14714 14792
+type(
+  string
+)
+"records.ml" 297 14714 14759 "records.ml" 297 14714 14793
+type(
+  unit -> string
+)
+"records.ml" 297 14714 14794 "records.ml" 297 14714 14796
+type(
+  unit
+)
+"records.ml" 297 14714 14720 "records.ml" 297 14714 14796
+type(
+  field
+)
+"records.ml" 298 14798 14804 "records.ml" 298 14798 14814
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 298 14798 14821 "records.ml" 298 14798 14830
+type(
+  string
+)
+"records.ml" 298 14798 14846 "records.ml" 298 14798 14848
+type(
+  unit
+)
+"records.ml" 298 14798 14852 "records.ml" 298 14798 14866
+type(
+  API.datetime -> string
+)
+ident(
+  ext_ref Date.to_string
+)
+"records.ml" 298 14798 14868 "records.ml" 298 14798 14869
+type(
+  unit -> API.task_t
+)
+ident(
+  int_ref x "records.ml" 282 13608 13614 "records.ml" 282 13608 13615
+)
+"records.ml" 298 14798 14870 "records.ml" 298 14798 14872
+type(
+  unit
+)
+"records.ml" 298 14798 14867 "records.ml" 298 14798 14873
+type(
+  API.task_t
+)
+"records.ml" 298 14798 14867 "records.ml" 298 14798 14890
+type(
+  API.datetime
+)
+"records.ml" 298 14798 14852 "records.ml" 298 14798 14890
+type(
+  string
+)
+"records.ml" 298 14798 14841 "records.ml" 298 14798 14891
+type(
+  unit -> string
+)
+"records.ml" 298 14798 14892 "records.ml" 298 14798 14894
+type(
+  unit
+)
+"records.ml" 298 14798 14804 "records.ml" 298 14798 14894
+type(
+  field
+)
+"records.ml" 299 14896 14902 "records.ml" 299 14896 14912
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 299 14896 14919 "records.ml" 299 14896 14929
+type(
+  string
+)
+"records.ml" 299 14896 14943 "records.ml" 299 14896 14945
+type(
+  unit
+)
+"records.ml" 299 14896 14949 "records.ml" 299 14896 14963
+type(
+  API.datetime -> string
+)
+ident(
+  ext_ref Date.to_string
+)
+"records.ml" 299 14896 14965 "records.ml" 299 14896 14966
+type(
+  unit -> API.task_t
+)
+ident(
+  int_ref x "records.ml" 282 13608 13614 "records.ml" 282 13608 13615
+)
+"records.ml" 299 14896 14967 "records.ml" 299 14896 14969
+type(
+  unit
+)
+"records.ml" 299 14896 14964 "records.ml" 299 14896 14970
+type(
+  API.task_t
+)
+"records.ml" 299 14896 14964 "records.ml" 299 14896 14988
+type(
+  API.datetime
+)
+"records.ml" 299 14896 14949 "records.ml" 299 14896 14988
+type(
+  string
+)
+"records.ml" 299 14896 14938 "records.ml" 299 14896 14989
+type(
+  unit -> string
+)
+"records.ml" 299 14896 14990 "records.ml" 299 14896 14992
+type(
+  unit
+)
+"records.ml" 299 14896 14902 "records.ml" 299 14896 14992
+type(
+  field
+)
+"records.ml" 300 14994 15000 "records.ml" 300 14994 15010
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 300 14994 15017 "records.ml" 300 14994 15029
+type(
+  string
+)
+"records.ml" 300 14994 15048 "records.ml" 300 14994 15050
+type(
+  unit
+)
+"records.ml" 300 14994 15054 "records.ml" 300 14994 15067
+type(
+  string -> API.string_set -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 300 14994 15068 "records.ml" 300 14994 15072
+type(
+  string
+)
+"records.ml" 300 14994 15074 "records.ml" 300 14994 15075
+type(
+  unit -> API.task_t
+)
+ident(
+  int_ref x "records.ml" 282 13608 13614 "records.ml" 282 13608 13615
+)
+"records.ml" 300 14994 15076 "records.ml" 300 14994 15078
+type(
+  unit
+)
+"records.ml" 300 14994 15073 "records.ml" 300 14994 15079
+type(
+  API.task_t
+)
+"records.ml" 300 14994 15073 "records.ml" 300 14994 15099
+type(
+  API.string_set
+)
+"records.ml" 300 14994 15054 "records.ml" 300 14994 15099
+type(
+  string
+)
+"records.ml" 300 14994 15043 "records.ml" 300 14994 15100
+type(
+  unit -> string
+)
+"records.ml" 300 14994 15101 "records.ml" 300 14994 15103
+type(
+  unit
+)
+"records.ml" 300 14994 15000 "records.ml" 300 14994 15103
+type(
+  field
+)
+"records.ml" 301 15105 15111 "records.ml" 301 15105 15121
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 301 15105 15128 "records.ml" 301 15105 15148
+type(
+  string
+)
+"records.ml" 301 15105 15159 "records.ml" 301 15105 15161
+type(
+  unit
+)
+"records.ml" 301 15105 15165 "records.ml" 301 15105 15178
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 301 15105 15179 "records.ml" 301 15105 15183
+type(
+  string
+)
+"records.ml" 301 15105 15185 "records.ml" 301 15105 15193
+type(
+  ([ `cancel ] -> string) -> API.task_allowed_operations_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 301 15105 15194 "records.ml" 301 15105 15239
+type(
+  [ `cancel ] -> string
+)
+ident(
+  ext_ref Record_util.task_allowed_operations_to_string
+)
+"records.ml" 301 15105 15241 "records.ml" 301 15105 15242
+type(
+  unit -> API.task_t
+)
+ident(
+  int_ref x "records.ml" 282 13608 13614 "records.ml" 282 13608 13615
+)
+"records.ml" 301 15105 15243 "records.ml" 301 15105 15245
+type(
+  unit
+)
+"records.ml" 301 15105 15240 "records.ml" 301 15105 15246
+type(
+  API.task_t
+)
+"records.ml" 301 15105 15240 "records.ml" 301 15105 15274
+type(
+  API.task_allowed_operations_set
+)
+"records.ml" 301 15105 15184 "records.ml" 301 15105 15275
+type(
+  string list
+)
+"records.ml" 301 15105 15165 "records.ml" 301 15105 15275
+type(
+  string
+)
+"records.ml" 301 15105 15154 "records.ml" 301 15105 15276
+type(
+  unit -> string
+)
+"records.ml" 301 15105 15277 "records.ml" 301 15105 15279
+type(
+  unit
+)
+"records.ml" 301 15105 15111 "records.ml" 301 15105 15279
+type(
+  field
+)
+"records.ml" 287 13797 13810 "records.ml" 302 15281 15286
+type(
+  field list
+)
+"records.ml" 283 13639 13641 "records.ml" 302 15281 15287
+type(
+  ([ `task ], API.task_t) record
+)
+"records.ml" 282 13608 13610 "records.ml" 302 15281 15287
+type(
+  ([ `task ], API.task_t) record
+)
+"records.ml" 281 13573 13575 "records.ml" 302 15281 15287
+type(
+  ([ `task ], API.task_t) record
+)
+"records.ml" 280 13487 13489 "records.ml" 302 15281 15287
+type(
+  ([ `task ], API.task_t) record
+)
+"records.ml" 279 13462 13464 "records.ml" 302 15281 15287
+type(
+  ([ `task ], API.task_t) record
+)
+"records.ml" 305 15290 15294 "records.ml" 305 15290 15304
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_VIF -> ([ `VIF ], API.vIF_t) record
+)
+ident(
+  def vif_record "records.ml" 358 18821 18821 --
+)
+"records.ml" 305 15290 15305 "records.ml" 305 15290 15308
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 305 15290 15309 "records.ml" 355 18810 18818
+)
+"records.ml" 305 15290 15309 "records.ml" 305 15290 15319
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 305 15290 15320 "records.ml" 355 18810 18818
+)
+"records.ml" 305 15290 15320 "records.ml" 305 15290 15323
+type(
+  API.ref_VIF
+)
+ident(
+  def vif "records.ml" 306 15327 15329 "records.ml" 355 18810 18818
+)
+"records.ml" 306 15327 15333 "records.ml" 306 15327 15337
+type(
+  API.ref_VIF ref
+)
+"records.ml" 306 15327 15340 "records.ml" 306 15327 15343
+type(
+  API.ref_VIF -> API.ref_VIF ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 306 15327 15344 "records.ml" 306 15327 15347
+type(
+  API.ref_VIF
+)
+ident(
+  int_ref vif "records.ml" 305 15290 15320 "records.ml" 305 15290 15323
+)
+"records.ml" 306 15327 15340 "records.ml" 306 15327 15347
+type(
+  API.ref_VIF ref
+)
+"records.ml" 307 15351 15357 "records.ml" 307 15351 15369
+type(
+  API.vIF_t lzy
+)
+"records.ml" 307 15351 15383 "records.ml" 307 15351 15385
+type(
+  unit
+)
+"records.ml" 307 15351 15389 "records.ml" 307 15351 15410
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VIF -> API.vIF_t
+)
+ident(
+  ext_ref Client.( Client ).( VIF ).get_record
+)
+"records.ml" 307 15351 15411 "records.ml" 307 15351 15414
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 305 15290 15305 "records.ml" 305 15290 15308
+)
+"records.ml" 307 15351 15415 "records.ml" 307 15351 15425
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 305 15290 15309 "records.ml" 305 15290 15319
+)
+"records.ml" 307 15351 15426 "records.ml" 307 15351 15427
+type(
+  API.ref_VIF ref -> API.ref_VIF
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 307 15351 15427 "records.ml" 307 15351 15431
+type(
+  API.ref_VIF ref
+)
+ident(
+  int_ref _ref "records.ml" 306 15327 15333 "records.ml" 306 15327 15337
+)
+"records.ml" 307 15351 15426 "records.ml" 307 15351 15431
+type(
+  API.ref_VIF
+)
+"records.ml" 307 15351 15389 "records.ml" 307 15351 15431
+type(
+  API.vIF_t
+)
+"records.ml" 307 15351 15378 "records.ml" 307 15351 15432
+type(
+  unit -> API.vIF_t
+)
+"records.ml" 307 15351 15372 "records.ml" 307 15351 15432
+type(
+  API.vIF_t lzy
+)
+"records.ml" 308 15436 15442 "records.ml" 308 15436 15448
+type(
+  API.vIF_t lzy ref
+)
+"records.ml" 308 15436 15451 "records.ml" 308 15436 15454
+type(
+  API.vIF_t lzy -> API.vIF_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 308 15436 15455 "records.ml" 308 15436 15467
+type(
+  API.vIF_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 307 15351 15357 "records.ml" 307 15351 15369
+)
+"records.ml" 308 15436 15451 "records.ml" 308 15436 15467
+type(
+  API.vIF_t lzy ref
+)
+"records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+type(
+  unit -> API.vIF_t
+)
+"records.ml" 309 15471 15479 "records.ml" 309 15471 15481
+type(
+  unit
+)
+"records.ml" 309 15471 15484 "records.ml" 309 15471 15491
+type(
+  API.vIF_t lzy ref -> API.vIF_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 309 15471 15492 "records.ml" 309 15471 15498
+type(
+  API.vIF_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 308 15436 15442 "records.ml" 308 15436 15448
+)
+"records.ml" 309 15471 15484 "records.ml" 309 15471 15498
+type(
+  API.vIF_t
+)
+"records.ml" 310 15502 15518 "records.ml" 310 15502 15519
+type(
+  API.ref_VIF
+)
+ident(
+  def r "records.ml" 310 15502 15523 "records.ml" 310 15502 15556
+)
+"records.ml" 310 15502 15523 "records.ml" 310 15502 15527
+type(
+  API.ref_VIF ref
+)
+ident(
+  int_ref _ref "records.ml" 306 15327 15333 "records.ml" 306 15327 15337
+)
+"records.ml" 310 15502 15528 "records.ml" 310 15502 15530
+type(
+  API.ref_VIF ref -> API.ref_VIF -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 310 15502 15531 "records.ml" 310 15502 15532
+type(
+  API.ref_VIF
+)
+ident(
+  int_ref r "records.ml" 310 15502 15518 "records.ml" 310 15502 15519
+)
+"records.ml" 310 15502 15523 "records.ml" 310 15502 15532
+type(
+  unit
+)
+"records.ml" 310 15502 15534 "records.ml" 310 15502 15540
+type(
+  API.vIF_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 308 15436 15442 "records.ml" 308 15436 15448
+)
+"records.ml" 310 15502 15541 "records.ml" 310 15502 15543
+type(
+  API.vIF_t lzy ref -> API.vIF_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 310 15502 15544 "records.ml" 310 15502 15556
+type(
+  API.vIF_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 307 15351 15357 "records.ml" 307 15351 15369
+)
+"records.ml" 310 15502 15534 "records.ml" 310 15502 15556
+type(
+  unit
+)
+"records.ml" 310 15502 15523 "records.ml" 310 15502 15556
+type(
+  unit
+)
+"records.ml" 310 15502 15513 "records.ml" 310 15502 15558
+type(
+  API.ref_VIF -> unit
+)
+"records.ml" 311 15560 15580 "records.ml" 311 15560 15581
+type(
+  API.ref_VIF
+)
+ident(
+  def a "records.ml" 311 15560 15588 "records.ml" 311 15560 15614
+)
+"records.ml" 311 15560 15582 "records.ml" 311 15560 15583
+type(
+  API.vIF_t
+)
+ident(
+  def b "records.ml" 311 15560 15588 "records.ml" 311 15560 15614
+)
+"records.ml" 311 15560 15579 "records.ml" 311 15560 15584
+type(
+  API.ref_VIF * API.vIF_t
+)
+"records.ml" 311 15560 15588 "records.ml" 311 15560 15592
+type(
+  API.ref_VIF ref
+)
+ident(
+  int_ref _ref "records.ml" 306 15327 15333 "records.ml" 306 15327 15337
+)
+"records.ml" 311 15560 15593 "records.ml" 311 15560 15595
+type(
+  API.ref_VIF ref -> API.ref_VIF -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 311 15560 15596 "records.ml" 311 15560 15597
+type(
+  API.ref_VIF
+)
+ident(
+  int_ref a "records.ml" 311 15560 15580 "records.ml" 311 15560 15581
+)
+"records.ml" 311 15560 15588 "records.ml" 311 15560 15597
+type(
+  unit
+)
+"records.ml" 311 15560 15599 "records.ml" 311 15560 15605
+type(
+  API.vIF_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 308 15436 15442 "records.ml" 308 15436 15448
+)
+"records.ml" 311 15560 15606 "records.ml" 311 15560 15608
+type(
+  API.vIF_t lzy ref -> API.vIF_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 311 15560 15613 "records.ml" 311 15560 15614
+type(
+  API.vIF_t
+)
+ident(
+  int_ref b "records.ml" 311 15560 15582 "records.ml" 311 15560 15583
+)
+"records.ml" 311 15560 15609 "records.ml" 311 15560 15614
+type(
+  API.vIF_t lzy
+)
+"records.ml" 311 15560 15599 "records.ml" 311 15560 15614
+type(
+  unit
+)
+"records.ml" 311 15560 15588 "records.ml" 311 15560 15614
+type(
+  unit
+)
+"records.ml" 311 15560 15574 "records.ml" 311 15560 15615
+type(
+  API.ref_VIF * API.vIF_t -> unit
+)
+"records.ml" 312 15617 15628 "records.ml" 312 15617 15629
+type(
+  unit -> API.vIF_t
+)
+ident(
+  int_ref x "records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+)
+"records.ml" 313 15631 15647 "records.ml" 313 15631 15649
+type(
+  unit
+)
+"records.ml" 313 15631 15653 "records.ml" 313 15631 15654
+type(
+  API.ref_VIF ref -> API.ref_VIF
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 313 15631 15654 "records.ml" 313 15631 15658
+type(
+  API.ref_VIF ref
+)
+ident(
+  int_ref _ref "records.ml" 306 15327 15333 "records.ml" 306 15327 15337
+)
+"records.ml" 313 15631 15653 "records.ml" 313 15631 15658
+type(
+  API.ref_VIF
+)
+"records.ml" 313 15631 15642 "records.ml" 313 15631 15659
+type(
+  unit -> API.ref_VIF
+)
+"records.ml" 316 15681 15682 "records.ml" 316 15681 15692
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 316 15681 15699 "records.ml" 316 15681 15705
+type(
+  string
+)
+"records.ml" 316 15681 15724 "records.ml" 316 15681 15726
+type(
+  unit
+)
+"records.ml" 316 15681 15731 "records.ml" 316 15681 15732
+type(
+  unit -> API.vIF_t
+)
+ident(
+  int_ref x "records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+)
+"records.ml" 316 15681 15733 "records.ml" 316 15681 15735
+type(
+  unit
+)
+"records.ml" 316 15681 15730 "records.ml" 316 15681 15736
+type(
+  API.vIF_t
+)
+"records.ml" 316 15681 15730 "records.ml" 316 15681 15749
+type(
+  string
+)
+"records.ml" 316 15681 15719 "records.ml" 316 15681 15750
+type(
+  unit -> string
+)
+"records.ml" 316 15681 15751 "records.ml" 316 15681 15753
+type(
+  unit
+)
+"records.ml" 316 15681 15682 "records.ml" 316 15681 15753
+type(
+  field
+)
+"records.ml" 317 15755 15756 "records.ml" 317 15755 15766
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 317 15755 15773 "records.ml" 317 15755 15782
+type(
+  string
+)
+"records.ml" 317 15755 15798 "records.ml" 317 15755 15800
+type(
+  unit
+)
+"records.ml" 317 15755 15804 "records.ml" 317 15755 15821
+type(
+  API.ref_VM -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 317 15755 15823 "records.ml" 317 15755 15824
+type(
+  unit -> API.vIF_t
+)
+ident(
+  int_ref x "records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+)
+"records.ml" 317 15755 15825 "records.ml" 317 15755 15827
+type(
+  unit
+)
+"records.ml" 317 15755 15822 "records.ml" 317 15755 15828
+type(
+  API.vIF_t
+)
+"records.ml" 317 15755 15822 "records.ml" 317 15755 15839
+type(
+  API.ref_VM
+)
+"records.ml" 317 15755 15804 "records.ml" 317 15755 15839
+type(
+  string
+)
+"records.ml" 317 15755 15793 "records.ml" 317 15755 15840
+type(
+  unit -> string
+)
+"records.ml" 317 15755 15841 "records.ml" 317 15755 15843
+type(
+  unit
+)
+"records.ml" 317 15755 15756 "records.ml" 317 15755 15843
+type(
+  field
+)
+"records.ml" 318 15845 15846 "records.ml" 318 15845 15856
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 318 15845 15863 "records.ml" 318 15845 15878
+type(
+  string
+)
+"records.ml" 318 15845 15894 "records.ml" 318 15845 15896
+type(
+  unit
+)
+"records.ml" 318 15845 15900 "records.ml" 318 15845 15917
+type(
+  API.ref_VM -> string
+)
+ident(
+  int_ref get_name_from_ref "records.ml" 103 3658 3662 "records.ml" 103 3658 3679
+)
+"records.ml" 318 15845 15919 "records.ml" 318 15845 15920
+type(
+  unit -> API.vIF_t
+)
+ident(
+  int_ref x "records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+)
+"records.ml" 318 15845 15921 "records.ml" 318 15845 15923
+type(
+  unit
+)
+"records.ml" 318 15845 15918 "records.ml" 318 15845 15924
+type(
+  API.vIF_t
+)
+"records.ml" 318 15845 15918 "records.ml" 318 15845 15935
+type(
+  API.ref_VM
+)
+"records.ml" 318 15845 15900 "records.ml" 318 15845 15935
+type(
+  string
+)
+"records.ml" 318 15845 15889 "records.ml" 318 15845 15936
+type(
+  unit -> string
+)
+"records.ml" 318 15845 15937 "records.ml" 318 15845 15939
+type(
+  unit
+)
+"records.ml" 318 15845 15846 "records.ml" 318 15845 15939
+type(
+  field
+)
+"records.ml" 319 15941 15942 "records.ml" 319 15941 15952
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 319 15941 15959 "records.ml" 319 15941 15979
+type(
+  string
+)
+"records.ml" 320 15980 15993 "records.ml" 320 15980 15995
+type(
+  unit
+)
+"records.ml" 320 15980 15999 "records.ml" 320 15980 16012
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 320 15980 16013 "records.ml" 320 15980 16017
+type(
+  string
+)
+"records.ml" 320 15980 16019 "records.ml" 320 15980 16027
+type(
+  ([ `attach | `plug | `unplug ] -> string) ->
+  API.vif_operations_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 320 15980 16028 "records.ml" 320 15980 16063
+type(
+  [ `attach | `plug | `unplug ] -> string
+)
+ident(
+  ext_ref Record_util.vif_operation_to_string
+)
+"records.ml" 320 15980 16065 "records.ml" 320 15980 16066
+type(
+  unit -> API.vIF_t
+)
+ident(
+  int_ref x "records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+)
+"records.ml" 320 15980 16067 "records.ml" 320 15980 16069
+type(
+  unit
+)
+"records.ml" 320 15980 16064 "records.ml" 320 15980 16070
+type(
+  API.vIF_t
+)
+"records.ml" 320 15980 16064 "records.ml" 320 15980 16097
+type(
+  API.vif_operations_set
+)
+"records.ml" 320 15980 16018 "records.ml" 320 15980 16098
+type(
+  string list
+)
+"records.ml" 320 15980 15999 "records.ml" 320 15980 16098
+type(
+  string
+)
+"records.ml" 320 15980 15988 "records.ml" 320 15980 16099
+type(
+  unit -> string
+)
+"records.ml" 321 16101 16118 "records.ml" 321 16101 16120
+type(
+  unit
+)
+"records.ml" 321 16101 16124 "records.ml" 321 16101 16132
+type(
+  ([ `attach | `plug | `unplug ] -> string) ->
+  API.vif_operations_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 321 16101 16133 "records.ml" 321 16101 16168
+type(
+  [ `attach | `plug | `unplug ] -> string
+)
+ident(
+  ext_ref Record_util.vif_operation_to_string
+)
+"records.ml" 321 16101 16170 "records.ml" 321 16101 16171
+type(
+  unit -> API.vIF_t
+)
+ident(
+  int_ref x "records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+)
+"records.ml" 321 16101 16172 "records.ml" 321 16101 16174
+type(
+  unit
+)
+"records.ml" 321 16101 16169 "records.ml" 321 16101 16175
+type(
+  API.vIF_t
+)
+"records.ml" 321 16101 16169 "records.ml" 321 16101 16202
+type(
+  API.vif_operations_set
+)
+"records.ml" 321 16101 16124 "records.ml" 321 16101 16202
+type(
+  string list
+)
+"records.ml" 321 16101 16113 "records.ml" 321 16101 16203
+type(
+  unit -> string list
+)
+"records.ml" 321 16101 16204 "records.ml" 321 16101 16206
+type(
+  unit
+)
+"records.ml" 319 15941 15942 "records.ml" 321 16101 16206
+type(
+  field
+)
+"records.ml" 322 16208 16209 "records.ml" 322 16208 16219
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 322 16208 16226 "records.ml" 322 16208 16246
+type(
+  string
+)
+"records.ml" 323 16247 16260 "records.ml" 323 16247 16262
+type(
+  unit
+)
+"records.ml" 323 16247 16266 "records.ml" 323 16247 16279
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 323 16247 16280 "records.ml" 323 16247 16284
+type(
+  string
+)
+"records.ml" 323 16247 16286 "records.ml" 323 16247 16294
+type(
+  (string * API.vif_operations -> string) ->
+  API.string_to_vif_operations_map -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 323 16247 16301 "records.ml" 323 16247 16302
+type(
+  string
+)
+ident(
+  def a "records.ml" 323 16247 16309 "records.ml" 323 16247 16346
+)
+"records.ml" 323 16247 16303 "records.ml" 323 16247 16304
+type(
+  API.vif_operations
+)
+ident(
+  def b "records.ml" 323 16247 16309 "records.ml" 323 16247 16346
+)
+"records.ml" 323 16247 16300 "records.ml" 323 16247 16305
+type(
+  string * API.vif_operations
+)
+"records.ml" 323 16247 16309 "records.ml" 323 16247 16344
+type(
+  API.vif_operations -> string
+)
+ident(
+  ext_ref Record_util.vif_operation_to_string
+)
+"records.ml" 323 16247 16345 "records.ml" 323 16247 16346
+type(
+  API.vif_operations
+)
+ident(
+  int_ref b "records.ml" 323 16247 16303 "records.ml" 323 16247 16304
+)
+"records.ml" 323 16247 16309 "records.ml" 323 16247 16346
+type(
+  string
+)
+"records.ml" 323 16247 16295 "records.ml" 323 16247 16347
+type(
+  string * API.vif_operations -> string
+)
+"records.ml" 323 16247 16349 "records.ml" 323 16247 16350
+type(
+  unit -> API.vIF_t
+)
+ident(
+  int_ref x "records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+)
+"records.ml" 323 16247 16351 "records.ml" 323 16247 16353
+type(
+  unit
+)
+"records.ml" 323 16247 16348 "records.ml" 323 16247 16354
+type(
+  API.vIF_t
+)
+"records.ml" 323 16247 16348 "records.ml" 323 16247 16381
+type(
+  API.string_to_vif_operations_map
+)
+"records.ml" 323 16247 16285 "records.ml" 323 16247 16382
+type(
+  string list
+)
+"records.ml" 323 16247 16266 "records.ml" 323 16247 16382
+type(
+  string
+)
+"records.ml" 323 16247 16255 "records.ml" 323 16247 16383
+type(
+  unit -> string
+)
+"records.ml" 324 16385 16402 "records.ml" 324 16385 16404
+type(
+  unit
+)
+"records.ml" 324 16385 16408 "records.ml" 324 16385 16416
+type(
+  (string * API.vif_operations -> string) ->
+  API.string_to_vif_operations_map -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 324 16385 16423 "records.ml" 324 16385 16424
+type(
+  string
+)
+ident(
+  def a "records.ml" 324 16385 16431 "records.ml" 324 16385 16468
+)
+"records.ml" 324 16385 16425 "records.ml" 324 16385 16426
+type(
+  API.vif_operations
+)
+ident(
+  def b "records.ml" 324 16385 16431 "records.ml" 324 16385 16468
+)
+"records.ml" 324 16385 16422 "records.ml" 324 16385 16427
+type(
+  string * API.vif_operations
+)
+"records.ml" 324 16385 16431 "records.ml" 324 16385 16466
+type(
+  API.vif_operations -> string
+)
+ident(
+  ext_ref Record_util.vif_operation_to_string
+)
+"records.ml" 324 16385 16467 "records.ml" 324 16385 16468
+type(
+  API.vif_operations
+)
+ident(
+  int_ref b "records.ml" 324 16385 16425 "records.ml" 324 16385 16426
+)
+"records.ml" 324 16385 16431 "records.ml" 324 16385 16468
+type(
+  string
+)
+"records.ml" 324 16385 16417 "records.ml" 324 16385 16469
+type(
+  string * API.vif_operations -> string
+)
+"records.ml" 324 16385 16471 "records.ml" 324 16385 16472
+type(
+  unit -> API.vIF_t
+)
+ident(
+  int_ref x "records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+)
+"records.ml" 324 16385 16473 "records.ml" 324 16385 16475
+type(
+  unit
+)
+"records.ml" 324 16385 16470 "records.ml" 324 16385 16476
+type(
+  API.vIF_t
+)
+"records.ml" 324 16385 16470 "records.ml" 324 16385 16503
+type(
+  API.string_to_vif_operations_map
+)
+"records.ml" 324 16385 16408 "records.ml" 324 16385 16503
+type(
+  string list
+)
+"records.ml" 324 16385 16397 "records.ml" 324 16385 16504
+type(
+  unit -> string list
+)
+"records.ml" 324 16385 16505 "records.ml" 324 16385 16507
+type(
+  unit
+)
+"records.ml" 322 16208 16209 "records.ml" 324 16385 16507
+type(
+  field
+)
+"records.ml" 325 16512 16513 "records.ml" 325 16512 16523
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 325 16512 16530 "records.ml" 325 16512 16538
+type(
+  string
+)
+"records.ml" 325 16512 16555 "records.ml" 325 16512 16557
+type(
+  unit
+)
+"records.ml" 325 16512 16562 "records.ml" 325 16512 16563
+type(
+  unit -> API.vIF_t
+)
+ident(
+  int_ref x "records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+)
+"records.ml" 325 16512 16564 "records.ml" 325 16512 16566
+type(
+  unit
+)
+"records.ml" 325 16512 16561 "records.ml" 325 16512 16567
+type(
+  API.vIF_t
+)
+"records.ml" 325 16512 16561 "records.ml" 325 16512 16582
+type(
+  string
+)
+"records.ml" 325 16512 16550 "records.ml" 325 16512 16583
+type(
+  unit -> string
+)
+"records.ml" 325 16512 16584 "records.ml" 325 16512 16586
+type(
+  unit
+)
+"records.ml" 325 16512 16513 "records.ml" 325 16512 16586
+type(
+  field
+)
+"records.ml" 326 16588 16589 "records.ml" 326 16588 16599
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 326 16588 16606 "records.ml" 326 16588 16611
+type(
+  string
+)
+"records.ml" 326 16588 16631 "records.ml" 326 16588 16633
+type(
+  unit
+)
+"records.ml" 326 16588 16638 "records.ml" 326 16588 16639
+type(
+  unit -> API.vIF_t
+)
+ident(
+  int_ref x "records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+)
+"records.ml" 326 16588 16640 "records.ml" 326 16588 16642
+type(
+  unit
+)
+"records.ml" 326 16588 16637 "records.ml" 326 16588 16643
+type(
+  API.vIF_t
+)
+"records.ml" 326 16588 16637 "records.ml" 326 16588 16655
+type(
+  string
+)
+"records.ml" 326 16588 16626 "records.ml" 326 16588 16656
+type(
+  unit -> string
+)
+"records.ml" 327 16658 16679 "records.ml" 327 16658 16683
+type(
+  bool
+)
+"records.ml" 327 16658 16684 "records.ml" 327 16658 16686
+type(
+  unit
+)
+"records.ml" 326 16588 16589 "records.ml" 327 16658 16686
+type(
+  field
+)
+"records.ml" 328 16688 16689 "records.ml" 328 16688 16699
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 328 16688 16706 "records.ml" 328 16688 16725
+type(
+  string
+)
+"records.ml" 328 16688 16736 "records.ml" 328 16688 16738
+type(
+  unit
+)
+"records.ml" 328 16688 16742 "records.ml" 328 16688 16756
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 328 16688 16758 "records.ml" 328 16688 16759
+type(
+  unit -> API.vIF_t
+)
+ident(
+  int_ref x "records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+)
+"records.ml" 328 16688 16760 "records.ml" 328 16688 16762
+type(
+  unit
+)
+"records.ml" 328 16688 16757 "records.ml" 328 16688 16763
+type(
+  API.vIF_t
+)
+"records.ml" 328 16688 16757 "records.ml" 328 16688 16789
+type(
+  bool
+)
+"records.ml" 328 16688 16742 "records.ml" 328 16688 16789
+type(
+  string
+)
+"records.ml" 328 16688 16731 "records.ml" 328 16688 16790
+type(
+  unit -> string
+)
+"records.ml" 328 16688 16791 "records.ml" 328 16688 16793
+type(
+  unit
+)
+"records.ml" 328 16688 16689 "records.ml" 328 16688 16793
+type(
+  field
+)
+"records.ml" 329 16795 16796 "records.ml" 329 16795 16806
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 329 16795 16813 "records.ml" 329 16795 16818
+type(
+  string
+)
+"records.ml" 329 16795 16838 "records.ml" 329 16795 16840
+type(
+  unit
+)
+"records.ml" 329 16795 16844 "records.ml" 329 16795 16859
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 329 16795 16861 "records.ml" 329 16795 16862
+type(
+  unit -> API.vIF_t
+)
+ident(
+  int_ref x "records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+)
+"records.ml" 329 16795 16863 "records.ml" 329 16795 16865
+type(
+  unit
+)
+"records.ml" 329 16795 16860 "records.ml" 329 16795 16866
+type(
+  API.vIF_t
+)
+"records.ml" 329 16795 16860 "records.ml" 329 16795 16878
+type(
+  int64
+)
+"records.ml" 329 16795 16844 "records.ml" 329 16795 16878
+type(
+  string
+)
+"records.ml" 329 16795 16833 "records.ml" 329 16795 16879
+type(
+  unit -> string
+)
+"records.ml" 329 16795 16880 "records.ml" 329 16795 16882
+type(
+  unit
+)
+"records.ml" 329 16795 16796 "records.ml" 329 16795 16882
+type(
+  field
+)
+"records.ml" 330 16884 16885 "records.ml" 330 16884 16895
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 330 16884 16902 "records.ml" 330 16884 16922
+type(
+  string
+)
+"records.ml" 330 16884 16933 "records.ml" 330 16884 16935
+type(
+  unit
+)
+"records.ml" 330 16884 16939 "records.ml" 330 16884 16953
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 330 16884 16955 "records.ml" 330 16884 16956
+type(
+  unit -> API.vIF_t
+)
+ident(
+  int_ref x "records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+)
+"records.ml" 330 16884 16957 "records.ml" 330 16884 16959
+type(
+  unit
+)
+"records.ml" 330 16884 16954 "records.ml" 330 16884 16960
+type(
+  API.vIF_t
+)
+"records.ml" 330 16884 16954 "records.ml" 330 16884 16987
+type(
+  bool
+)
+"records.ml" 330 16884 16939 "records.ml" 330 16884 16987
+type(
+  string
+)
+"records.ml" 330 16884 16928 "records.ml" 330 16884 16988
+type(
+  unit -> string
+)
+"records.ml" 330 16884 16989 "records.ml" 330 16884 16991
+type(
+  unit
+)
+"records.ml" 330 16884 16885 "records.ml" 330 16884 16991
+type(
+  field
+)
+"records.ml" 331 16993 16994 "records.ml" 331 16993 17004
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 331 16993 17011 "records.ml" 331 16993 17031
+type(
+  string
+)
+"records.ml" 331 16993 17042 "records.ml" 331 16993 17044
+type(
+  unit
+)
+"records.ml" 331 16993 17049 "records.ml" 331 16993 17050
+type(
+  unit -> API.vIF_t
+)
+ident(
+  int_ref x "records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+)
+"records.ml" 331 16993 17051 "records.ml" 331 16993 17053
+type(
+  unit
+)
+"records.ml" 331 16993 17048 "records.ml" 331 16993 17054
+type(
+  API.vIF_t
+)
+"records.ml" 331 16993 17048 "records.ml" 331 16993 17081
+type(
+  string
+)
+"records.ml" 331 16993 17037 "records.ml" 331 16993 17082
+type(
+  unit -> string
+)
+"records.ml" 332 17083 17096 "records.ml" 332 17083 17099
+type(
+  string
+)
+ident(
+  def qat "records.ml" 332 17083 17103 "records.ml" 332 17083 17159
+)
+"records.ml" 332 17083 17103 "records.ml" 332 17083 17136
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VIF -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VIF ).set_qos_algorithm_type
+)
+"records.ml" 332 17083 17137 "records.ml" 332 17083 17140
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 305 15290 15305 "records.ml" 305 15290 15308
+)
+"records.ml" 332 17083 17141 "records.ml" 332 17083 17151
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 305 15290 15309 "records.ml" 305 15290 15319
+)
+"records.ml" 332 17083 17152 "records.ml" 332 17083 17155
+type(
+  API.ref_VIF
+)
+ident(
+  int_ref vif "records.ml" 305 15290 15320 "records.ml" 305 15290 15323
+)
+"records.ml" 332 17083 17156 "records.ml" 332 17083 17159
+type(
+  string
+)
+ident(
+  int_ref qat "records.ml" 332 17083 17096 "records.ml" 332 17083 17099
+)
+"records.ml" 332 17083 17103 "records.ml" 332 17083 17159
+type(
+  unit
+)
+"records.ml" 332 17083 17091 "records.ml" 332 17083 17160
+type(
+  string -> unit
+)
+"records.ml" 332 17083 17161 "records.ml" 332 17083 17163
+type(
+  unit
+)
+"records.ml" 331 16993 16994 "records.ml" 332 17083 17163
+type(
+  field
+)
+"records.ml" 333 17165 17166 "records.ml" 333 17165 17176
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 333 17165 17183 "records.ml" 333 17165 17205
+type(
+  string
+)
+"records.ml" 333 17165 17216 "records.ml" 333 17165 17218
+type(
+  unit
+)
+"records.ml" 333 17165 17222 "records.ml" 333 17165 17248
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 333 17165 17249 "records.ml" 333 17165 17253
+type(
+  string
+)
+"records.ml" 333 17165 17255 "records.ml" 333 17165 17256
+type(
+  unit -> API.vIF_t
+)
+ident(
+  int_ref x "records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+)
+"records.ml" 333 17165 17257 "records.ml" 333 17165 17259
+type(
+  unit
+)
+"records.ml" 333 17165 17254 "records.ml" 333 17165 17260
+type(
+  API.vIF_t
+)
+"records.ml" 333 17165 17254 "records.ml" 333 17165 17289
+type(
+  API.string_to_string_map
+)
+"records.ml" 333 17165 17222 "records.ml" 333 17165 17289
+type(
+  string
+)
+"records.ml" 333 17165 17211 "records.ml" 333 17165 17290
+type(
+  unit -> string
+)
+"records.ml" 334 17292 17312 "records.ml" 334 17292 17313
+type(
+  string
+)
+ident(
+  def k "records.ml" 334 17292 17314 "records.ml" 334 17292 17380
+)
+"records.ml" 334 17292 17314 "records.ml" 334 17292 17315
+type(
+  string
+)
+ident(
+  def v "records.ml" 334 17292 17319 "records.ml" 334 17292 17380
+)
+"records.ml" 334 17292 17319 "records.ml" 334 17292 17357
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VIF -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VIF ).add_to_qos_algorithm_params
+)
+"records.ml" 334 17292 17358 "records.ml" 334 17292 17361
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 305 15290 15305 "records.ml" 305 15290 15308
+)
+"records.ml" 334 17292 17362 "records.ml" 334 17292 17372
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 305 15290 15309 "records.ml" 305 15290 15319
+)
+"records.ml" 334 17292 17373 "records.ml" 334 17292 17376
+type(
+  API.ref_VIF
+)
+ident(
+  int_ref vif "records.ml" 305 15290 15320 "records.ml" 305 15290 15323
+)
+"records.ml" 334 17292 17377 "records.ml" 334 17292 17378
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 334 17292 17312 "records.ml" 334 17292 17313
+)
+"records.ml" 334 17292 17379 "records.ml" 334 17292 17380
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 334 17292 17314 "records.ml" 334 17292 17315
+)
+"records.ml" 334 17292 17319 "records.ml" 334 17292 17380
+type(
+  unit
+)
+"records.ml" 334 17292 17307 "records.ml" 334 17292 17381
+type(
+  string -> string -> unit
+)
+"records.ml" 335 17382 17407 "records.ml" 335 17382 17408
+type(
+  string
+)
+ident(
+  def k "records.ml" 335 17382 17412 "records.ml" 335 17382 17476
+)
+"records.ml" 335 17382 17412 "records.ml" 335 17382 17455
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VIF -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VIF ).remove_from_qos_algorithm_params
+)
+"records.ml" 335 17382 17456 "records.ml" 335 17382 17459
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 305 15290 15305 "records.ml" 305 15290 15308
+)
+"records.ml" 335 17382 17460 "records.ml" 335 17382 17470
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 305 15290 15309 "records.ml" 305 15290 15319
+)
+"records.ml" 335 17382 17471 "records.ml" 335 17382 17474
+type(
+  API.ref_VIF
+)
+ident(
+  int_ref vif "records.ml" 305 15290 15320 "records.ml" 305 15290 15323
+)
+"records.ml" 335 17382 17475 "records.ml" 335 17382 17476
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 335 17382 17407 "records.ml" 335 17382 17408
+)
+"records.ml" 335 17382 17412 "records.ml" 335 17382 17476
+type(
+  unit
+)
+"records.ml" 335 17382 17402 "records.ml" 335 17382 17477
+type(
+  string -> unit
+)
+"records.ml" 336 17479 17496 "records.ml" 336 17479 17498
+type(
+  unit
+)
+"records.ml" 336 17479 17503 "records.ml" 336 17479 17504
+type(
+  unit -> API.vIF_t
+)
+ident(
+  int_ref x "records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+)
+"records.ml" 336 17479 17505 "records.ml" 336 17479 17507
+type(
+  unit
+)
+"records.ml" 336 17479 17502 "records.ml" 336 17479 17508
+type(
+  API.vIF_t
+)
+"records.ml" 336 17479 17502 "records.ml" 336 17479 17537
+type(
+  API.string_to_string_map
+)
+"records.ml" 336 17479 17491 "records.ml" 336 17479 17538
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 336 17479 17539 "records.ml" 336 17479 17541
+type(
+  unit
+)
+"records.ml" 333 17165 17166 "records.ml" 336 17479 17541
+type(
+  field
+)
+"records.ml" 337 17543 17544 "records.ml" 337 17543 17554
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> API.string_set) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 337 17543 17561 "records.ml" 337 17543 17587
+type(
+  string
+)
+"records.ml" 337 17543 17598 "records.ml" 337 17543 17600
+type(
+  unit
+)
+"records.ml" 337 17543 17604 "records.ml" 337 17543 17617
+type(
+  string -> API.string_set -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 337 17543 17618 "records.ml" 337 17543 17622
+type(
+  string
+)
+"records.ml" 337 17543 17624 "records.ml" 337 17543 17625
+type(
+  unit -> API.vIF_t
+)
+ident(
+  int_ref x "records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+)
+"records.ml" 337 17543 17626 "records.ml" 337 17543 17628
+type(
+  unit
+)
+"records.ml" 337 17543 17623 "records.ml" 337 17543 17629
+type(
+  API.vIF_t
+)
+"records.ml" 337 17543 17623 "records.ml" 337 17543 17662
+type(
+  API.string_set
+)
+"records.ml" 337 17543 17604 "records.ml" 337 17543 17662
+type(
+  string
+)
+"records.ml" 337 17543 17593 "records.ml" 337 17543 17663
+type(
+  unit -> string
+)
+"records.ml" 338 17665 17682 "records.ml" 338 17665 17684
+type(
+  unit
+)
+"records.ml" 338 17665 17689 "records.ml" 338 17665 17690
+type(
+  unit -> API.vIF_t
+)
+ident(
+  int_ref x "records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+)
+"records.ml" 338 17665 17691 "records.ml" 338 17665 17693
+type(
+  unit
+)
+"records.ml" 338 17665 17688 "records.ml" 338 17665 17694
+type(
+  API.vIF_t
+)
+"records.ml" 338 17665 17688 "records.ml" 338 17665 17727
+type(
+  API.string_set
+)
+"records.ml" 338 17665 17677 "records.ml" 338 17665 17728
+type(
+  unit -> API.string_set
+)
+"records.ml" 338 17665 17729 "records.ml" 338 17665 17731
+type(
+  unit
+)
+"records.ml" 337 17543 17544 "records.ml" 338 17665 17731
+type(
+  field
+)
+"records.ml" 339 17733 17734 "records.ml" 339 17733 17744
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 339 17733 17751 "records.ml" 339 17733 17765
+type(
+  string
+)
+"records.ml" 339 17733 17776 "records.ml" 339 17733 17778
+type(
+  unit
+)
+"records.ml" 339 17733 17782 "records.ml" 339 17733 17808
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 339 17733 17809 "records.ml" 339 17733 17813
+type(
+  string
+)
+"records.ml" 339 17733 17815 "records.ml" 339 17733 17816
+type(
+  unit -> API.vIF_t
+)
+ident(
+  int_ref x "records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+)
+"records.ml" 339 17733 17817 "records.ml" 339 17733 17819
+type(
+  unit
+)
+"records.ml" 339 17733 17814 "records.ml" 339 17733 17820
+type(
+  API.vIF_t
+)
+"records.ml" 339 17733 17814 "records.ml" 339 17733 17841
+type(
+  API.string_to_string_map
+)
+"records.ml" 339 17733 17782 "records.ml" 339 17733 17841
+type(
+  string
+)
+"records.ml" 339 17733 17771 "records.ml" 339 17733 17842
+type(
+  unit -> string
+)
+"records.ml" 340 17844 17864 "records.ml" 340 17844 17865
+type(
+  string
+)
+ident(
+  def k "records.ml" 340 17844 17866 "records.ml" 340 17844 17924
+)
+"records.ml" 340 17844 17866 "records.ml" 340 17844 17867
+type(
+  string
+)
+ident(
+  def v "records.ml" 340 17844 17871 "records.ml" 340 17844 17924
+)
+"records.ml" 340 17844 17871 "records.ml" 340 17844 17901
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VIF -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VIF ).add_to_other_config
+)
+"records.ml" 340 17844 17902 "records.ml" 340 17844 17905
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 305 15290 15305 "records.ml" 305 15290 15308
+)
+"records.ml" 340 17844 17906 "records.ml" 340 17844 17916
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 305 15290 15309 "records.ml" 305 15290 15319
+)
+"records.ml" 340 17844 17917 "records.ml" 340 17844 17920
+type(
+  API.ref_VIF
+)
+ident(
+  int_ref vif "records.ml" 305 15290 15320 "records.ml" 305 15290 15323
+)
+"records.ml" 340 17844 17921 "records.ml" 340 17844 17922
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 340 17844 17864 "records.ml" 340 17844 17865
+)
+"records.ml" 340 17844 17923 "records.ml" 340 17844 17924
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 340 17844 17866 "records.ml" 340 17844 17867
+)
+"records.ml" 340 17844 17871 "records.ml" 340 17844 17924
+type(
+  unit
+)
+"records.ml" 340 17844 17859 "records.ml" 340 17844 17925
+type(
+  string -> string -> unit
+)
+"records.ml" 341 17926 17951 "records.ml" 341 17926 17952
+type(
+  string
+)
+ident(
+  def k "records.ml" 341 17926 17956 "records.ml" 341 17926 18012
+)
+"records.ml" 341 17926 17956 "records.ml" 341 17926 17991
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VIF -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VIF ).remove_from_other_config
+)
+"records.ml" 341 17926 17992 "records.ml" 341 17926 17995
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 305 15290 15305 "records.ml" 305 15290 15308
+)
+"records.ml" 341 17926 17996 "records.ml" 341 17926 18006
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 305 15290 15309 "records.ml" 305 15290 15319
+)
+"records.ml" 341 17926 18007 "records.ml" 341 17926 18010
+type(
+  API.ref_VIF
+)
+ident(
+  int_ref vif "records.ml" 305 15290 15320 "records.ml" 305 15290 15323
+)
+"records.ml" 341 17926 18011 "records.ml" 341 17926 18012
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 341 17926 17951 "records.ml" 341 17926 17952
+)
+"records.ml" 341 17926 17956 "records.ml" 341 17926 18012
+type(
+  unit
+)
+"records.ml" 341 17926 17946 "records.ml" 341 17926 18013
+type(
+  string -> unit
+)
+"records.ml" 342 18015 18032 "records.ml" 342 18015 18034
+type(
+  unit
+)
+"records.ml" 342 18015 18039 "records.ml" 342 18015 18040
+type(
+  unit -> API.vIF_t
+)
+ident(
+  int_ref x "records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+)
+"records.ml" 342 18015 18041 "records.ml" 342 18015 18043
+type(
+  unit
+)
+"records.ml" 342 18015 18038 "records.ml" 342 18015 18044
+type(
+  API.vIF_t
+)
+"records.ml" 342 18015 18038 "records.ml" 342 18015 18065
+type(
+  API.string_to_string_map
+)
+"records.ml" 342 18015 18027 "records.ml" 342 18015 18066
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 342 18015 18067 "records.ml" 342 18015 18069
+type(
+  unit
+)
+"records.ml" 339 17733 17734 "records.ml" 342 18015 18069
+type(
+  field
+)
+"records.ml" 343 18071 18072 "records.ml" 343 18071 18082
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 343 18071 18089 "records.ml" 343 18071 18103
+type(
+  string
+)
+"records.ml" 343 18071 18114 "records.ml" 343 18071 18116
+type(
+  unit
+)
+"records.ml" 343 18071 18120 "records.ml" 343 18071 18137
+type(
+  API.ref_network -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 343 18071 18139 "records.ml" 343 18071 18140
+type(
+  unit -> API.vIF_t
+)
+ident(
+  int_ref x "records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+)
+"records.ml" 343 18071 18141 "records.ml" 343 18071 18143
+type(
+  unit
+)
+"records.ml" 343 18071 18138 "records.ml" 343 18071 18144
+type(
+  API.vIF_t
+)
+"records.ml" 343 18071 18138 "records.ml" 343 18071 18160
+type(
+  API.ref_network
+)
+"records.ml" 343 18071 18120 "records.ml" 343 18071 18160
+type(
+  string
+)
+"records.ml" 343 18071 18109 "records.ml" 343 18071 18161
+type(
+  unit -> string
+)
+"records.ml" 343 18071 18162 "records.ml" 343 18071 18164
+type(
+  unit
+)
+"records.ml" 343 18071 18072 "records.ml" 343 18071 18164
+type(
+  field
+)
+"records.ml" 344 18166 18167 "records.ml" 344 18166 18177
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 344 18166 18184 "records.ml" 344 18166 18204
+type(
+  string
+)
+"records.ml" 344 18166 18215 "records.ml" 344 18166 18217
+type(
+  unit
+)
+"records.ml" 344 18166 18221 "records.ml" 344 18166 18238
+type(
+  API.ref_network -> string
+)
+ident(
+  int_ref get_name_from_ref "records.ml" 103 3658 3662 "records.ml" 103 3658 3679
+)
+"records.ml" 344 18166 18240 "records.ml" 344 18166 18241
+type(
+  unit -> API.vIF_t
+)
+ident(
+  int_ref x "records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+)
+"records.ml" 344 18166 18242 "records.ml" 344 18166 18244
+type(
+  unit
+)
+"records.ml" 344 18166 18239 "records.ml" 344 18166 18245
+type(
+  API.vIF_t
+)
+"records.ml" 344 18166 18239 "records.ml" 344 18166 18261
+type(
+  API.ref_network
+)
+"records.ml" 344 18166 18221 "records.ml" 344 18166 18261
+type(
+  string
+)
+"records.ml" 344 18166 18210 "records.ml" 344 18166 18262
+type(
+  unit -> string
+)
+"records.ml" 344 18166 18263 "records.ml" 344 18166 18265
+type(
+  unit
+)
+"records.ml" 344 18166 18167 "records.ml" 344 18166 18265
+type(
+  field
+)
+"records.ml" 345 18267 18268 "records.ml" 345 18267 18278
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 345 18267 18285 "records.ml" 345 18267 18298
+type(
+  string
+)
+"records.ml" 345 18267 18309 "records.ml" 345 18267 18311
+type(
+  unit
+)
+"records.ml" 347 18323 18332 "records.ml" 347 18323 18336
+type(
+  string
+)
+ident(
+  def name "records.ml" 348 18391 18396 "records.ml" 348 18391 18491
+)
+"records.ml" 347 18323 18339 "records.ml" 347 18323 18353
+type(
+  (string -> string, unit, string) format -> string -> string
+)
+ident(
+  ext_ref Printf.sprintf
+)
+"records.ml" 347 18323 18354 "records.ml" 347 18323 18365
+type(
+  (string -> string, unit, string) format
+)
+"records.ml" 347 18323 18367 "records.ml" 347 18323 18368
+type(
+  unit -> API.vIF_t
+)
+ident(
+  int_ref x "records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+)
+"records.ml" 347 18323 18369 "records.ml" 347 18323 18371
+type(
+  unit
+)
+"records.ml" 347 18323 18366 "records.ml" 347 18323 18372
+type(
+  API.vIF_t
+)
+"records.ml" 347 18323 18366 "records.ml" 347 18323 18387
+type(
+  string
+)
+"records.ml" 347 18323 18339 "records.ml" 347 18323 18387
+type(
+  string
+)
+"records.ml" 348 18391 18396 "records.ml" 348 18391 18411
+type(
+  float -> string
+)
+ident(
+  int_ref string_of_float "records.ml" 34 990 994 "records.ml" 34 990 1009
+)
+"records.ml" 348 18391 18414 "records.ml" 348 18391 18441
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VM -> data_source:string -> float
+)
+ident(
+  ext_ref Client.( Client ).( VM ).query_data_source
+)
+"records.ml" 348 18391 18442 "records.ml" 348 18391 18445
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 305 15290 15305 "records.ml" 305 15290 15308
+)
+"records.ml" 348 18391 18446 "records.ml" 348 18391 18456
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 305 15290 15309 "records.ml" 305 15290 15319
+)
+"records.ml" 348 18391 18458 "records.ml" 348 18391 18459
+type(
+  unit -> API.vIF_t
+)
+ident(
+  int_ref x "records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+)
+"records.ml" 348 18391 18460 "records.ml" 348 18391 18462
+type(
+  unit
+)
+"records.ml" 348 18391 18457 "records.ml" 348 18391 18463
+type(
+  API.vIF_t
+)
+"records.ml" 348 18391 18457 "records.ml" 348 18391 18474
+type(
+  API.ref_VM
+)
+"records.ml" 348 18391 18475 "records.ml" 348 18391 18479
+type(
+  string
+)
+ident(
+  int_ref name "records.ml" 347 18323 18332 "records.ml" 347 18323 18336
+)
+"records.ml" 348 18391 18413 "records.ml" 348 18391 18480
+type(
+  float
+)
+"records.ml" 348 18391 18481 "records.ml" 348 18391 18483
+type(
+  float -> float -> float
+)
+ident(
+  ext_ref Pervasives.( /. )
+)
+"records.ml" 348 18391 18484 "records.ml" 348 18391 18490
+type(
+  float
+)
+"records.ml" 348 18391 18412 "records.ml" 348 18391 18491
+type(
+  float
+)
+"records.ml" 348 18391 18396 "records.ml" 348 18391 18491
+type(
+  string
+)
+"records.ml" 347 18323 18328 "records.ml" 348 18391 18491
+type(
+  string
+)
+"records.ml" 349 18492 18500 "records.ml" 349 18492 18501
+type(
+  exn
+)
+"records.ml" 349 18492 18505 "records.ml" 349 18492 18516
+type(
+  string
+)
+"records.ml" 346 18316 18319 "records.ml" 349 18492 18516
+type(
+  string
+)
+"records.ml" 345 18267 18304 "records.ml" 349 18492 18517
+type(
+  unit -> string
+)
+"records.ml" 349 18492 18529 "records.ml" 349 18492 18533
+type(
+  bool
+)
+"records.ml" 349 18492 18534 "records.ml" 349 18492 18536
+type(
+  unit
+)
+"records.ml" 345 18267 18268 "records.ml" 349 18492 18536
+type(
+  field
+)
+"records.ml" 350 18538 18539 "records.ml" 350 18538 18549
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 350 18538 18556 "records.ml" 350 18538 18570
+type(
+  string
+)
+"records.ml" 350 18538 18581 "records.ml" 350 18538 18583
+type(
+  unit
+)
+"records.ml" 352 18595 18604 "records.ml" 352 18595 18608
+type(
+  string
+)
+ident(
+  def name "records.ml" 353 18663 18668 "records.ml" 353 18663 18763
+)
+"records.ml" 352 18595 18611 "records.ml" 352 18595 18625
+type(
+  (string -> string, unit, string) format -> string -> string
+)
+ident(
+  ext_ref Printf.sprintf
+)
+"records.ml" 352 18595 18626 "records.ml" 352 18595 18637
+type(
+  (string -> string, unit, string) format
+)
+"records.ml" 352 18595 18639 "records.ml" 352 18595 18640
+type(
+  unit -> API.vIF_t
+)
+ident(
+  int_ref x "records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+)
+"records.ml" 352 18595 18641 "records.ml" 352 18595 18643
+type(
+  unit
+)
+"records.ml" 352 18595 18638 "records.ml" 352 18595 18644
+type(
+  API.vIF_t
+)
+"records.ml" 352 18595 18638 "records.ml" 352 18595 18659
+type(
+  string
+)
+"records.ml" 352 18595 18611 "records.ml" 352 18595 18659
+type(
+  string
+)
+"records.ml" 353 18663 18668 "records.ml" 353 18663 18683
+type(
+  float -> string
+)
+ident(
+  int_ref string_of_float "records.ml" 34 990 994 "records.ml" 34 990 1009
+)
+"records.ml" 353 18663 18686 "records.ml" 353 18663 18713
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VM -> data_source:string -> float
+)
+ident(
+  ext_ref Client.( Client ).( VM ).query_data_source
+)
+"records.ml" 353 18663 18714 "records.ml" 353 18663 18717
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 305 15290 15305 "records.ml" 305 15290 15308
+)
+"records.ml" 353 18663 18718 "records.ml" 353 18663 18728
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 305 15290 15309 "records.ml" 305 15290 15319
+)
+"records.ml" 353 18663 18730 "records.ml" 353 18663 18731
+type(
+  unit -> API.vIF_t
+)
+ident(
+  int_ref x "records.ml" 309 15471 15477 "records.ml" 309 15471 15478
+)
+"records.ml" 353 18663 18732 "records.ml" 353 18663 18734
+type(
+  unit
+)
+"records.ml" 353 18663 18729 "records.ml" 353 18663 18735
+type(
+  API.vIF_t
+)
+"records.ml" 353 18663 18729 "records.ml" 353 18663 18746
+type(
+  API.ref_VM
+)
+"records.ml" 353 18663 18747 "records.ml" 353 18663 18751
+type(
+  string
+)
+ident(
+  int_ref name "records.ml" 352 18595 18604 "records.ml" 352 18595 18608
+)
+"records.ml" 353 18663 18685 "records.ml" 353 18663 18752
+type(
+  float
+)
+"records.ml" 353 18663 18753 "records.ml" 353 18663 18755
+type(
+  float -> float -> float
+)
+ident(
+  ext_ref Pervasives.( /. )
+)
+"records.ml" 353 18663 18756 "records.ml" 353 18663 18762
+type(
+  float
+)
+"records.ml" 353 18663 18684 "records.ml" 353 18663 18763
+type(
+  float
+)
+"records.ml" 353 18663 18668 "records.ml" 353 18663 18763
+type(
+  string
+)
+"records.ml" 352 18595 18600 "records.ml" 353 18663 18763
+type(
+  string
+)
+"records.ml" 354 18764 18772 "records.ml" 354 18764 18773
+type(
+  exn
+)
+"records.ml" 354 18764 18777 "records.ml" 354 18764 18788
+type(
+  string
+)
+"records.ml" 351 18588 18591 "records.ml" 354 18764 18788
+type(
+  string
+)
+"records.ml" 350 18538 18576 "records.ml" 354 18764 18789
+type(
+  unit -> string
+)
+"records.ml" 354 18764 18801 "records.ml" 354 18764 18805
+type(
+  bool
+)
+"records.ml" 354 18764 18806 "records.ml" 354 18764 18808
+type(
+  unit
+)
+"records.ml" 350 18538 18539 "records.ml" 354 18764 18808
+type(
+  field
+)
+"records.ml" 315 15673 15679 "records.ml" 355 18810 18817
+type(
+  field list
+)
+"records.ml" 310 15502 15504 "records.ml" 355 18810 18818
+type(
+  ([ `VIF ], API.vIF_t) record
+)
+"records.ml" 309 15471 15473 "records.ml" 355 18810 18818
+type(
+  ([ `VIF ], API.vIF_t) record
+)
+"records.ml" 308 15436 15438 "records.ml" 355 18810 18818
+type(
+  ([ `VIF ], API.vIF_t) record
+)
+"records.ml" 307 15351 15353 "records.ml" 355 18810 18818
+type(
+  ([ `VIF ], API.vIF_t) record
+)
+"records.ml" 306 15327 15329 "records.ml" 355 18810 18818
+type(
+  ([ `VIF ], API.vIF_t) record
+)
+"records.ml" 358 18821 18825 "records.ml" 358 18821 18835
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_network -> ([ `network ], API.network_t) record
+)
+ident(
+  def net_record "records.ml" 392 21110 21110 --
+)
+"records.ml" 358 18821 18836 "records.ml" 358 18821 18839
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 358 18821 18840 "records.ml" 389 21103 21107
+)
+"records.ml" 358 18821 18840 "records.ml" 358 18821 18850
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 358 18821 18851 "records.ml" 389 21103 21107
+)
+"records.ml" 358 18821 18851 "records.ml" 358 18821 18854
+type(
+  API.ref_network
+)
+ident(
+  def net "records.ml" 359 18857 18858 "records.ml" 389 21103 21107
+)
+"records.ml" 359 18857 18862 "records.ml" 359 18857 18866
+type(
+  API.ref_network ref
+)
+"records.ml" 359 18857 18869 "records.ml" 359 18857 18872
+type(
+  API.ref_network -> API.ref_network ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 359 18857 18873 "records.ml" 359 18857 18876
+type(
+  API.ref_network
+)
+ident(
+  int_ref net "records.ml" 358 18821 18851 "records.ml" 358 18821 18854
+)
+"records.ml" 359 18857 18869 "records.ml" 359 18857 18876
+type(
+  API.ref_network ref
+)
+"records.ml" 360 18880 18885 "records.ml" 360 18880 18897
+type(
+  API.network_t lzy
+)
+"records.ml" 360 18880 18911 "records.ml" 360 18880 18913
+type(
+  unit
+)
+"records.ml" 360 18880 18917 "records.ml" 360 18880 18942
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_network -> API.network_t
+)
+ident(
+  ext_ref Client.( Client ).( Network ).get_record
+)
+"records.ml" 360 18880 18943 "records.ml" 360 18880 18946
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 358 18821 18836 "records.ml" 358 18821 18839
+)
+"records.ml" 360 18880 18947 "records.ml" 360 18880 18957
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 358 18821 18840 "records.ml" 358 18821 18850
+)
+"records.ml" 360 18880 18958 "records.ml" 360 18880 18959
+type(
+  API.ref_network ref -> API.ref_network
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 360 18880 18959 "records.ml" 360 18880 18963
+type(
+  API.ref_network ref
+)
+ident(
+  int_ref _ref "records.ml" 359 18857 18862 "records.ml" 359 18857 18866
+)
+"records.ml" 360 18880 18958 "records.ml" 360 18880 18963
+type(
+  API.ref_network
+)
+"records.ml" 360 18880 18917 "records.ml" 360 18880 18963
+type(
+  API.network_t
+)
+"records.ml" 360 18880 18906 "records.ml" 360 18880 18964
+type(
+  unit -> API.network_t
+)
+"records.ml" 360 18880 18900 "records.ml" 360 18880 18964
+type(
+  API.network_t lzy
+)
+"records.ml" 361 18968 18973 "records.ml" 361 18968 18979
+type(
+  API.network_t lzy ref
+)
+"records.ml" 361 18968 18982 "records.ml" 361 18968 18985
+type(
+  API.network_t lzy -> API.network_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 361 18968 18986 "records.ml" 361 18968 18998
+type(
+  API.network_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 360 18880 18885 "records.ml" 360 18880 18897
+)
+"records.ml" 361 18968 18982 "records.ml" 361 18968 18998
+type(
+  API.network_t lzy ref
+)
+"records.ml" 362 19002 19007 "records.ml" 362 19002 19008
+type(
+  unit -> API.network_t
+)
+"records.ml" 362 19002 19009 "records.ml" 362 19002 19011
+type(
+  unit
+)
+"records.ml" 362 19002 19014 "records.ml" 362 19002 19021
+type(
+  API.network_t lzy ref -> API.network_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 362 19002 19022 "records.ml" 362 19002 19028
+type(
+  API.network_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 361 18968 18973 "records.ml" 361 18968 18979
+)
+"records.ml" 362 19002 19014 "records.ml" 362 19002 19028
+type(
+  API.network_t
+)
+"records.ml" 363 19032 19047 "records.ml" 363 19032 19048
+type(
+  API.ref_network
+)
+ident(
+  def r "records.ml" 363 19032 19052 "records.ml" 363 19032 19085
+)
+"records.ml" 363 19032 19052 "records.ml" 363 19032 19056
+type(
+  API.ref_network ref
+)
+ident(
+  int_ref _ref "records.ml" 359 18857 18862 "records.ml" 359 18857 18866
+)
+"records.ml" 363 19032 19057 "records.ml" 363 19032 19059
+type(
+  API.ref_network ref -> API.ref_network -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 363 19032 19060 "records.ml" 363 19032 19061
+type(
+  API.ref_network
+)
+ident(
+  int_ref r "records.ml" 363 19032 19047 "records.ml" 363 19032 19048
+)
+"records.ml" 363 19032 19052 "records.ml" 363 19032 19061
+type(
+  unit
+)
+"records.ml" 363 19032 19063 "records.ml" 363 19032 19069
+type(
+  API.network_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 361 18968 18973 "records.ml" 361 18968 18979
+)
+"records.ml" 363 19032 19070 "records.ml" 363 19032 19072
+type(
+  API.network_t lzy ref -> API.network_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 363 19032 19073 "records.ml" 363 19032 19085
+type(
+  API.network_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 360 18880 18885 "records.ml" 360 18880 18897
+)
+"records.ml" 363 19032 19063 "records.ml" 363 19032 19085
+type(
+  unit
+)
+"records.ml" 363 19032 19052 "records.ml" 363 19032 19085
+type(
+  unit
+)
+"records.ml" 363 19032 19042 "records.ml" 363 19032 19087
+type(
+  API.ref_network -> unit
+)
+"records.ml" 364 19089 19108 "records.ml" 364 19089 19109
+type(
+  API.ref_network
+)
+ident(
+  def a "records.ml" 364 19089 19116 "records.ml" 364 19089 19142
+)
+"records.ml" 364 19089 19110 "records.ml" 364 19089 19111
+type(
+  API.network_t
+)
+ident(
+  def b "records.ml" 364 19089 19116 "records.ml" 364 19089 19142
+)
+"records.ml" 364 19089 19107 "records.ml" 364 19089 19112
+type(
+  API.ref_network * API.network_t
+)
+"records.ml" 364 19089 19116 "records.ml" 364 19089 19120
+type(
+  API.ref_network ref
+)
+ident(
+  int_ref _ref "records.ml" 359 18857 18862 "records.ml" 359 18857 18866
+)
+"records.ml" 364 19089 19121 "records.ml" 364 19089 19123
+type(
+  API.ref_network ref -> API.ref_network -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 364 19089 19124 "records.ml" 364 19089 19125
+type(
+  API.ref_network
+)
+ident(
+  int_ref a "records.ml" 364 19089 19108 "records.ml" 364 19089 19109
+)
+"records.ml" 364 19089 19116 "records.ml" 364 19089 19125
+type(
+  unit
+)
+"records.ml" 364 19089 19127 "records.ml" 364 19089 19133
+type(
+  API.network_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 361 18968 18973 "records.ml" 361 18968 18979
+)
+"records.ml" 364 19089 19134 "records.ml" 364 19089 19136
+type(
+  API.network_t lzy ref -> API.network_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 364 19089 19141 "records.ml" 364 19089 19142
+type(
+  API.network_t
+)
+ident(
+  int_ref b "records.ml" 364 19089 19110 "records.ml" 364 19089 19111
+)
+"records.ml" 364 19089 19137 "records.ml" 364 19089 19142
+type(
+  API.network_t lzy
+)
+"records.ml" 364 19089 19127 "records.ml" 364 19089 19142
+type(
+  unit
+)
+"records.ml" 364 19089 19116 "records.ml" 364 19089 19142
+type(
+  unit
+)
+"records.ml" 364 19089 19102 "records.ml" 364 19089 19143
+type(
+  API.ref_network * API.network_t -> unit
+)
+"records.ml" 365 19145 19155 "records.ml" 365 19145 19156
+type(
+  unit -> API.network_t
+)
+ident(
+  int_ref x "records.ml" 362 19002 19007 "records.ml" 362 19002 19008
+)
+"records.ml" 366 19158 19173 "records.ml" 366 19158 19175
+type(
+  unit
+)
+"records.ml" 366 19158 19179 "records.ml" 366 19158 19180
+type(
+  API.ref_network ref -> API.ref_network
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 366 19158 19180 "records.ml" 366 19158 19184
+type(
+  API.ref_network ref
+)
+ident(
+  int_ref _ref "records.ml" 359 18857 18862 "records.ml" 359 18857 18866
+)
+"records.ml" 366 19158 19179 "records.ml" 366 19158 19184
+type(
+  API.ref_network
+)
+"records.ml" 366 19158 19168 "records.ml" 366 19158 19185
+type(
+  unit -> API.ref_network
+)
+"records.ml" 368 19201 19204 "records.ml" 368 19201 19214
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 368 19201 19221 "records.ml" 368 19201 19227
+type(
+  string
+)
+"records.ml" 368 19201 19238 "records.ml" 368 19201 19240
+type(
+  unit
+)
+"records.ml" 368 19201 19245 "records.ml" 368 19201 19246
+type(
+  unit -> API.network_t
+)
+ident(
+  int_ref x "records.ml" 362 19002 19007 "records.ml" 362 19002 19008
+)
+"records.ml" 368 19201 19247 "records.ml" 368 19201 19249
+type(
+  unit
+)
+"records.ml" 368 19201 19244 "records.ml" 368 19201 19250
+type(
+  API.network_t
+)
+"records.ml" 368 19201 19244 "records.ml" 368 19201 19267
+type(
+  string
+)
+"records.ml" 368 19201 19233 "records.ml" 368 19201 19268
+type(
+  unit -> string
+)
+"records.ml" 368 19201 19269 "records.ml" 368 19201 19271
+type(
+  unit
+)
+"records.ml" 368 19201 19204 "records.ml" 368 19201 19271
+type(
+  field
+)
+"records.ml" 369 19273 19276 "records.ml" 369 19273 19286
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 369 19273 19293 "records.ml" 369 19273 19305
+type(
+  string
+)
+"records.ml" 369 19273 19316 "records.ml" 369 19273 19318
+type(
+  unit
+)
+"records.ml" 369 19273 19323 "records.ml" 369 19273 19324
+type(
+  unit -> API.network_t
+)
+ident(
+  int_ref x "records.ml" 362 19002 19007 "records.ml" 362 19002 19008
+)
+"records.ml" 369 19273 19325 "records.ml" 369 19273 19327
+type(
+  unit
+)
+"records.ml" 369 19273 19322 "records.ml" 369 19273 19328
+type(
+  API.network_t
+)
+"records.ml" 369 19273 19322 "records.ml" 369 19273 19351
+type(
+  string
+)
+"records.ml" 369 19273 19311 "records.ml" 369 19273 19352
+type(
+  unit -> string
+)
+"records.ml" 370 19353 19367 "records.ml" 370 19353 19368
+type(
+  string
+)
+ident(
+  def x "records.ml" 370 19353 19372 "records.ml" 370 19353 19422
+)
+"records.ml" 370 19353 19372 "records.ml" 370 19353 19401
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_network -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Network ).set_name_label
+)
+"records.ml" 370 19353 19402 "records.ml" 370 19353 19405
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 358 18821 18836 "records.ml" 358 18821 18839
+)
+"records.ml" 370 19353 19406 "records.ml" 370 19353 19416
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 358 18821 18840 "records.ml" 358 18821 18850
+)
+"records.ml" 370 19353 19417 "records.ml" 370 19353 19420
+type(
+  API.ref_network
+)
+ident(
+  int_ref net "records.ml" 358 18821 18851 "records.ml" 358 18821 18854
+)
+"records.ml" 370 19353 19421 "records.ml" 370 19353 19422
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 370 19353 19367 "records.ml" 370 19353 19368
+)
+"records.ml" 370 19353 19372 "records.ml" 370 19353 19422
+type(
+  unit
+)
+"records.ml" 370 19353 19362 "records.ml" 370 19353 19423
+type(
+  string -> unit
+)
+"records.ml" 370 19353 19424 "records.ml" 370 19353 19426
+type(
+  unit
+)
+"records.ml" 369 19273 19276 "records.ml" 370 19353 19426
+type(
+  field
+)
+"records.ml" 371 19428 19431 "records.ml" 371 19428 19441
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 371 19428 19448 "records.ml" 371 19428 19466
+type(
+  string
+)
+"records.ml" 371 19428 19477 "records.ml" 371 19428 19479
+type(
+  unit
+)
+"records.ml" 371 19428 19484 "records.ml" 371 19428 19485
+type(
+  unit -> API.network_t
+)
+ident(
+  int_ref x "records.ml" 362 19002 19007 "records.ml" 362 19002 19008
+)
+"records.ml" 371 19428 19486 "records.ml" 371 19428 19488
+type(
+  unit
+)
+"records.ml" 371 19428 19483 "records.ml" 371 19428 19489
+type(
+  API.network_t
+)
+"records.ml" 371 19428 19483 "records.ml" 371 19428 19518
+type(
+  string
+)
+"records.ml" 371 19428 19472 "records.ml" 371 19428 19519
+type(
+  unit -> string
+)
+"records.ml" 372 19520 19534 "records.ml" 372 19520 19535
+type(
+  string
+)
+ident(
+  def x "records.ml" 372 19520 19539 "records.ml" 372 19520 19595
+)
+"records.ml" 372 19520 19539 "records.ml" 372 19520 19574
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_network -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Network ).set_name_description
+)
+"records.ml" 372 19520 19575 "records.ml" 372 19520 19578
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 358 18821 18836 "records.ml" 358 18821 18839
+)
+"records.ml" 372 19520 19579 "records.ml" 372 19520 19589
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 358 18821 18840 "records.ml" 358 18821 18850
+)
+"records.ml" 372 19520 19590 "records.ml" 372 19520 19593
+type(
+  API.ref_network
+)
+ident(
+  int_ref net "records.ml" 358 18821 18851 "records.ml" 358 18821 18854
+)
+"records.ml" 372 19520 19594 "records.ml" 372 19520 19595
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 372 19520 19534 "records.ml" 372 19520 19535
+)
+"records.ml" 372 19520 19539 "records.ml" 372 19520 19595
+type(
+  unit
+)
+"records.ml" 372 19520 19529 "records.ml" 372 19520 19596
+type(
+  string -> unit
+)
+"records.ml" 372 19520 19597 "records.ml" 372 19520 19599
+type(
+  unit
+)
+"records.ml" 371 19428 19431 "records.ml" 372 19520 19599
+type(
+  field
+)
+"records.ml" 373 19601 19604 "records.ml" 373 19601 19614
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 373 19601 19621 "records.ml" 373 19601 19632
+type(
+  string
+)
+"records.ml" 373 19601 19643 "records.ml" 373 19601 19645
+type(
+  unit
+)
+"records.ml" 373 19601 19649 "records.ml" 373 19601 19662
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 373 19601 19663 "records.ml" 373 19601 19667
+type(
+  string
+)
+"records.ml" 373 19601 19669 "records.ml" 373 19601 19677
+type(
+  ([ `VIF ] Ref.t -> string) -> API.ref_VIF_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 373 19601 19683 "records.ml" 373 19601 19686
+type(
+  [ `VIF ] Ref.t
+)
+ident(
+  def vif "records.ml" 373 19601 19690 "records.ml" 373 19601 19711
+)
+"records.ml" 373 19601 19690 "records.ml" 373 19601 19707
+type(
+  [ `VIF ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 373 19601 19708 "records.ml" 373 19601 19711
+type(
+  [ `VIF ] Ref.t
+)
+ident(
+  int_ref vif "records.ml" 373 19601 19683 "records.ml" 373 19601 19686
+)
+"records.ml" 373 19601 19690 "records.ml" 373 19601 19711
+type(
+  string
+)
+"records.ml" 373 19601 19678 "records.ml" 373 19601 19712
+type(
+  [ `VIF ] Ref.t -> string
+)
+"records.ml" 373 19601 19714 "records.ml" 373 19601 19715
+type(
+  unit -> API.network_t
+)
+ident(
+  int_ref x "records.ml" 362 19002 19007 "records.ml" 362 19002 19008
+)
+"records.ml" 373 19601 19716 "records.ml" 373 19601 19718
+type(
+  unit
+)
+"records.ml" 373 19601 19713 "records.ml" 373 19601 19719
+type(
+  API.network_t
+)
+"records.ml" 373 19601 19713 "records.ml" 373 19601 19736
+type(
+  API.ref_VIF_set
+)
+"records.ml" 373 19601 19668 "records.ml" 373 19601 19737
+type(
+  string list
+)
+"records.ml" 373 19601 19649 "records.ml" 373 19601 19737
+type(
+  string
+)
+"records.ml" 373 19601 19638 "records.ml" 373 19601 19738
+type(
+  unit -> string
+)
+"records.ml" 374 19739 19757 "records.ml" 374 19739 19759
+type(
+  unit
+)
+"records.ml" 374 19739 19764 "records.ml" 374 19739 19772
+type(
+  ([ `VIF ] Ref.t -> string) -> API.ref_VIF_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 374 19739 19778 "records.ml" 374 19739 19781
+type(
+  [ `VIF ] Ref.t
+)
+ident(
+  def vif "records.ml" 374 19739 19785 "records.ml" 374 19739 19806
+)
+"records.ml" 374 19739 19785 "records.ml" 374 19739 19802
+type(
+  [ `VIF ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 374 19739 19803 "records.ml" 374 19739 19806
+type(
+  [ `VIF ] Ref.t
+)
+ident(
+  int_ref vif "records.ml" 374 19739 19778 "records.ml" 374 19739 19781
+)
+"records.ml" 374 19739 19785 "records.ml" 374 19739 19806
+type(
+  string
+)
+"records.ml" 374 19739 19773 "records.ml" 374 19739 19807
+type(
+  [ `VIF ] Ref.t -> string
+)
+"records.ml" 374 19739 19809 "records.ml" 374 19739 19810
+type(
+  unit -> API.network_t
+)
+ident(
+  int_ref x "records.ml" 362 19002 19007 "records.ml" 362 19002 19008
+)
+"records.ml" 374 19739 19811 "records.ml" 374 19739 19813
+type(
+  unit
+)
+"records.ml" 374 19739 19808 "records.ml" 374 19739 19814
+type(
+  API.network_t
+)
+"records.ml" 374 19739 19808 "records.ml" 374 19739 19831
+type(
+  API.ref_VIF_set
+)
+"records.ml" 374 19739 19763 "records.ml" 374 19739 19832
+type(
+  string list
+)
+"records.ml" 374 19739 19752 "records.ml" 374 19739 19833
+type(
+  unit -> string list
+)
+"records.ml" 374 19739 19834 "records.ml" 374 19739 19836
+type(
+  unit
+)
+"records.ml" 373 19601 19604 "records.ml" 374 19739 19836
+type(
+  field
+)
+"records.ml" 375 19838 19841 "records.ml" 375 19838 19851
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 375 19838 19858 "records.ml" 375 19838 19869
+type(
+  string
+)
+"records.ml" 375 19838 19880 "records.ml" 375 19838 19882
+type(
+  unit
+)
+"records.ml" 375 19838 19886 "records.ml" 375 19838 19899
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 375 19838 19900 "records.ml" 375 19838 19904
+type(
+  string
+)
+"records.ml" 375 19838 19906 "records.ml" 375 19838 19914
+type(
+  ([ `PIF ] Ref.t -> string) -> API.ref_PIF_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 375 19838 19920 "records.ml" 375 19838 19923
+type(
+  [ `PIF ] Ref.t
+)
+ident(
+  def pif "records.ml" 375 19838 19927 "records.ml" 375 19838 19948
+)
+"records.ml" 375 19838 19927 "records.ml" 375 19838 19944
+type(
+  [ `PIF ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 375 19838 19945 "records.ml" 375 19838 19948
+type(
+  [ `PIF ] Ref.t
+)
+ident(
+  int_ref pif "records.ml" 375 19838 19920 "records.ml" 375 19838 19923
+)
+"records.ml" 375 19838 19927 "records.ml" 375 19838 19948
+type(
+  string
+)
+"records.ml" 375 19838 19915 "records.ml" 375 19838 19949
+type(
+  [ `PIF ] Ref.t -> string
+)
+"records.ml" 375 19838 19951 "records.ml" 375 19838 19952
+type(
+  unit -> API.network_t
+)
+ident(
+  int_ref x "records.ml" 362 19002 19007 "records.ml" 362 19002 19008
+)
+"records.ml" 375 19838 19953 "records.ml" 375 19838 19955
+type(
+  unit
+)
+"records.ml" 375 19838 19950 "records.ml" 375 19838 19956
+type(
+  API.network_t
+)
+"records.ml" 375 19838 19950 "records.ml" 375 19838 19973
+type(
+  API.ref_PIF_set
+)
+"records.ml" 375 19838 19905 "records.ml" 375 19838 19974
+type(
+  string list
+)
+"records.ml" 375 19838 19886 "records.ml" 375 19838 19974
+type(
+  string
+)
+"records.ml" 375 19838 19875 "records.ml" 375 19838 19975
+type(
+  unit -> string
+)
+"records.ml" 376 19976 19994 "records.ml" 376 19976 19996
+type(
+  unit
+)
+"records.ml" 376 19976 20001 "records.ml" 376 19976 20009
+type(
+  ([ `PIF ] Ref.t -> string) -> API.ref_PIF_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 376 19976 20015 "records.ml" 376 19976 20018
+type(
+  [ `PIF ] Ref.t
+)
+ident(
+  def pif "records.ml" 376 19976 20022 "records.ml" 376 19976 20043
+)
+"records.ml" 376 19976 20022 "records.ml" 376 19976 20039
+type(
+  [ `PIF ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 376 19976 20040 "records.ml" 376 19976 20043
+type(
+  [ `PIF ] Ref.t
+)
+ident(
+  int_ref pif "records.ml" 376 19976 20015 "records.ml" 376 19976 20018
+)
+"records.ml" 376 19976 20022 "records.ml" 376 19976 20043
+type(
+  string
+)
+"records.ml" 376 19976 20010 "records.ml" 376 19976 20044
+type(
+  [ `PIF ] Ref.t -> string
+)
+"records.ml" 376 19976 20046 "records.ml" 376 19976 20047
+type(
+  unit -> API.network_t
+)
+ident(
+  int_ref x "records.ml" 362 19002 19007 "records.ml" 362 19002 19008
+)
+"records.ml" 376 19976 20048 "records.ml" 376 19976 20050
+type(
+  unit
+)
+"records.ml" 376 19976 20045 "records.ml" 376 19976 20051
+type(
+  API.network_t
+)
+"records.ml" 376 19976 20045 "records.ml" 376 19976 20068
+type(
+  API.ref_PIF_set
+)
+"records.ml" 376 19976 20000 "records.ml" 376 19976 20069
+type(
+  string list
+)
+"records.ml" 376 19976 19989 "records.ml" 376 19976 20070
+type(
+  unit -> string list
+)
+"records.ml" 376 19976 20071 "records.ml" 376 19976 20073
+type(
+  unit
+)
+"records.ml" 375 19838 19841 "records.ml" 376 19976 20073
+type(
+  field
+)
+"records.ml" 377 20075 20078 "records.ml" 377 20075 20088
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 377 20075 20095 "records.ml" 377 20075 20100
+type(
+  string
+)
+"records.ml" 377 20075 20111 "records.ml" 377 20075 20113
+type(
+  unit
+)
+"records.ml" 377 20075 20118 "records.ml" 377 20075 20133
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 377 20075 20135 "records.ml" 377 20075 20136
+type(
+  unit -> API.network_t
+)
+ident(
+  int_ref x "records.ml" 362 19002 19007 "records.ml" 362 19002 19008
+)
+"records.ml" 377 20075 20137 "records.ml" 377 20075 20139
+type(
+  unit
+)
+"records.ml" 377 20075 20134 "records.ml" 377 20075 20140
+type(
+  API.network_t
+)
+"records.ml" 377 20075 20134 "records.ml" 377 20075 20156
+type(
+  int64
+)
+"records.ml" 377 20075 20117 "records.ml" 377 20075 20157
+type(
+  string
+)
+"records.ml" 377 20075 20106 "records.ml" 377 20075 20158
+type(
+  unit -> string
+)
+"records.ml" 377 20075 20169 "records.ml" 377 20075 20170
+type(
+  string
+)
+ident(
+  def x "records.ml" 377 20075 20174 "records.ml" 377 20075 20235
+)
+"records.ml" 377 20075 20174 "records.ml" 377 20075 20196
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_network -> value:int64 -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Network ).set_MTU
+)
+"records.ml" 377 20075 20197 "records.ml" 377 20075 20200
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 358 18821 18836 "records.ml" 358 18821 18839
+)
+"records.ml" 377 20075 20201 "records.ml" 377 20075 20211
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 358 18821 18840 "records.ml" 358 18821 18850
+)
+"records.ml" 377 20075 20212 "records.ml" 377 20075 20215
+type(
+  API.ref_network
+)
+ident(
+  int_ref net "records.ml" 358 18821 18851 "records.ml" 358 18821 18854
+)
+"records.ml" 377 20075 20217 "records.ml" 377 20075 20232
+type(
+  string -> int64
+)
+ident(
+  ext_ref Int64.of_string
+)
+"records.ml" 377 20075 20233 "records.ml" 377 20075 20234
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 377 20075 20169 "records.ml" 377 20075 20170
+)
+"records.ml" 377 20075 20216 "records.ml" 377 20075 20235
+type(
+  int64
+)
+"records.ml" 377 20075 20174 "records.ml" 377 20075 20235
+type(
+  unit
+)
+"records.ml" 377 20075 20164 "records.ml" 377 20075 20236
+type(
+  string -> unit
+)
+"records.ml" 377 20075 20237 "records.ml" 377 20075 20239
+type(
+  unit
+)
+"records.ml" 377 20075 20078 "records.ml" 377 20075 20239
+type(
+  field
+)
+"records.ml" 378 20241 20244 "records.ml" 378 20241 20254
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 378 20241 20261 "records.ml" 378 20241 20269
+type(
+  string
+)
+"records.ml" 378 20241 20280 "records.ml" 378 20241 20282
+type(
+  unit
+)
+"records.ml" 378 20241 20287 "records.ml" 378 20241 20288
+type(
+  unit -> API.network_t
+)
+ident(
+  int_ref x "records.ml" 362 19002 19007 "records.ml" 362 19002 19008
+)
+"records.ml" 378 20241 20289 "records.ml" 378 20241 20291
+type(
+  unit
+)
+"records.ml" 378 20241 20286 "records.ml" 378 20241 20292
+type(
+  API.network_t
+)
+"records.ml" 378 20241 20286 "records.ml" 378 20241 20311
+type(
+  string
+)
+"records.ml" 378 20241 20275 "records.ml" 378 20241 20312
+type(
+  unit -> string
+)
+"records.ml" 378 20241 20313 "records.ml" 378 20241 20315
+type(
+  unit
+)
+"records.ml" 378 20241 20244 "records.ml" 378 20241 20315
+type(
+  field
+)
+"records.ml" 379 20317 20320 "records.ml" 379 20317 20330
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 379 20317 20337 "records.ml" 379 20317 20351
+type(
+  string
+)
+"records.ml" 379 20317 20362 "records.ml" 379 20317 20364
+type(
+  unit
+)
+"records.ml" 379 20317 20368 "records.ml" 379 20317 20394
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 379 20317 20395 "records.ml" 379 20317 20399
+type(
+  string
+)
+"records.ml" 379 20317 20401 "records.ml" 379 20317 20402
+type(
+  unit -> API.network_t
+)
+ident(
+  int_ref x "records.ml" 362 19002 19007 "records.ml" 362 19002 19008
+)
+"records.ml" 379 20317 20403 "records.ml" 379 20317 20405
+type(
+  unit
+)
+"records.ml" 379 20317 20400 "records.ml" 379 20317 20406
+type(
+  API.network_t
+)
+"records.ml" 379 20317 20400 "records.ml" 379 20317 20431
+type(
+  API.string_to_string_map
+)
+"records.ml" 379 20317 20368 "records.ml" 379 20317 20431
+type(
+  string
+)
+"records.ml" 379 20317 20357 "records.ml" 379 20317 20432
+type(
+  unit -> string
+)
+"records.ml" 380 20433 20454 "records.ml" 380 20433 20455
+type(
+  string
+)
+ident(
+  def k "records.ml" 380 20433 20456 "records.ml" 380 20433 20518
+)
+"records.ml" 380 20433 20456 "records.ml" 380 20433 20457
+type(
+  string
+)
+ident(
+  def v "records.ml" 380 20433 20461 "records.ml" 380 20433 20518
+)
+"records.ml" 380 20433 20461 "records.ml" 380 20433 20495
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_network -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Network ).add_to_other_config
+)
+"records.ml" 380 20433 20496 "records.ml" 380 20433 20499
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 358 18821 18836 "records.ml" 358 18821 18839
+)
+"records.ml" 380 20433 20500 "records.ml" 380 20433 20510
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 358 18821 18840 "records.ml" 358 18821 18850
+)
+"records.ml" 380 20433 20511 "records.ml" 380 20433 20514
+type(
+  API.ref_network
+)
+ident(
+  int_ref net "records.ml" 358 18821 18851 "records.ml" 358 18821 18854
+)
+"records.ml" 380 20433 20515 "records.ml" 380 20433 20516
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 380 20433 20454 "records.ml" 380 20433 20455
+)
+"records.ml" 380 20433 20517 "records.ml" 380 20433 20518
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 380 20433 20456 "records.ml" 380 20433 20457
+)
+"records.ml" 380 20433 20461 "records.ml" 380 20433 20518
+type(
+  unit
+)
+"records.ml" 380 20433 20449 "records.ml" 380 20433 20519
+type(
+  string -> string -> unit
+)
+"records.ml" 381 20520 20546 "records.ml" 381 20520 20547
+type(
+  string
+)
+ident(
+  def k "records.ml" 381 20520 20551 "records.ml" 381 20520 20611
+)
+"records.ml" 381 20520 20551 "records.ml" 381 20520 20590
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_network -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Network ).remove_from_other_config
+)
+"records.ml" 381 20520 20591 "records.ml" 381 20520 20594
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 358 18821 18836 "records.ml" 358 18821 18839
+)
+"records.ml" 381 20520 20595 "records.ml" 381 20520 20605
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 358 18821 18840 "records.ml" 358 18821 18850
+)
+"records.ml" 381 20520 20606 "records.ml" 381 20520 20609
+type(
+  API.ref_network
+)
+ident(
+  int_ref net "records.ml" 358 18821 18851 "records.ml" 358 18821 18854
+)
+"records.ml" 381 20520 20610 "records.ml" 381 20520 20611
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 381 20520 20546 "records.ml" 381 20520 20547
+)
+"records.ml" 381 20520 20551 "records.ml" 381 20520 20611
+type(
+  unit
+)
+"records.ml" 381 20520 20541 "records.ml" 381 20520 20612
+type(
+  string -> unit
+)
+"records.ml" 382 20613 20631 "records.ml" 382 20613 20633
+type(
+  unit
+)
+"records.ml" 382 20613 20638 "records.ml" 382 20613 20639
+type(
+  unit -> API.network_t
+)
+ident(
+  int_ref x "records.ml" 362 19002 19007 "records.ml" 362 19002 19008
+)
+"records.ml" 382 20613 20640 "records.ml" 382 20613 20642
+type(
+  unit
+)
+"records.ml" 382 20613 20637 "records.ml" 382 20613 20643
+type(
+  API.network_t
+)
+"records.ml" 382 20613 20637 "records.ml" 382 20613 20668
+type(
+  API.string_to_string_map
+)
+"records.ml" 382 20613 20626 "records.ml" 382 20613 20669
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 382 20613 20670 "records.ml" 382 20613 20672
+type(
+  unit
+)
+"records.ml" 379 20317 20320 "records.ml" 382 20613 20672
+type(
+  field
+)
+"records.ml" 383 20674 20677 "records.ml" 383 20674 20687
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 383 20674 20694 "records.ml" 383 20674 20701
+type(
+  string
+)
+"records.ml" 383 20674 20712 "records.ml" 383 20674 20714
+type(
+  unit
+)
+"records.ml" 383 20674 20718 "records.ml" 383 20674 20745
+type(
+  (API.ref_blob -> string) -> string -> API.string_to_ref_blob_map -> string
+)
+ident(
+  ext_ref Record_util.s2brm_to_string
+)
+"records.ml" 383 20674 20746 "records.ml" 383 20674 20763
+type(
+  API.ref_blob -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 383 20674 20764 "records.ml" 383 20674 20768
+type(
+  string
+)
+"records.ml" 383 20674 20770 "records.ml" 383 20674 20771
+type(
+  unit -> API.network_t
+)
+ident(
+  int_ref x "records.ml" 362 19002 19007 "records.ml" 362 19002 19008
+)
+"records.ml" 383 20674 20772 "records.ml" 383 20674 20774
+type(
+  unit
+)
+"records.ml" 383 20674 20769 "records.ml" 383 20674 20775
+type(
+  API.network_t
+)
+"records.ml" 383 20674 20769 "records.ml" 383 20674 20793
+type(
+  API.string_to_ref_blob_map
+)
+"records.ml" 383 20674 20718 "records.ml" 383 20674 20793
+type(
+  string
+)
+"records.ml" 383 20674 20707 "records.ml" 383 20674 20794
+type(
+  unit -> string
+)
+"records.ml" 383 20674 20795 "records.ml" 383 20674 20797
+type(
+  unit
+)
+"records.ml" 383 20674 20677 "records.ml" 383 20674 20797
+type(
+  field
+)
+"records.ml" 384 20799 20802 "records.ml" 384 20799 20812
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> API.string_set) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 384 20799 20819 "records.ml" 384 20799 20825
+type(
+  string
+)
+"records.ml" 385 20826 20840 "records.ml" 385 20826 20842
+type(
+  unit
+)
+"records.ml" 385 20826 20846 "records.ml" 385 20826 20859
+type(
+  string -> API.string_set -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 385 20826 20860 "records.ml" 385 20826 20864
+type(
+  string
+)
+"records.ml" 385 20826 20866 "records.ml" 385 20826 20867
+type(
+  unit -> API.network_t
+)
+ident(
+  int_ref x "records.ml" 362 19002 19007 "records.ml" 362 19002 19008
+)
+"records.ml" 385 20826 20868 "records.ml" 385 20826 20870
+type(
+  unit
+)
+"records.ml" 385 20826 20865 "records.ml" 385 20826 20871
+type(
+  API.network_t
+)
+"records.ml" 385 20826 20865 "records.ml" 385 20826 20888
+type(
+  API.string_set
+)
+"records.ml" 385 20826 20846 "records.ml" 385 20826 20888
+type(
+  string
+)
+"records.ml" 385 20826 20835 "records.ml" 385 20826 20889
+type(
+  unit -> string
+)
+"records.ml" 386 20890 20908 "records.ml" 386 20890 20910
+type(
+  unit
+)
+"records.ml" 386 20890 20915 "records.ml" 386 20890 20916
+type(
+  unit -> API.network_t
+)
+ident(
+  int_ref x "records.ml" 362 19002 19007 "records.ml" 362 19002 19008
+)
+"records.ml" 386 20890 20917 "records.ml" 386 20890 20919
+type(
+  unit
+)
+"records.ml" 386 20890 20914 "records.ml" 386 20890 20920
+type(
+  API.network_t
+)
+"records.ml" 386 20890 20914 "records.ml" 386 20890 20937
+type(
+  API.string_set
+)
+"records.ml" 386 20890 20903 "records.ml" 386 20890 20938
+type(
+  unit -> API.string_set
+)
+"records.ml" 387 20939 20960 "records.ml" 387 20939 20963
+type(
+  string
+)
+ident(
+  def tag "records.ml" 387 20939 20967 "records.ml" 387 20939 21013
+)
+"records.ml" 387 20939 20967 "records.ml" 387 20939 20990
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_network -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Network ).add_tags
+)
+"records.ml" 387 20939 20991 "records.ml" 387 20939 20994
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 358 18821 18836 "records.ml" 358 18821 18839
+)
+"records.ml" 387 20939 20995 "records.ml" 387 20939 21005
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 358 18821 18840 "records.ml" 358 18821 18850
+)
+"records.ml" 387 20939 21006 "records.ml" 387 20939 21009
+type(
+  API.ref_network
+)
+ident(
+  int_ref net "records.ml" 358 18821 18851 "records.ml" 358 18821 18854
+)
+"records.ml" 387 20939 21010 "records.ml" 387 20939 21013
+type(
+  string
+)
+ident(
+  int_ref tag "records.ml" 387 20939 20960 "records.ml" 387 20939 20963
+)
+"records.ml" 387 20939 20967 "records.ml" 387 20939 21013
+type(
+  unit
+)
+"records.ml" 387 20939 20955 "records.ml" 387 20939 21014
+type(
+  string -> unit
+)
+"records.ml" 388 21015 21041 "records.ml" 388 21015 21044
+type(
+  string
+)
+ident(
+  def tag "records.ml" 388 21015 21048 "records.ml" 388 21015 21097
+)
+"records.ml" 388 21015 21048 "records.ml" 388 21015 21074
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_network -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Network ).remove_tags
+)
+"records.ml" 388 21015 21075 "records.ml" 388 21015 21078
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 358 18821 18836 "records.ml" 358 18821 18839
+)
+"records.ml" 388 21015 21079 "records.ml" 388 21015 21089
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 358 18821 18840 "records.ml" 358 18821 18850
+)
+"records.ml" 388 21015 21090 "records.ml" 388 21015 21093
+type(
+  API.ref_network
+)
+ident(
+  int_ref net "records.ml" 358 18821 18851 "records.ml" 358 18821 18854
+)
+"records.ml" 388 21015 21094 "records.ml" 388 21015 21097
+type(
+  string
+)
+ident(
+  int_ref tag "records.ml" 388 21015 21041 "records.ml" 388 21015 21044
+)
+"records.ml" 388 21015 21048 "records.ml" 388 21015 21097
+type(
+  unit
+)
+"records.ml" 388 21015 21036 "records.ml" 388 21015 21098
+type(
+  string -> unit
+)
+"records.ml" 388 21015 21099 "records.ml" 388 21015 21101
+type(
+  unit
+)
+"records.ml" 384 20799 20802 "records.ml" 388 21015 21101
+type(
+  field
+)
+"records.ml" 367 19187 19199 "records.ml" 389 21103 21106
+type(
+  field list
+)
+"records.ml" 363 19032 19033 "records.ml" 389 21103 21107
+type(
+  ([ `network ], API.network_t) record
+)
+"records.ml" 362 19002 19003 "records.ml" 389 21103 21107
+type(
+  ([ `network ], API.network_t) record
+)
+"records.ml" 361 18968 18969 "records.ml" 389 21103 21107
+type(
+  ([ `network ], API.network_t) record
+)
+"records.ml" 360 18880 18881 "records.ml" 389 21103 21107
+type(
+  ([ `network ], API.network_t) record
+)
+"records.ml" 359 18857 18858 "records.ml" 389 21103 21107
+type(
+  ([ `network ], API.network_t) record
+)
+"records.ml" 392 21110 21114 "records.ml" 392 21110 21125
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_pool -> ([ `pool ], API.pool_t) record
+)
+ident(
+  def pool_record "records.ml" 456 25939 25939 --
+)
+"records.ml" 392 21110 21126 "records.ml" 392 21110 21129
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 392 21110 21130 "records.ml" 454 25933 25937
+)
+"records.ml" 392 21110 21130 "records.ml" 392 21110 21140
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 392 21110 21141 "records.ml" 454 25933 25937
+)
+"records.ml" 392 21110 21141 "records.ml" 392 21110 21145
+type(
+  API.ref_pool
+)
+ident(
+  def pool "records.ml" 393 21148 21149 "records.ml" 454 25933 25937
+)
+"records.ml" 393 21148 21153 "records.ml" 393 21148 21157
+type(
+  API.ref_pool ref
+)
+"records.ml" 393 21148 21160 "records.ml" 393 21148 21163
+type(
+  API.ref_pool -> API.ref_pool ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 393 21148 21164 "records.ml" 393 21148 21168
+type(
+  API.ref_pool
+)
+ident(
+  int_ref pool "records.ml" 392 21110 21141 "records.ml" 392 21110 21145
+)
+"records.ml" 393 21148 21160 "records.ml" 393 21148 21168
+type(
+  API.ref_pool ref
+)
+"records.ml" 394 21172 21177 "records.ml" 394 21172 21189
+type(
+  API.pool_t lzy
+)
+"records.ml" 394 21172 21203 "records.ml" 394 21172 21205
+type(
+  unit
+)
+"records.ml" 394 21172 21209 "records.ml" 394 21172 21231
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_pool -> API.pool_t
+)
+ident(
+  ext_ref Client.( Client ).( Pool ).get_record
+)
+"records.ml" 394 21172 21232 "records.ml" 394 21172 21235
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 392 21110 21126 "records.ml" 392 21110 21129
+)
+"records.ml" 394 21172 21236 "records.ml" 394 21172 21246
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 392 21110 21130 "records.ml" 392 21110 21140
+)
+"records.ml" 394 21172 21247 "records.ml" 394 21172 21248
+type(
+  API.ref_pool ref -> API.ref_pool
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 394 21172 21248 "records.ml" 394 21172 21252
+type(
+  API.ref_pool ref
+)
+ident(
+  int_ref _ref "records.ml" 393 21148 21153 "records.ml" 393 21148 21157
+)
+"records.ml" 394 21172 21247 "records.ml" 394 21172 21252
+type(
+  API.ref_pool
+)
+"records.ml" 394 21172 21209 "records.ml" 394 21172 21252
+type(
+  API.pool_t
+)
+"records.ml" 394 21172 21198 "records.ml" 394 21172 21253
+type(
+  unit -> API.pool_t
+)
+"records.ml" 394 21172 21192 "records.ml" 394 21172 21253
+type(
+  API.pool_t lzy
+)
+"records.ml" 395 21257 21262 "records.ml" 395 21257 21268
+type(
+  API.pool_t lzy ref
+)
+"records.ml" 395 21257 21271 "records.ml" 395 21257 21274
+type(
+  API.pool_t lzy -> API.pool_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 395 21257 21275 "records.ml" 395 21257 21287
+type(
+  API.pool_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 394 21172 21177 "records.ml" 394 21172 21189
+)
+"records.ml" 395 21257 21271 "records.ml" 395 21257 21287
+type(
+  API.pool_t lzy ref
+)
+"records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+type(
+  unit -> API.pool_t
+)
+"records.ml" 396 21291 21298 "records.ml" 396 21291 21300
+type(
+  unit
+)
+"records.ml" 396 21291 21303 "records.ml" 396 21291 21310
+type(
+  API.pool_t lzy ref -> API.pool_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 396 21291 21311 "records.ml" 396 21291 21317
+type(
+  API.pool_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 395 21257 21262 "records.ml" 395 21257 21268
+)
+"records.ml" 396 21291 21303 "records.ml" 396 21291 21317
+type(
+  API.pool_t
+)
+"records.ml" 397 21321 21336 "records.ml" 397 21321 21337
+type(
+  API.ref_pool
+)
+ident(
+  def r "records.ml" 397 21321 21341 "records.ml" 397 21321 21374
+)
+"records.ml" 397 21321 21341 "records.ml" 397 21321 21345
+type(
+  API.ref_pool ref
+)
+ident(
+  int_ref _ref "records.ml" 393 21148 21153 "records.ml" 393 21148 21157
+)
+"records.ml" 397 21321 21346 "records.ml" 397 21321 21348
+type(
+  API.ref_pool ref -> API.ref_pool -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 397 21321 21349 "records.ml" 397 21321 21350
+type(
+  API.ref_pool
+)
+ident(
+  int_ref r "records.ml" 397 21321 21336 "records.ml" 397 21321 21337
+)
+"records.ml" 397 21321 21341 "records.ml" 397 21321 21350
+type(
+  unit
+)
+"records.ml" 397 21321 21352 "records.ml" 397 21321 21358
+type(
+  API.pool_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 395 21257 21262 "records.ml" 395 21257 21268
+)
+"records.ml" 397 21321 21359 "records.ml" 397 21321 21361
+type(
+  API.pool_t lzy ref -> API.pool_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 397 21321 21362 "records.ml" 397 21321 21374
+type(
+  API.pool_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 394 21172 21177 "records.ml" 394 21172 21189
+)
+"records.ml" 397 21321 21352 "records.ml" 397 21321 21374
+type(
+  unit
+)
+"records.ml" 397 21321 21341 "records.ml" 397 21321 21374
+type(
+  unit
+)
+"records.ml" 397 21321 21331 "records.ml" 397 21321 21376
+type(
+  API.ref_pool -> unit
+)
+"records.ml" 398 21378 21397 "records.ml" 398 21378 21398
+type(
+  API.ref_pool
+)
+ident(
+  def a "records.ml" 398 21378 21405 "records.ml" 398 21378 21431
+)
+"records.ml" 398 21378 21399 "records.ml" 398 21378 21400
+type(
+  API.pool_t
+)
+ident(
+  def b "records.ml" 398 21378 21405 "records.ml" 398 21378 21431
+)
+"records.ml" 398 21378 21396 "records.ml" 398 21378 21401
+type(
+  API.ref_pool * API.pool_t
+)
+"records.ml" 398 21378 21405 "records.ml" 398 21378 21409
+type(
+  API.ref_pool ref
+)
+ident(
+  int_ref _ref "records.ml" 393 21148 21153 "records.ml" 393 21148 21157
+)
+"records.ml" 398 21378 21410 "records.ml" 398 21378 21412
+type(
+  API.ref_pool ref -> API.ref_pool -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 398 21378 21413 "records.ml" 398 21378 21414
+type(
+  API.ref_pool
+)
+ident(
+  int_ref a "records.ml" 398 21378 21397 "records.ml" 398 21378 21398
+)
+"records.ml" 398 21378 21405 "records.ml" 398 21378 21414
+type(
+  unit
+)
+"records.ml" 398 21378 21416 "records.ml" 398 21378 21422
+type(
+  API.pool_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 395 21257 21262 "records.ml" 395 21257 21268
+)
+"records.ml" 398 21378 21423 "records.ml" 398 21378 21425
+type(
+  API.pool_t lzy ref -> API.pool_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 398 21378 21430 "records.ml" 398 21378 21431
+type(
+  API.pool_t
+)
+ident(
+  int_ref b "records.ml" 398 21378 21399 "records.ml" 398 21378 21400
+)
+"records.ml" 398 21378 21426 "records.ml" 398 21378 21431
+type(
+  API.pool_t lzy
+)
+"records.ml" 398 21378 21416 "records.ml" 398 21378 21431
+type(
+  unit
+)
+"records.ml" 398 21378 21405 "records.ml" 398 21378 21431
+type(
+  unit
+)
+"records.ml" 398 21378 21391 "records.ml" 398 21378 21432
+type(
+  API.ref_pool * API.pool_t -> unit
+)
+"records.ml" 399 21434 21444 "records.ml" 399 21434 21445
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 400 21447 21462 "records.ml" 400 21447 21464
+type(
+  unit
+)
+"records.ml" 400 21447 21468 "records.ml" 400 21447 21469
+type(
+  API.ref_pool ref -> API.ref_pool
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 400 21447 21469 "records.ml" 400 21447 21473
+type(
+  API.ref_pool ref
+)
+ident(
+  int_ref _ref "records.ml" 393 21148 21153 "records.ml" 393 21148 21157
+)
+"records.ml" 400 21447 21468 "records.ml" 400 21447 21473
+type(
+  API.ref_pool
+)
+"records.ml" 400 21447 21457 "records.ml" 400 21447 21474
+type(
+  unit -> API.ref_pool
+)
+"records.ml" 402 21490 21493 "records.ml" 402 21490 21503
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 402 21490 21510 "records.ml" 402 21490 21516
+type(
+  string
+)
+"records.ml" 402 21490 21527 "records.ml" 402 21490 21529
+type(
+  unit
+)
+"records.ml" 402 21490 21534 "records.ml" 402 21490 21535
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 402 21490 21536 "records.ml" 402 21490 21538
+type(
+  unit
+)
+"records.ml" 402 21490 21533 "records.ml" 402 21490 21539
+type(
+  API.pool_t
+)
+"records.ml" 402 21490 21533 "records.ml" 402 21490 21553
+type(
+  string
+)
+"records.ml" 402 21490 21522 "records.ml" 402 21490 21554
+type(
+  unit -> string
+)
+"records.ml" 402 21490 21555 "records.ml" 402 21490 21557
+type(
+  unit
+)
+"records.ml" 402 21490 21493 "records.ml" 402 21490 21557
+type(
+  field
+)
+"records.ml" 403 21559 21562 "records.ml" 403 21559 21572
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 403 21559 21579 "records.ml" 403 21559 21591
+type(
+  string
+)
+"records.ml" 403 21559 21602 "records.ml" 403 21559 21604
+type(
+  unit
+)
+"records.ml" 403 21559 21609 "records.ml" 403 21559 21610
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 403 21559 21611 "records.ml" 403 21559 21613
+type(
+  unit
+)
+"records.ml" 403 21559 21608 "records.ml" 403 21559 21614
+type(
+  API.pool_t
+)
+"records.ml" 403 21559 21608 "records.ml" 403 21559 21634
+type(
+  string
+)
+"records.ml" 403 21559 21597 "records.ml" 403 21559 21635
+type(
+  unit -> string
+)
+"records.ml" 404 21636 21650 "records.ml" 404 21636 21651
+type(
+  string
+)
+ident(
+  def x "records.ml" 404 21636 21655 "records.ml" 404 21636 21703
+)
+"records.ml" 404 21636 21655 "records.ml" 404 21636 21681
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_pool -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Pool ).set_name_label
+)
+"records.ml" 404 21636 21682 "records.ml" 404 21636 21685
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 392 21110 21126 "records.ml" 392 21110 21129
+)
+"records.ml" 404 21636 21686 "records.ml" 404 21636 21696
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 392 21110 21130 "records.ml" 392 21110 21140
+)
+"records.ml" 404 21636 21697 "records.ml" 404 21636 21701
+type(
+  API.ref_pool
+)
+ident(
+  int_ref pool "records.ml" 392 21110 21141 "records.ml" 392 21110 21145
+)
+"records.ml" 404 21636 21702 "records.ml" 404 21636 21703
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 404 21636 21650 "records.ml" 404 21636 21651
+)
+"records.ml" 404 21636 21655 "records.ml" 404 21636 21703
+type(
+  unit
+)
+"records.ml" 404 21636 21645 "records.ml" 404 21636 21704
+type(
+  string -> unit
+)
+"records.ml" 404 21636 21705 "records.ml" 404 21636 21707
+type(
+  unit
+)
+"records.ml" 403 21559 21562 "records.ml" 404 21636 21707
+type(
+  field
+)
+"records.ml" 405 21709 21712 "records.ml" 405 21709 21722
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 405 21709 21729 "records.ml" 405 21709 21747
+type(
+  string
+)
+"records.ml" 405 21709 21758 "records.ml" 405 21709 21760
+type(
+  unit
+)
+"records.ml" 405 21709 21765 "records.ml" 405 21709 21766
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 405 21709 21767 "records.ml" 405 21709 21769
+type(
+  unit
+)
+"records.ml" 405 21709 21764 "records.ml" 405 21709 21770
+type(
+  API.pool_t
+)
+"records.ml" 405 21709 21764 "records.ml" 405 21709 21796
+type(
+  string
+)
+"records.ml" 405 21709 21753 "records.ml" 405 21709 21797
+type(
+  unit -> string
+)
+"records.ml" 406 21798 21812 "records.ml" 406 21798 21813
+type(
+  string
+)
+ident(
+  def x "records.ml" 406 21798 21817 "records.ml" 406 21798 21871
+)
+"records.ml" 406 21798 21817 "records.ml" 406 21798 21849
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_pool -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Pool ).set_name_description
+)
+"records.ml" 406 21798 21850 "records.ml" 406 21798 21853
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 392 21110 21126 "records.ml" 392 21110 21129
+)
+"records.ml" 406 21798 21854 "records.ml" 406 21798 21864
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 392 21110 21130 "records.ml" 392 21110 21140
+)
+"records.ml" 406 21798 21865 "records.ml" 406 21798 21869
+type(
+  API.ref_pool
+)
+ident(
+  int_ref pool "records.ml" 392 21110 21141 "records.ml" 392 21110 21145
+)
+"records.ml" 406 21798 21870 "records.ml" 406 21798 21871
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 406 21798 21812 "records.ml" 406 21798 21813
+)
+"records.ml" 406 21798 21817 "records.ml" 406 21798 21871
+type(
+  unit
+)
+"records.ml" 406 21798 21807 "records.ml" 406 21798 21872
+type(
+  string -> unit
+)
+"records.ml" 406 21798 21873 "records.ml" 406 21798 21875
+type(
+  unit
+)
+"records.ml" 405 21709 21712 "records.ml" 406 21798 21875
+type(
+  field
+)
+"records.ml" 407 21877 21880 "records.ml" 407 21877 21890
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 407 21877 21897 "records.ml" 407 21877 21905
+type(
+  string
+)
+"records.ml" 408 21906 21920 "records.ml" 408 21906 21922
+type(
+  unit
+)
+"records.ml" 408 21906 21926 "records.ml" 408 21906 21943
+type(
+  API.ref_host -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 408 21906 21945 "records.ml" 408 21906 21946
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 408 21906 21947 "records.ml" 408 21906 21949
+type(
+  unit
+)
+"records.ml" 408 21906 21944 "records.ml" 408 21906 21950
+type(
+  API.pool_t
+)
+"records.ml" 408 21906 21944 "records.ml" 408 21906 21966
+type(
+  API.ref_host
+)
+"records.ml" 408 21906 21926 "records.ml" 408 21906 21966
+type(
+  string
+)
+"records.ml" 408 21906 21915 "records.ml" 408 21906 21967
+type(
+  unit -> string
+)
+"records.ml" 408 21906 21968 "records.ml" 408 21906 21970
+type(
+  unit
+)
+"records.ml" 407 21877 21880 "records.ml" 408 21906 21970
+type(
+  field
+)
+"records.ml" 409 21972 21975 "records.ml" 409 21972 21985
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 409 21972 21992 "records.ml" 409 21972 22004
+type(
+  string
+)
+"records.ml" 410 22005 22019 "records.ml" 410 22005 22021
+type(
+  unit
+)
+"records.ml" 410 22005 22025 "records.ml" 410 22005 22042
+type(
+  API.ref_SR -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 410 22005 22044 "records.ml" 410 22005 22045
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 410 22005 22046 "records.ml" 410 22005 22048
+type(
+  unit
+)
+"records.ml" 410 22005 22043 "records.ml" 410 22005 22049
+type(
+  API.pool_t
+)
+"records.ml" 410 22005 22043 "records.ml" 410 22005 22069
+type(
+  API.ref_SR
+)
+"records.ml" 410 22005 22025 "records.ml" 410 22005 22069
+type(
+  string
+)
+"records.ml" 410 22005 22014 "records.ml" 410 22005 22070
+type(
+  unit -> string
+)
+"records.ml" 411 22071 22085 "records.ml" 411 22071 22086
+type(
+  string
+)
+ident(
+  def x "records.ml" 412 22090 22095 "records.ml" 413 22177 22235
+)
+"records.ml" 412 22090 22099 "records.ml" 412 22090 22105
+type(
+  API.ref_SR
+)
+"records.ml" 412 22090 22111 "records.ml" 412 22090 22112
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 411 22071 22085 "records.ml" 411 22071 22086
+)
+"records.ml" 412 22090 22112 "records.ml" 412 22090 22113
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"records.ml" 412 22090 22113 "records.ml" 412 22090 22115
+type(
+  string
+)
+"records.ml" 412 22090 22111 "records.ml" 412 22090 22115
+type(
+  bool
+)
+"records.ml" 412 22090 22121 "records.ml" 412 22090 22129
+type(
+  API.ref_SR
+)
+ident(
+  ext_ref Ref.null
+)
+"records.ml" 412 22090 22135 "records.ml" 412 22090 22156
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> uuid:string -> API.ref_SR
+)
+ident(
+  ext_ref Client.( Client ).( SR ).get_by_uuid
+)
+"records.ml" 412 22090 22157 "records.ml" 412 22090 22160
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 392 21110 21126 "records.ml" 392 21110 21129
+)
+"records.ml" 412 22090 22161 "records.ml" 412 22090 22171
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 392 21110 21130 "records.ml" 392 21110 21140
+)
+"records.ml" 412 22090 22172 "records.ml" 412 22090 22173
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 411 22071 22085 "records.ml" 411 22071 22086
+)
+"records.ml" 412 22090 22135 "records.ml" 412 22090 22173
+type(
+  API.ref_SR
+)
+"records.ml" 412 22090 22108 "records.ml" 412 22090 22173
+type(
+  API.ref_SR
+)
+"records.ml" 413 22177 22182 "records.ml" 413 22177 22208
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_pool -> value:API.ref_SR -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Pool ).set_default_SR
+)
+"records.ml" 413 22177 22209 "records.ml" 413 22177 22212
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 392 21110 21126 "records.ml" 392 21110 21129
+)
+"records.ml" 413 22177 22213 "records.ml" 413 22177 22223
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 392 21110 21130 "records.ml" 392 21110 21140
+)
+"records.ml" 413 22177 22224 "records.ml" 413 22177 22228
+type(
+  API.ref_pool
+)
+ident(
+  int_ref pool "records.ml" 392 21110 21141 "records.ml" 392 21110 21145
+)
+"records.ml" 413 22177 22229 "records.ml" 413 22177 22235
+type(
+  API.ref_SR
+)
+ident(
+  int_ref sr_ref "records.ml" 412 22090 22099 "records.ml" 412 22090 22105
+)
+"records.ml" 413 22177 22182 "records.ml" 413 22177 22235
+type(
+  unit
+)
+"records.ml" 412 22090 22095 "records.ml" 413 22177 22235
+type(
+  unit
+)
+"records.ml" 411 22071 22080 "records.ml" 413 22177 22236
+type(
+  string -> unit
+)
+"records.ml" 413 22177 22237 "records.ml" 413 22177 22239
+type(
+  unit
+)
+"records.ml" 409 21972 21975 "records.ml" 413 22177 22239
+type(
+  field
+)
+"records.ml" 414 22241 22244 "records.ml" 414 22241 22254
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 414 22241 22261 "records.ml" 414 22241 22276
+type(
+  string
+)
+"records.ml" 415 22277 22291 "records.ml" 415 22277 22293
+type(
+  unit
+)
+"records.ml" 415 22277 22297 "records.ml" 415 22277 22314
+type(
+  API.ref_SR -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 415 22277 22316 "records.ml" 415 22277 22317
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 415 22277 22318 "records.ml" 415 22277 22320
+type(
+  unit
+)
+"records.ml" 415 22277 22315 "records.ml" 415 22277 22321
+type(
+  API.pool_t
+)
+"records.ml" 415 22277 22315 "records.ml" 415 22277 22344
+type(
+  API.ref_SR
+)
+"records.ml" 415 22277 22297 "records.ml" 415 22277 22344
+type(
+  string
+)
+"records.ml" 415 22277 22286 "records.ml" 415 22277 22345
+type(
+  unit -> string
+)
+"records.ml" 416 22346 22360 "records.ml" 416 22346 22361
+type(
+  string
+)
+ident(
+  def x "records.ml" 417 22365 22370 "records.ml" 418 22452 22513
+)
+"records.ml" 417 22365 22374 "records.ml" 417 22365 22380
+type(
+  API.ref_SR
+)
+"records.ml" 417 22365 22386 "records.ml" 417 22365 22387
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 416 22346 22360 "records.ml" 416 22346 22361
+)
+"records.ml" 417 22365 22387 "records.ml" 417 22365 22388
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"records.ml" 417 22365 22388 "records.ml" 417 22365 22390
+type(
+  string
+)
+"records.ml" 417 22365 22386 "records.ml" 417 22365 22390
+type(
+  bool
+)
+"records.ml" 417 22365 22396 "records.ml" 417 22365 22404
+type(
+  API.ref_SR
+)
+ident(
+  ext_ref Ref.null
+)
+"records.ml" 417 22365 22410 "records.ml" 417 22365 22431
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> uuid:string -> API.ref_SR
+)
+ident(
+  ext_ref Client.( Client ).( SR ).get_by_uuid
+)
+"records.ml" 417 22365 22432 "records.ml" 417 22365 22435
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 392 21110 21126 "records.ml" 392 21110 21129
+)
+"records.ml" 417 22365 22436 "records.ml" 417 22365 22446
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 392 21110 21130 "records.ml" 392 21110 21140
+)
+"records.ml" 417 22365 22447 "records.ml" 417 22365 22448
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 416 22346 22360 "records.ml" 416 22346 22361
+)
+"records.ml" 417 22365 22410 "records.ml" 417 22365 22448
+type(
+  API.ref_SR
+)
+"records.ml" 417 22365 22383 "records.ml" 417 22365 22448
+type(
+  API.ref_SR
+)
+"records.ml" 418 22452 22457 "records.ml" 418 22452 22486
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_pool -> value:API.ref_SR -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Pool ).set_crash_dump_SR
+)
+"records.ml" 418 22452 22487 "records.ml" 418 22452 22490
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 392 21110 21126 "records.ml" 392 21110 21129
+)
+"records.ml" 418 22452 22491 "records.ml" 418 22452 22501
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 392 21110 21130 "records.ml" 392 21110 21140
+)
+"records.ml" 418 22452 22502 "records.ml" 418 22452 22506
+type(
+  API.ref_pool
+)
+ident(
+  int_ref pool "records.ml" 392 21110 21141 "records.ml" 392 21110 21145
+)
+"records.ml" 418 22452 22507 "records.ml" 418 22452 22513
+type(
+  API.ref_SR
+)
+ident(
+  int_ref sr_ref "records.ml" 417 22365 22374 "records.ml" 417 22365 22380
+)
+"records.ml" 418 22452 22457 "records.ml" 418 22452 22513
+type(
+  unit
+)
+"records.ml" 417 22365 22370 "records.ml" 418 22452 22513
+type(
+  unit
+)
+"records.ml" 416 22346 22355 "records.ml" 418 22452 22514
+type(
+  string -> unit
+)
+"records.ml" 418 22452 22515 "records.ml" 418 22452 22517
+type(
+  unit
+)
+"records.ml" 414 22241 22244 "records.ml" 418 22452 22517
+type(
+  field
+)
+"records.ml" 419 22519 22522 "records.ml" 419 22519 22532
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 419 22519 22539 "records.ml" 419 22519 22557
+type(
+  string
+)
+"records.ml" 420 22558 22572 "records.ml" 420 22558 22574
+type(
+  unit
+)
+"records.ml" 420 22558 22578 "records.ml" 420 22558 22595
+type(
+  API.ref_SR -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 420 22558 22597 "records.ml" 420 22558 22598
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 420 22558 22599 "records.ml" 420 22558 22601
+type(
+  unit
+)
+"records.ml" 420 22558 22596 "records.ml" 420 22558 22602
+type(
+  API.pool_t
+)
+"records.ml" 420 22558 22596 "records.ml" 420 22558 22628
+type(
+  API.ref_SR
+)
+"records.ml" 420 22558 22578 "records.ml" 420 22558 22628
+type(
+  string
+)
+"records.ml" 420 22558 22567 "records.ml" 420 22558 22629
+type(
+  unit -> string
+)
+"records.ml" 421 22630 22644 "records.ml" 421 22630 22645
+type(
+  string
+)
+ident(
+  def x "records.ml" 422 22649 22654 "records.ml" 423 22736 22800
+)
+"records.ml" 422 22649 22658 "records.ml" 422 22649 22664
+type(
+  API.ref_SR
+)
+"records.ml" 422 22649 22670 "records.ml" 422 22649 22671
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 421 22630 22644 "records.ml" 421 22630 22645
+)
+"records.ml" 422 22649 22671 "records.ml" 422 22649 22672
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"records.ml" 422 22649 22672 "records.ml" 422 22649 22674
+type(
+  string
+)
+"records.ml" 422 22649 22670 "records.ml" 422 22649 22674
+type(
+  bool
+)
+"records.ml" 422 22649 22680 "records.ml" 422 22649 22688
+type(
+  API.ref_SR
+)
+ident(
+  ext_ref Ref.null
+)
+"records.ml" 422 22649 22694 "records.ml" 422 22649 22715
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> uuid:string -> API.ref_SR
+)
+ident(
+  ext_ref Client.( Client ).( SR ).get_by_uuid
+)
+"records.ml" 422 22649 22716 "records.ml" 422 22649 22719
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 392 21110 21126 "records.ml" 392 21110 21129
+)
+"records.ml" 422 22649 22720 "records.ml" 422 22649 22730
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 392 21110 21130 "records.ml" 392 21110 21140
+)
+"records.ml" 422 22649 22731 "records.ml" 422 22649 22732
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 421 22630 22644 "records.ml" 421 22630 22645
+)
+"records.ml" 422 22649 22694 "records.ml" 422 22649 22732
+type(
+  API.ref_SR
+)
+"records.ml" 422 22649 22667 "records.ml" 422 22649 22732
+type(
+  API.ref_SR
+)
+"records.ml" 423 22736 22741 "records.ml" 423 22736 22773
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_pool -> value:API.ref_SR -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Pool ).set_suspend_image_SR
+)
+"records.ml" 423 22736 22774 "records.ml" 423 22736 22777
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 392 21110 21126 "records.ml" 392 21110 21129
+)
+"records.ml" 423 22736 22778 "records.ml" 423 22736 22788
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 392 21110 21130 "records.ml" 392 21110 21140
+)
+"records.ml" 423 22736 22789 "records.ml" 423 22736 22793
+type(
+  API.ref_pool
+)
+ident(
+  int_ref pool "records.ml" 392 21110 21141 "records.ml" 392 21110 21145
+)
+"records.ml" 423 22736 22794 "records.ml" 423 22736 22800
+type(
+  API.ref_SR
+)
+ident(
+  int_ref sr_ref "records.ml" 422 22649 22658 "records.ml" 422 22649 22664
+)
+"records.ml" 423 22736 22741 "records.ml" 423 22736 22800
+type(
+  unit
+)
+"records.ml" 422 22649 22654 "records.ml" 423 22736 22800
+type(
+  unit
+)
+"records.ml" 421 22630 22639 "records.ml" 423 22736 22801
+type(
+  string -> unit
+)
+"records.ml" 423 22736 22802 "records.ml" 423 22736 22804
+type(
+  unit
+)
+"records.ml" 419 22519 22522 "records.ml" 423 22736 22804
+type(
+  field
+)
+"records.ml" 424 22806 22809 "records.ml" 424 22806 22819
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 424 22806 22826 "records.ml" 424 22806 22846
+type(
+  string
+)
+"records.ml" 424 22806 22857 "records.ml" 424 22806 22859
+type(
+  unit
+)
+"records.ml" 424 22806 22863 "records.ml" 424 22806 22876
+type(
+  string -> API.string_set -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 424 22806 22877 "records.ml" 424 22806 22881
+type(
+  string
+)
+"records.ml" 424 22806 22883 "records.ml" 424 22806 22912
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> API.string_set
+)
+ident(
+  ext_ref Client.( Client ).( SR ).get_supported_types
+)
+"records.ml" 424 22806 22913 "records.ml" 424 22806 22916
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 392 21110 21126 "records.ml" 392 21110 21129
+)
+"records.ml" 424 22806 22917 "records.ml" 424 22806 22927
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 392 21110 21130 "records.ml" 392 21110 21140
+)
+"records.ml" 424 22806 22882 "records.ml" 424 22806 22928
+type(
+  API.string_set
+)
+"records.ml" 424 22806 22863 "records.ml" 424 22806 22928
+type(
+  string
+)
+"records.ml" 424 22806 22852 "records.ml" 424 22806 22929
+type(
+  unit -> string
+)
+"records.ml" 424 22806 22941 "records.ml" 424 22806 22945
+type(
+  bool
+)
+"records.ml" 424 22806 22946 "records.ml" 424 22806 22948
+type(
+  unit
+)
+"records.ml" 424 22806 22809 "records.ml" 424 22806 22948
+type(
+  field
+)
+"records.ml" 425 22950 22953 "records.ml" 425 22950 22963
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 425 22950 22970 "records.ml" 425 22950 22984
+type(
+  string
+)
+"records.ml" 425 22950 22999 "records.ml" 425 22950 23001
+type(
+  unit
+)
+"records.ml" 425 22950 23005 "records.ml" 425 22950 23031
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 425 22950 23032 "records.ml" 425 22950 23036
+type(
+  string
+)
+"records.ml" 425 22950 23038 "records.ml" 425 22950 23039
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 425 22950 23040 "records.ml" 425 22950 23042
+type(
+  unit
+)
+"records.ml" 425 22950 23037 "records.ml" 425 22950 23043
+type(
+  API.pool_t
+)
+"records.ml" 425 22950 23037 "records.ml" 425 22950 23065
+type(
+  API.string_to_string_map
+)
+"records.ml" 425 22950 23005 "records.ml" 425 22950 23065
+type(
+  string
+)
+"records.ml" 425 22950 22994 "records.ml" 425 22950 23066
+type(
+  unit -> string
+)
+"records.ml" 426 23067 23088 "records.ml" 426 23067 23089
+type(
+  string
+)
+ident(
+  def k "records.ml" 426 23067 23090 "records.ml" 426 23067 23150
+)
+"records.ml" 426 23067 23090 "records.ml" 426 23067 23091
+type(
+  string
+)
+ident(
+  def v "records.ml" 426 23067 23095 "records.ml" 426 23067 23150
+)
+"records.ml" 426 23067 23095 "records.ml" 426 23067 23126
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_pool -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Pool ).add_to_other_config
+)
+"records.ml" 426 23067 23127 "records.ml" 426 23067 23130
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 392 21110 21126 "records.ml" 392 21110 21129
+)
+"records.ml" 426 23067 23131 "records.ml" 426 23067 23141
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 392 21110 21130 "records.ml" 392 21110 21140
+)
+"records.ml" 426 23067 23142 "records.ml" 426 23067 23146
+type(
+  API.ref_pool
+)
+ident(
+  int_ref pool "records.ml" 392 21110 21141 "records.ml" 392 21110 21145
+)
+"records.ml" 426 23067 23147 "records.ml" 426 23067 23148
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 426 23067 23088 "records.ml" 426 23067 23089
+)
+"records.ml" 426 23067 23149 "records.ml" 426 23067 23150
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 426 23067 23090 "records.ml" 426 23067 23091
+)
+"records.ml" 426 23067 23095 "records.ml" 426 23067 23150
+type(
+  unit
+)
+"records.ml" 426 23067 23083 "records.ml" 426 23067 23151
+type(
+  string -> string -> unit
+)
+"records.ml" 427 23152 23178 "records.ml" 427 23152 23179
+type(
+  string
+)
+ident(
+  def k "records.ml" 427 23152 23183 "records.ml" 427 23152 23241
+)
+"records.ml" 427 23152 23183 "records.ml" 427 23152 23219
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_pool -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Pool ).remove_from_other_config
+)
+"records.ml" 427 23152 23220 "records.ml" 427 23152 23223
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 392 21110 21126 "records.ml" 392 21110 21129
+)
+"records.ml" 427 23152 23224 "records.ml" 427 23152 23234
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 392 21110 21130 "records.ml" 392 21110 21140
+)
+"records.ml" 427 23152 23235 "records.ml" 427 23152 23239
+type(
+  API.ref_pool
+)
+ident(
+  int_ref pool "records.ml" 392 21110 21141 "records.ml" 392 21110 21145
+)
+"records.ml" 427 23152 23240 "records.ml" 427 23152 23241
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 427 23152 23178 "records.ml" 427 23152 23179
+)
+"records.ml" 427 23152 23183 "records.ml" 427 23152 23241
+type(
+  unit
+)
+"records.ml" 427 23152 23173 "records.ml" 427 23152 23242
+type(
+  string -> unit
+)
+"records.ml" 428 23243 23261 "records.ml" 428 23243 23263
+type(
+  unit
+)
+"records.ml" 428 23243 23268 "records.ml" 428 23243 23269
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 428 23243 23270 "records.ml" 428 23243 23272
+type(
+  unit
+)
+"records.ml" 428 23243 23267 "records.ml" 428 23243 23273
+type(
+  API.pool_t
+)
+"records.ml" 428 23243 23267 "records.ml" 428 23243 23295
+type(
+  API.string_to_string_map
+)
+"records.ml" 428 23243 23256 "records.ml" 428 23243 23296
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 428 23243 23297 "records.ml" 428 23243 23299
+type(
+  unit
+)
+"records.ml" 425 22950 22953 "records.ml" 428 23243 23299
+type(
+  field
+)
+"records.ml" 429 23301 23304 "records.ml" 429 23301 23314
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 429 23301 23321 "records.ml" 429 23301 23333
+type(
+  string
+)
+"records.ml" 429 23301 23344 "records.ml" 429 23301 23346
+type(
+  unit
+)
+"records.ml" 429 23301 23350 "records.ml" 429 23301 23364
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 429 23301 23366 "records.ml" 429 23301 23367
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 429 23301 23368 "records.ml" 429 23301 23370
+type(
+  unit
+)
+"records.ml" 429 23301 23365 "records.ml" 429 23301 23371
+type(
+  API.pool_t
+)
+"records.ml" 429 23301 23365 "records.ml" 429 23301 23391
+type(
+  bool
+)
+"records.ml" 429 23301 23350 "records.ml" 429 23301 23391
+type(
+  string
+)
+"records.ml" 429 23301 23339 "records.ml" 429 23301 23392
+type(
+  unit -> string
+)
+"records.ml" 429 23301 23393 "records.ml" 429 23301 23395
+type(
+  unit
+)
+"records.ml" 429 23301 23304 "records.ml" 429 23301 23395
+type(
+  field
+)
+"records.ml" 430 23397 23400 "records.ml" 430 23397 23410
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 430 23397 23417 "records.ml" 430 23397 23435
+type(
+  string
+)
+"records.ml" 430 23397 23450 "records.ml" 430 23397 23452
+type(
+  unit
+)
+"records.ml" 430 23397 23456 "records.ml" 430 23397 23482
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 430 23397 23483 "records.ml" 430 23397 23487
+type(
+  string
+)
+"records.ml" 430 23397 23489 "records.ml" 430 23397 23490
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 430 23397 23491 "records.ml" 430 23397 23493
+type(
+  unit
+)
+"records.ml" 430 23397 23488 "records.ml" 430 23397 23494
+type(
+  API.pool_t
+)
+"records.ml" 430 23397 23488 "records.ml" 430 23397 23520
+type(
+  API.string_to_string_map
+)
+"records.ml" 430 23397 23456 "records.ml" 430 23397 23520
+type(
+  string
+)
+"records.ml" 430 23397 23445 "records.ml" 430 23397 23521
+type(
+  unit -> string
+)
+"records.ml" 430 23397 23522 "records.ml" 430 23397 23524
+type(
+  unit
+)
+"records.ml" 430 23397 23400 "records.ml" 430 23397 23524
+type(
+  field
+)
+"records.ml" 431 23526 23529 "records.ml" 431 23526 23539
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 431 23526 23546 "records.ml" 431 23526 23561
+type(
+  string
+)
+"records.ml" 431 23526 23572 "records.ml" 431 23526 23574
+type(
+  unit
+)
+"records.ml" 431 23526 23578 "records.ml" 431 23526 23591
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 431 23526 23592 "records.ml" 431 23526 23596
+type(
+  string
+)
+"records.ml" 431 23526 23598 "records.ml" 431 23526 23606
+type(
+  (string -> string) -> API.string_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 431 23526 23612 "records.ml" 431 23526 23613
+type(
+  string
+)
+ident(
+  def x "records.ml" 431 23526 23617 "records.ml" 431 23526 23652
+)
+"records.ml" 431 23526 23617 "records.ml" 431 23526 23634
+type(
+  '_a Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 431 23526 23636 "records.ml" 431 23526 23649
+type(
+  string -> '_a Ref.t
+)
+ident(
+  ext_ref Ref.of_string
+)
+"records.ml" 431 23526 23650 "records.ml" 431 23526 23651
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 431 23526 23612 "records.ml" 431 23526 23613
+)
+"records.ml" 431 23526 23635 "records.ml" 431 23526 23652
+type(
+  '_a Ref.t
+)
+"records.ml" 431 23526 23617 "records.ml" 431 23526 23652
+type(
+  string
+)
+"records.ml" 431 23526 23607 "records.ml" 431 23526 23653
+type(
+  string -> string
+)
+"records.ml" 431 23526 23655 "records.ml" 431 23526 23656
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 431 23526 23657 "records.ml" 431 23526 23659
+type(
+  unit
+)
+"records.ml" 431 23526 23654 "records.ml" 431 23526 23660
+type(
+  API.pool_t
+)
+"records.ml" 431 23526 23654 "records.ml" 431 23526 23683
+type(
+  API.string_set
+)
+"records.ml" 431 23526 23597 "records.ml" 431 23526 23684
+type(
+  string list
+)
+"records.ml" 431 23526 23578 "records.ml" 431 23526 23684
+type(
+  string
+)
+"records.ml" 431 23526 23567 "records.ml" 431 23526 23685
+type(
+  unit -> string
+)
+"records.ml" 431 23526 23686 "records.ml" 431 23526 23688
+type(
+  unit
+)
+"records.ml" 431 23526 23529 "records.ml" 431 23526 23688
+type(
+  field
+)
+"records.ml" 432 23690 23693 "records.ml" 432 23690 23703
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 432 23690 23710 "records.ml" 432 23690 23740
+type(
+  string
+)
+"records.ml" 432 23690 23751 "records.ml" 432 23690 23753
+type(
+  unit
+)
+"records.ml" 432 23690 23757 "records.ml" 432 23690 23772
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 432 23690 23774 "records.ml" 432 23690 23775
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 432 23690 23776 "records.ml" 432 23690 23778
+type(
+  unit
+)
+"records.ml" 432 23690 23773 "records.ml" 432 23690 23779
+type(
+  API.pool_t
+)
+"records.ml" 432 23690 23773 "records.ml" 432 23690 23817
+type(
+  int64
+)
+"records.ml" 432 23690 23757 "records.ml" 432 23690 23817
+type(
+  string
+)
+"records.ml" 432 23690 23746 "records.ml" 432 23690 23818
+type(
+  unit -> string
+)
+"records.ml" 432 23690 23829 "records.ml" 432 23690 23830
+type(
+  string
+)
+ident(
+  def x "records.ml" 432 23690 23834 "records.ml" 432 23690 23918
+)
+"records.ml" 432 23690 23834 "records.ml" 432 23690 23878
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_pool -> value:int64 -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Pool ).set_ha_host_failures_to_tolerate
+)
+"records.ml" 432 23690 23879 "records.ml" 432 23690 23882
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 392 21110 21126 "records.ml" 392 21110 21129
+)
+"records.ml" 432 23690 23883 "records.ml" 432 23690 23893
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 392 21110 21130 "records.ml" 392 21110 21140
+)
+"records.ml" 432 23690 23894 "records.ml" 432 23690 23898
+type(
+  API.ref_pool
+)
+ident(
+  int_ref pool "records.ml" 392 21110 21141 "records.ml" 392 21110 21145
+)
+"records.ml" 432 23690 23900 "records.ml" 432 23690 23915
+type(
+  string -> int64
+)
+ident(
+  ext_ref Int64.of_string
+)
+"records.ml" 432 23690 23916 "records.ml" 432 23690 23917
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 432 23690 23829 "records.ml" 432 23690 23830
+)
+"records.ml" 432 23690 23899 "records.ml" 432 23690 23918
+type(
+  int64
+)
+"records.ml" 432 23690 23834 "records.ml" 432 23690 23918
+type(
+  unit
+)
+"records.ml" 432 23690 23824 "records.ml" 432 23690 23919
+type(
+  string -> unit
+)
+"records.ml" 432 23690 23920 "records.ml" 432 23690 23922
+type(
+  unit
+)
+"records.ml" 432 23690 23693 "records.ml" 432 23690 23922
+type(
+  field
+)
+"records.ml" 433 23924 23927 "records.ml" 433 23924 23937
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 433 23924 23944 "records.ml" 433 23924 23964
+type(
+  string
+)
+"records.ml" 433 23924 23975 "records.ml" 433 23924 23977
+type(
+  unit
+)
+"records.ml" 433 23924 23981 "records.ml" 433 23924 23996
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 433 23924 23998 "records.ml" 433 23924 23999
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 433 23924 24000 "records.ml" 433 23924 24002
+type(
+  unit
+)
+"records.ml" 433 23924 23997 "records.ml" 433 23924 24003
+type(
+  API.pool_t
+)
+"records.ml" 433 23924 23997 "records.ml" 433 23924 24031
+type(
+  int64
+)
+"records.ml" 433 23924 23981 "records.ml" 433 23924 24031
+type(
+  string
+)
+"records.ml" 433 23924 23970 "records.ml" 433 23924 24032
+type(
+  unit -> string
+)
+"records.ml" 433 23924 24033 "records.ml" 433 23924 24035
+type(
+  unit
+)
+"records.ml" 433 23924 23927 "records.ml" 433 23924 24035
+type(
+  field
+)
+"records.ml" 434 24037 24040 "records.ml" 434 24037 24050
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 434 24037 24057 "records.ml" 434 24037 24078
+type(
+  string
+)
+"records.ml" 434 24037 24089 "records.ml" 434 24037 24091
+type(
+  unit
+)
+"records.ml" 434 24037 24095 "records.ml" 434 24037 24109
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 434 24037 24111 "records.ml" 434 24037 24112
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 434 24037 24113 "records.ml" 434 24037 24115
+type(
+  unit
+)
+"records.ml" 434 24037 24110 "records.ml" 434 24037 24116
+type(
+  API.pool_t
+)
+"records.ml" 434 24037 24110 "records.ml" 434 24037 24145
+type(
+  bool
+)
+"records.ml" 434 24037 24095 "records.ml" 434 24037 24145
+type(
+  string
+)
+"records.ml" 434 24037 24084 "records.ml" 434 24037 24146
+type(
+  unit -> string
+)
+"records.ml" 434 24037 24157 "records.ml" 434 24037 24158
+type(
+  string
+)
+ident(
+  def x "records.ml" 434 24037 24162 "records.ml" 434 24037 24236
+)
+"records.ml" 434 24037 24162 "records.ml" 434 24037 24197
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_pool -> value:bool -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Pool ).set_ha_allow_overcommit
+)
+"records.ml" 434 24037 24198 "records.ml" 434 24037 24201
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 392 21110 21126 "records.ml" 392 21110 21129
+)
+"records.ml" 434 24037 24202 "records.ml" 434 24037 24212
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 392 21110 21130 "records.ml" 392 21110 21140
+)
+"records.ml" 434 24037 24213 "records.ml" 434 24037 24217
+type(
+  API.ref_pool
+)
+ident(
+  int_ref pool "records.ml" 392 21110 21141 "records.ml" 392 21110 21145
+)
+"records.ml" 434 24037 24219 "records.ml" 434 24037 24233
+type(
+  string -> bool
+)
+ident(
+  ext_ref Pervasives.bool_of_string
+)
+"records.ml" 434 24037 24234 "records.ml" 434 24037 24235
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 434 24037 24157 "records.ml" 434 24037 24158
+)
+"records.ml" 434 24037 24218 "records.ml" 434 24037 24236
+type(
+  bool
+)
+"records.ml" 434 24037 24162 "records.ml" 434 24037 24236
+type(
+  unit
+)
+"records.ml" 434 24037 24152 "records.ml" 434 24037 24237
+type(
+  string -> unit
+)
+"records.ml" 434 24037 24238 "records.ml" 434 24037 24240
+type(
+  unit
+)
+"records.ml" 434 24037 24040 "records.ml" 434 24037 24240
+type(
+  field
+)
+"records.ml" 435 24242 24245 "records.ml" 435 24242 24255
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 435 24242 24262 "records.ml" 435 24242 24280
+type(
+  string
+)
+"records.ml" 435 24242 24291 "records.ml" 435 24242 24293
+type(
+  unit
+)
+"records.ml" 435 24242 24297 "records.ml" 435 24242 24311
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 435 24242 24313 "records.ml" 435 24242 24314
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 435 24242 24315 "records.ml" 435 24242 24317
+type(
+  unit
+)
+"records.ml" 435 24242 24312 "records.ml" 435 24242 24318
+type(
+  API.pool_t
+)
+"records.ml" 435 24242 24312 "records.ml" 435 24242 24344
+type(
+  bool
+)
+"records.ml" 435 24242 24297 "records.ml" 435 24242 24344
+type(
+  string
+)
+"records.ml" 435 24242 24286 "records.ml" 435 24242 24345
+type(
+  unit -> string
+)
+"records.ml" 435 24242 24346 "records.ml" 435 24242 24348
+type(
+  unit
+)
+"records.ml" 435 24242 24245 "records.ml" 435 24242 24348
+type(
+  field
+)
+"records.ml" 436 24350 24353 "records.ml" 436 24350 24363
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 436 24350 24370 "records.ml" 436 24350 24377
+type(
+  string
+)
+"records.ml" 436 24350 24388 "records.ml" 436 24350 24390
+type(
+  unit
+)
+"records.ml" 436 24350 24394 "records.ml" 436 24350 24421
+type(
+  (API.ref_blob -> string) -> string -> API.string_to_ref_blob_map -> string
+)
+ident(
+  ext_ref Record_util.s2brm_to_string
+)
+"records.ml" 436 24350 24422 "records.ml" 436 24350 24439
+type(
+  API.ref_blob -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 436 24350 24440 "records.ml" 436 24350 24444
+type(
+  string
+)
+"records.ml" 436 24350 24446 "records.ml" 436 24350 24447
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 436 24350 24448 "records.ml" 436 24350 24450
+type(
+  unit
+)
+"records.ml" 436 24350 24445 "records.ml" 436 24350 24451
+type(
+  API.pool_t
+)
+"records.ml" 436 24350 24445 "records.ml" 436 24350 24466
+type(
+  API.string_to_ref_blob_map
+)
+"records.ml" 436 24350 24394 "records.ml" 436 24350 24466
+type(
+  string
+)
+"records.ml" 436 24350 24383 "records.ml" 436 24350 24467
+type(
+  unit -> string
+)
+"records.ml" 436 24350 24468 "records.ml" 436 24350 24470
+type(
+  unit
+)
+"records.ml" 436 24350 24353 "records.ml" 436 24350 24470
+type(
+  field
+)
+"records.ml" 437 24472 24475 "records.ml" 437 24472 24485
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 437 24472 24492 "records.ml" 437 24472 24501
+type(
+  string
+)
+"records.ml" 437 24472 24512 "records.ml" 437 24472 24514
+type(
+  unit
+)
+"records.ml" 437 24472 24519 "records.ml" 437 24472 24520
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 437 24472 24521 "records.ml" 437 24472 24523
+type(
+  unit
+)
+"records.ml" 437 24472 24518 "records.ml" 437 24472 24524
+type(
+  API.pool_t
+)
+"records.ml" 437 24472 24518 "records.ml" 437 24472 24541
+type(
+  string
+)
+"records.ml" 437 24472 24507 "records.ml" 437 24472 24542
+type(
+  unit -> string
+)
+"records.ml" 437 24472 24543 "records.ml" 437 24472 24545
+type(
+  unit
+)
+"records.ml" 437 24472 24475 "records.ml" 437 24472 24545
+type(
+  field
+)
+"records.ml" 438 24547 24550 "records.ml" 438 24547 24560
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 438 24547 24567 "records.ml" 438 24547 24581
+type(
+  string
+)
+"records.ml" 438 24547 24592 "records.ml" 438 24547 24594
+type(
+  unit
+)
+"records.ml" 438 24547 24599 "records.ml" 438 24547 24600
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 438 24547 24601 "records.ml" 438 24547 24603
+type(
+  unit
+)
+"records.ml" 438 24547 24598 "records.ml" 438 24547 24604
+type(
+  API.pool_t
+)
+"records.ml" 438 24547 24598 "records.ml" 438 24547 24626
+type(
+  string
+)
+"records.ml" 438 24547 24587 "records.ml" 438 24547 24627
+type(
+  unit -> string
+)
+"records.ml" 438 24547 24628 "records.ml" 438 24547 24630
+type(
+  unit
+)
+"records.ml" 438 24547 24550 "records.ml" 438 24547 24630
+type(
+  field
+)
+"records.ml" 439 24632 24635 "records.ml" 439 24632 24645
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 439 24632 24652 "records.ml" 439 24632 24665
+type(
+  string
+)
+"records.ml" 439 24632 24676 "records.ml" 439 24632 24678
+type(
+  unit
+)
+"records.ml" 439 24632 24682 "records.ml" 439 24632 24696
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 439 24632 24698 "records.ml" 439 24632 24699
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 439 24632 24700 "records.ml" 439 24632 24702
+type(
+  unit
+)
+"records.ml" 439 24632 24697 "records.ml" 439 24632 24703
+type(
+  API.pool_t
+)
+"records.ml" 439 24632 24697 "records.ml" 439 24632 24724
+type(
+  bool
+)
+"records.ml" 439 24632 24682 "records.ml" 439 24632 24724
+type(
+  string
+)
+"records.ml" 439 24632 24671 "records.ml" 439 24632 24725
+type(
+  unit -> string
+)
+"records.ml" 439 24632 24736 "records.ml" 439 24632 24737
+type(
+  string
+)
+ident(
+  def x "records.ml" 439 24632 24741 "records.ml" 439 24632 24807
+)
+"records.ml" 439 24632 24741 "records.ml" 439 24632 24768
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_pool -> value:bool -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Pool ).set_wlb_enabled
+)
+"records.ml" 439 24632 24769 "records.ml" 439 24632 24772
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 392 21110 21126 "records.ml" 392 21110 21129
+)
+"records.ml" 439 24632 24773 "records.ml" 439 24632 24783
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 392 21110 21130 "records.ml" 392 21110 21140
+)
+"records.ml" 439 24632 24784 "records.ml" 439 24632 24788
+type(
+  API.ref_pool
+)
+ident(
+  int_ref pool "records.ml" 392 21110 21141 "records.ml" 392 21110 21145
+)
+"records.ml" 439 24632 24790 "records.ml" 439 24632 24804
+type(
+  string -> bool
+)
+ident(
+  ext_ref Pervasives.bool_of_string
+)
+"records.ml" 439 24632 24805 "records.ml" 439 24632 24806
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 439 24632 24736 "records.ml" 439 24632 24737
+)
+"records.ml" 439 24632 24789 "records.ml" 439 24632 24807
+type(
+  bool
+)
+"records.ml" 439 24632 24741 "records.ml" 439 24632 24807
+type(
+  unit
+)
+"records.ml" 439 24632 24731 "records.ml" 439 24632 24808
+type(
+  string -> unit
+)
+"records.ml" 439 24632 24809 "records.ml" 439 24632 24811
+type(
+  unit
+)
+"records.ml" 439 24632 24635 "records.ml" 439 24632 24811
+type(
+  field
+)
+"records.ml" 440 24813 24816 "records.ml" 440 24813 24826
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 440 24813 24833 "records.ml" 440 24813 24850
+type(
+  string
+)
+"records.ml" 440 24813 24861 "records.ml" 440 24813 24863
+type(
+  unit
+)
+"records.ml" 440 24813 24867 "records.ml" 440 24813 24881
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 440 24813 24883 "records.ml" 440 24813 24884
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 440 24813 24885 "records.ml" 440 24813 24887
+type(
+  unit
+)
+"records.ml" 440 24813 24882 "records.ml" 440 24813 24888
+type(
+  API.pool_t
+)
+"records.ml" 440 24813 24882 "records.ml" 440 24813 24913
+type(
+  bool
+)
+"records.ml" 440 24813 24867 "records.ml" 440 24813 24913
+type(
+  string
+)
+"records.ml" 440 24813 24856 "records.ml" 440 24813 24914
+type(
+  unit -> string
+)
+"records.ml" 440 24813 24925 "records.ml" 440 24813 24926
+type(
+  string
+)
+ident(
+  def x "records.ml" 440 24813 24930 "records.ml" 440 24813 25000
+)
+"records.ml" 440 24813 24930 "records.ml" 440 24813 24961
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_pool -> value:bool -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Pool ).set_wlb_verify_cert
+)
+"records.ml" 440 24813 24962 "records.ml" 440 24813 24965
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 392 21110 21126 "records.ml" 392 21110 21129
+)
+"records.ml" 440 24813 24966 "records.ml" 440 24813 24976
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 392 21110 21130 "records.ml" 392 21110 21140
+)
+"records.ml" 440 24813 24977 "records.ml" 440 24813 24981
+type(
+  API.ref_pool
+)
+ident(
+  int_ref pool "records.ml" 392 21110 21141 "records.ml" 392 21110 21145
+)
+"records.ml" 440 24813 24983 "records.ml" 440 24813 24997
+type(
+  string -> bool
+)
+ident(
+  ext_ref Pervasives.bool_of_string
+)
+"records.ml" 440 24813 24998 "records.ml" 440 24813 24999
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 440 24813 24925 "records.ml" 440 24813 24926
+)
+"records.ml" 440 24813 24982 "records.ml" 440 24813 25000
+type(
+  bool
+)
+"records.ml" 440 24813 24930 "records.ml" 440 24813 25000
+type(
+  unit
+)
+"records.ml" 440 24813 24920 "records.ml" 440 24813 25001
+type(
+  string -> unit
+)
+"records.ml" 440 24813 25002 "records.ml" 440 24813 25004
+type(
+  unit
+)
+"records.ml" 440 24813 24816 "records.ml" 440 24813 25004
+type(
+  field
+)
+"records.ml" 441 25006 25009 "records.ml" 441 25006 25019
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 441 25006 25026 "records.ml" 441 25006 25038
+type(
+  string
+)
+"records.ml" 442 25039 25053 "records.ml" 442 25039 25055
+type(
+  unit
+)
+"records.ml" 442 25039 25059 "records.ml" 442 25039 25085
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 442 25039 25086 "records.ml" 442 25039 25090
+type(
+  string
+)
+"records.ml" 442 25039 25092 "records.ml" 442 25039 25093
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 442 25039 25094 "records.ml" 442 25039 25096
+type(
+  unit
+)
+"records.ml" 442 25039 25091 "records.ml" 442 25039 25097
+type(
+  API.pool_t
+)
+"records.ml" 442 25039 25091 "records.ml" 442 25039 25117
+type(
+  API.string_to_string_map
+)
+"records.ml" 442 25039 25059 "records.ml" 442 25039 25117
+type(
+  string
+)
+"records.ml" 442 25039 25048 "records.ml" 442 25039 25118
+type(
+  unit -> string
+)
+"records.ml" 443 25119 25140 "records.ml" 443 25119 25141
+type(
+  string
+)
+ident(
+  def k "records.ml" 443 25119 25142 "records.ml" 443 25119 25200
+)
+"records.ml" 443 25119 25142 "records.ml" 443 25119 25143
+type(
+  string
+)
+ident(
+  def v "records.ml" 443 25119 25147 "records.ml" 443 25119 25200
+)
+"records.ml" 443 25119 25147 "records.ml" 443 25119 25176
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_pool -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Pool ).add_to_gui_config
+)
+"records.ml" 443 25119 25177 "records.ml" 443 25119 25180
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 392 21110 21126 "records.ml" 392 21110 21129
+)
+"records.ml" 443 25119 25181 "records.ml" 443 25119 25191
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 392 21110 21130 "records.ml" 392 21110 21140
+)
+"records.ml" 443 25119 25192 "records.ml" 443 25119 25196
+type(
+  API.ref_pool
+)
+ident(
+  int_ref pool "records.ml" 392 21110 21141 "records.ml" 392 21110 21145
+)
+"records.ml" 443 25119 25197 "records.ml" 443 25119 25198
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 443 25119 25140 "records.ml" 443 25119 25141
+)
+"records.ml" 443 25119 25199 "records.ml" 443 25119 25200
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 443 25119 25142 "records.ml" 443 25119 25143
+)
+"records.ml" 443 25119 25147 "records.ml" 443 25119 25200
+type(
+  unit
+)
+"records.ml" 443 25119 25135 "records.ml" 443 25119 25201
+type(
+  string -> string -> unit
+)
+"records.ml" 444 25202 25228 "records.ml" 444 25202 25229
+type(
+  string
+)
+ident(
+  def k "records.ml" 444 25202 25233 "records.ml" 444 25202 25289
+)
+"records.ml" 444 25202 25233 "records.ml" 444 25202 25267
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_pool -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Pool ).remove_from_gui_config
+)
+"records.ml" 444 25202 25268 "records.ml" 444 25202 25271
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 392 21110 21126 "records.ml" 392 21110 21129
+)
+"records.ml" 444 25202 25272 "records.ml" 444 25202 25282
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 392 21110 21130 "records.ml" 392 21110 21140
+)
+"records.ml" 444 25202 25283 "records.ml" 444 25202 25287
+type(
+  API.ref_pool
+)
+ident(
+  int_ref pool "records.ml" 392 21110 21141 "records.ml" 392 21110 21145
+)
+"records.ml" 444 25202 25288 "records.ml" 444 25202 25289
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 444 25202 25228 "records.ml" 444 25202 25229
+)
+"records.ml" 444 25202 25233 "records.ml" 444 25202 25289
+type(
+  unit
+)
+"records.ml" 444 25202 25223 "records.ml" 444 25202 25290
+type(
+  string -> unit
+)
+"records.ml" 445 25291 25309 "records.ml" 445 25291 25311
+type(
+  unit
+)
+"records.ml" 445 25291 25316 "records.ml" 445 25291 25317
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 445 25291 25318 "records.ml" 445 25291 25320
+type(
+  unit
+)
+"records.ml" 445 25291 25315 "records.ml" 445 25291 25321
+type(
+  API.pool_t
+)
+"records.ml" 445 25291 25315 "records.ml" 445 25291 25341
+type(
+  API.string_to_string_map
+)
+"records.ml" 445 25291 25304 "records.ml" 445 25291 25342
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 446 25343 25358 "records.ml" 446 25343 25362
+type(
+  bool
+)
+"records.ml" 446 25343 25363 "records.ml" 446 25343 25365
+type(
+  unit
+)
+"records.ml" 441 25006 25009 "records.ml" 446 25343 25365
+type(
+  field
+)
+"records.ml" 447 25367 25370 "records.ml" 447 25367 25380
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 447 25367 25387 "records.ml" 447 25367 25407
+type(
+  string
+)
+"records.ml" 447 25367 25416 "records.ml" 447 25367 25420
+type(
+  bool
+)
+"records.ml" 447 25367 25431 "records.ml" 447 25367 25433
+type(
+  unit
+)
+"records.ml" 447 25367 25441 "records.ml" 447 25367 25442
+type(
+  string
+)
+"records.ml" 447 25367 25446 "records.ml" 447 25367 25447
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 447 25367 25448 "records.ml" 447 25367 25450
+type(
+  unit
+)
+"records.ml" 447 25367 25445 "records.ml" 447 25367 25451
+type(
+  API.pool_t
+)
+"records.ml" 447 25367 25445 "records.ml" 447 25367 25479
+type(
+  string
+)
+"records.ml" 447 25367 25486 "records.ml" 447 25367 25487
+type(
+  string
+)
+ident(
+  int_ref r "records.ml" 447 25367 25441 "records.ml" 447 25367 25442
+)
+"records.ml" 447 25367 25488 "records.ml" 447 25367 25489
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"records.ml" 447 25367 25490 "records.ml" 447 25367 25492
+type(
+  string
+)
+"records.ml" 447 25367 25486 "records.ml" 447 25367 25492
+type(
+  bool
+)
+"records.ml" 447 25367 25498 "records.ml" 447 25367 25509
+type(
+  string
+)
+"records.ml" 447 25367 25515 "records.ml" 447 25367 25516
+type(
+  string
+)
+ident(
+  int_ref r "records.ml" 447 25367 25441 "records.ml" 447 25367 25442
+)
+"records.ml" 447 25367 25483 "records.ml" 447 25367 25516
+type(
+  string
+)
+"records.ml" 447 25367 25437 "records.ml" 447 25367 25516
+type(
+  string
+)
+"records.ml" 447 25367 25426 "records.ml" 447 25367 25517
+type(
+  unit -> string
+)
+"records.ml" 447 25367 25518 "records.ml" 447 25367 25520
+type(
+  unit
+)
+"records.ml" 447 25367 25370 "records.ml" 447 25367 25520
+type(
+  field
+)
+"records.ml" 448 25522 25525 "records.ml" 448 25522 25535
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 448 25522 25542 "records.ml" 448 25522 25556
+type(
+  string
+)
+"records.ml" 448 25522 25567 "records.ml" 448 25522 25569
+type(
+  unit
+)
+"records.ml" 448 25522 25573 "records.ml" 448 25522 25599
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 448 25522 25600 "records.ml" 448 25522 25604
+type(
+  string
+)
+"records.ml" 448 25522 25606 "records.ml" 448 25522 25607
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 448 25522 25608 "records.ml" 448 25522 25610
+type(
+  unit
+)
+"records.ml" 448 25522 25605 "records.ml" 448 25522 25611
+type(
+  API.pool_t
+)
+"records.ml" 448 25522 25605 "records.ml" 448 25522 25633
+type(
+  API.string_to_string_map
+)
+"records.ml" 448 25522 25573 "records.ml" 448 25522 25633
+type(
+  string
+)
+"records.ml" 448 25522 25562 "records.ml" 448 25522 25634
+type(
+  unit -> string
+)
+"records.ml" 448 25522 25635 "records.ml" 448 25522 25637
+type(
+  unit
+)
+"records.ml" 448 25522 25525 "records.ml" 448 25522 25637
+type(
+  field
+)
+"records.ml" 449 25639 25642 "records.ml" 449 25639 25652
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> API.string_set) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 449 25639 25659 "records.ml" 449 25639 25665
+type(
+  string
+)
+"records.ml" 450 25666 25680 "records.ml" 450 25666 25682
+type(
+  unit
+)
+"records.ml" 450 25666 25686 "records.ml" 450 25666 25699
+type(
+  string -> API.string_set -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 450 25666 25700 "records.ml" 450 25666 25704
+type(
+  string
+)
+"records.ml" 450 25666 25706 "records.ml" 450 25666 25707
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 450 25666 25708 "records.ml" 450 25666 25710
+type(
+  unit
+)
+"records.ml" 450 25666 25705 "records.ml" 450 25666 25711
+type(
+  API.pool_t
+)
+"records.ml" 450 25666 25705 "records.ml" 450 25666 25725
+type(
+  API.string_set
+)
+"records.ml" 450 25666 25686 "records.ml" 450 25666 25725
+type(
+  string
+)
+"records.ml" 450 25666 25675 "records.ml" 450 25666 25726
+type(
+  unit -> string
+)
+"records.ml" 451 25727 25745 "records.ml" 451 25727 25747
+type(
+  unit
+)
+"records.ml" 451 25727 25752 "records.ml" 451 25727 25753
+type(
+  unit -> API.pool_t
+)
+ident(
+  int_ref x "records.ml" 396 21291 21296 "records.ml" 396 21291 21297
+)
+"records.ml" 451 25727 25754 "records.ml" 451 25727 25756
+type(
+  unit
+)
+"records.ml" 451 25727 25751 "records.ml" 451 25727 25757
+type(
+  API.pool_t
+)
+"records.ml" 451 25727 25751 "records.ml" 451 25727 25771
+type(
+  API.string_set
+)
+"records.ml" 451 25727 25740 "records.ml" 451 25727 25772
+type(
+  unit -> API.string_set
+)
+"records.ml" 452 25773 25794 "records.ml" 452 25773 25797
+type(
+  string
+)
+ident(
+  def tag "records.ml" 452 25773 25801 "records.ml" 452 25773 25845
+)
+"records.ml" 452 25773 25801 "records.ml" 452 25773 25821
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_pool -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Pool ).add_tags
+)
+"records.ml" 452 25773 25822 "records.ml" 452 25773 25825
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 392 21110 21126 "records.ml" 392 21110 21129
+)
+"records.ml" 452 25773 25826 "records.ml" 452 25773 25836
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 392 21110 21130 "records.ml" 392 21110 21140
+)
+"records.ml" 452 25773 25837 "records.ml" 452 25773 25841
+type(
+  API.ref_pool
+)
+ident(
+  int_ref pool "records.ml" 392 21110 21141 "records.ml" 392 21110 21145
+)
+"records.ml" 452 25773 25842 "records.ml" 452 25773 25845
+type(
+  string
+)
+ident(
+  int_ref tag "records.ml" 452 25773 25794 "records.ml" 452 25773 25797
+)
+"records.ml" 452 25773 25801 "records.ml" 452 25773 25845
+type(
+  unit
+)
+"records.ml" 452 25773 25789 "records.ml" 452 25773 25846
+type(
+  string -> unit
+)
+"records.ml" 453 25847 25873 "records.ml" 453 25847 25876
+type(
+  string
+)
+ident(
+  def tag "records.ml" 453 25847 25880 "records.ml" 453 25847 25927
+)
+"records.ml" 453 25847 25880 "records.ml" 453 25847 25903
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_pool -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Pool ).remove_tags
+)
+"records.ml" 453 25847 25904 "records.ml" 453 25847 25907
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 392 21110 21126 "records.ml" 392 21110 21129
+)
+"records.ml" 453 25847 25908 "records.ml" 453 25847 25918
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 392 21110 21130 "records.ml" 392 21110 21140
+)
+"records.ml" 453 25847 25919 "records.ml" 453 25847 25923
+type(
+  API.ref_pool
+)
+ident(
+  int_ref pool "records.ml" 392 21110 21141 "records.ml" 392 21110 21145
+)
+"records.ml" 453 25847 25924 "records.ml" 453 25847 25927
+type(
+  string
+)
+ident(
+  int_ref tag "records.ml" 453 25847 25873 "records.ml" 453 25847 25876
+)
+"records.ml" 453 25847 25880 "records.ml" 453 25847 25927
+type(
+  unit
+)
+"records.ml" 453 25847 25868 "records.ml" 453 25847 25928
+type(
+  string -> unit
+)
+"records.ml" 453 25847 25929 "records.ml" 453 25847 25931
+type(
+  unit
+)
+"records.ml" 449 25639 25642 "records.ml" 453 25847 25931
+type(
+  field
+)
+"records.ml" 401 21476 21488 "records.ml" 454 25933 25936
+type(
+  field list
+)
+"records.ml" 397 21321 21322 "records.ml" 454 25933 25937
+type(
+  ([ `pool ], API.pool_t) record
+)
+"records.ml" 396 21291 21292 "records.ml" 454 25933 25937
+type(
+  ([ `pool ], API.pool_t) record
+)
+"records.ml" 395 21257 21258 "records.ml" 454 25933 25937
+type(
+  ([ `pool ], API.pool_t) record
+)
+"records.ml" 394 21172 21173 "records.ml" 454 25933 25937
+type(
+  ([ `pool ], API.pool_t) record
+)
+"records.ml" 393 21148 21149 "records.ml" 454 25933 25937
+type(
+  ([ `pool ], API.pool_t) record
+)
+"records.ml" 456 25939 25943 "records.ml" 456 25939 25957
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_subject -> ([ `subject ], API.subject_t) record
+)
+ident(
+  def subject_record "records.ml" 487 27237 27237 --
+)
+"records.ml" 456 25939 25958 "records.ml" 456 25939 25961
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 456 25939 25962 "records.ml" 485 27233 27235
+)
+"records.ml" 456 25939 25962 "records.ml" 456 25939 25972
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 456 25939 25973 "records.ml" 485 27233 27235
+)
+"records.ml" 456 25939 25973 "records.ml" 456 25939 25980
+type(
+  API.ref_subject
+)
+ident(
+  def subject "records.ml" 457 25984 25986 "records.ml" 485 27233 27235
+)
+"records.ml" 457 25984 25990 "records.ml" 457 25984 25994
+type(
+  API.ref_subject ref
+)
+"records.ml" 457 25984 25997 "records.ml" 457 25984 26000
+type(
+  API.ref_subject -> API.ref_subject ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 457 25984 26001 "records.ml" 457 25984 26008
+type(
+  API.ref_subject
+)
+ident(
+  int_ref subject "records.ml" 456 25939 25973 "records.ml" 456 25939 25980
+)
+"records.ml" 457 25984 25997 "records.ml" 457 25984 26008
+type(
+  API.ref_subject ref
+)
+"records.ml" 458 26012 26018 "records.ml" 458 26012 26030
+type(
+  API.subject_t lzy
+)
+"records.ml" 458 26012 26044 "records.ml" 458 26012 26046
+type(
+  unit
+)
+"records.ml" 458 26012 26050 "records.ml" 458 26012 26075
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_subject -> API.subject_t
+)
+ident(
+  ext_ref Client.( Client ).( Subject ).get_record
+)
+"records.ml" 458 26012 26076 "records.ml" 458 26012 26079
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 456 25939 25958 "records.ml" 456 25939 25961
+)
+"records.ml" 458 26012 26080 "records.ml" 458 26012 26090
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 456 25939 25962 "records.ml" 456 25939 25972
+)
+"records.ml" 458 26012 26091 "records.ml" 458 26012 26092
+type(
+  API.ref_subject ref -> API.ref_subject
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 458 26012 26092 "records.ml" 458 26012 26096
+type(
+  API.ref_subject ref
+)
+ident(
+  int_ref _ref "records.ml" 457 25984 25990 "records.ml" 457 25984 25994
+)
+"records.ml" 458 26012 26091 "records.ml" 458 26012 26096
+type(
+  API.ref_subject
+)
+"records.ml" 458 26012 26050 "records.ml" 458 26012 26096
+type(
+  API.subject_t
+)
+"records.ml" 458 26012 26039 "records.ml" 458 26012 26097
+type(
+  unit -> API.subject_t
+)
+"records.ml" 458 26012 26033 "records.ml" 458 26012 26097
+type(
+  API.subject_t lzy
+)
+"records.ml" 459 26101 26107 "records.ml" 459 26101 26113
+type(
+  API.subject_t lzy ref
+)
+"records.ml" 459 26101 26116 "records.ml" 459 26101 26119
+type(
+  API.subject_t lzy -> API.subject_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 459 26101 26120 "records.ml" 459 26101 26132
+type(
+  API.subject_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 458 26012 26018 "records.ml" 458 26012 26030
+)
+"records.ml" 459 26101 26116 "records.ml" 459 26101 26132
+type(
+  API.subject_t lzy ref
+)
+"records.ml" 460 26136 26142 "records.ml" 460 26136 26143
+type(
+  unit -> API.subject_t
+)
+"records.ml" 460 26136 26144 "records.ml" 460 26136 26146
+type(
+  unit
+)
+"records.ml" 460 26136 26149 "records.ml" 460 26136 26156
+type(
+  API.subject_t lzy ref -> API.subject_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 460 26136 26157 "records.ml" 460 26136 26163
+type(
+  API.subject_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 459 26101 26107 "records.ml" 459 26101 26113
+)
+"records.ml" 460 26136 26149 "records.ml" 460 26136 26163
+type(
+  API.subject_t
+)
+"records.ml" 461 26167 26183 "records.ml" 461 26167 26184
+type(
+  API.ref_subject
+)
+ident(
+  def r "records.ml" 461 26167 26188 "records.ml" 461 26167 26221
+)
+"records.ml" 461 26167 26188 "records.ml" 461 26167 26192
+type(
+  API.ref_subject ref
+)
+ident(
+  int_ref _ref "records.ml" 457 25984 25990 "records.ml" 457 25984 25994
+)
+"records.ml" 461 26167 26193 "records.ml" 461 26167 26195
+type(
+  API.ref_subject ref -> API.ref_subject -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 461 26167 26196 "records.ml" 461 26167 26197
+type(
+  API.ref_subject
+)
+ident(
+  int_ref r "records.ml" 461 26167 26183 "records.ml" 461 26167 26184
+)
+"records.ml" 461 26167 26188 "records.ml" 461 26167 26197
+type(
+  unit
+)
+"records.ml" 461 26167 26199 "records.ml" 461 26167 26205
+type(
+  API.subject_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 459 26101 26107 "records.ml" 459 26101 26113
+)
+"records.ml" 461 26167 26206 "records.ml" 461 26167 26208
+type(
+  API.subject_t lzy ref -> API.subject_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 461 26167 26209 "records.ml" 461 26167 26221
+type(
+  API.subject_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 458 26012 26018 "records.ml" 458 26012 26030
+)
+"records.ml" 461 26167 26199 "records.ml" 461 26167 26221
+type(
+  unit
+)
+"records.ml" 461 26167 26188 "records.ml" 461 26167 26221
+type(
+  unit
+)
+"records.ml" 461 26167 26178 "records.ml" 461 26167 26223
+type(
+  API.ref_subject -> unit
+)
+"records.ml" 462 26225 26245 "records.ml" 462 26225 26246
+type(
+  API.ref_subject
+)
+ident(
+  def a "records.ml" 462 26225 26253 "records.ml" 462 26225 26279
+)
+"records.ml" 462 26225 26247 "records.ml" 462 26225 26248
+type(
+  API.subject_t
+)
+ident(
+  def b "records.ml" 462 26225 26253 "records.ml" 462 26225 26279
+)
+"records.ml" 462 26225 26244 "records.ml" 462 26225 26249
+type(
+  API.ref_subject * API.subject_t
+)
+"records.ml" 462 26225 26253 "records.ml" 462 26225 26257
+type(
+  API.ref_subject ref
+)
+ident(
+  int_ref _ref "records.ml" 457 25984 25990 "records.ml" 457 25984 25994
+)
+"records.ml" 462 26225 26258 "records.ml" 462 26225 26260
+type(
+  API.ref_subject ref -> API.ref_subject -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 462 26225 26261 "records.ml" 462 26225 26262
+type(
+  API.ref_subject
+)
+ident(
+  int_ref a "records.ml" 462 26225 26245 "records.ml" 462 26225 26246
+)
+"records.ml" 462 26225 26253 "records.ml" 462 26225 26262
+type(
+  unit
+)
+"records.ml" 462 26225 26264 "records.ml" 462 26225 26270
+type(
+  API.subject_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 459 26101 26107 "records.ml" 459 26101 26113
+)
+"records.ml" 462 26225 26271 "records.ml" 462 26225 26273
+type(
+  API.subject_t lzy ref -> API.subject_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 462 26225 26278 "records.ml" 462 26225 26279
+type(
+  API.subject_t
+)
+ident(
+  int_ref b "records.ml" 462 26225 26247 "records.ml" 462 26225 26248
+)
+"records.ml" 462 26225 26274 "records.ml" 462 26225 26279
+type(
+  API.subject_t lzy
+)
+"records.ml" 462 26225 26264 "records.ml" 462 26225 26279
+type(
+  unit
+)
+"records.ml" 462 26225 26253 "records.ml" 462 26225 26279
+type(
+  unit
+)
+"records.ml" 462 26225 26239 "records.ml" 462 26225 26280
+type(
+  API.ref_subject * API.subject_t -> unit
+)
+"records.ml" 463 26282 26293 "records.ml" 463 26282 26294
+type(
+  unit -> API.subject_t
+)
+ident(
+  int_ref x "records.ml" 460 26136 26142 "records.ml" 460 26136 26143
+)
+"records.ml" 464 26296 26312 "records.ml" 464 26296 26314
+type(
+  unit
+)
+"records.ml" 464 26296 26318 "records.ml" 464 26296 26319
+type(
+  API.ref_subject ref -> API.ref_subject
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 464 26296 26319 "records.ml" 464 26296 26323
+type(
+  API.ref_subject ref
+)
+ident(
+  int_ref _ref "records.ml" 457 25984 25990 "records.ml" 457 25984 25994
+)
+"records.ml" 464 26296 26318 "records.ml" 464 26296 26323
+type(
+  API.ref_subject
+)
+"records.ml" 464 26296 26307 "records.ml" 464 26296 26324
+type(
+  unit -> API.ref_subject
+)
+"records.ml" 467 26341 26343 "records.ml" 467 26341 26353
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 467 26341 26360 "records.ml" 467 26341 26366
+type(
+  string
+)
+"records.ml" 467 26341 26389 "records.ml" 467 26341 26391
+type(
+  unit
+)
+"records.ml" 467 26341 26396 "records.ml" 467 26341 26397
+type(
+  unit -> API.subject_t
+)
+ident(
+  int_ref x "records.ml" 460 26136 26142 "records.ml" 460 26136 26143
+)
+"records.ml" 467 26341 26398 "records.ml" 467 26341 26400
+type(
+  unit
+)
+"records.ml" 467 26341 26395 "records.ml" 467 26341 26401
+type(
+  API.subject_t
+)
+"records.ml" 467 26341 26395 "records.ml" 467 26341 26418
+type(
+  string
+)
+"records.ml" 467 26341 26384 "records.ml" 467 26341 26419
+type(
+  unit -> string
+)
+"records.ml" 467 26341 26420 "records.ml" 467 26341 26422
+type(
+  unit
+)
+"records.ml" 467 26341 26343 "records.ml" 467 26341 26422
+type(
+  field
+)
+"records.ml" 468 26424 26426 "records.ml" 468 26424 26436
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 468 26424 26443 "records.ml" 468 26424 26463
+type(
+  string
+)
+"records.ml" 468 26424 26480 "records.ml" 468 26424 26482
+type(
+  unit
+)
+"records.ml" 468 26424 26487 "records.ml" 468 26424 26488
+type(
+  unit -> API.subject_t
+)
+ident(
+  int_ref x "records.ml" 460 26136 26142 "records.ml" 460 26136 26143
+)
+"records.ml" 468 26424 26489 "records.ml" 468 26424 26491
+type(
+  unit
+)
+"records.ml" 468 26424 26486 "records.ml" 468 26424 26492
+type(
+  API.subject_t
+)
+"records.ml" 468 26424 26486 "records.ml" 468 26424 26523
+type(
+  string
+)
+"records.ml" 468 26424 26475 "records.ml" 468 26424 26524
+type(
+  unit -> string
+)
+"records.ml" 468 26424 26525 "records.ml" 468 26424 26527
+type(
+  unit
+)
+"records.ml" 468 26424 26426 "records.ml" 468 26424 26527
+type(
+  field
+)
+"records.ml" 469 26530 26532 "records.ml" 469 26530 26542
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 469 26530 26549 "records.ml" 469 26530 26563
+type(
+  string
+)
+"records.ml" 469 26530 26578 "records.ml" 469 26530 26580
+type(
+  unit
+)
+"records.ml" 469 26530 26584 "records.ml" 469 26530 26610
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 469 26530 26611 "records.ml" 469 26530 26615
+type(
+  string
+)
+"records.ml" 469 26530 26617 "records.ml" 469 26530 26618
+type(
+  unit -> API.subject_t
+)
+ident(
+  int_ref x "records.ml" 460 26136 26142 "records.ml" 460 26136 26143
+)
+"records.ml" 469 26530 26619 "records.ml" 469 26530 26621
+type(
+  unit
+)
+"records.ml" 469 26530 26616 "records.ml" 469 26530 26622
+type(
+  API.subject_t
+)
+"records.ml" 469 26530 26616 "records.ml" 469 26530 26647
+type(
+  API.string_to_string_map
+)
+"records.ml" 469 26530 26584 "records.ml" 469 26530 26647
+type(
+  string
+)
+"records.ml" 469 26530 26573 "records.ml" 469 26530 26648
+type(
+  unit -> string
+)
+"records.ml" 470 26649 26668 "records.ml" 470 26649 26670
+type(
+  unit
+)
+"records.ml" 470 26649 26675 "records.ml" 470 26649 26676
+type(
+  unit -> API.subject_t
+)
+ident(
+  int_ref x "records.ml" 460 26136 26142 "records.ml" 460 26136 26143
+)
+"records.ml" 470 26649 26677 "records.ml" 470 26649 26679
+type(
+  unit
+)
+"records.ml" 470 26649 26674 "records.ml" 470 26649 26680
+type(
+  API.subject_t
+)
+"records.ml" 470 26649 26674 "records.ml" 470 26649 26705
+type(
+  API.string_to_string_map
+)
+"records.ml" 470 26649 26663 "records.ml" 470 26649 26706
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 470 26649 26707 "records.ml" 470 26649 26709
+type(
+  unit
+)
+"records.ml" 469 26530 26532 "records.ml" 470 26649 26709
+type(
+  field
+)
+"records.ml" 471 26711 26713 "records.ml" 471 26711 26723
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 471 26711 26730 "records.ml" 471 26711 26737
+type(
+  string
+)
+"records.ml" 472 26738 26753 "records.ml" 472 26738 26755
+type(
+  unit
+)
+"records.ml" 472 26738 26759 "records.ml" 472 26738 26772
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 472 26738 26773 "records.ml" 472 26738 26777
+type(
+  string
+)
+"records.ml" 474 26792 26802 "records.ml" 474 26792 26810
+type(
+  (API.ref_role -> string) -> API.ref_role_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 475 26812 26829 "records.ml" 475 26812 26833
+type(
+  API.ref_role
+)
+ident(
+  def self "records.ml" 475 26812 26837 "records.ml" 475 26812 26901
+)
+"records.ml" 475 26812 26841 "records.ml" 475 26812 26867
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_role -> string
+)
+ident(
+  ext_ref Client.( Client ).( Role ).get_name_label
+)
+"records.ml" 475 26812 26868 "records.ml" 475 26812 26871
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 456 25939 25958 "records.ml" 456 25939 25961
+)
+"records.ml" 475 26812 26872 "records.ml" 475 26812 26882
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 456 25939 25962 "records.ml" 456 25939 25972
+)
+"records.ml" 475 26812 26883 "records.ml" 475 26812 26887
+type(
+  API.ref_role
+)
+ident(
+  int_ref self "records.ml" 475 26812 26829 "records.ml" 475 26812 26833
+)
+"records.ml" 475 26812 26841 "records.ml" 475 26812 26887
+type(
+  string
+)
+"records.ml" 475 26812 26893 "records.ml" 475 26812 26894
+type(
+  exn
+)
+"records.ml" 475 26812 26898 "records.ml" 475 26812 26901
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 475 26812 26837 "records.ml" 475 26812 26901
+type(
+  string
+)
+"records.ml" 475 26812 26824 "records.ml" 475 26812 26902
+type(
+  API.ref_role -> string
+)
+"records.ml" 476 26904 26917 "records.ml" 476 26904 26941
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_subject -> API.ref_role_set
+)
+ident(
+  ext_ref Client.( Client ).( Subject ).get_roles
+)
+"records.ml" 476 26904 26942 "records.ml" 476 26904 26945
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 456 25939 25958 "records.ml" 456 25939 25961
+)
+"records.ml" 476 26904 26946 "records.ml" 476 26904 26956
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 456 25939 25962 "records.ml" 456 25939 25972
+)
+"records.ml" 476 26904 26957 "records.ml" 476 26904 26964
+type(
+  API.ref_subject
+)
+ident(
+  int_ref subject "records.ml" 456 25939 25973 "records.ml" 456 25939 25980
+)
+"records.ml" 476 26904 26916 "records.ml" 476 26904 26965
+type(
+  API.ref_role_set
+)
+"records.ml" 474 26792 26802 "records.ml" 476 26904 26965
+type(
+  string list
+)
+"records.ml" 477 26966 26979 "records.ml" 477 26966 26980
+type(
+  exn
+)
+"records.ml" 477 26966 26984 "records.ml" 477 26966 26986
+type(
+  string list
+)
+"records.ml" 473 26779 26786 "records.ml" 478 26987 26995
+type(
+  string list
+)
+"records.ml" 472 26738 26759 "records.ml" 478 26987 26995
+type(
+  string
+)
+"records.ml" 472 26738 26748 "records.ml" 479 26996 27003
+type(
+  unit -> string
+)
+"records.ml" 480 27004 27020 "records.ml" 480 27004 27025
+type(
+  bool
+)
+"records.ml" 481 27026 27045 "records.ml" 481 27026 27047
+type(
+  unit
+)
+"records.ml" 481 27026 27055 "records.ml" 481 27026 27063
+type(
+  (API.ref_role -> string) -> API.ref_role_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 482 27064 27077 "records.ml" 482 27064 27081
+type(
+  API.ref_role
+)
+ident(
+  def self "records.ml" 482 27064 27085 "records.ml" 482 27064 27149
+)
+"records.ml" 482 27064 27089 "records.ml" 482 27064 27115
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_role -> string
+)
+ident(
+  ext_ref Client.( Client ).( Role ).get_name_label
+)
+"records.ml" 482 27064 27116 "records.ml" 482 27064 27119
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 456 25939 25958 "records.ml" 456 25939 25961
+)
+"records.ml" 482 27064 27120 "records.ml" 482 27064 27130
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 456 25939 25962 "records.ml" 456 25939 25972
+)
+"records.ml" 482 27064 27131 "records.ml" 482 27064 27135
+type(
+  API.ref_role
+)
+ident(
+  int_ref self "records.ml" 482 27064 27077 "records.ml" 482 27064 27081
+)
+"records.ml" 482 27064 27089 "records.ml" 482 27064 27135
+type(
+  string
+)
+"records.ml" 482 27064 27141 "records.ml" 482 27064 27142
+type(
+  exn
+)
+"records.ml" 482 27064 27146 "records.ml" 482 27064 27149
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 482 27064 27085 "records.ml" 482 27064 27149
+type(
+  string
+)
+"records.ml" 482 27064 27072 "records.ml" 482 27064 27150
+type(
+  API.ref_role -> string
+)
+"records.ml" 483 27152 27161 "records.ml" 483 27152 27185
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_subject -> API.ref_role_set
+)
+ident(
+  ext_ref Client.( Client ).( Subject ).get_roles
+)
+"records.ml" 483 27152 27186 "records.ml" 483 27152 27189
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 456 25939 25958 "records.ml" 456 25939 25961
+)
+"records.ml" 483 27152 27190 "records.ml" 483 27152 27200
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 456 25939 25962 "records.ml" 456 25939 25972
+)
+"records.ml" 483 27152 27201 "records.ml" 483 27152 27208
+type(
+  API.ref_subject
+)
+ident(
+  int_ref subject "records.ml" 456 25939 25973 "records.ml" 456 25939 25980
+)
+"records.ml" 483 27152 27160 "records.ml" 483 27152 27209
+type(
+  API.ref_role_set
+)
+"records.ml" 481 27026 27055 "records.ml" 483 27152 27209
+type(
+  string list
+)
+"records.ml" 483 27152 27215 "records.ml" 483 27152 27216
+type(
+  exn
+)
+"records.ml" 483 27152 27220 "records.ml" 483 27152 27222
+type(
+  string list
+)
+"records.ml" 481 27026 27051 "records.ml" 483 27152 27222
+type(
+  string list
+)
+"records.ml" 481 27026 27040 "records.ml" 483 27152 27223
+type(
+  unit -> string list
+)
+"records.ml" 484 27224 27229 "records.ml" 484 27224 27231
+type(
+  unit
+)
+"records.ml" 471 26711 26713 "records.ml" 484 27224 27231
+type(
+  field
+)
+"records.ml" 466 26339 26339 "records.ml" 485 27233 27234
+type(
+  field list
+)
+"records.ml" 461 26167 26169 "records.ml" 485 27233 27235
+type(
+  ([ `subject ], API.subject_t) record
+)
+"records.ml" 460 26136 26138 "records.ml" 485 27233 27235
+type(
+  ([ `subject ], API.subject_t) record
+)
+"records.ml" 459 26101 26103 "records.ml" 485 27233 27235
+type(
+  ([ `subject ], API.subject_t) record
+)
+"records.ml" 458 26012 26014 "records.ml" 485 27233 27235
+type(
+  ([ `subject ], API.subject_t) record
+)
+"records.ml" 457 25984 25986 "records.ml" 485 27233 27235
+type(
+  ([ `subject ], API.subject_t) record
+)
+"records.ml" 487 27237 27241 "records.ml" 487 27237 27252
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_role -> ([ `role ], API.role_t) record
+)
+ident(
+  def role_record "records.ml" 513 28448 28448 --
+)
+"records.ml" 487 27237 27253 "records.ml" 487 27237 27256
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 487 27237 27257 "records.ml" 511 28444 28446
+)
+"records.ml" 487 27237 27257 "records.ml" 487 27237 27267
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 487 27237 27268 "records.ml" 511 28444 28446
+)
+"records.ml" 487 27237 27268 "records.ml" 487 27237 27272
+type(
+  API.ref_role
+)
+ident(
+  def role "records.ml" 488 27276 27278 "records.ml" 511 28444 28446
+)
+"records.ml" 488 27276 27282 "records.ml" 488 27276 27286
+type(
+  API.ref_role ref
+)
+"records.ml" 488 27276 27289 "records.ml" 488 27276 27292
+type(
+  API.ref_role -> API.ref_role ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 488 27276 27293 "records.ml" 488 27276 27297
+type(
+  API.ref_role
+)
+ident(
+  int_ref role "records.ml" 487 27237 27268 "records.ml" 487 27237 27272
+)
+"records.ml" 488 27276 27289 "records.ml" 488 27276 27297
+type(
+  API.ref_role ref
+)
+"records.ml" 489 27301 27307 "records.ml" 489 27301 27319
+type(
+  API.role_t lzy
+)
+"records.ml" 489 27301 27333 "records.ml" 489 27301 27335
+type(
+  unit
+)
+"records.ml" 489 27301 27339 "records.ml" 489 27301 27361
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_role -> API.role_t
+)
+ident(
+  ext_ref Client.( Client ).( Role ).get_record
+)
+"records.ml" 489 27301 27362 "records.ml" 489 27301 27365
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 487 27237 27253 "records.ml" 487 27237 27256
+)
+"records.ml" 489 27301 27366 "records.ml" 489 27301 27376
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 487 27237 27257 "records.ml" 487 27237 27267
+)
+"records.ml" 489 27301 27377 "records.ml" 489 27301 27378
+type(
+  API.ref_role ref -> API.ref_role
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 489 27301 27378 "records.ml" 489 27301 27382
+type(
+  API.ref_role ref
+)
+ident(
+  int_ref _ref "records.ml" 488 27276 27282 "records.ml" 488 27276 27286
+)
+"records.ml" 489 27301 27377 "records.ml" 489 27301 27382
+type(
+  API.ref_role
+)
+"records.ml" 489 27301 27339 "records.ml" 489 27301 27382
+type(
+  API.role_t
+)
+"records.ml" 489 27301 27328 "records.ml" 489 27301 27383
+type(
+  unit -> API.role_t
+)
+"records.ml" 489 27301 27322 "records.ml" 489 27301 27383
+type(
+  API.role_t lzy
+)
+"records.ml" 490 27387 27393 "records.ml" 490 27387 27399
+type(
+  API.role_t lzy ref
+)
+"records.ml" 490 27387 27402 "records.ml" 490 27387 27405
+type(
+  API.role_t lzy -> API.role_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 490 27387 27406 "records.ml" 490 27387 27418
+type(
+  API.role_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 489 27301 27307 "records.ml" 489 27301 27319
+)
+"records.ml" 490 27387 27402 "records.ml" 490 27387 27418
+type(
+  API.role_t lzy ref
+)
+"records.ml" 491 27422 27428 "records.ml" 491 27422 27429
+type(
+  unit -> API.role_t
+)
+"records.ml" 491 27422 27430 "records.ml" 491 27422 27432
+type(
+  unit
+)
+"records.ml" 491 27422 27435 "records.ml" 491 27422 27442
+type(
+  API.role_t lzy ref -> API.role_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 491 27422 27443 "records.ml" 491 27422 27449
+type(
+  API.role_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 490 27387 27393 "records.ml" 490 27387 27399
+)
+"records.ml" 491 27422 27435 "records.ml" 491 27422 27449
+type(
+  API.role_t
+)
+"records.ml" 492 27453 27469 "records.ml" 492 27453 27470
+type(
+  API.ref_role
+)
+ident(
+  def r "records.ml" 492 27453 27474 "records.ml" 492 27453 27507
+)
+"records.ml" 492 27453 27474 "records.ml" 492 27453 27478
+type(
+  API.ref_role ref
+)
+ident(
+  int_ref _ref "records.ml" 488 27276 27282 "records.ml" 488 27276 27286
+)
+"records.ml" 492 27453 27479 "records.ml" 492 27453 27481
+type(
+  API.ref_role ref -> API.ref_role -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 492 27453 27482 "records.ml" 492 27453 27483
+type(
+  API.ref_role
+)
+ident(
+  int_ref r "records.ml" 492 27453 27469 "records.ml" 492 27453 27470
+)
+"records.ml" 492 27453 27474 "records.ml" 492 27453 27483
+type(
+  unit
+)
+"records.ml" 492 27453 27485 "records.ml" 492 27453 27491
+type(
+  API.role_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 490 27387 27393 "records.ml" 490 27387 27399
+)
+"records.ml" 492 27453 27492 "records.ml" 492 27453 27494
+type(
+  API.role_t lzy ref -> API.role_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 492 27453 27495 "records.ml" 492 27453 27507
+type(
+  API.role_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 489 27301 27307 "records.ml" 489 27301 27319
+)
+"records.ml" 492 27453 27485 "records.ml" 492 27453 27507
+type(
+  unit
+)
+"records.ml" 492 27453 27474 "records.ml" 492 27453 27507
+type(
+  unit
+)
+"records.ml" 492 27453 27464 "records.ml" 492 27453 27509
+type(
+  API.ref_role -> unit
+)
+"records.ml" 493 27511 27531 "records.ml" 493 27511 27532
+type(
+  API.ref_role
+)
+ident(
+  def a "records.ml" 493 27511 27539 "records.ml" 493 27511 27565
+)
+"records.ml" 493 27511 27533 "records.ml" 493 27511 27534
+type(
+  API.role_t
+)
+ident(
+  def b "records.ml" 493 27511 27539 "records.ml" 493 27511 27565
+)
+"records.ml" 493 27511 27530 "records.ml" 493 27511 27535
+type(
+  API.ref_role * API.role_t
+)
+"records.ml" 493 27511 27539 "records.ml" 493 27511 27543
+type(
+  API.ref_role ref
+)
+ident(
+  int_ref _ref "records.ml" 488 27276 27282 "records.ml" 488 27276 27286
+)
+"records.ml" 493 27511 27544 "records.ml" 493 27511 27546
+type(
+  API.ref_role ref -> API.ref_role -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 493 27511 27547 "records.ml" 493 27511 27548
+type(
+  API.ref_role
+)
+ident(
+  int_ref a "records.ml" 493 27511 27531 "records.ml" 493 27511 27532
+)
+"records.ml" 493 27511 27539 "records.ml" 493 27511 27548
+type(
+  unit
+)
+"records.ml" 493 27511 27550 "records.ml" 493 27511 27556
+type(
+  API.role_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 490 27387 27393 "records.ml" 490 27387 27399
+)
+"records.ml" 493 27511 27557 "records.ml" 493 27511 27559
+type(
+  API.role_t lzy ref -> API.role_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 493 27511 27564 "records.ml" 493 27511 27565
+type(
+  API.role_t
+)
+ident(
+  int_ref b "records.ml" 493 27511 27533 "records.ml" 493 27511 27534
+)
+"records.ml" 493 27511 27560 "records.ml" 493 27511 27565
+type(
+  API.role_t lzy
+)
+"records.ml" 493 27511 27550 "records.ml" 493 27511 27565
+type(
+  unit
+)
+"records.ml" 493 27511 27539 "records.ml" 493 27511 27565
+type(
+  unit
+)
+"records.ml" 493 27511 27525 "records.ml" 493 27511 27566
+type(
+  API.ref_role * API.role_t -> unit
+)
+"records.ml" 494 27568 27579 "records.ml" 494 27568 27580
+type(
+  unit -> API.role_t
+)
+ident(
+  int_ref x "records.ml" 491 27422 27428 "records.ml" 491 27422 27429
+)
+"records.ml" 495 27582 27598 "records.ml" 495 27582 27600
+type(
+  unit
+)
+"records.ml" 495 27582 27604 "records.ml" 495 27582 27605
+type(
+  API.ref_role ref -> API.ref_role
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 495 27582 27605 "records.ml" 495 27582 27609
+type(
+  API.ref_role ref
+)
+ident(
+  int_ref _ref "records.ml" 488 27276 27282 "records.ml" 488 27276 27286
+)
+"records.ml" 495 27582 27604 "records.ml" 495 27582 27609
+type(
+  API.ref_role
+)
+"records.ml" 495 27582 27593 "records.ml" 495 27582 27610
+type(
+  unit -> API.ref_role
+)
+"records.ml" 498 27627 27629 "records.ml" 498 27627 27639
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 498 27627 27646 "records.ml" 498 27627 27652
+type(
+  string
+)
+"records.ml" 498 27627 27675 "records.ml" 498 27627 27677
+type(
+  unit
+)
+"records.ml" 498 27627 27682 "records.ml" 498 27627 27683
+type(
+  unit -> API.role_t
+)
+ident(
+  int_ref x "records.ml" 491 27422 27428 "records.ml" 491 27422 27429
+)
+"records.ml" 498 27627 27684 "records.ml" 498 27627 27686
+type(
+  unit
+)
+"records.ml" 498 27627 27681 "records.ml" 498 27627 27687
+type(
+  API.role_t
+)
+"records.ml" 498 27627 27681 "records.ml" 498 27627 27701
+type(
+  string
+)
+"records.ml" 498 27627 27670 "records.ml" 498 27627 27702
+type(
+  unit -> string
+)
+"records.ml" 498 27627 27703 "records.ml" 498 27627 27705
+type(
+  unit
+)
+"records.ml" 498 27627 27629 "records.ml" 498 27627 27705
+type(
+  field
+)
+"records.ml" 499 27707 27709 "records.ml" 499 27707 27719
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 499 27707 27726 "records.ml" 499 27707 27732
+type(
+  string
+)
+"records.ml" 499 27707 27755 "records.ml" 499 27707 27757
+type(
+  unit
+)
+"records.ml" 499 27707 27762 "records.ml" 499 27707 27763
+type(
+  unit -> API.role_t
+)
+ident(
+  int_ref x "records.ml" 491 27422 27428 "records.ml" 491 27422 27429
+)
+"records.ml" 499 27707 27764 "records.ml" 499 27707 27766
+type(
+  unit
+)
+"records.ml" 499 27707 27761 "records.ml" 499 27707 27767
+type(
+  API.role_t
+)
+"records.ml" 499 27707 27761 "records.ml" 499 27707 27787
+type(
+  string
+)
+"records.ml" 499 27707 27750 "records.ml" 499 27707 27788
+type(
+  unit -> string
+)
+"records.ml" 499 27707 27789 "records.ml" 499 27707 27791
+type(
+  unit
+)
+"records.ml" 499 27707 27709 "records.ml" 499 27707 27791
+type(
+  field
+)
+"records.ml" 500 27793 27795 "records.ml" 500 27793 27805
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 500 27793 27812 "records.ml" 500 27793 27825
+type(
+  string
+)
+"records.ml" 500 27793 27848 "records.ml" 500 27793 27850
+type(
+  unit
+)
+"records.ml" 500 27793 27855 "records.ml" 500 27793 27856
+type(
+  unit -> API.role_t
+)
+ident(
+  int_ref x "records.ml" 491 27422 27428 "records.ml" 491 27422 27429
+)
+"records.ml" 500 27793 27857 "records.ml" 500 27793 27859
+type(
+  unit
+)
+"records.ml" 500 27793 27854 "records.ml" 500 27793 27860
+type(
+  API.role_t
+)
+"records.ml" 500 27793 27854 "records.ml" 500 27793 27886
+type(
+  string
+)
+"records.ml" 500 27793 27843 "records.ml" 500 27793 27887
+type(
+  unit -> string
+)
+"records.ml" 500 27793 27888 "records.ml" 500 27793 27890
+type(
+  unit
+)
+"records.ml" 500 27793 27795 "records.ml" 500 27793 27890
+type(
+  field
+)
+"records.ml" 497 27625 27625 "records.ml" 511 28444 28445
+type(
+  field list
+)
+"records.ml" 492 27453 27455 "records.ml" 511 28444 28446
+type(
+  ([ `role ], API.role_t) record
+)
+"records.ml" 491 27422 27424 "records.ml" 511 28444 28446
+type(
+  ([ `role ], API.role_t) record
+)
+"records.ml" 490 27387 27389 "records.ml" 511 28444 28446
+type(
+  ([ `role ], API.role_t) record
+)
+"records.ml" 489 27301 27303 "records.ml" 511 28444 28446
+type(
+  ([ `role ], API.role_t) record
+)
+"records.ml" 488 27276 27278 "records.ml" 511 28444 28446
+type(
+  ([ `role ], API.role_t) record
+)
+"records.ml" 513 28448 28452 "records.ml" 513 28448 28463
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_VMPP -> ([ `VMPP ], API.vMPP_t) record
+)
+ident(
+  def vmpp_record "records.ml" 642 34576 34576 --
+)
+"records.ml" 513 28448 28464 "records.ml" 513 28448 28467
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 513 28448 28468 "records.ml" 613 33627 33629
+)
+"records.ml" 513 28448 28468 "records.ml" 513 28448 28478
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 513 28448 28479 "records.ml" 613 33627 33629
+)
+"records.ml" 513 28448 28479 "records.ml" 513 28448 28483
+type(
+  API.ref_VMPP
+)
+ident(
+  def vmpp "records.ml" 514 28486 28488 "records.ml" 613 33627 33629
+)
+"records.ml" 514 28486 28492 "records.ml" 514 28486 28496
+type(
+  API.ref_VMPP ref
+)
+"records.ml" 514 28486 28499 "records.ml" 514 28486 28502
+type(
+  API.ref_VMPP -> API.ref_VMPP ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 514 28486 28503 "records.ml" 514 28486 28507
+type(
+  API.ref_VMPP
+)
+ident(
+  int_ref vmpp "records.ml" 513 28448 28479 "records.ml" 513 28448 28483
+)
+"records.ml" 514 28486 28499 "records.ml" 514 28486 28507
+type(
+  API.ref_VMPP ref
+)
+"records.ml" 515 28511 28517 "records.ml" 515 28511 28529
+type(
+  API.vMPP_t lzy
+)
+"records.ml" 515 28511 28543 "records.ml" 515 28511 28545
+type(
+  unit
+)
+"records.ml" 515 28511 28549 "records.ml" 515 28511 28571
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VMPP -> API.vMPP_t
+)
+ident(
+  ext_ref Client.( Client ).( VMPP ).get_record
+)
+"records.ml" 515 28511 28572 "records.ml" 515 28511 28575
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 513 28448 28464 "records.ml" 513 28448 28467
+)
+"records.ml" 515 28511 28576 "records.ml" 515 28511 28586
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 513 28448 28468 "records.ml" 513 28448 28478
+)
+"records.ml" 515 28511 28587 "records.ml" 515 28511 28588
+type(
+  API.ref_VMPP ref -> API.ref_VMPP
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 515 28511 28588 "records.ml" 515 28511 28592
+type(
+  API.ref_VMPP ref
+)
+ident(
+  int_ref _ref "records.ml" 514 28486 28492 "records.ml" 514 28486 28496
+)
+"records.ml" 515 28511 28587 "records.ml" 515 28511 28592
+type(
+  API.ref_VMPP
+)
+"records.ml" 515 28511 28549 "records.ml" 515 28511 28592
+type(
+  API.vMPP_t
+)
+"records.ml" 515 28511 28538 "records.ml" 515 28511 28593
+type(
+  unit -> API.vMPP_t
+)
+"records.ml" 515 28511 28532 "records.ml" 515 28511 28593
+type(
+  API.vMPP_t lzy
+)
+"records.ml" 516 28597 28603 "records.ml" 516 28597 28609
+type(
+  API.vMPP_t lzy ref
+)
+"records.ml" 516 28597 28612 "records.ml" 516 28597 28615
+type(
+  API.vMPP_t lzy -> API.vMPP_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 516 28597 28616 "records.ml" 516 28597 28628
+type(
+  API.vMPP_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 515 28511 28517 "records.ml" 515 28511 28529
+)
+"records.ml" 516 28597 28612 "records.ml" 516 28597 28628
+type(
+  API.vMPP_t lzy ref
+)
+"records.ml" 517 28632 28638 "records.ml" 517 28632 28639
+type(
+  unit -> API.vMPP_t
+)
+"records.ml" 517 28632 28640 "records.ml" 517 28632 28642
+type(
+  unit
+)
+"records.ml" 517 28632 28645 "records.ml" 517 28632 28652
+type(
+  API.vMPP_t lzy ref -> API.vMPP_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 517 28632 28653 "records.ml" 517 28632 28659
+type(
+  API.vMPP_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 516 28597 28603 "records.ml" 516 28597 28609
+)
+"records.ml" 517 28632 28645 "records.ml" 517 28632 28659
+type(
+  API.vMPP_t
+)
+"records.ml" 518 28663 28679 "records.ml" 518 28663 28680
+type(
+  API.ref_VMPP
+)
+ident(
+  def r "records.ml" 518 28663 28684 "records.ml" 518 28663 28717
+)
+"records.ml" 518 28663 28684 "records.ml" 518 28663 28688
+type(
+  API.ref_VMPP ref
+)
+ident(
+  int_ref _ref "records.ml" 514 28486 28492 "records.ml" 514 28486 28496
+)
+"records.ml" 518 28663 28689 "records.ml" 518 28663 28691
+type(
+  API.ref_VMPP ref -> API.ref_VMPP -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 518 28663 28692 "records.ml" 518 28663 28693
+type(
+  API.ref_VMPP
+)
+ident(
+  int_ref r "records.ml" 518 28663 28679 "records.ml" 518 28663 28680
+)
+"records.ml" 518 28663 28684 "records.ml" 518 28663 28693
+type(
+  unit
+)
+"records.ml" 518 28663 28695 "records.ml" 518 28663 28701
+type(
+  API.vMPP_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 516 28597 28603 "records.ml" 516 28597 28609
+)
+"records.ml" 518 28663 28702 "records.ml" 518 28663 28704
+type(
+  API.vMPP_t lzy ref -> API.vMPP_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 518 28663 28705 "records.ml" 518 28663 28717
+type(
+  API.vMPP_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 515 28511 28517 "records.ml" 515 28511 28529
+)
+"records.ml" 518 28663 28695 "records.ml" 518 28663 28717
+type(
+  unit
+)
+"records.ml" 518 28663 28684 "records.ml" 518 28663 28717
+type(
+  unit
+)
+"records.ml" 518 28663 28674 "records.ml" 518 28663 28719
+type(
+  API.ref_VMPP -> unit
+)
+"records.ml" 519 28721 28741 "records.ml" 519 28721 28742
+type(
+  API.ref_VMPP
+)
+ident(
+  def a "records.ml" 519 28721 28749 "records.ml" 519 28721 28775
+)
+"records.ml" 519 28721 28743 "records.ml" 519 28721 28744
+type(
+  API.vMPP_t
+)
+ident(
+  def b "records.ml" 519 28721 28749 "records.ml" 519 28721 28775
+)
+"records.ml" 519 28721 28740 "records.ml" 519 28721 28745
+type(
+  API.ref_VMPP * API.vMPP_t
+)
+"records.ml" 519 28721 28749 "records.ml" 519 28721 28753
+type(
+  API.ref_VMPP ref
+)
+ident(
+  int_ref _ref "records.ml" 514 28486 28492 "records.ml" 514 28486 28496
+)
+"records.ml" 519 28721 28754 "records.ml" 519 28721 28756
+type(
+  API.ref_VMPP ref -> API.ref_VMPP -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 519 28721 28757 "records.ml" 519 28721 28758
+type(
+  API.ref_VMPP
+)
+ident(
+  int_ref a "records.ml" 519 28721 28741 "records.ml" 519 28721 28742
+)
+"records.ml" 519 28721 28749 "records.ml" 519 28721 28758
+type(
+  unit
+)
+"records.ml" 519 28721 28760 "records.ml" 519 28721 28766
+type(
+  API.vMPP_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 516 28597 28603 "records.ml" 516 28597 28609
+)
+"records.ml" 519 28721 28767 "records.ml" 519 28721 28769
+type(
+  API.vMPP_t lzy ref -> API.vMPP_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 519 28721 28774 "records.ml" 519 28721 28775
+type(
+  API.vMPP_t
+)
+ident(
+  int_ref b "records.ml" 519 28721 28743 "records.ml" 519 28721 28744
+)
+"records.ml" 519 28721 28770 "records.ml" 519 28721 28775
+type(
+  API.vMPP_t lzy
+)
+"records.ml" 519 28721 28760 "records.ml" 519 28721 28775
+type(
+  unit
+)
+"records.ml" 519 28721 28749 "records.ml" 519 28721 28775
+type(
+  unit
+)
+"records.ml" 519 28721 28735 "records.ml" 519 28721 28776
+type(
+  API.ref_VMPP * API.vMPP_t -> unit
+)
+"records.ml" 520 28778 28789 "records.ml" 520 28778 28790
+type(
+  unit -> API.vMPP_t
+)
+ident(
+  int_ref x "records.ml" 517 28632 28638 "records.ml" 517 28632 28639
+)
+"records.ml" 521 28792 28808 "records.ml" 521 28792 28810
+type(
+  unit
+)
+"records.ml" 521 28792 28814 "records.ml" 521 28792 28815
+type(
+  API.ref_VMPP ref -> API.ref_VMPP
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 521 28792 28815 "records.ml" 521 28792 28819
+type(
+  API.ref_VMPP ref
+)
+ident(
+  int_ref _ref "records.ml" 514 28486 28492 "records.ml" 514 28486 28496
+)
+"records.ml" 521 28792 28814 "records.ml" 521 28792 28819
+type(
+  API.ref_VMPP
+)
+"records.ml" 521 28792 28803 "records.ml" 521 28792 28820
+type(
+  unit -> API.ref_VMPP
+)
+"records.ml" 524 28837 28839 "records.ml" 524 28837 28849
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 524 28837 28856 "records.ml" 524 28837 28862
+type(
+  string
+)
+"records.ml" 525 28863 28877 "records.ml" 525 28863 28879
+type(
+  unit
+)
+"records.ml" 525 28863 28884 "records.ml" 525 28863 28885
+type(
+  unit -> API.vMPP_t
+)
+ident(
+  int_ref x "records.ml" 517 28632 28638 "records.ml" 517 28632 28639
+)
+"records.ml" 525 28863 28886 "records.ml" 525 28863 28888
+type(
+  unit
+)
+"records.ml" 525 28863 28883 "records.ml" 525 28863 28889
+type(
+  API.vMPP_t
+)
+"records.ml" 525 28863 28883 "records.ml" 525 28863 28903
+type(
+  string
+)
+"records.ml" 525 28863 28872 "records.ml" 525 28863 28904
+type(
+  unit -> string
+)
+"records.ml" 526 28905 28909 "records.ml" 526 28905 28911
+type(
+  unit
+)
+"records.ml" 524 28837 28839 "records.ml" 526 28905 28911
+type(
+  field
+)
+"records.ml" 527 28913 28915 "records.ml" 527 28913 28925
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 527 28913 28932 "records.ml" 527 28913 28944
+type(
+  string
+)
+"records.ml" 528 28945 28959 "records.ml" 528 28945 28961
+type(
+  unit
+)
+"records.ml" 528 28945 28966 "records.ml" 528 28945 28967
+type(
+  unit -> API.vMPP_t
+)
+ident(
+  int_ref x "records.ml" 517 28632 28638 "records.ml" 517 28632 28639
+)
+"records.ml" 528 28945 28968 "records.ml" 528 28945 28970
+type(
+  unit
+)
+"records.ml" 528 28945 28965 "records.ml" 528 28945 28971
+type(
+  API.vMPP_t
+)
+"records.ml" 528 28945 28965 "records.ml" 528 28945 28991
+type(
+  string
+)
+"records.ml" 528 28945 28954 "records.ml" 528 28945 28992
+type(
+  unit -> string
+)
+"records.ml" 529 28993 29007 "records.ml" 529 28993 29008
+type(
+  string
+)
+ident(
+  def x "records.ml" 529 28993 29012 "records.ml" 529 28993 29060
+)
+"records.ml" 529 28993 29012 "records.ml" 529 28993 29038
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VMPP -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VMPP ).set_name_label
+)
+"records.ml" 529 28993 29039 "records.ml" 529 28993 29042
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 513 28448 28464 "records.ml" 513 28448 28467
+)
+"records.ml" 529 28993 29043 "records.ml" 529 28993 29053
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 513 28448 28468 "records.ml" 513 28448 28478
+)
+"records.ml" 529 28993 29054 "records.ml" 529 28993 29058
+type(
+  API.ref_VMPP
+)
+ident(
+  int_ref vmpp "records.ml" 513 28448 28479 "records.ml" 513 28448 28483
+)
+"records.ml" 529 28993 29059 "records.ml" 529 28993 29060
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 529 28993 29007 "records.ml" 529 28993 29008
+)
+"records.ml" 529 28993 29012 "records.ml" 529 28993 29060
+type(
+  unit
+)
+"records.ml" 529 28993 29002 "records.ml" 529 28993 29061
+type(
+  string -> unit
+)
+"records.ml" 530 29062 29066 "records.ml" 530 29062 29068
+type(
+  unit
+)
+"records.ml" 527 28913 28915 "records.ml" 530 29062 29068
+type(
+  field
+)
+"records.ml" 531 29070 29072 "records.ml" 531 29070 29082
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 531 29070 29089 "records.ml" 531 29070 29107
+type(
+  string
+)
+"records.ml" 532 29108 29122 "records.ml" 532 29108 29124
+type(
+  unit
+)
+"records.ml" 532 29108 29129 "records.ml" 532 29108 29130
+type(
+  unit -> API.vMPP_t
+)
+ident(
+  int_ref x "records.ml" 517 28632 28638 "records.ml" 517 28632 28639
+)
+"records.ml" 532 29108 29131 "records.ml" 532 29108 29133
+type(
+  unit
+)
+"records.ml" 532 29108 29128 "records.ml" 532 29108 29134
+type(
+  API.vMPP_t
+)
+"records.ml" 532 29108 29128 "records.ml" 532 29108 29160
+type(
+  string
+)
+"records.ml" 532 29108 29117 "records.ml" 532 29108 29161
+type(
+  unit -> string
+)
+"records.ml" 533 29162 29176 "records.ml" 533 29162 29177
+type(
+  string
+)
+ident(
+  def x "records.ml" 533 29162 29181 "records.ml" 533 29162 29235
+)
+"records.ml" 533 29162 29181 "records.ml" 533 29162 29213
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VMPP -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VMPP ).set_name_description
+)
+"records.ml" 533 29162 29214 "records.ml" 533 29162 29217
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 513 28448 28464 "records.ml" 513 28448 28467
+)
+"records.ml" 533 29162 29218 "records.ml" 533 29162 29228
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 513 28448 28468 "records.ml" 513 28448 28478
+)
+"records.ml" 533 29162 29229 "records.ml" 533 29162 29233
+type(
+  API.ref_VMPP
+)
+ident(
+  int_ref vmpp "records.ml" 513 28448 28479 "records.ml" 513 28448 28483
+)
+"records.ml" 533 29162 29234 "records.ml" 533 29162 29235
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 533 29162 29176 "records.ml" 533 29162 29177
+)
+"records.ml" 533 29162 29181 "records.ml" 533 29162 29235
+type(
+  unit
+)
+"records.ml" 533 29162 29171 "records.ml" 533 29162 29236
+type(
+  string -> unit
+)
+"records.ml" 534 29237 29241 "records.ml" 534 29237 29243
+type(
+  unit
+)
+"records.ml" 531 29070 29072 "records.ml" 534 29237 29243
+type(
+  field
+)
+"records.ml" 535 29245 29247 "records.ml" 535 29245 29257
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 535 29245 29264 "records.ml" 535 29245 29283
+type(
+  string
+)
+"records.ml" 536 29284 29298 "records.ml" 536 29284 29300
+type(
+  unit
+)
+"records.ml" 536 29284 29304 "records.ml" 536 29284 29318
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 536 29284 29320 "records.ml" 536 29284 29321
+type(
+  unit -> API.vMPP_t
+)
+ident(
+  int_ref x "records.ml" 517 28632 28638 "records.ml" 517 28632 28639
+)
+"records.ml" 536 29284 29322 "records.ml" 536 29284 29324
+type(
+  unit
+)
+"records.ml" 536 29284 29319 "records.ml" 536 29284 29325
+type(
+  API.vMPP_t
+)
+"records.ml" 536 29284 29319 "records.ml" 536 29284 29352
+type(
+  bool
+)
+"records.ml" 536 29284 29304 "records.ml" 536 29284 29352
+type(
+  string
+)
+"records.ml" 536 29284 29293 "records.ml" 536 29284 29353
+type(
+  unit -> string
+)
+"records.ml" 537 29354 29368 "records.ml" 537 29354 29369
+type(
+  string
+)
+ident(
+  def x "records.ml" 537 29354 29373 "records.ml" 537 29354 29470
+)
+"records.ml" 537 29354 29373 "records.ml" 537 29354 29406
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VMPP -> value:bool -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VMPP ).set_is_policy_enabled
+)
+"records.ml" 537 29354 29407 "records.ml" 537 29354 29410
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 513 28448 28464 "records.ml" 513 28448 28467
+)
+"records.ml" 537 29354 29411 "records.ml" 537 29354 29421
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 513 28448 28468 "records.ml" 513 28448 28478
+)
+"records.ml" 537 29354 29422 "records.ml" 537 29354 29426
+type(
+  API.ref_VMPP
+)
+ident(
+  int_ref vmpp "records.ml" 513 28448 28479 "records.ml" 513 28448 28483
+)
+"records.ml" 537 29354 29428 "records.ml" 537 29354 29447
+type(
+  string -> string -> bool
+)
+ident(
+  int_ref safe_bool_of_string "records.ml" 72 2718 2722 "records.ml" 72 2718 2741
+)
+"records.ml" 537 29354 29448 "records.ml" 537 29354 29467
+type(
+  string
+)
+"records.ml" 537 29354 29468 "records.ml" 537 29354 29469
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 537 29354 29368 "records.ml" 537 29354 29369
+)
+"records.ml" 537 29354 29427 "records.ml" 537 29354 29470
+type(
+  bool
+)
+"records.ml" 537 29354 29373 "records.ml" 537 29354 29470
+type(
+  unit
+)
+"records.ml" 537 29354 29363 "records.ml" 537 29354 29471
+type(
+  string -> unit
+)
+"records.ml" 538 29472 29476 "records.ml" 538 29472 29478
+type(
+  unit
+)
+"records.ml" 535 29245 29247 "records.ml" 538 29472 29478
+type(
+  field
+)
+"records.ml" 539 29480 29482 "records.ml" 539 29480 29492
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 539 29480 29499 "records.ml" 539 29480 29512
+type(
+  string
+)
+"records.ml" 540 29513 29527 "records.ml" 540 29513 29529
+type(
+  unit
+)
+"records.ml" 540 29513 29533 "records.ml" 540 29513 29551
+type(
+  XMLRPC.xmlrpc -> string
+)
+ident(
+  ext_ref XMLRPC.( From ).string
+)
+"records.ml" 540 29513 29553 "records.ml" 540 29513 29576
+type(
+  API.vmpp_backup_type -> XMLRPC.xmlrpc
+)
+ident(
+  ext_ref API.( To ).vmpp_backup_type
+)
+"records.ml" 540 29513 29578 "records.ml" 540 29513 29579
+type(
+  unit -> API.vMPP_t
+)
+ident(
+  int_ref x "records.ml" 517 28632 28638 "records.ml" 517 28632 28639
+)
+"records.ml" 540 29513 29580 "records.ml" 540 29513 29582
+type(
+  unit
+)
+"records.ml" 540 29513 29577 "records.ml" 540 29513 29583
+type(
+  API.vMPP_t
+)
+"records.ml" 540 29513 29577 "records.ml" 540 29513 29604
+type(
+  API.vmpp_backup_type
+)
+"records.ml" 540 29513 29552 "records.ml" 540 29513 29605
+type(
+  XMLRPC.xmlrpc
+)
+"records.ml" 540 29513 29533 "records.ml" 540 29513 29605
+type(
+  string
+)
+"records.ml" 540 29513 29522 "records.ml" 540 29513 29606
+type(
+  unit -> string
+)
+"records.ml" 541 29607 29621 "records.ml" 541 29607 29622
+type(
+  string
+)
+ident(
+  def x "records.ml" 541 29607 29626 "records.ml" 541 29607 29736
+)
+"records.ml" 541 29607 29626 "records.ml" 541 29607 29653
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VMPP -> value:API.vmpp_backup_type -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VMPP ).set_backup_type
+)
+"records.ml" 541 29607 29654 "records.ml" 541 29607 29657
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 513 28448 28464 "records.ml" 513 28448 28467
+)
+"records.ml" 541 29607 29658 "records.ml" 541 29607 29668
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 513 28448 28468 "records.ml" 513 28448 28478
+)
+"records.ml" 541 29607 29669 "records.ml" 541 29607 29673
+type(
+  API.ref_VMPP
+)
+ident(
+  int_ref vmpp "records.ml" 513 28448 28479 "records.ml" 513 28448 28483
+)
+"records.ml" 541 29607 29675 "records.ml" 541 29607 29700
+type(
+  string -> XMLRPC.xmlrpc -> API.vmpp_backup_type
+)
+ident(
+  ext_ref API.( From ).vmpp_backup_type
+)
+"records.ml" 541 29607 29701 "records.ml" 541 29607 29714
+type(
+  string
+)
+"records.ml" 541 29607 29716 "records.ml" 541 29607 29732
+type(
+  string -> XMLRPC.xmlrpc
+)
+ident(
+  ext_ref XMLRPC.( To ).string
+)
+"records.ml" 541 29607 29733 "records.ml" 541 29607 29734
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 541 29607 29621 "records.ml" 541 29607 29622
+)
+"records.ml" 541 29607 29715 "records.ml" 541 29607 29735
+type(
+  XMLRPC.xmlrpc
+)
+"records.ml" 541 29607 29674 "records.ml" 541 29607 29736
+type(
+  API.vmpp_backup_type
+)
+"records.ml" 541 29607 29626 "records.ml" 541 29607 29736
+type(
+  unit
+)
+"records.ml" 541 29607 29616 "records.ml" 541 29607 29737
+type(
+  string -> unit
+)
+"records.ml" 542 29738 29742 "records.ml" 542 29738 29744
+type(
+  unit
+)
+"records.ml" 539 29480 29482 "records.ml" 542 29738 29744
+type(
+  field
+)
+"records.ml" 543 29746 29748 "records.ml" 543 29746 29758
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 543 29746 29765 "records.ml" 543 29746 29789
+type(
+  string
+)
+"records.ml" 544 29790 29804 "records.ml" 544 29790 29806
+type(
+  unit
+)
+"records.ml" 544 29790 29810 "records.ml" 544 29790 29823
+type(
+  int -> string
+)
+ident(
+  ext_ref Pervasives.string_of_int
+)
+"records.ml" 544 29790 29825 "records.ml" 544 29790 29837
+type(
+  int64 -> int
+)
+ident(
+  ext_ref Int64.to_int
+)
+"records.ml" 544 29790 29839 "records.ml" 544 29790 29840
+type(
+  unit -> API.vMPP_t
+)
+ident(
+  int_ref x "records.ml" 517 28632 28638 "records.ml" 517 28632 28639
+)
+"records.ml" 544 29790 29841 "records.ml" 544 29790 29843
+type(
+  unit
+)
+"records.ml" 544 29790 29838 "records.ml" 544 29790 29844
+type(
+  API.vMPP_t
+)
+"records.ml" 544 29790 29838 "records.ml" 544 29790 29876
+type(
+  int64
+)
+"records.ml" 544 29790 29824 "records.ml" 544 29790 29877
+type(
+  int
+)
+"records.ml" 544 29790 29810 "records.ml" 544 29790 29877
+type(
+  string
+)
+"records.ml" 544 29790 29799 "records.ml" 544 29790 29878
+type(
+  unit -> string
+)
+"records.ml" 545 29879 29893 "records.ml" 545 29879 29894
+type(
+  string
+)
+ident(
+  def x "records.ml" 545 29879 29898 "records.ml" 545 29879 30004
+)
+"records.ml" 545 29879 29898 "records.ml" 545 29879 29936
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VMPP -> value:int64 -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VMPP ).set_backup_retention_value
+)
+"records.ml" 545 29879 29937 "records.ml" 545 29879 29940
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 513 28448 28464 "records.ml" 513 28448 28467
+)
+"records.ml" 545 29879 29941 "records.ml" 545 29879 29951
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 513 28448 28468 "records.ml" 513 28448 28478
+)
+"records.ml" 545 29879 29952 "records.ml" 545 29879 29956
+type(
+  API.ref_VMPP
+)
+ident(
+  int_ref vmpp "records.ml" 513 28448 28479 "records.ml" 513 28448 28483
+)
+"records.ml" 545 29879 29958 "records.ml" 545 29879 29976
+type(
+  string -> string -> int64
+)
+ident(
+  int_ref safe_i64_of_string "records.ml" 69 2547 2551 "records.ml" 69 2547 2569
+)
+"records.ml" 545 29879 29977 "records.ml" 545 29879 30001
+type(
+  string
+)
+"records.ml" 545 29879 30002 "records.ml" 545 29879 30003
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 545 29879 29893 "records.ml" 545 29879 29894
+)
+"records.ml" 545 29879 29957 "records.ml" 545 29879 30004
+type(
+  int64
+)
+"records.ml" 545 29879 29898 "records.ml" 545 29879 30004
+type(
+  unit
+)
+"records.ml" 545 29879 29888 "records.ml" 545 29879 30005
+type(
+  string -> unit
+)
+"records.ml" 546 30006 30010 "records.ml" 546 30006 30012
+type(
+  unit
+)
+"records.ml" 543 29746 29748 "records.ml" 546 30006 30012
+type(
+  field
+)
+"records.ml" 547 30014 30016 "records.ml" 547 30014 30026
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 547 30014 30033 "records.ml" 547 30014 30051
+type(
+  string
+)
+"records.ml" 548 30052 30066 "records.ml" 548 30052 30068
+type(
+  unit
+)
+"records.ml" 548 30052 30072 "records.ml" 548 30052 30090
+type(
+  XMLRPC.xmlrpc -> string
+)
+ident(
+  ext_ref XMLRPC.( From ).string
+)
+"records.ml" 548 30052 30092 "records.ml" 548 30052 30120
+type(
+  API.vmpp_backup_frequency -> XMLRPC.xmlrpc
+)
+ident(
+  ext_ref API.( To ).vmpp_backup_frequency
+)
+"records.ml" 548 30052 30122 "records.ml" 548 30052 30123
+type(
+  unit -> API.vMPP_t
+)
+ident(
+  int_ref x "records.ml" 517 28632 28638 "records.ml" 517 28632 28639
+)
+"records.ml" 548 30052 30124 "records.ml" 548 30052 30126
+type(
+  unit
+)
+"records.ml" 548 30052 30121 "records.ml" 548 30052 30127
+type(
+  API.vMPP_t
+)
+"records.ml" 548 30052 30121 "records.ml" 548 30052 30153
+type(
+  API.vmpp_backup_frequency
+)
+"records.ml" 548 30052 30091 "records.ml" 548 30052 30154
+type(
+  XMLRPC.xmlrpc
+)
+"records.ml" 548 30052 30072 "records.ml" 548 30052 30154
+type(
+  string
+)
+"records.ml" 548 30052 30061 "records.ml" 548 30052 30155
+type(
+  unit -> string
+)
+"records.ml" 549 30156 30170 "records.ml" 549 30156 30171
+type(
+  string
+)
+ident(
+  def x "records.ml" 549 30156 30175 "records.ml" 549 30156 30300
+)
+"records.ml" 549 30156 30175 "records.ml" 549 30156 30207
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VMPP -> value:API.vmpp_backup_frequency -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VMPP ).set_backup_frequency
+)
+"records.ml" 549 30156 30208 "records.ml" 549 30156 30211
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 513 28448 28464 "records.ml" 513 28448 28467
+)
+"records.ml" 549 30156 30212 "records.ml" 549 30156 30222
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 513 28448 28468 "records.ml" 513 28448 28478
+)
+"records.ml" 549 30156 30223 "records.ml" 549 30156 30227
+type(
+  API.ref_VMPP
+)
+ident(
+  int_ref vmpp "records.ml" 513 28448 28479 "records.ml" 513 28448 28483
+)
+"records.ml" 549 30156 30229 "records.ml" 549 30156 30259
+type(
+  string -> XMLRPC.xmlrpc -> API.vmpp_backup_frequency
+)
+ident(
+  ext_ref API.( From ).vmpp_backup_frequency
+)
+"records.ml" 549 30156 30260 "records.ml" 549 30156 30278
+type(
+  string
+)
+"records.ml" 549 30156 30280 "records.ml" 549 30156 30296
+type(
+  string -> XMLRPC.xmlrpc
+)
+ident(
+  ext_ref XMLRPC.( To ).string
+)
+"records.ml" 549 30156 30297 "records.ml" 549 30156 30298
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 549 30156 30170 "records.ml" 549 30156 30171
+)
+"records.ml" 549 30156 30279 "records.ml" 549 30156 30299
+type(
+  XMLRPC.xmlrpc
+)
+"records.ml" 549 30156 30228 "records.ml" 549 30156 30300
+type(
+  API.vmpp_backup_frequency
+)
+"records.ml" 549 30156 30175 "records.ml" 549 30156 30300
+type(
+  unit
+)
+"records.ml" 549 30156 30165 "records.ml" 549 30156 30301
+type(
+  string -> unit
+)
+"records.ml" 550 30302 30306 "records.ml" 550 30302 30308
+type(
+  unit
+)
+"records.ml" 547 30014 30016 "records.ml" 550 30302 30308
+type(
+  field
+)
+"records.ml" 551 30310 30312 "records.ml" 551 30310 30322
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 551 30310 30329 "records.ml" 551 30310 30346
+type(
+  string
+)
+"records.ml" 552 30347 30361 "records.ml" 552 30347 30363
+type(
+  unit
+)
+"records.ml" 552 30347 30367 "records.ml" 552 30347 30393
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 552 30347 30394 "records.ml" 552 30347 30398
+type(
+  string
+)
+"records.ml" 552 30347 30400 "records.ml" 552 30347 30401
+type(
+  unit -> API.vMPP_t
+)
+ident(
+  int_ref x "records.ml" 517 28632 28638 "records.ml" 517 28632 28639
+)
+"records.ml" 552 30347 30402 "records.ml" 552 30347 30404
+type(
+  unit
+)
+"records.ml" 552 30347 30399 "records.ml" 552 30347 30405
+type(
+  API.vMPP_t
+)
+"records.ml" 552 30347 30399 "records.ml" 552 30347 30430
+type(
+  API.string_to_string_map
+)
+"records.ml" 552 30347 30367 "records.ml" 552 30347 30430
+type(
+  string
+)
+"records.ml" 552 30347 30356 "records.ml" 552 30347 30431
+type(
+  unit -> string
+)
+"records.ml" 553 30433 30451 "records.ml" 553 30433 30453
+type(
+  unit
+)
+"records.ml" 553 30433 30458 "records.ml" 553 30433 30459
+type(
+  unit -> API.vMPP_t
+)
+ident(
+  int_ref x "records.ml" 517 28632 28638 "records.ml" 517 28632 28639
+)
+"records.ml" 553 30433 30460 "records.ml" 553 30433 30462
+type(
+  unit
+)
+"records.ml" 553 30433 30457 "records.ml" 553 30433 30463
+type(
+  API.vMPP_t
+)
+"records.ml" 553 30433 30457 "records.ml" 553 30433 30488
+type(
+  API.string_to_string_map
+)
+"records.ml" 553 30433 30446 "records.ml" 553 30433 30489
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 554 30490 30511 "records.ml" 554 30490 30512
+type(
+  string
+)
+ident(
+  def k "records.ml" 554 30490 30513 "records.ml" 554 30490 30576
+)
+"records.ml" 554 30490 30513 "records.ml" 554 30490 30514
+type(
+  string
+)
+ident(
+  def v "records.ml" 554 30490 30518 "records.ml" 554 30490 30576
+)
+"records.ml" 554 30490 30518 "records.ml" 554 30490 30552
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VMPP -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VMPP ).add_to_backup_schedule
+)
+"records.ml" 554 30490 30553 "records.ml" 554 30490 30556
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 513 28448 28464 "records.ml" 513 28448 28467
+)
+"records.ml" 554 30490 30557 "records.ml" 554 30490 30567
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 513 28448 28468 "records.ml" 513 28448 28478
+)
+"records.ml" 554 30490 30568 "records.ml" 554 30490 30572
+type(
+  API.ref_VMPP
+)
+ident(
+  int_ref vmpp "records.ml" 513 28448 28479 "records.ml" 513 28448 28483
+)
+"records.ml" 554 30490 30573 "records.ml" 554 30490 30574
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 554 30490 30511 "records.ml" 554 30490 30512
+)
+"records.ml" 554 30490 30575 "records.ml" 554 30490 30576
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 554 30490 30513 "records.ml" 554 30490 30514
+)
+"records.ml" 554 30490 30518 "records.ml" 554 30490 30576
+type(
+  unit
+)
+"records.ml" 554 30490 30506 "records.ml" 554 30490 30577
+type(
+  string -> string -> unit
+)
+"records.ml" 555 30578 30604 "records.ml" 555 30578 30605
+type(
+  string
+)
+ident(
+  def k "records.ml" 555 30578 30609 "records.ml" 555 30578 30670
+)
+"records.ml" 555 30578 30609 "records.ml" 555 30578 30648
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VMPP -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VMPP ).remove_from_backup_schedule
+)
+"records.ml" 555 30578 30649 "records.ml" 555 30578 30652
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 513 28448 28464 "records.ml" 513 28448 28467
+)
+"records.ml" 555 30578 30653 "records.ml" 555 30578 30663
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 513 28448 28468 "records.ml" 513 28448 28478
+)
+"records.ml" 555 30578 30664 "records.ml" 555 30578 30668
+type(
+  API.ref_VMPP
+)
+ident(
+  int_ref vmpp "records.ml" 513 28448 28479 "records.ml" 513 28448 28483
+)
+"records.ml" 555 30578 30669 "records.ml" 555 30578 30670
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 555 30578 30604 "records.ml" 555 30578 30605
+)
+"records.ml" 555 30578 30609 "records.ml" 555 30578 30670
+type(
+  unit
+)
+"records.ml" 555 30578 30599 "records.ml" 555 30578 30671
+type(
+  string -> unit
+)
+"records.ml" 556 30672 30676 "records.ml" 556 30672 30678
+type(
+  unit
+)
+"records.ml" 551 30310 30312 "records.ml" 556 30672 30678
+type(
+  field
+)
+"records.ml" 557 30680 30682 "records.ml" 557 30680 30692
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 557 30680 30699 "records.ml" 557 30680 30718
+type(
+  string
+)
+"records.ml" 558 30719 30733 "records.ml" 558 30719 30735
+type(
+  unit
+)
+"records.ml" 558 30719 30739 "records.ml" 558 30719 30753
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 558 30719 30755 "records.ml" 558 30719 30756
+type(
+  unit -> API.vMPP_t
+)
+ident(
+  int_ref x "records.ml" 517 28632 28638 "records.ml" 517 28632 28639
+)
+"records.ml" 558 30719 30757 "records.ml" 558 30719 30759
+type(
+  unit
+)
+"records.ml" 558 30719 30754 "records.ml" 558 30719 30760
+type(
+  API.vMPP_t
+)
+"records.ml" 558 30719 30754 "records.ml" 558 30719 30787
+type(
+  bool
+)
+"records.ml" 558 30719 30739 "records.ml" 558 30719 30787
+type(
+  string
+)
+"records.ml" 558 30719 30728 "records.ml" 558 30719 30788
+type(
+  unit -> string
+)
+"records.ml" 559 30789 30793 "records.ml" 559 30789 30795
+type(
+  unit
+)
+"records.ml" 557 30680 30682 "records.ml" 559 30789 30795
+type(
+  field
+)
+"records.ml" 560 30797 30799 "records.ml" 560 30797 30809
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 560 30797 30816 "records.ml" 560 30797 30838
+type(
+  string
+)
+"records.ml" 561 30839 30853 "records.ml" 561 30839 30855
+type(
+  unit
+)
+"records.ml" 561 30839 30859 "records.ml" 561 30839 30873
+type(
+  API.datetime -> string
+)
+ident(
+  ext_ref Date.to_string
+)
+"records.ml" 561 30839 30875 "records.ml" 561 30839 30876
+type(
+  unit -> API.vMPP_t
+)
+ident(
+  int_ref x "records.ml" 517 28632 28638 "records.ml" 517 28632 28639
+)
+"records.ml" 561 30839 30877 "records.ml" 561 30839 30879
+type(
+  unit
+)
+"records.ml" 561 30839 30874 "records.ml" 561 30839 30880
+type(
+  API.vMPP_t
+)
+"records.ml" 561 30839 30874 "records.ml" 561 30839 30910
+type(
+  API.datetime
+)
+"records.ml" 561 30839 30859 "records.ml" 561 30839 30910
+type(
+  string
+)
+"records.ml" 561 30839 30848 "records.ml" 561 30839 30911
+type(
+  unit -> string
+)
+"records.ml" 562 30912 30916 "records.ml" 562 30912 30918
+type(
+  unit
+)
+"records.ml" 560 30797 30799 "records.ml" 562 30912 30918
+type(
+  field
+)
+"records.ml" 563 30920 30922 "records.ml" 563 30920 30932
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 563 30920 30939 "records.ml" 563 30920 30960
+type(
+  string
+)
+"records.ml" 564 30961 30975 "records.ml" 564 30961 30977
+type(
+  unit
+)
+"records.ml" 564 30961 30981 "records.ml" 564 30961 30999
+type(
+  XMLRPC.xmlrpc -> string
+)
+ident(
+  ext_ref XMLRPC.( From ).string
+)
+"records.ml" 564 30961 31001 "records.ml" 564 30961 31032
+type(
+  API.vmpp_archive_target_type -> XMLRPC.xmlrpc
+)
+ident(
+  ext_ref API.( To ).vmpp_archive_target_type
+)
+"records.ml" 564 30961 31034 "records.ml" 564 30961 31035
+type(
+  unit -> API.vMPP_t
+)
+ident(
+  int_ref x "records.ml" 517 28632 28638 "records.ml" 517 28632 28639
+)
+"records.ml" 564 30961 31036 "records.ml" 564 30961 31038
+type(
+  unit
+)
+"records.ml" 564 30961 31033 "records.ml" 564 30961 31039
+type(
+  API.vMPP_t
+)
+"records.ml" 564 30961 31033 "records.ml" 564 30961 31068
+type(
+  API.vmpp_archive_target_type
+)
+"records.ml" 564 30961 31000 "records.ml" 564 30961 31069
+type(
+  XMLRPC.xmlrpc
+)
+"records.ml" 564 30961 30981 "records.ml" 564 30961 31069
+type(
+  string
+)
+"records.ml" 564 30961 30970 "records.ml" 564 30961 31070
+type(
+  unit -> string
+)
+"records.ml" 565 31071 31085 "records.ml" 565 31071 31086
+type(
+  string
+)
+ident(
+  def x "records.ml" 565 31071 31090 "records.ml" 565 31071 31224
+)
+"records.ml" 565 31071 31090 "records.ml" 565 31071 31125
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VMPP -> value:API.vmpp_archive_target_type -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VMPP ).set_archive_target_type
+)
+"records.ml" 565 31071 31126 "records.ml" 565 31071 31129
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 513 28448 28464 "records.ml" 513 28448 28467
+)
+"records.ml" 565 31071 31130 "records.ml" 565 31071 31140
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 513 28448 28468 "records.ml" 513 28448 28478
+)
+"records.ml" 565 31071 31141 "records.ml" 565 31071 31145
+type(
+  API.ref_VMPP
+)
+ident(
+  int_ref vmpp "records.ml" 513 28448 28479 "records.ml" 513 28448 28483
+)
+"records.ml" 565 31071 31147 "records.ml" 565 31071 31180
+type(
+  string -> XMLRPC.xmlrpc -> API.vmpp_archive_target_type
+)
+ident(
+  ext_ref API.( From ).vmpp_archive_target_type
+)
+"records.ml" 565 31071 31181 "records.ml" 565 31071 31202
+type(
+  string
+)
+"records.ml" 565 31071 31204 "records.ml" 565 31071 31220
+type(
+  string -> XMLRPC.xmlrpc
+)
+ident(
+  ext_ref XMLRPC.( To ).string
+)
+"records.ml" 565 31071 31221 "records.ml" 565 31071 31222
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 565 31071 31085 "records.ml" 565 31071 31086
+)
+"records.ml" 565 31071 31203 "records.ml" 565 31071 31223
+type(
+  XMLRPC.xmlrpc
+)
+"records.ml" 565 31071 31146 "records.ml" 565 31071 31224
+type(
+  API.vmpp_archive_target_type
+)
+"records.ml" 565 31071 31090 "records.ml" 565 31071 31224
+type(
+  unit
+)
+"records.ml" 565 31071 31080 "records.ml" 565 31071 31225
+type(
+  string -> unit
+)
+"records.ml" 566 31226 31230 "records.ml" 566 31226 31232
+type(
+  unit
+)
+"records.ml" 563 30920 30922 "records.ml" 566 31226 31232
+type(
+  field
+)
+"records.ml" 567 31234 31236 "records.ml" 567 31234 31246
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 567 31234 31253 "records.ml" 567 31234 31276
+type(
+  string
+)
+"records.ml" 568 31277 31291 "records.ml" 568 31277 31293
+type(
+  unit
+)
+"records.ml" 568 31277 31297 "records.ml" 568 31277 31323
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 568 31277 31324 "records.ml" 568 31277 31328
+type(
+  string
+)
+"records.ml" 568 31277 31330 "records.ml" 568 31277 31331
+type(
+  unit -> API.vMPP_t
+)
+ident(
+  int_ref x "records.ml" 517 28632 28638 "records.ml" 517 28632 28639
+)
+"records.ml" 568 31277 31332 "records.ml" 568 31277 31334
+type(
+  unit
+)
+"records.ml" 568 31277 31329 "records.ml" 568 31277 31335
+type(
+  API.vMPP_t
+)
+"records.ml" 568 31277 31329 "records.ml" 568 31277 31366
+type(
+  API.string_to_string_map
+)
+"records.ml" 568 31277 31297 "records.ml" 568 31277 31366
+type(
+  string
+)
+"records.ml" 568 31277 31286 "records.ml" 568 31277 31367
+type(
+  unit -> string
+)
+"records.ml" 569 31368 31386 "records.ml" 569 31368 31388
+type(
+  unit
+)
+"records.ml" 569 31368 31393 "records.ml" 569 31368 31394
+type(
+  unit -> API.vMPP_t
+)
+ident(
+  int_ref x "records.ml" 517 28632 28638 "records.ml" 517 28632 28639
+)
+"records.ml" 569 31368 31395 "records.ml" 569 31368 31397
+type(
+  unit
+)
+"records.ml" 569 31368 31392 "records.ml" 569 31368 31398
+type(
+  API.vMPP_t
+)
+"records.ml" 569 31368 31392 "records.ml" 569 31368 31429
+type(
+  API.string_to_string_map
+)
+"records.ml" 569 31368 31381 "records.ml" 569 31368 31430
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 570 31431 31452 "records.ml" 570 31431 31453
+type(
+  string
+)
+ident(
+  def k "records.ml" 570 31431 31454 "records.ml" 570 31431 31523
+)
+"records.ml" 570 31431 31454 "records.ml" 570 31431 31455
+type(
+  string
+)
+ident(
+  def v "records.ml" 570 31431 31459 "records.ml" 570 31431 31523
+)
+"records.ml" 570 31431 31459 "records.ml" 570 31431 31499
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VMPP -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VMPP ).add_to_archive_target_config
+)
+"records.ml" 570 31431 31500 "records.ml" 570 31431 31503
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 513 28448 28464 "records.ml" 513 28448 28467
+)
+"records.ml" 570 31431 31504 "records.ml" 570 31431 31514
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 513 28448 28468 "records.ml" 513 28448 28478
+)
+"records.ml" 570 31431 31515 "records.ml" 570 31431 31519
+type(
+  API.ref_VMPP
+)
+ident(
+  int_ref vmpp "records.ml" 513 28448 28479 "records.ml" 513 28448 28483
+)
+"records.ml" 570 31431 31520 "records.ml" 570 31431 31521
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 570 31431 31452 "records.ml" 570 31431 31453
+)
+"records.ml" 570 31431 31522 "records.ml" 570 31431 31523
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 570 31431 31454 "records.ml" 570 31431 31455
+)
+"records.ml" 570 31431 31459 "records.ml" 570 31431 31523
+type(
+  unit
+)
+"records.ml" 570 31431 31447 "records.ml" 570 31431 31524
+type(
+  string -> string -> unit
+)
+"records.ml" 571 31525 31551 "records.ml" 571 31525 31552
+type(
+  string
+)
+ident(
+  def k "records.ml" 572 31557 31561 "records.ml" 572 31557 31628
+)
+"records.ml" 572 31557 31561 "records.ml" 572 31557 31606
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VMPP -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VMPP ).remove_from_archive_target_config
+)
+"records.ml" 572 31557 31607 "records.ml" 572 31557 31610
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 513 28448 28464 "records.ml" 513 28448 28467
+)
+"records.ml" 572 31557 31611 "records.ml" 572 31557 31621
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 513 28448 28468 "records.ml" 513 28448 28478
+)
+"records.ml" 572 31557 31622 "records.ml" 572 31557 31626
+type(
+  API.ref_VMPP
+)
+ident(
+  int_ref vmpp "records.ml" 513 28448 28479 "records.ml" 513 28448 28483
+)
+"records.ml" 572 31557 31627 "records.ml" 572 31557 31628
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 571 31525 31551 "records.ml" 571 31525 31552
+)
+"records.ml" 572 31557 31561 "records.ml" 572 31557 31628
+type(
+  unit
+)
+"records.ml" 571 31525 31546 "records.ml" 572 31557 31629
+type(
+  string -> unit
+)
+"records.ml" 573 31630 31634 "records.ml" 573 31630 31636
+type(
+  unit
+)
+"records.ml" 567 31234 31236 "records.ml" 573 31630 31636
+type(
+  field
+)
+"records.ml" 574 31638 31640 "records.ml" 574 31638 31650
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 574 31638 31657 "records.ml" 574 31638 31676
+type(
+  string
+)
+"records.ml" 575 31677 31691 "records.ml" 575 31677 31693
+type(
+  unit
+)
+"records.ml" 575 31677 31697 "records.ml" 575 31677 31715
+type(
+  XMLRPC.xmlrpc -> string
+)
+ident(
+  ext_ref XMLRPC.( From ).string
+)
+"records.ml" 575 31677 31717 "records.ml" 575 31677 31746
+type(
+  API.vmpp_archive_frequency -> XMLRPC.xmlrpc
+)
+ident(
+  ext_ref API.( To ).vmpp_archive_frequency
+)
+"records.ml" 575 31677 31748 "records.ml" 575 31677 31749
+type(
+  unit -> API.vMPP_t
+)
+ident(
+  int_ref x "records.ml" 517 28632 28638 "records.ml" 517 28632 28639
+)
+"records.ml" 575 31677 31750 "records.ml" 575 31677 31752
+type(
+  unit
+)
+"records.ml" 575 31677 31747 "records.ml" 575 31677 31753
+type(
+  API.vMPP_t
+)
+"records.ml" 575 31677 31747 "records.ml" 575 31677 31780
+type(
+  API.vmpp_archive_frequency
+)
+"records.ml" 575 31677 31716 "records.ml" 575 31677 31781
+type(
+  XMLRPC.xmlrpc
+)
+"records.ml" 575 31677 31697 "records.ml" 575 31677 31781
+type(
+  string
+)
+"records.ml" 575 31677 31686 "records.ml" 575 31677 31782
+type(
+  unit -> string
+)
+"records.ml" 576 31783 31797 "records.ml" 576 31783 31798
+type(
+  string
+)
+ident(
+  def x "records.ml" 576 31783 31802 "records.ml" 576 31783 31930
+)
+"records.ml" 576 31783 31802 "records.ml" 576 31783 31835
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VMPP -> value:API.vmpp_archive_frequency -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VMPP ).set_archive_frequency
+)
+"records.ml" 576 31783 31836 "records.ml" 576 31783 31839
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 513 28448 28464 "records.ml" 513 28448 28467
+)
+"records.ml" 576 31783 31840 "records.ml" 576 31783 31850
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 513 28448 28468 "records.ml" 513 28448 28478
+)
+"records.ml" 576 31783 31851 "records.ml" 576 31783 31855
+type(
+  API.ref_VMPP
+)
+ident(
+  int_ref vmpp "records.ml" 513 28448 28479 "records.ml" 513 28448 28483
+)
+"records.ml" 576 31783 31857 "records.ml" 576 31783 31888
+type(
+  string -> XMLRPC.xmlrpc -> API.vmpp_archive_frequency
+)
+ident(
+  ext_ref API.( From ).vmpp_archive_frequency
+)
+"records.ml" 576 31783 31889 "records.ml" 576 31783 31908
+type(
+  string
+)
+"records.ml" 576 31783 31910 "records.ml" 576 31783 31926
+type(
+  string -> XMLRPC.xmlrpc
+)
+ident(
+  ext_ref XMLRPC.( To ).string
+)
+"records.ml" 576 31783 31927 "records.ml" 576 31783 31928
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 576 31783 31797 "records.ml" 576 31783 31798
+)
+"records.ml" 576 31783 31909 "records.ml" 576 31783 31929
+type(
+  XMLRPC.xmlrpc
+)
+"records.ml" 576 31783 31856 "records.ml" 576 31783 31930
+type(
+  API.vmpp_archive_frequency
+)
+"records.ml" 576 31783 31802 "records.ml" 576 31783 31930
+type(
+  unit
+)
+"records.ml" 576 31783 31792 "records.ml" 576 31783 31931
+type(
+  string -> unit
+)
+"records.ml" 577 31932 31936 "records.ml" 577 31932 31938
+type(
+  unit
+)
+"records.ml" 574 31638 31640 "records.ml" 577 31932 31938
+type(
+  field
+)
+"records.ml" 578 31940 31942 "records.ml" 578 31940 31952
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 578 31940 31959 "records.ml" 578 31940 31977
+type(
+  string
+)
+"records.ml" 578 31940 31988 "records.ml" 578 31940 31990
+type(
+  unit
+)
+"records.ml" 578 31940 31994 "records.ml" 578 31940 32020
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 578 31940 32021 "records.ml" 578 31940 32025
+type(
+  string
+)
+"records.ml" 578 31940 32027 "records.ml" 578 31940 32028
+type(
+  unit -> API.vMPP_t
+)
+ident(
+  int_ref x "records.ml" 517 28632 28638 "records.ml" 517 28632 28639
+)
+"records.ml" 578 31940 32029 "records.ml" 578 31940 32031
+type(
+  unit
+)
+"records.ml" 578 31940 32026 "records.ml" 578 31940 32032
+type(
+  API.vMPP_t
+)
+"records.ml" 578 31940 32026 "records.ml" 578 31940 32058
+type(
+  API.string_to_string_map
+)
+"records.ml" 578 31940 31994 "records.ml" 578 31940 32058
+type(
+  string
+)
+"records.ml" 578 31940 31983 "records.ml" 578 31940 32059
+type(
+  unit -> string
+)
+"records.ml" 579 32060 32078 "records.ml" 579 32060 32080
+type(
+  unit
+)
+"records.ml" 579 32060 32085 "records.ml" 579 32060 32086
+type(
+  unit -> API.vMPP_t
+)
+ident(
+  int_ref x "records.ml" 517 28632 28638 "records.ml" 517 28632 28639
+)
+"records.ml" 579 32060 32087 "records.ml" 579 32060 32089
+type(
+  unit
+)
+"records.ml" 579 32060 32084 "records.ml" 579 32060 32090
+type(
+  API.vMPP_t
+)
+"records.ml" 579 32060 32084 "records.ml" 579 32060 32116
+type(
+  API.string_to_string_map
+)
+"records.ml" 579 32060 32073 "records.ml" 579 32060 32117
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 580 32118 32139 "records.ml" 580 32118 32140
+type(
+  string
+)
+ident(
+  def k "records.ml" 580 32118 32141 "records.ml" 580 32118 32205
+)
+"records.ml" 580 32118 32141 "records.ml" 580 32118 32142
+type(
+  string
+)
+ident(
+  def v "records.ml" 580 32118 32146 "records.ml" 580 32118 32205
+)
+"records.ml" 580 32118 32146 "records.ml" 580 32118 32181
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VMPP -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VMPP ).add_to_archive_schedule
+)
+"records.ml" 580 32118 32182 "records.ml" 580 32118 32185
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 513 28448 28464 "records.ml" 513 28448 28467
+)
+"records.ml" 580 32118 32186 "records.ml" 580 32118 32196
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 513 28448 28468 "records.ml" 513 28448 28478
+)
+"records.ml" 580 32118 32197 "records.ml" 580 32118 32201
+type(
+  API.ref_VMPP
+)
+ident(
+  int_ref vmpp "records.ml" 513 28448 28479 "records.ml" 513 28448 28483
+)
+"records.ml" 580 32118 32202 "records.ml" 580 32118 32203
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 580 32118 32139 "records.ml" 580 32118 32140
+)
+"records.ml" 580 32118 32204 "records.ml" 580 32118 32205
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 580 32118 32141 "records.ml" 580 32118 32142
+)
+"records.ml" 580 32118 32146 "records.ml" 580 32118 32205
+type(
+  unit
+)
+"records.ml" 580 32118 32134 "records.ml" 580 32118 32206
+type(
+  string -> string -> unit
+)
+"records.ml" 581 32207 32233 "records.ml" 581 32207 32234
+type(
+  string
+)
+ident(
+  def k "records.ml" 582 32239 32243 "records.ml" 582 32239 32305
+)
+"records.ml" 582 32239 32243 "records.ml" 582 32239 32283
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VMPP -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VMPP ).remove_from_archive_schedule
+)
+"records.ml" 582 32239 32284 "records.ml" 582 32239 32287
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 513 28448 28464 "records.ml" 513 28448 28467
+)
+"records.ml" 582 32239 32288 "records.ml" 582 32239 32298
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 513 28448 28468 "records.ml" 513 28448 28478
+)
+"records.ml" 582 32239 32299 "records.ml" 582 32239 32303
+type(
+  API.ref_VMPP
+)
+ident(
+  int_ref vmpp "records.ml" 513 28448 28479 "records.ml" 513 28448 28483
+)
+"records.ml" 582 32239 32304 "records.ml" 582 32239 32305
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 581 32207 32233 "records.ml" 581 32207 32234
+)
+"records.ml" 582 32239 32243 "records.ml" 582 32239 32305
+type(
+  unit
+)
+"records.ml" 581 32207 32228 "records.ml" 582 32239 32306
+type(
+  string -> unit
+)
+"records.ml" 583 32307 32311 "records.ml" 583 32307 32313
+type(
+  unit
+)
+"records.ml" 578 31940 31942 "records.ml" 583 32307 32313
+type(
+  field
+)
+"records.ml" 584 32315 32317 "records.ml" 584 32315 32327
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 584 32315 32334 "records.ml" 584 32315 32354
+type(
+  string
+)
+"records.ml" 585 32355 32369 "records.ml" 585 32355 32371
+type(
+  unit
+)
+"records.ml" 585 32355 32375 "records.ml" 585 32355 32389
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 585 32355 32391 "records.ml" 585 32355 32392
+type(
+  unit -> API.vMPP_t
+)
+ident(
+  int_ref x "records.ml" 517 28632 28638 "records.ml" 517 28632 28639
+)
+"records.ml" 585 32355 32393 "records.ml" 585 32355 32395
+type(
+  unit
+)
+"records.ml" 585 32355 32390 "records.ml" 585 32355 32396
+type(
+  API.vMPP_t
+)
+"records.ml" 585 32355 32390 "records.ml" 585 32355 32424
+type(
+  bool
+)
+"records.ml" 585 32355 32375 "records.ml" 585 32355 32424
+type(
+  string
+)
+"records.ml" 585 32355 32364 "records.ml" 585 32355 32425
+type(
+  unit -> string
+)
+"records.ml" 586 32426 32430 "records.ml" 586 32426 32432
+type(
+  unit
+)
+"records.ml" 584 32315 32317 "records.ml" 586 32426 32432
+type(
+  field
+)
+"records.ml" 587 32434 32436 "records.ml" 587 32434 32446
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 587 32434 32453 "records.ml" 587 32434 32476
+type(
+  string
+)
+"records.ml" 587 32434 32487 "records.ml" 587 32434 32489
+type(
+  unit
+)
+"records.ml" 587 32434 32493 "records.ml" 587 32434 32507
+type(
+  API.datetime -> string
+)
+ident(
+  ext_ref Date.to_string
+)
+"records.ml" 587 32434 32509 "records.ml" 587 32434 32510
+type(
+  unit -> API.vMPP_t
+)
+ident(
+  int_ref x "records.ml" 517 28632 28638 "records.ml" 517 28632 28639
+)
+"records.ml" 587 32434 32511 "records.ml" 587 32434 32513
+type(
+  unit
+)
+"records.ml" 587 32434 32508 "records.ml" 587 32434 32514
+type(
+  API.vMPP_t
+)
+"records.ml" 587 32434 32508 "records.ml" 587 32434 32545
+type(
+  API.datetime
+)
+"records.ml" 587 32434 32493 "records.ml" 587 32434 32545
+type(
+  string
+)
+"records.ml" 587 32434 32482 "records.ml" 587 32434 32546
+type(
+  unit -> string
+)
+"records.ml" 588 32547 32551 "records.ml" 588 32547 32553
+type(
+  unit
+)
+"records.ml" 587 32434 32436 "records.ml" 588 32547 32553
+type(
+  field
+)
+"records.ml" 589 32555 32557 "records.ml" 589 32555 32567
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 589 32555 32574 "records.ml" 589 32555 32592
+type(
+  string
+)
+"records.ml" 590 32593 32607 "records.ml" 590 32593 32609
+type(
+  unit
+)
+"records.ml" 590 32593 32613 "records.ml" 590 32593 32627
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 590 32593 32629 "records.ml" 590 32593 32630
+type(
+  unit -> API.vMPP_t
+)
+ident(
+  int_ref x "records.ml" 517 28632 28638 "records.ml" 517 28632 28639
+)
+"records.ml" 590 32593 32631 "records.ml" 590 32593 32633
+type(
+  unit
+)
+"records.ml" 590 32593 32628 "records.ml" 590 32593 32634
+type(
+  API.vMPP_t
+)
+"records.ml" 590 32593 32628 "records.ml" 590 32593 32660
+type(
+  bool
+)
+"records.ml" 590 32593 32613 "records.ml" 590 32593 32660
+type(
+  string
+)
+"records.ml" 590 32593 32602 "records.ml" 590 32593 32661
+type(
+  unit -> string
+)
+"records.ml" 591 32662 32676 "records.ml" 591 32662 32677
+type(
+  string
+)
+ident(
+  def x "records.ml" 591 32662 32681 "records.ml" 591 32662 32776
+)
+"records.ml" 591 32662 32681 "records.ml" 591 32662 32713
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VMPP -> value:bool -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VMPP ).set_is_alarm_enabled
+)
+"records.ml" 591 32662 32714 "records.ml" 591 32662 32717
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 513 28448 28464 "records.ml" 513 28448 28467
+)
+"records.ml" 591 32662 32718 "records.ml" 591 32662 32728
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 513 28448 28468 "records.ml" 513 28448 28478
+)
+"records.ml" 591 32662 32729 "records.ml" 591 32662 32733
+type(
+  API.ref_VMPP
+)
+ident(
+  int_ref vmpp "records.ml" 513 28448 28479 "records.ml" 513 28448 28483
+)
+"records.ml" 591 32662 32735 "records.ml" 591 32662 32754
+type(
+  string -> string -> bool
+)
+ident(
+  int_ref safe_bool_of_string "records.ml" 72 2718 2722 "records.ml" 72 2718 2741
+)
+"records.ml" 591 32662 32755 "records.ml" 591 32662 32773
+type(
+  string
+)
+"records.ml" 591 32662 32774 "records.ml" 591 32662 32775
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 591 32662 32676 "records.ml" 591 32662 32677
+)
+"records.ml" 591 32662 32734 "records.ml" 591 32662 32776
+type(
+  bool
+)
+"records.ml" 591 32662 32681 "records.ml" 591 32662 32776
+type(
+  unit
+)
+"records.ml" 591 32662 32671 "records.ml" 591 32662 32777
+type(
+  string -> unit
+)
+"records.ml" 592 32778 32782 "records.ml" 592 32778 32784
+type(
+  unit
+)
+"records.ml" 589 32555 32557 "records.ml" 592 32778 32784
+type(
+  field
+)
+"records.ml" 593 32786 32788 "records.ml" 593 32786 32798
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 593 32786 32805 "records.ml" 593 32786 32819
+type(
+  string
+)
+"records.ml" 593 32786 32834 "records.ml" 593 32786 32836
+type(
+  unit
+)
+"records.ml" 593 32786 32840 "records.ml" 593 32786 32866
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 593 32786 32867 "records.ml" 593 32786 32871
+type(
+  string
+)
+"records.ml" 593 32786 32873 "records.ml" 593 32786 32874
+type(
+  unit -> API.vMPP_t
+)
+ident(
+  int_ref x "records.ml" 517 28632 28638 "records.ml" 517 28632 28639
+)
+"records.ml" 593 32786 32875 "records.ml" 593 32786 32877
+type(
+  unit
+)
+"records.ml" 593 32786 32872 "records.ml" 593 32786 32878
+type(
+  API.vMPP_t
+)
+"records.ml" 593 32786 32872 "records.ml" 593 32786 32900
+type(
+  API.string_to_string_map
+)
+"records.ml" 593 32786 32840 "records.ml" 593 32786 32900
+type(
+  string
+)
+"records.ml" 593 32786 32829 "records.ml" 593 32786 32901
+type(
+  unit -> string
+)
+"records.ml" 594 32902 32920 "records.ml" 594 32902 32922
+type(
+  unit
+)
+"records.ml" 594 32902 32927 "records.ml" 594 32902 32928
+type(
+  unit -> API.vMPP_t
+)
+ident(
+  int_ref x "records.ml" 517 28632 28638 "records.ml" 517 28632 28639
+)
+"records.ml" 594 32902 32929 "records.ml" 594 32902 32931
+type(
+  unit
+)
+"records.ml" 594 32902 32926 "records.ml" 594 32902 32932
+type(
+  API.vMPP_t
+)
+"records.ml" 594 32902 32926 "records.ml" 594 32902 32954
+type(
+  API.string_to_string_map
+)
+"records.ml" 594 32902 32915 "records.ml" 594 32902 32955
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 595 32956 32977 "records.ml" 595 32956 32978
+type(
+  string
+)
+ident(
+  def k "records.ml" 595 32956 32979 "records.ml" 595 32956 33039
+)
+"records.ml" 595 32956 32979 "records.ml" 595 32956 32980
+type(
+  string
+)
+ident(
+  def v "records.ml" 595 32956 32984 "records.ml" 595 32956 33039
+)
+"records.ml" 595 32956 32984 "records.ml" 595 32956 33015
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VMPP -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VMPP ).add_to_alarm_config
+)
+"records.ml" 595 32956 33016 "records.ml" 595 32956 33019
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 513 28448 28464 "records.ml" 513 28448 28467
+)
+"records.ml" 595 32956 33020 "records.ml" 595 32956 33030
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 513 28448 28468 "records.ml" 513 28448 28478
+)
+"records.ml" 595 32956 33031 "records.ml" 595 32956 33035
+type(
+  API.ref_VMPP
+)
+ident(
+  int_ref vmpp "records.ml" 513 28448 28479 "records.ml" 513 28448 28483
+)
+"records.ml" 595 32956 33036 "records.ml" 595 32956 33037
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 595 32956 32977 "records.ml" 595 32956 32978
+)
+"records.ml" 595 32956 33038 "records.ml" 595 32956 33039
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 595 32956 32979 "records.ml" 595 32956 32980
+)
+"records.ml" 595 32956 32984 "records.ml" 595 32956 33039
+type(
+  unit
+)
+"records.ml" 595 32956 32972 "records.ml" 595 32956 33040
+type(
+  string -> string -> unit
+)
+"records.ml" 596 33041 33067 "records.ml" 596 33041 33068
+type(
+  string
+)
+ident(
+  def k "records.ml" 597 33073 33077 "records.ml" 597 33073 33135
+)
+"records.ml" 597 33073 33077 "records.ml" 597 33073 33113
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VMPP -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VMPP ).remove_from_alarm_config
+)
+"records.ml" 597 33073 33114 "records.ml" 597 33073 33117
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 513 28448 28464 "records.ml" 513 28448 28467
+)
+"records.ml" 597 33073 33118 "records.ml" 597 33073 33128
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 513 28448 28468 "records.ml" 513 28448 28478
+)
+"records.ml" 597 33073 33129 "records.ml" 597 33073 33133
+type(
+  API.ref_VMPP
+)
+ident(
+  int_ref vmpp "records.ml" 513 28448 28479 "records.ml" 513 28448 28483
+)
+"records.ml" 597 33073 33134 "records.ml" 597 33073 33135
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 596 33041 33067 "records.ml" 596 33041 33068
+)
+"records.ml" 597 33073 33077 "records.ml" 597 33073 33135
+type(
+  unit
+)
+"records.ml" 596 33041 33062 "records.ml" 597 33073 33136
+type(
+  string -> unit
+)
+"records.ml" 598 33137 33141 "records.ml" 598 33137 33143
+type(
+  unit
+)
+"records.ml" 593 32786 32788 "records.ml" 598 33137 33143
+type(
+  field
+)
+"records.ml" 599 33145 33147 "records.ml" 599 33145 33157
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 599 33145 33164 "records.ml" 599 33145 33169
+type(
+  string
+)
+"records.ml" 600 33170 33185 "records.ml" 600 33170 33187
+type(
+  unit
+)
+"records.ml" 600 33170 33191 "records.ml" 600 33170 33204
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 600 33170 33205 "records.ml" 600 33170 33209
+type(
+  string
+)
+"records.ml" 602 33222 33232 "records.ml" 602 33222 33240
+type(
+  (API.ref_VM -> string) -> API.ref_VM_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 603 33241 33258 "records.ml" 603 33241 33262
+type(
+  API.ref_VM
+)
+ident(
+  def self "records.ml" 603 33241 33266 "records.ml" 603 33241 33322
+)
+"records.ml" 603 33241 33270 "records.ml" 603 33241 33288
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> string
+)
+ident(
+  ext_ref Client.( Client ).( VM ).get_uuid
+)
+"records.ml" 603 33241 33289 "records.ml" 603 33241 33292
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 513 28448 28464 "records.ml" 513 28448 28467
+)
+"records.ml" 603 33241 33293 "records.ml" 603 33241 33303
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 513 28448 28468 "records.ml" 513 28448 28478
+)
+"records.ml" 603 33241 33304 "records.ml" 603 33241 33308
+type(
+  API.ref_VM
+)
+ident(
+  int_ref self "records.ml" 603 33241 33258 "records.ml" 603 33241 33262
+)
+"records.ml" 603 33241 33270 "records.ml" 603 33241 33308
+type(
+  string
+)
+"records.ml" 603 33241 33314 "records.ml" 603 33241 33315
+type(
+  exn
+)
+"records.ml" 603 33241 33319 "records.ml" 603 33241 33322
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 603 33241 33266 "records.ml" 603 33241 33322
+type(
+  string
+)
+"records.ml" 603 33241 33253 "records.ml" 603 33241 33323
+type(
+  API.ref_VM -> string
+)
+"records.ml" 604 33324 33337 "records.ml" 604 33324 33356
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VMPP -> API.ref_VM_set
+)
+ident(
+  ext_ref Client.( Client ).( VMPP ).get_VMs
+)
+"records.ml" 604 33324 33357 "records.ml" 604 33324 33360
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 513 28448 28464 "records.ml" 513 28448 28467
+)
+"records.ml" 604 33324 33361 "records.ml" 604 33324 33371
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 513 28448 28468 "records.ml" 513 28448 28478
+)
+"records.ml" 604 33324 33372 "records.ml" 604 33324 33376
+type(
+  API.ref_VMPP
+)
+ident(
+  int_ref vmpp "records.ml" 513 28448 28479 "records.ml" 513 28448 28483
+)
+"records.ml" 604 33324 33336 "records.ml" 604 33324 33377
+type(
+  API.ref_VM_set
+)
+"records.ml" 602 33222 33232 "records.ml" 604 33324 33377
+type(
+  string list
+)
+"records.ml" 605 33378 33391 "records.ml" 605 33378 33392
+type(
+  exn
+)
+"records.ml" 605 33378 33396 "records.ml" 605 33378 33398
+type(
+  string list
+)
+"records.ml" 601 33210 33217 "records.ml" 606 33399 33407
+type(
+  string list
+)
+"records.ml" 600 33170 33191 "records.ml" 606 33399 33407
+type(
+  string
+)
+"records.ml" 600 33170 33180 "records.ml" 607 33408 33414
+type(
+  unit -> string
+)
+"records.ml" 608 33415 33431 "records.ml" 608 33415 33436
+type(
+  bool
+)
+"records.ml" 609 33437 33456 "records.ml" 609 33437 33458
+type(
+  unit
+)
+"records.ml" 609 33437 33466 "records.ml" 609 33437 33474
+type(
+  (API.ref_VM -> string) -> API.ref_VM_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 610 33475 33488 "records.ml" 610 33475 33492
+type(
+  API.ref_VM
+)
+ident(
+  def self "records.ml" 610 33475 33496 "records.ml" 610 33475 33552
+)
+"records.ml" 610 33475 33500 "records.ml" 610 33475 33518
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> string
+)
+ident(
+  ext_ref Client.( Client ).( VM ).get_uuid
+)
+"records.ml" 610 33475 33519 "records.ml" 610 33475 33522
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 513 28448 28464 "records.ml" 513 28448 28467
+)
+"records.ml" 610 33475 33523 "records.ml" 610 33475 33533
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 513 28448 28468 "records.ml" 513 28448 28478
+)
+"records.ml" 610 33475 33534 "records.ml" 610 33475 33538
+type(
+  API.ref_VM
+)
+ident(
+  int_ref self "records.ml" 610 33475 33488 "records.ml" 610 33475 33492
+)
+"records.ml" 610 33475 33500 "records.ml" 610 33475 33538
+type(
+  string
+)
+"records.ml" 610 33475 33544 "records.ml" 610 33475 33545
+type(
+  exn
+)
+"records.ml" 610 33475 33549 "records.ml" 610 33475 33552
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 610 33475 33496 "records.ml" 610 33475 33552
+type(
+  string
+)
+"records.ml" 610 33475 33483 "records.ml" 610 33475 33553
+type(
+  API.ref_VM -> string
+)
+"records.ml" 611 33554 33563 "records.ml" 611 33554 33582
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VMPP -> API.ref_VM_set
+)
+ident(
+  ext_ref Client.( Client ).( VMPP ).get_VMs
+)
+"records.ml" 611 33554 33583 "records.ml" 611 33554 33586
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 513 28448 28464 "records.ml" 513 28448 28467
+)
+"records.ml" 611 33554 33587 "records.ml" 611 33554 33597
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 513 28448 28468 "records.ml" 513 28448 28478
+)
+"records.ml" 611 33554 33598 "records.ml" 611 33554 33602
+type(
+  API.ref_VMPP
+)
+ident(
+  int_ref vmpp "records.ml" 513 28448 28479 "records.ml" 513 28448 28483
+)
+"records.ml" 611 33554 33562 "records.ml" 611 33554 33603
+type(
+  API.ref_VM_set
+)
+"records.ml" 609 33437 33466 "records.ml" 611 33554 33603
+type(
+  string list
+)
+"records.ml" 611 33554 33609 "records.ml" 611 33554 33610
+type(
+  exn
+)
+"records.ml" 611 33554 33614 "records.ml" 611 33554 33616
+type(
+  string list
+)
+"records.ml" 609 33437 33462 "records.ml" 611 33554 33616
+type(
+  string list
+)
+"records.ml" 609 33437 33451 "records.ml" 611 33554 33617
+type(
+  unit -> string list
+)
+"records.ml" 612 33618 33623 "records.ml" 612 33618 33625
+type(
+  unit
+)
+"records.ml" 599 33145 33147 "records.ml" 612 33618 33625
+type(
+  field
+)
+"records.ml" 523 28835 28835 "records.ml" 613 33627 33628
+type(
+  field list
+)
+"records.ml" 518 28663 28665 "records.ml" 613 33627 33629
+type(
+  ([ `VMPP ], API.vMPP_t) record
+)
+"records.ml" 517 28632 28634 "records.ml" 613 33627 33629
+type(
+  ([ `VMPP ], API.vMPP_t) record
+)
+"records.ml" 516 28597 28599 "records.ml" 613 33627 33629
+type(
+  ([ `VMPP ], API.vMPP_t) record
+)
+"records.ml" 515 28511 28513 "records.ml" 613 33627 33629
+type(
+  ([ `VMPP ], API.vMPP_t) record
+)
+"records.ml" 514 28486 28488 "records.ml" 613 33627 33629
+type(
+  ([ `VMPP ], API.vMPP_t) record
+)
+"records.ml" 642 34576 34580 "records.ml" 642 34576 34594
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_console -> ([ `console ], API.console_t) record
+)
+ident(
+  def console_record "records.ml" 667 35881 35881 --
+)
+"records.ml" 642 34576 34595 "records.ml" 642 34576 34598
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 642 34576 34599 "records.ml" 665 35875 35879
+)
+"records.ml" 642 34576 34599 "records.ml" 642 34576 34609
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 642 34576 34610 "records.ml" 665 35875 35879
+)
+"records.ml" 642 34576 34610 "records.ml" 642 34576 34617
+type(
+  API.ref_console
+)
+ident(
+  def console "records.ml" 643 34621 34623 "records.ml" 665 35875 35879
+)
+"records.ml" 643 34621 34627 "records.ml" 643 34621 34631
+type(
+  API.ref_console ref
+)
+"records.ml" 643 34621 34634 "records.ml" 643 34621 34637
+type(
+  API.ref_console -> API.ref_console ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 643 34621 34638 "records.ml" 643 34621 34645
+type(
+  API.ref_console
+)
+ident(
+  int_ref console "records.ml" 642 34576 34610 "records.ml" 642 34576 34617
+)
+"records.ml" 643 34621 34634 "records.ml" 643 34621 34645
+type(
+  API.ref_console ref
+)
+"records.ml" 644 34649 34655 "records.ml" 644 34649 34667
+type(
+  API.console_t lzy
+)
+"records.ml" 644 34649 34681 "records.ml" 644 34649 34683
+type(
+  unit
+)
+"records.ml" 644 34649 34687 "records.ml" 644 34649 34712
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_console -> API.console_t
+)
+ident(
+  ext_ref Client.( Client ).( Console ).get_record
+)
+"records.ml" 644 34649 34713 "records.ml" 644 34649 34716
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 642 34576 34595 "records.ml" 642 34576 34598
+)
+"records.ml" 644 34649 34717 "records.ml" 644 34649 34727
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 642 34576 34599 "records.ml" 642 34576 34609
+)
+"records.ml" 644 34649 34728 "records.ml" 644 34649 34729
+type(
+  API.ref_console ref -> API.ref_console
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 644 34649 34729 "records.ml" 644 34649 34733
+type(
+  API.ref_console ref
+)
+ident(
+  int_ref _ref "records.ml" 643 34621 34627 "records.ml" 643 34621 34631
+)
+"records.ml" 644 34649 34728 "records.ml" 644 34649 34733
+type(
+  API.ref_console
+)
+"records.ml" 644 34649 34687 "records.ml" 644 34649 34733
+type(
+  API.console_t
+)
+"records.ml" 644 34649 34676 "records.ml" 644 34649 34734
+type(
+  unit -> API.console_t
+)
+"records.ml" 644 34649 34670 "records.ml" 644 34649 34734
+type(
+  API.console_t lzy
+)
+"records.ml" 645 34738 34744 "records.ml" 645 34738 34750
+type(
+  API.console_t lzy ref
+)
+"records.ml" 645 34738 34753 "records.ml" 645 34738 34756
+type(
+  API.console_t lzy -> API.console_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 645 34738 34757 "records.ml" 645 34738 34769
+type(
+  API.console_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 644 34649 34655 "records.ml" 644 34649 34667
+)
+"records.ml" 645 34738 34753 "records.ml" 645 34738 34769
+type(
+  API.console_t lzy ref
+)
+"records.ml" 646 34773 34779 "records.ml" 646 34773 34780
+type(
+  unit -> API.console_t
+)
+"records.ml" 646 34773 34781 "records.ml" 646 34773 34783
+type(
+  unit
+)
+"records.ml" 646 34773 34786 "records.ml" 646 34773 34793
+type(
+  API.console_t lzy ref -> API.console_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 646 34773 34794 "records.ml" 646 34773 34800
+type(
+  API.console_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 645 34738 34744 "records.ml" 645 34738 34750
+)
+"records.ml" 646 34773 34786 "records.ml" 646 34773 34800
+type(
+  API.console_t
+)
+"records.ml" 647 34804 34820 "records.ml" 647 34804 34821
+type(
+  API.ref_console
+)
+ident(
+  def r "records.ml" 647 34804 34825 "records.ml" 647 34804 34858
+)
+"records.ml" 647 34804 34825 "records.ml" 647 34804 34829
+type(
+  API.ref_console ref
+)
+ident(
+  int_ref _ref "records.ml" 643 34621 34627 "records.ml" 643 34621 34631
+)
+"records.ml" 647 34804 34830 "records.ml" 647 34804 34832
+type(
+  API.ref_console ref -> API.ref_console -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 647 34804 34833 "records.ml" 647 34804 34834
+type(
+  API.ref_console
+)
+ident(
+  int_ref r "records.ml" 647 34804 34820 "records.ml" 647 34804 34821
+)
+"records.ml" 647 34804 34825 "records.ml" 647 34804 34834
+type(
+  unit
+)
+"records.ml" 647 34804 34836 "records.ml" 647 34804 34842
+type(
+  API.console_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 645 34738 34744 "records.ml" 645 34738 34750
+)
+"records.ml" 647 34804 34843 "records.ml" 647 34804 34845
+type(
+  API.console_t lzy ref -> API.console_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 647 34804 34846 "records.ml" 647 34804 34858
+type(
+  API.console_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 644 34649 34655 "records.ml" 644 34649 34667
+)
+"records.ml" 647 34804 34836 "records.ml" 647 34804 34858
+type(
+  unit
+)
+"records.ml" 647 34804 34825 "records.ml" 647 34804 34858
+type(
+  unit
+)
+"records.ml" 647 34804 34815 "records.ml" 647 34804 34860
+type(
+  API.ref_console -> unit
+)
+"records.ml" 648 34862 34882 "records.ml" 648 34862 34883
+type(
+  API.ref_console
+)
+ident(
+  def a "records.ml" 648 34862 34890 "records.ml" 648 34862 34916
+)
+"records.ml" 648 34862 34884 "records.ml" 648 34862 34885
+type(
+  API.console_t
+)
+ident(
+  def b "records.ml" 648 34862 34890 "records.ml" 648 34862 34916
+)
+"records.ml" 648 34862 34881 "records.ml" 648 34862 34886
+type(
+  API.ref_console * API.console_t
+)
+"records.ml" 648 34862 34890 "records.ml" 648 34862 34894
+type(
+  API.ref_console ref
+)
+ident(
+  int_ref _ref "records.ml" 643 34621 34627 "records.ml" 643 34621 34631
+)
+"records.ml" 648 34862 34895 "records.ml" 648 34862 34897
+type(
+  API.ref_console ref -> API.ref_console -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 648 34862 34898 "records.ml" 648 34862 34899
+type(
+  API.ref_console
+)
+ident(
+  int_ref a "records.ml" 648 34862 34882 "records.ml" 648 34862 34883
+)
+"records.ml" 648 34862 34890 "records.ml" 648 34862 34899
+type(
+  unit
+)
+"records.ml" 648 34862 34901 "records.ml" 648 34862 34907
+type(
+  API.console_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 645 34738 34744 "records.ml" 645 34738 34750
+)
+"records.ml" 648 34862 34908 "records.ml" 648 34862 34910
+type(
+  API.console_t lzy ref -> API.console_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 648 34862 34915 "records.ml" 648 34862 34916
+type(
+  API.console_t
+)
+ident(
+  int_ref b "records.ml" 648 34862 34884 "records.ml" 648 34862 34885
+)
+"records.ml" 648 34862 34911 "records.ml" 648 34862 34916
+type(
+  API.console_t lzy
+)
+"records.ml" 648 34862 34901 "records.ml" 648 34862 34916
+type(
+  unit
+)
+"records.ml" 648 34862 34890 "records.ml" 648 34862 34916
+type(
+  unit
+)
+"records.ml" 648 34862 34876 "records.ml" 648 34862 34917
+type(
+  API.ref_console * API.console_t -> unit
+)
+"records.ml" 649 34919 34930 "records.ml" 649 34919 34931
+type(
+  unit -> API.console_t
+)
+ident(
+  int_ref x "records.ml" 646 34773 34779 "records.ml" 646 34773 34780
+)
+"records.ml" 650 34933 34949 "records.ml" 650 34933 34951
+type(
+  unit
+)
+"records.ml" 650 34933 34955 "records.ml" 650 34933 34956
+type(
+  API.ref_console ref -> API.ref_console
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 650 34933 34956 "records.ml" 650 34933 34960
+type(
+  API.ref_console ref
+)
+ident(
+  int_ref _ref "records.ml" 643 34621 34627 "records.ml" 643 34621 34631
+)
+"records.ml" 650 34933 34955 "records.ml" 650 34933 34960
+type(
+  API.ref_console
+)
+"records.ml" 650 34933 34944 "records.ml" 650 34933 34961
+type(
+  unit -> API.ref_console
+)
+"records.ml" 653 34981 34985 "records.ml" 653 34981 34995
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 653 34981 35002 "records.ml" 653 34981 35008
+type(
+  string
+)
+"records.ml" 653 34981 35034 "records.ml" 653 34981 35036
+type(
+  unit
+)
+"records.ml" 653 34981 35041 "records.ml" 653 34981 35042
+type(
+  unit -> API.console_t
+)
+ident(
+  int_ref x "records.ml" 646 34773 34779 "records.ml" 646 34773 34780
+)
+"records.ml" 653 34981 35043 "records.ml" 653 34981 35045
+type(
+  unit
+)
+"records.ml" 653 34981 35040 "records.ml" 653 34981 35046
+type(
+  API.console_t
+)
+"records.ml" 653 34981 35040 "records.ml" 653 34981 35063
+type(
+  string
+)
+"records.ml" 653 34981 35029 "records.ml" 653 34981 35064
+type(
+  unit -> string
+)
+"records.ml" 653 34981 35065 "records.ml" 653 34981 35067
+type(
+  unit
+)
+"records.ml" 653 34981 34985 "records.ml" 653 34981 35067
+type(
+  field
+)
+"records.ml" 654 35069 35073 "records.ml" 654 35069 35083
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 654 35069 35090 "records.ml" 654 35069 35099
+type(
+  string
+)
+"records.ml" 655 35101 35117 "records.ml" 655 35101 35119
+type(
+  unit
+)
+"records.ml" 655 35101 35124 "records.ml" 655 35101 35141
+type(
+  API.ref_VM -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 655 35101 35143 "records.ml" 655 35101 35144
+type(
+  unit -> API.console_t
+)
+ident(
+  int_ref x "records.ml" 646 34773 34779 "records.ml" 646 34773 34780
+)
+"records.ml" 655 35101 35145 "records.ml" 655 35101 35147
+type(
+  unit
+)
+"records.ml" 655 35101 35142 "records.ml" 655 35101 35148
+type(
+  API.console_t
+)
+"records.ml" 655 35101 35142 "records.ml" 655 35101 35163
+type(
+  API.ref_VM
+)
+"records.ml" 655 35101 35123 "records.ml" 655 35101 35164
+type(
+  string
+)
+"records.ml" 655 35101 35112 "records.ml" 655 35101 35165
+type(
+  unit -> string
+)
+"records.ml" 655 35101 35166 "records.ml" 655 35101 35168
+type(
+  unit
+)
+"records.ml" 654 35069 35073 "records.ml" 655 35101 35168
+type(
+  field
+)
+"records.ml" 656 35170 35174 "records.ml" 656 35170 35184
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 656 35170 35191 "records.ml" 656 35170 35206
+type(
+  string
+)
+"records.ml" 657 35207 35223 "records.ml" 657 35207 35225
+type(
+  unit
+)
+"records.ml" 657 35207 35230 "records.ml" 657 35207 35247
+type(
+  API.ref_VM -> string
+)
+ident(
+  int_ref get_name_from_ref "records.ml" 103 3658 3662 "records.ml" 103 3658 3679
+)
+"records.ml" 657 35207 35249 "records.ml" 657 35207 35250
+type(
+  unit -> API.console_t
+)
+ident(
+  int_ref x "records.ml" 646 34773 34779 "records.ml" 646 34773 34780
+)
+"records.ml" 657 35207 35251 "records.ml" 657 35207 35253
+type(
+  unit
+)
+"records.ml" 657 35207 35248 "records.ml" 657 35207 35254
+type(
+  API.console_t
+)
+"records.ml" 657 35207 35248 "records.ml" 657 35207 35269
+type(
+  API.ref_VM
+)
+"records.ml" 657 35207 35229 "records.ml" 657 35207 35270
+type(
+  string
+)
+"records.ml" 657 35207 35218 "records.ml" 657 35207 35271
+type(
+  unit -> string
+)
+"records.ml" 657 35207 35272 "records.ml" 657 35207 35274
+type(
+  unit
+)
+"records.ml" 656 35170 35174 "records.ml" 657 35207 35274
+type(
+  field
+)
+"records.ml" 658 35276 35280 "records.ml" 658 35276 35290
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 658 35276 35297 "records.ml" 658 35276 35307
+type(
+  string
+)
+"records.ml" 658 35276 35329 "records.ml" 658 35276 35331
+type(
+  unit
+)
+"records.ml" 658 35276 35335 "records.ml" 658 35276 35365
+type(
+  API.console_protocol -> string
+)
+ident(
+  ext_ref Record_util.protocol_to_string
+)
+"records.ml" 658 35276 35367 "records.ml" 658 35276 35368
+type(
+  unit -> API.console_t
+)
+ident(
+  int_ref x "records.ml" 646 34773 34779 "records.ml" 646 34773 34780
+)
+"records.ml" 658 35276 35369 "records.ml" 658 35276 35371
+type(
+  unit
+)
+"records.ml" 658 35276 35366 "records.ml" 658 35276 35372
+type(
+  API.console_t
+)
+"records.ml" 658 35276 35366 "records.ml" 658 35276 35393
+type(
+  API.console_protocol
+)
+"records.ml" 658 35276 35335 "records.ml" 658 35276 35393
+type(
+  string
+)
+"records.ml" 658 35276 35324 "records.ml" 658 35276 35394
+type(
+  unit -> string
+)
+"records.ml" 658 35276 35395 "records.ml" 658 35276 35397
+type(
+  unit
+)
+"records.ml" 658 35276 35280 "records.ml" 658 35276 35397
+type(
+  field
+)
+"records.ml" 659 35399 35403 "records.ml" 659 35399 35413
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 659 35399 35420 "records.ml" 659 35399 35430
+type(
+  string
+)
+"records.ml" 659 35399 35452 "records.ml" 659 35399 35454
+type(
+  unit
+)
+"records.ml" 659 35399 35459 "records.ml" 659 35399 35460
+type(
+  unit -> API.console_t
+)
+ident(
+  int_ref x "records.ml" 646 34773 34779 "records.ml" 646 34773 34780
+)
+"records.ml" 659 35399 35461 "records.ml" 659 35399 35463
+type(
+  unit
+)
+"records.ml" 659 35399 35458 "records.ml" 659 35399 35464
+type(
+  API.console_t
+)
+"records.ml" 659 35399 35458 "records.ml" 659 35399 35485
+type(
+  string
+)
+"records.ml" 659 35399 35447 "records.ml" 659 35399 35486
+type(
+  unit -> string
+)
+"records.ml" 659 35399 35487 "records.ml" 659 35399 35489
+type(
+  unit
+)
+"records.ml" 659 35399 35403 "records.ml" 659 35399 35489
+type(
+  field
+)
+"records.ml" 660 35491 35495 "records.ml" 660 35491 35505
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 660 35491 35512 "records.ml" 660 35491 35526
+type(
+  string
+)
+"records.ml" 661 35536 35551 "records.ml" 661 35536 35553
+type(
+  unit
+)
+"records.ml" 661 35536 35557 "records.ml" 661 35536 35583
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 661 35536 35584 "records.ml" 661 35536 35588
+type(
+  string
+)
+"records.ml" 661 35536 35590 "records.ml" 661 35536 35591
+type(
+  unit -> API.console_t
+)
+ident(
+  int_ref x "records.ml" 646 34773 34779 "records.ml" 646 34773 34780
+)
+"records.ml" 661 35536 35592 "records.ml" 661 35536 35594
+type(
+  unit
+)
+"records.ml" 661 35536 35589 "records.ml" 661 35536 35595
+type(
+  API.console_t
+)
+"records.ml" 661 35536 35589 "records.ml" 661 35536 35620
+type(
+  API.string_to_string_map
+)
+"records.ml" 661 35536 35557 "records.ml" 661 35536 35620
+type(
+  string
+)
+"records.ml" 661 35536 35546 "records.ml" 661 35536 35621
+type(
+  unit -> string
+)
+"records.ml" 662 35622 35644 "records.ml" 662 35622 35645
+type(
+  string
+)
+ident(
+  def k "records.ml" 662 35622 35646 "records.ml" 662 35622 35712
+)
+"records.ml" 662 35622 35646 "records.ml" 662 35622 35647
+type(
+  string
+)
+ident(
+  def v "records.ml" 662 35622 35651 "records.ml" 662 35622 35712
+)
+"records.ml" 662 35622 35651 "records.ml" 662 35622 35685
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_console -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Console ).add_to_other_config
+)
+"records.ml" 662 35622 35686 "records.ml" 662 35622 35689
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 642 34576 34595 "records.ml" 642 34576 34598
+)
+"records.ml" 662 35622 35690 "records.ml" 662 35622 35700
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 642 34576 34599 "records.ml" 642 34576 34609
+)
+"records.ml" 662 35622 35701 "records.ml" 662 35622 35708
+type(
+  API.ref_console
+)
+ident(
+  int_ref console "records.ml" 642 34576 34610 "records.ml" 642 34576 34617
+)
+"records.ml" 662 35622 35709 "records.ml" 662 35622 35710
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 662 35622 35644 "records.ml" 662 35622 35645
+)
+"records.ml" 662 35622 35711 "records.ml" 662 35622 35712
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 662 35622 35646 "records.ml" 662 35622 35647
+)
+"records.ml" 662 35622 35651 "records.ml" 662 35622 35712
+type(
+  unit
+)
+"records.ml" 662 35622 35639 "records.ml" 662 35622 35713
+type(
+  string -> string -> unit
+)
+"records.ml" 663 35714 35741 "records.ml" 663 35714 35742
+type(
+  string
+)
+ident(
+  def k "records.ml" 663 35714 35746 "records.ml" 663 35714 35810
+)
+"records.ml" 663 35714 35746 "records.ml" 663 35714 35785
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_console -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Console ).remove_from_other_config
+)
+"records.ml" 663 35714 35786 "records.ml" 663 35714 35789
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 642 34576 34595 "records.ml" 642 34576 34598
+)
+"records.ml" 663 35714 35790 "records.ml" 663 35714 35800
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 642 34576 34599 "records.ml" 642 34576 34609
+)
+"records.ml" 663 35714 35801 "records.ml" 663 35714 35808
+type(
+  API.ref_console
+)
+ident(
+  int_ref console "records.ml" 642 34576 34610 "records.ml" 642 34576 34617
+)
+"records.ml" 663 35714 35809 "records.ml" 663 35714 35810
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 663 35714 35741 "records.ml" 663 35714 35742
+)
+"records.ml" 663 35714 35746 "records.ml" 663 35714 35810
+type(
+  unit
+)
+"records.ml" 663 35714 35736 "records.ml" 663 35714 35811
+type(
+  string -> unit
+)
+"records.ml" 664 35813 35832 "records.ml" 664 35813 35834
+type(
+  unit
+)
+"records.ml" 664 35813 35839 "records.ml" 664 35813 35840
+type(
+  unit -> API.console_t
+)
+ident(
+  int_ref x "records.ml" 646 34773 34779 "records.ml" 646 34773 34780
+)
+"records.ml" 664 35813 35841 "records.ml" 664 35813 35843
+type(
+  unit
+)
+"records.ml" 664 35813 35838 "records.ml" 664 35813 35844
+type(
+  API.console_t
+)
+"records.ml" 664 35813 35838 "records.ml" 664 35813 35869
+type(
+  API.string_to_string_map
+)
+"records.ml" 664 35813 35827 "records.ml" 664 35813 35870
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 664 35813 35871 "records.ml" 664 35813 35873
+type(
+  unit
+)
+"records.ml" 660 35491 35495 "records.ml" 664 35813 35873
+type(
+  field
+)
+"records.ml" 652 34977 34979 "records.ml" 665 35875 35878
+type(
+  field list
+)
+"records.ml" 647 34804 34806 "records.ml" 665 35875 35879
+type(
+  ([ `console ], API.console_t) record
+)
+"records.ml" 646 34773 34775 "records.ml" 665 35875 35879
+type(
+  ([ `console ], API.console_t) record
+)
+"records.ml" 645 34738 34740 "records.ml" 665 35875 35879
+type(
+  ([ `console ], API.console_t) record
+)
+"records.ml" 644 34649 34651 "records.ml" 665 35875 35879
+type(
+  ([ `console ], API.console_t) record
+)
+"records.ml" 643 34621 34623 "records.ml" 665 35875 35879
+type(
+  ([ `console ], API.console_t) record
+)
+"records.ml" 667 35881 35885 "records.ml" 667 35881 35894
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_VM -> ([ `VM ], API.vM_t) record
+)
+ident(
+  def vm_record "records.ml" 935 53412 53412 --
+)
+"records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 667 35881 35899 "records.ml" 933 53406 53410
+)
+"records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 667 35881 35910 "records.ml" 933 53406 53410
+)
+"records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+type(
+  API.ref_VM
+)
+ident(
+  def vm "records.ml" 668 35915 35916 "records.ml" 933 53406 53410
+)
+"records.ml" 668 35915 35920 "records.ml" 668 35915 35924
+type(
+  API.ref_VM ref
+)
+"records.ml" 668 35915 35927 "records.ml" 668 35915 35930
+type(
+  API.ref_VM -> API.ref_VM ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 668 35915 35931 "records.ml" 668 35915 35933
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 668 35915 35927 "records.ml" 668 35915 35933
+type(
+  API.ref_VM ref
+)
+"records.ml" 669 35937 35942 "records.ml" 669 35937 35954
+type(
+  API.vM_t lzy
+)
+"records.ml" 669 35937 35968 "records.ml" 669 35937 35970
+type(
+  unit
+)
+"records.ml" 669 35937 35974 "records.ml" 669 35937 35994
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> API.vM_t
+)
+ident(
+  ext_ref Client.( Client ).( VM ).get_record
+)
+"records.ml" 669 35937 35995 "records.ml" 669 35937 35998
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 669 35937 35999 "records.ml" 669 35937 36009
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 669 35937 36010 "records.ml" 669 35937 36011
+type(
+  API.ref_VM ref -> API.ref_VM
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 669 35937 36011 "records.ml" 669 35937 36015
+type(
+  API.ref_VM ref
+)
+ident(
+  int_ref _ref "records.ml" 668 35915 35920 "records.ml" 668 35915 35924
+)
+"records.ml" 669 35937 36010 "records.ml" 669 35937 36015
+type(
+  API.ref_VM
+)
+"records.ml" 669 35937 35974 "records.ml" 669 35937 36015
+type(
+  API.vM_t
+)
+"records.ml" 669 35937 35963 "records.ml" 669 35937 36016
+type(
+  unit -> API.vM_t
+)
+"records.ml" 669 35937 35957 "records.ml" 669 35937 36016
+type(
+  API.vM_t lzy
+)
+"records.ml" 670 36020 36025 "records.ml" 670 36020 36031
+type(
+  API.vM_t lzy ref
+)
+"records.ml" 670 36020 36034 "records.ml" 670 36020 36037
+type(
+  API.vM_t lzy -> API.vM_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 670 36020 36038 "records.ml" 670 36020 36050
+type(
+  API.vM_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 669 35937 35942 "records.ml" 669 35937 35954
+)
+"records.ml" 670 36020 36034 "records.ml" 670 36020 36050
+type(
+  API.vM_t lzy ref
+)
+"records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+type(
+  unit -> API.vM_t
+)
+"records.ml" 671 36054 36061 "records.ml" 671 36054 36063
+type(
+  unit
+)
+"records.ml" 671 36054 36066 "records.ml" 671 36054 36073
+type(
+  API.vM_t lzy ref -> API.vM_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 671 36054 36074 "records.ml" 671 36054 36080
+type(
+  API.vM_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 670 36020 36025 "records.ml" 670 36020 36031
+)
+"records.ml" 671 36054 36066 "records.ml" 671 36054 36080
+type(
+  API.vM_t
+)
+"records.ml" 672 36084 36089 "records.ml" 672 36084 36102
+type(
+  API.vM_metrics_t option lzy
+)
+"records.ml" 672 36084 36116 "records.ml" 672 36084 36118
+type(
+  unit
+)
+"records.ml" 672 36084 36132 "records.ml" 672 36084 36160
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM_metrics -> API.vM_metrics_t
+)
+ident(
+  ext_ref Client.( Client ).( VM_metrics ).get_record
+)
+"records.ml" 672 36084 36161 "records.ml" 672 36084 36164
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 672 36084 36165 "records.ml" 672 36084 36175
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 672 36084 36177 "records.ml" 672 36084 36178
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 672 36084 36179 "records.ml" 672 36084 36181
+type(
+  unit
+)
+"records.ml" 672 36084 36176 "records.ml" 672 36084 36182
+type(
+  API.vM_t
+)
+"records.ml" 672 36084 36176 "records.ml" 672 36084 36197
+type(
+  API.ref_VM_metrics
+)
+"records.ml" 672 36084 36131 "records.ml" 672 36084 36198
+type(
+  API.vM_metrics_t
+)
+"records.ml" 672 36084 36126 "records.ml" 672 36084 36198
+type(
+  API.vM_metrics_t option
+)
+"records.ml" 672 36084 36204 "records.ml" 672 36084 36205
+type(
+  exn
+)
+"records.ml" 672 36084 36209 "records.ml" 672 36084 36213
+type(
+  API.vM_metrics_t option
+)
+"records.ml" 672 36084 36122 "records.ml" 672 36084 36213
+type(
+  API.vM_metrics_t option
+)
+"records.ml" 672 36084 36111 "records.ml" 672 36084 36214
+type(
+  unit -> API.vM_metrics_t option
+)
+"records.ml" 672 36084 36105 "records.ml" 672 36084 36214
+type(
+  API.vM_metrics_t option lzy
+)
+"records.ml" 673 36218 36223 "records.ml" 673 36218 36230
+type(
+  API.vM_metrics_t option lzy ref
+)
+"records.ml" 673 36218 36233 "records.ml" 673 36218 36236
+type(
+  API.vM_metrics_t option lzy -> API.vM_metrics_t option lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 673 36218 36237 "records.ml" 673 36218 36250
+type(
+  API.vM_metrics_t option lzy
+)
+ident(
+  int_ref empty_metrics "records.ml" 672 36084 36089 "records.ml" 672 36084 36102
+)
+"records.ml" 673 36218 36233 "records.ml" 673 36218 36250
+type(
+  API.vM_metrics_t option lzy ref
+)
+"records.ml" 674 36254 36259 "records.ml" 674 36254 36261
+type(
+  unit -> API.vM_metrics_t option
+)
+"records.ml" 674 36254 36262 "records.ml" 674 36254 36264
+type(
+  unit
+)
+"records.ml" 674 36254 36267 "records.ml" 674 36254 36274
+type(
+  API.vM_metrics_t option lzy ref -> API.vM_metrics_t option
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 674 36254 36275 "records.ml" 674 36254 36282
+type(
+  API.vM_metrics_t option lzy ref
+)
+ident(
+  int_ref metrics "records.ml" 673 36218 36223 "records.ml" 673 36218 36230
+)
+"records.ml" 674 36254 36267 "records.ml" 674 36254 36282
+type(
+  API.vM_metrics_t option
+)
+"records.ml" 675 36286 36291 "records.ml" 675 36286 36310
+type(
+  API.vM_guest_metrics_t option lzy
+)
+"records.ml" 675 36286 36324 "records.ml" 675 36286 36326
+type(
+  unit
+)
+"records.ml" 675 36286 36340 "records.ml" 675 36286 36374
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VM_guest_metrics -> API.vM_guest_metrics_t
+)
+ident(
+  ext_ref Client.( Client ).( VM_guest_metrics ).get_record
+)
+"records.ml" 675 36286 36375 "records.ml" 675 36286 36378
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 675 36286 36379 "records.ml" 675 36286 36389
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 675 36286 36391 "records.ml" 675 36286 36392
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 675 36286 36393 "records.ml" 675 36286 36395
+type(
+  unit
+)
+"records.ml" 675 36286 36390 "records.ml" 675 36286 36396
+type(
+  API.vM_t
+)
+"records.ml" 675 36286 36390 "records.ml" 675 36286 36417
+type(
+  API.ref_VM_guest_metrics
+)
+"records.ml" 675 36286 36339 "records.ml" 675 36286 36418
+type(
+  API.vM_guest_metrics_t
+)
+"records.ml" 675 36286 36334 "records.ml" 675 36286 36418
+type(
+  API.vM_guest_metrics_t option
+)
+"records.ml" 675 36286 36424 "records.ml" 675 36286 36425
+type(
+  exn
+)
+"records.ml" 675 36286 36429 "records.ml" 675 36286 36433
+type(
+  API.vM_guest_metrics_t option
+)
+"records.ml" 675 36286 36330 "records.ml" 675 36286 36433
+type(
+  API.vM_guest_metrics_t option
+)
+"records.ml" 675 36286 36319 "records.ml" 675 36286 36434
+type(
+  unit -> API.vM_guest_metrics_t option
+)
+"records.ml" 675 36286 36313 "records.ml" 675 36286 36434
+type(
+  API.vM_guest_metrics_t option lzy
+)
+"records.ml" 676 36438 36443 "records.ml" 676 36438 36456
+type(
+  API.vM_guest_metrics_t option lzy ref
+)
+"records.ml" 676 36438 36459 "records.ml" 676 36438 36462
+type(
+  API.vM_guest_metrics_t option lzy -> API.vM_guest_metrics_t option lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 676 36438 36463 "records.ml" 676 36438 36482
+type(
+  API.vM_guest_metrics_t option lzy
+)
+ident(
+  int_ref empty_guest_metrics "records.ml" 675 36286 36291 "records.ml" 675 36286 36310
+)
+"records.ml" 676 36438 36459 "records.ml" 676 36438 36482
+type(
+  API.vM_guest_metrics_t option lzy ref
+)
+"records.ml" 677 36486 36491 "records.ml" 677 36486 36512
+type(
+  unit -> (string * string) list
+)
+"records.ml" 677 36486 36513 "records.ml" 677 36486 36515
+type(
+  unit
+)
+"records.ml" 678 36518 36524 "records.ml" 678 36518 36530
+type(
+  int
+)
+"records.ml" 678 36518 36533 "records.ml" 678 36518 36540
+type(
+  int -> int option -> int
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 678 36518 36541 "records.ml" 678 36518 36542
+type(
+  int
+)
+"records.ml" 678 36518 36544 "records.ml" 678 36518 36547
+type(
+  (API.vM_metrics_t -> int) -> API.vM_metrics_t option -> int option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 678 36518 36553 "records.ml" 678 36518 36554
+type(
+  API.vM_metrics_t
+)
+ident(
+  def m "records.ml" 678 36518 36558 "records.ml" 678 36518 36600
+)
+"records.ml" 678 36518 36558 "records.ml" 678 36518 36570
+type(
+  int64 -> int
+)
+ident(
+  ext_ref Int64.to_int
+)
+"records.ml" 678 36518 36571 "records.ml" 678 36518 36572
+type(
+  API.vM_metrics_t
+)
+ident(
+  int_ref m "records.ml" 678 36518 36553 "records.ml" 678 36518 36554
+)
+"records.ml" 678 36518 36571 "records.ml" 678 36518 36600
+type(
+  int64
+)
+"records.ml" 678 36518 36558 "records.ml" 678 36518 36600
+type(
+  int
+)
+"records.ml" 678 36518 36548 "records.ml" 678 36518 36601
+type(
+  API.vM_metrics_t -> int
+)
+"records.ml" 678 36518 36603 "records.ml" 678 36518 36605
+type(
+  unit -> API.vM_metrics_t option
+)
+ident(
+  int_ref xm "records.ml" 674 36254 36259 "records.ml" 674 36254 36261
+)
+"records.ml" 678 36518 36606 "records.ml" 678 36518 36608
+type(
+  unit
+)
+"records.ml" 678 36518 36602 "records.ml" 678 36518 36609
+type(
+  API.vM_metrics_t option
+)
+"records.ml" 678 36518 36543 "records.ml" 678 36518 36610
+type(
+  int option
+)
+"records.ml" 678 36518 36533 "records.ml" 678 36518 36610
+type(
+  int
+)
+"records.ml" 679 36614 36624 "records.ml" 679 36614 36629
+type(
+  int -> (string * string) list
+)
+"records.ml" 679 36614 36630 "records.ml" 679 36614 36631
+type(
+  int
+)
+ident(
+  def n "records.ml" 680 36634 36637 "records.ml" 681 36662 36792
+)
+"records.ml" 680 36634 36640 "records.ml" 680 36634 36641
+type(
+  int
+)
+ident(
+  int_ref n "records.ml" 679 36614 36630 "records.ml" 679 36614 36631
+)
+"records.ml" 680 36634 36641 "records.ml" 680 36634 36642
+type(
+  int -> int -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"records.ml" 680 36634 36642 "records.ml" 680 36634 36648
+type(
+  int
+)
+ident(
+  int_ref nvcpus "records.ml" 678 36518 36524 "records.ml" 678 36518 36530
+)
+"records.ml" 680 36634 36640 "records.ml" 680 36634 36648
+type(
+  bool
+)
+"records.ml" 680 36634 36654 "records.ml" 680 36634 36656
+type(
+  (string * string) list
+)
+"records.ml" 681 36662 36667 "records.ml" 681 36662 36680
+type(
+  int -> string
+)
+ident(
+  ext_ref Pervasives.string_of_int
+)
+"records.ml" 681 36662 36681 "records.ml" 681 36662 36682
+type(
+  int
+)
+ident(
+  int_ref n "records.ml" 679 36614 36630 "records.ml" 679 36614 36631
+)
+"records.ml" 681 36662 36667 "records.ml" 681 36662 36682
+type(
+  string
+)
+"records.ml" 681 36662 36683 "records.ml" 681 36662 36698
+type(
+  float -> string
+)
+ident(
+  int_ref string_of_float "records.ml" 34 990 994 "records.ml" 34 990 1009
+)
+"records.ml" 681 36662 36700 "records.ml" 681 36662 36727
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VM -> data_source:string -> float
+)
+ident(
+  ext_ref Client.( Client ).( VM ).query_data_source
+)
+"records.ml" 681 36662 36728 "records.ml" 681 36662 36731
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 681 36662 36732 "records.ml" 681 36662 36742
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 681 36662 36743 "records.ml" 681 36662 36744
+type(
+  API.ref_VM ref -> API.ref_VM
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 681 36662 36744 "records.ml" 681 36662 36748
+type(
+  API.ref_VM ref
+)
+ident(
+  int_ref _ref "records.ml" 668 35915 35920 "records.ml" 668 35915 35924
+)
+"records.ml" 681 36662 36743 "records.ml" 681 36662 36748
+type(
+  API.ref_VM
+)
+"records.ml" 681 36662 36750 "records.ml" 681 36662 36764
+type(
+  (int -> string, unit, string) format -> int -> string
+)
+ident(
+  ext_ref Printf.sprintf
+)
+"records.ml" 681 36662 36765 "records.ml" 681 36662 36772
+type(
+  (int -> string, unit, string) format
+)
+"records.ml" 681 36662 36773 "records.ml" 681 36662 36774
+type(
+  int
+)
+ident(
+  int_ref n "records.ml" 679 36614 36630 "records.ml" 679 36614 36631
+)
+"records.ml" 681 36662 36749 "records.ml" 681 36662 36775
+type(
+  string
+)
+"records.ml" 681 36662 36699 "records.ml" 681 36662 36776
+type(
+  float
+)
+"records.ml" 681 36662 36683 "records.ml" 681 36662 36776
+type(
+  string
+)
+"records.ml" 681 36662 36666 "records.ml" 681 36662 36777
+type(
+  string * string
+)
+"records.ml" 681 36662 36780 "records.ml" 681 36662 36785
+type(
+  int -> (string * string) list
+)
+ident(
+  int_ref inner "records.ml" 679 36614 36624 "records.ml" 679 36614 36629
+)
+"records.ml" 681 36662 36787 "records.ml" 681 36662 36788
+type(
+  int
+)
+ident(
+  int_ref n "records.ml" 679 36614 36630 "records.ml" 679 36614 36631
+)
+"records.ml" 681 36662 36788 "records.ml" 681 36662 36789
+type(
+  int -> int -> int
+)
+ident(
+  ext_ref Pervasives.( + )
+)
+"records.ml" 681 36662 36789 "records.ml" 681 36662 36790
+type(
+  int
+)
+"records.ml" 681 36662 36786 "records.ml" 681 36662 36791
+type(
+  int
+)
+"records.ml" 681 36662 36779 "records.ml" 681 36662 36792
+type(
+  (string * string) list
+)
+"records.ml" 681 36662 36666 "records.ml" 681 36662 36792
+type(
+  (string * string) list
+)
+"records.ml" 680 36634 36637 "records.ml" 681 36662 36792
+type(
+  (string * string) list
+)
+"records.ml" 683 36798 36800 "records.ml" 683 36798 36805
+type(
+  int -> (string * string) list
+)
+ident(
+  int_ref inner "records.ml" 679 36614 36624 "records.ml" 679 36614 36629
+)
+"records.ml" 683 36798 36806 "records.ml" 683 36798 36807
+type(
+  int
+)
+"records.ml" 683 36798 36800 "records.ml" 683 36798 36807
+type(
+  (string * string) list
+)
+"records.ml" 679 36614 36616 "records.ml" 683 36798 36807
+type(
+  (string * string) list
+)
+"records.ml" 678 36518 36520 "records.ml" 683 36798 36807
+type(
+  (string * string) list
+)
+"records.ml" 685 36812 36817 "records.ml" 685 36812 36834
+type(
+  unit -> string
+)
+"records.ml" 685 36812 36835 "records.ml" 685 36812 36837
+type(
+  unit
+)
+"records.ml" 687 36846 36849 "records.ml" 687 36846 36864
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 689 36875 36880 "records.ml" 689 36875 36894
+type(
+  float -> int64
+)
+ident(
+  ext_ref Int64.of_float
+)
+"records.ml" 690 36897 36903 "records.ml" 690 36897 36930
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VM -> data_source:string -> float
+)
+ident(
+  ext_ref Client.( Client ).( VM ).query_data_source
+)
+"records.ml" 691 36931 36938 "records.ml" 691 36931 36941
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 691 36931 36942 "records.ml" 691 36931 36952
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 691 36931 36953 "records.ml" 691 36931 36954
+type(
+  API.ref_VM ref -> API.ref_VM
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 691 36931 36954 "records.ml" 691 36931 36958
+type(
+  API.ref_VM ref
+)
+ident(
+  int_ref _ref "records.ml" 668 35915 35920 "records.ml" 668 35915 35924
+)
+"records.ml" 691 36931 36953 "records.ml" 691 36931 36958
+type(
+  API.ref_VM
+)
+"records.ml" 691 36931 36959 "records.ml" 691 36931 36974
+type(
+  string
+)
+"records.ml" 689 36875 36895 "records.ml" 692 36975 36981
+type(
+  float
+)
+"records.ml" 689 36875 36880 "records.ml" 692 36975 36981
+type(
+  int64
+)
+"records.ml" 693 36982 37016 "records.ml" 693 36982 37020
+type(
+  string
+)
+ident(
+  def code "records.ml" 694 37025 37031 "records.ml" 694 37025 37078
+)
+"records.ml" 693 36982 37022 "records.ml" 693 36982 37023
+type(
+  string list
+)
+"records.ml" 693 36982 36991 "records.ml" 693 36982 37024
+type(
+  exn
+)
+"records.ml" 694 37025 37036 "records.ml" 694 37025 37040
+type(
+  string
+)
+ident(
+  int_ref code "records.ml" 693 36982 37016 "records.ml" 693 36982 37020
+)
+"records.ml" 694 37025 37041 "records.ml" 694 37025 37042
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"records.ml" 694 37025 37043 "records.ml" 694 37025 37072
+type(
+  string
+)
+ident(
+  ext_ref Api_errors.vm_bad_power_state
+)
+"records.ml" 694 37025 37036 "records.ml" 694 37025 37072
+type(
+  bool
+)
+"records.ml" 694 37025 37076 "records.ml" 694 37025 37078
+type(
+  int64
+)
+"records.ml" 694 37025 37031 "records.ml" 694 37025 37078
+type(
+  int64
+)
+"records.ml" 687 36846 36865 "records.ml" 695 37079 37083
+type(
+  int64
+)
+"records.ml" 687 36846 36849 "records.ml" 695 37079 37083
+type(
+  string
+)
+"records.ml" 696 37084 37091 "records.ml" 696 37084 37092
+type(
+  exn
+)
+"records.ml" 696 37084 37096 "records.ml" 696 37084 37107
+type(
+  string
+)
+"records.ml" 686 36840 36842 "records.ml" 696 37084 37107
+type(
+  string
+)
+"records.ml" 698 37112 37117 "records.ml" 698 37112 37120
+type(
+  unit -> API.vM_guest_metrics_t option
+)
+"records.ml" 698 37112 37121 "records.ml" 698 37112 37123
+type(
+  unit
+)
+"records.ml" 698 37112 37126 "records.ml" 698 37112 37133
+type(
+  API.vM_guest_metrics_t option lzy ref -> API.vM_guest_metrics_t option
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 698 37112 37134 "records.ml" 698 37112 37147
+type(
+  API.vM_guest_metrics_t option lzy ref
+)
+ident(
+  int_ref guest_metrics "records.ml" 676 36438 36443 "records.ml" 676 36438 36456
+)
+"records.ml" 698 37112 37126 "records.ml" 698 37112 37147
+type(
+  API.vM_guest_metrics_t option
+)
+"records.ml" 700 37154 37171 "records.ml" 700 37154 37172
+type(
+  API.ref_VM
+)
+ident(
+  def r "records.ml" 700 37154 37176 "records.ml" 700 37154 37209
+)
+"records.ml" 700 37154 37176 "records.ml" 700 37154 37180
+type(
+  API.ref_VM ref
+)
+ident(
+  int_ref _ref "records.ml" 668 35915 35920 "records.ml" 668 35915 35924
+)
+"records.ml" 700 37154 37181 "records.ml" 700 37154 37183
+type(
+  API.ref_VM ref -> API.ref_VM -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 700 37154 37184 "records.ml" 700 37154 37185
+type(
+  API.ref_VM
+)
+ident(
+  int_ref r "records.ml" 700 37154 37171 "records.ml" 700 37154 37172
+)
+"records.ml" 700 37154 37176 "records.ml" 700 37154 37185
+type(
+  unit
+)
+"records.ml" 700 37154 37187 "records.ml" 700 37154 37193
+type(
+  API.vM_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 670 36020 36025 "records.ml" 670 36020 36031
+)
+"records.ml" 700 37154 37194 "records.ml" 700 37154 37196
+type(
+  API.vM_t lzy ref -> API.vM_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 700 37154 37197 "records.ml" 700 37154 37209
+type(
+  API.vM_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 669 35937 35942 "records.ml" 669 35937 35954
+)
+"records.ml" 700 37154 37187 "records.ml" 700 37154 37209
+type(
+  unit
+)
+"records.ml" 700 37154 37176 "records.ml" 700 37154 37209
+type(
+  unit
+)
+"records.ml" 700 37154 37166 "records.ml" 700 37154 37211
+type(
+  API.ref_VM -> unit
+)
+"records.ml" 701 37213 37234 "records.ml" 701 37213 37235
+type(
+  API.ref_VM
+)
+ident(
+  def a "records.ml" 701 37213 37242 "records.ml" 701 37213 37268
+)
+"records.ml" 701 37213 37236 "records.ml" 701 37213 37237
+type(
+  API.vM_t
+)
+ident(
+  def b "records.ml" 701 37213 37242 "records.ml" 701 37213 37268
+)
+"records.ml" 701 37213 37233 "records.ml" 701 37213 37238
+type(
+  API.ref_VM * API.vM_t
+)
+"records.ml" 701 37213 37242 "records.ml" 701 37213 37246
+type(
+  API.ref_VM ref
+)
+ident(
+  int_ref _ref "records.ml" 668 35915 35920 "records.ml" 668 35915 35924
+)
+"records.ml" 701 37213 37247 "records.ml" 701 37213 37249
+type(
+  API.ref_VM ref -> API.ref_VM -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 701 37213 37250 "records.ml" 701 37213 37251
+type(
+  API.ref_VM
+)
+ident(
+  int_ref a "records.ml" 701 37213 37234 "records.ml" 701 37213 37235
+)
+"records.ml" 701 37213 37242 "records.ml" 701 37213 37251
+type(
+  unit
+)
+"records.ml" 701 37213 37253 "records.ml" 701 37213 37259
+type(
+  API.vM_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 670 36020 36025 "records.ml" 670 36020 36031
+)
+"records.ml" 701 37213 37260 "records.ml" 701 37213 37262
+type(
+  API.vM_t lzy ref -> API.vM_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 701 37213 37267 "records.ml" 701 37213 37268
+type(
+  API.vM_t
+)
+ident(
+  int_ref b "records.ml" 701 37213 37236 "records.ml" 701 37213 37237
+)
+"records.ml" 701 37213 37263 "records.ml" 701 37213 37268
+type(
+  API.vM_t lzy
+)
+"records.ml" 701 37213 37253 "records.ml" 701 37213 37268
+type(
+  unit
+)
+"records.ml" 701 37213 37242 "records.ml" 701 37213 37268
+type(
+  unit
+)
+"records.ml" 701 37213 37228 "records.ml" 701 37213 37269
+type(
+  API.ref_VM * API.vM_t -> unit
+)
+"records.ml" 702 37271 37283 "records.ml" 702 37271 37284
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 703 37286 37303 "records.ml" 703 37286 37305
+type(
+  unit
+)
+"records.ml" 703 37286 37309 "records.ml" 703 37286 37310
+type(
+  API.ref_VM ref -> API.ref_VM
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 703 37286 37310 "records.ml" 703 37286 37314
+type(
+  API.ref_VM ref
+)
+ident(
+  int_ref _ref "records.ml" 668 35915 35920 "records.ml" 668 35915 35924
+)
+"records.ml" 703 37286 37309 "records.ml" 703 37286 37314
+type(
+  API.ref_VM
+)
+"records.ml" 703 37286 37298 "records.ml" 703 37286 37315
+type(
+  unit -> API.ref_VM
+)
+"records.ml" 705 37331 37334 "records.ml" 705 37331 37344
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 705 37331 37351 "records.ml" 705 37331 37357
+type(
+  string
+)
+"records.ml" 706 37358 37372 "records.ml" 706 37358 37374
+type(
+  unit
+)
+"records.ml" 706 37358 37379 "records.ml" 706 37358 37380
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 706 37358 37381 "records.ml" 706 37358 37383
+type(
+  unit
+)
+"records.ml" 706 37358 37378 "records.ml" 706 37358 37384
+type(
+  API.vM_t
+)
+"records.ml" 706 37358 37378 "records.ml" 706 37358 37396
+type(
+  string
+)
+"records.ml" 706 37358 37367 "records.ml" 706 37358 37397
+type(
+  unit -> string
+)
+"records.ml" 706 37358 37398 "records.ml" 706 37358 37400
+type(
+  unit
+)
+"records.ml" 705 37331 37334 "records.ml" 706 37358 37400
+type(
+  field
+)
+"records.ml" 707 37402 37405 "records.ml" 707 37402 37415
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 707 37402 37422 "records.ml" 707 37402 37434
+type(
+  string
+)
+"records.ml" 708 37435 37449 "records.ml" 708 37435 37451
+type(
+  unit
+)
+"records.ml" 708 37435 37456 "records.ml" 708 37435 37457
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 708 37435 37458 "records.ml" 708 37435 37460
+type(
+  unit
+)
+"records.ml" 708 37435 37455 "records.ml" 708 37435 37461
+type(
+  API.vM_t
+)
+"records.ml" 708 37435 37455 "records.ml" 708 37435 37479
+type(
+  string
+)
+"records.ml" 708 37435 37444 "records.ml" 708 37435 37480
+type(
+  unit -> string
+)
+"records.ml" 709 37481 37495 "records.ml" 709 37481 37496
+type(
+  string
+)
+ident(
+  def x "records.ml" 709 37481 37500 "records.ml" 709 37481 37544
+)
+"records.ml" 709 37481 37500 "records.ml" 709 37481 37524
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_name_label
+)
+"records.ml" 709 37481 37525 "records.ml" 709 37481 37528
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 709 37481 37529 "records.ml" 709 37481 37539
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 709 37481 37540 "records.ml" 709 37481 37542
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 709 37481 37543 "records.ml" 709 37481 37544
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 709 37481 37495 "records.ml" 709 37481 37496
+)
+"records.ml" 709 37481 37500 "records.ml" 709 37481 37544
+type(
+  unit
+)
+"records.ml" 709 37481 37490 "records.ml" 709 37481 37545
+type(
+  string -> unit
+)
+"records.ml" 709 37481 37546 "records.ml" 709 37481 37548
+type(
+  unit
+)
+"records.ml" 707 37402 37405 "records.ml" 709 37481 37548
+type(
+  field
+)
+"records.ml" 710 37550 37553 "records.ml" 710 37550 37563
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 710 37550 37570 "records.ml" 710 37550 37588
+type(
+  string
+)
+"records.ml" 711 37589 37603 "records.ml" 711 37589 37605
+type(
+  unit
+)
+"records.ml" 711 37589 37610 "records.ml" 711 37589 37611
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 711 37589 37612 "records.ml" 711 37589 37614
+type(
+  unit
+)
+"records.ml" 711 37589 37609 "records.ml" 711 37589 37615
+type(
+  API.vM_t
+)
+"records.ml" 711 37589 37609 "records.ml" 711 37589 37639
+type(
+  string
+)
+"records.ml" 711 37589 37598 "records.ml" 711 37589 37640
+type(
+  unit -> string
+)
+"records.ml" 712 37641 37655 "records.ml" 712 37641 37656
+type(
+  string
+)
+ident(
+  def x "records.ml" 712 37641 37660 "records.ml" 712 37641 37710
+)
+"records.ml" 712 37641 37660 "records.ml" 712 37641 37690
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_name_description
+)
+"records.ml" 712 37641 37691 "records.ml" 712 37641 37694
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 712 37641 37695 "records.ml" 712 37641 37705
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 712 37641 37706 "records.ml" 712 37641 37708
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 712 37641 37709 "records.ml" 712 37641 37710
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 712 37641 37655 "records.ml" 712 37641 37656
+)
+"records.ml" 712 37641 37660 "records.ml" 712 37641 37710
+type(
+  unit
+)
+"records.ml" 712 37641 37650 "records.ml" 712 37641 37711
+type(
+  string -> unit
+)
+"records.ml" 712 37641 37712 "records.ml" 712 37641 37714
+type(
+  unit
+)
+"records.ml" 710 37550 37553 "records.ml" 712 37641 37714
+type(
+  field
+)
+"records.ml" 713 37716 37719 "records.ml" 713 37716 37729
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 713 37716 37736 "records.ml" 713 37716 37750
+type(
+  string
+)
+"records.ml" 714 37751 37765 "records.ml" 714 37751 37767
+type(
+  unit
+)
+"records.ml" 714 37751 37771 "records.ml" 714 37751 37786
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 714 37751 37788 "records.ml" 714 37751 37789
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 714 37751 37790 "records.ml" 714 37751 37792
+type(
+  unit
+)
+"records.ml" 714 37751 37787 "records.ml" 714 37751 37793
+type(
+  API.vM_t
+)
+"records.ml" 714 37751 37787 "records.ml" 714 37751 37813
+type(
+  int64
+)
+"records.ml" 714 37751 37771 "records.ml" 714 37751 37813
+type(
+  string
+)
+"records.ml" 714 37751 37760 "records.ml" 714 37751 37814
+type(
+  unit -> string
+)
+"records.ml" 715 37815 37829 "records.ml" 715 37815 37830
+type(
+  string
+)
+ident(
+  def x "records.ml" 715 37815 37834 "records.ml" 715 37815 37916
+)
+"records.ml" 715 37815 37834 "records.ml" 715 37815 37860
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:int64 -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_user_version
+)
+"records.ml" 715 37815 37861 "records.ml" 715 37815 37864
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 715 37815 37865 "records.ml" 715 37815 37875
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 715 37815 37876 "records.ml" 715 37815 37878
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 715 37815 37880 "records.ml" 715 37815 37898
+type(
+  string -> string -> int64
+)
+ident(
+  int_ref safe_i64_of_string "records.ml" 69 2547 2551 "records.ml" 69 2547 2569
+)
+"records.ml" 715 37815 37899 "records.ml" 715 37815 37913
+type(
+  string
+)
+"records.ml" 715 37815 37914 "records.ml" 715 37815 37915
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 715 37815 37829 "records.ml" 715 37815 37830
+)
+"records.ml" 715 37815 37879 "records.ml" 715 37815 37916
+type(
+  int64
+)
+"records.ml" 715 37815 37834 "records.ml" 715 37815 37916
+type(
+  unit
+)
+"records.ml" 715 37815 37824 "records.ml" 715 37815 37917
+type(
+  string -> unit
+)
+"records.ml" 715 37815 37918 "records.ml" 715 37815 37920
+type(
+  unit
+)
+"records.ml" 713 37716 37719 "records.ml" 715 37815 37920
+type(
+  field
+)
+"records.ml" 716 37922 37925 "records.ml" 716 37922 37935
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 716 37922 37942 "records.ml" 716 37922 37957
+type(
+  string
+)
+"records.ml" 717 37958 37972 "records.ml" 717 37958 37974
+type(
+  unit
+)
+"records.ml" 717 37958 37978 "records.ml" 717 37958 37992
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 717 37958 37994 "records.ml" 717 37958 37995
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 717 37958 37996 "records.ml" 717 37958 37998
+type(
+  unit
+)
+"records.ml" 717 37958 37993 "records.ml" 717 37958 37999
+type(
+  API.vM_t
+)
+"records.ml" 717 37958 37993 "records.ml" 717 37958 38020
+type(
+  bool
+)
+"records.ml" 717 37958 37978 "records.ml" 717 37958 38020
+type(
+  string
+)
+"records.ml" 717 37958 37967 "records.ml" 717 37958 38021
+type(
+  unit -> string
+)
+"records.ml" 718 38022 38036 "records.ml" 718 38022 38037
+type(
+  string
+)
+ident(
+  def x "records.ml" 718 38022 38041 "records.ml" 718 38022 38126
+)
+"records.ml" 718 38022 38041 "records.ml" 718 38022 38068
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:bool -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_is_a_template
+)
+"records.ml" 718 38022 38069 "records.ml" 718 38022 38072
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 718 38022 38073 "records.ml" 718 38022 38083
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 718 38022 38084 "records.ml" 718 38022 38086
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 718 38022 38088 "records.ml" 718 38022 38107
+type(
+  string -> string -> bool
+)
+ident(
+  int_ref safe_bool_of_string "records.ml" 72 2718 2722 "records.ml" 72 2718 2741
+)
+"records.ml" 718 38022 38108 "records.ml" 718 38022 38123
+type(
+  string
+)
+"records.ml" 718 38022 38124 "records.ml" 718 38022 38125
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 718 38022 38036 "records.ml" 718 38022 38037
+)
+"records.ml" 718 38022 38087 "records.ml" 718 38022 38126
+type(
+  bool
+)
+"records.ml" 718 38022 38041 "records.ml" 718 38022 38126
+type(
+  unit
+)
+"records.ml" 718 38022 38031 "records.ml" 718 38022 38127
+type(
+  string -> unit
+)
+"records.ml" 718 38022 38128 "records.ml" 718 38022 38130
+type(
+  unit
+)
+"records.ml" 716 37922 37925 "records.ml" 718 38022 38130
+type(
+  field
+)
+"records.ml" 719 38132 38135 "records.ml" 719 38132 38145
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 719 38132 38152 "records.ml" 719 38132 38167
+type(
+  string
+)
+"records.ml" 720 38168 38182 "records.ml" 720 38168 38184
+type(
+  unit
+)
+"records.ml" 720 38168 38188 "records.ml" 720 38168 38202
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 720 38168 38204 "records.ml" 720 38168 38205
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 720 38168 38206 "records.ml" 720 38168 38208
+type(
+  unit
+)
+"records.ml" 720 38168 38203 "records.ml" 720 38168 38209
+type(
+  API.vM_t
+)
+"records.ml" 720 38168 38203 "records.ml" 720 38168 38230
+type(
+  bool
+)
+"records.ml" 720 38168 38188 "records.ml" 720 38168 38230
+type(
+  string
+)
+"records.ml" 720 38168 38177 "records.ml" 720 38168 38231
+type(
+  unit -> string
+)
+"records.ml" 720 38168 38232 "records.ml" 720 38168 38234
+type(
+  unit
+)
+"records.ml" 719 38132 38135 "records.ml" 720 38168 38234
+type(
+  field
+)
+"records.ml" 721 38236 38239 "records.ml" 721 38236 38249
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 721 38236 38256 "records.ml" 721 38236 38269
+type(
+  string
+)
+"records.ml" 722 38270 38284 "records.ml" 722 38270 38286
+type(
+  unit
+)
+"records.ml" 722 38270 38290 "records.ml" 722 38270 38307
+type(
+  API.ref_VM -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 722 38270 38309 "records.ml" 722 38270 38310
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 722 38270 38311 "records.ml" 722 38270 38313
+type(
+  unit
+)
+"records.ml" 722 38270 38308 "records.ml" 722 38270 38314
+type(
+  API.vM_t
+)
+"records.ml" 722 38270 38308 "records.ml" 722 38270 38333
+type(
+  API.ref_VM
+)
+"records.ml" 722 38270 38290 "records.ml" 722 38270 38333
+type(
+  string
+)
+"records.ml" 722 38270 38279 "records.ml" 722 38270 38334
+type(
+  unit -> string
+)
+"records.ml" 722 38270 38335 "records.ml" 722 38270 38337
+type(
+  unit
+)
+"records.ml" 721 38236 38239 "records.ml" 722 38270 38337
+type(
+  field
+)
+"records.ml" 723 38339 38342 "records.ml" 723 38339 38352
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 723 38339 38359 "records.ml" 723 38339 38370
+type(
+  string
+)
+"records.ml" 724 38371 38385 "records.ml" 724 38371 38387
+type(
+  unit
+)
+"records.ml" 724 38371 38391 "records.ml" 724 38371 38404
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 724 38371 38405 "records.ml" 724 38371 38409
+type(
+  string
+)
+"records.ml" 724 38371 38411 "records.ml" 724 38371 38419
+type(
+  ([ `VM ] Ref.t -> string) -> API.ref_VM_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 724 38371 38420 "records.ml" 724 38371 38437
+type(
+  [ `VM ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 724 38371 38439 "records.ml" 724 38371 38440
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 724 38371 38441 "records.ml" 724 38371 38443
+type(
+  unit
+)
+"records.ml" 724 38371 38438 "records.ml" 724 38371 38444
+type(
+  API.vM_t
+)
+"records.ml" 724 38371 38438 "records.ml" 724 38371 38461
+type(
+  API.ref_VM_set
+)
+"records.ml" 724 38371 38410 "records.ml" 724 38371 38462
+type(
+  string list
+)
+"records.ml" 724 38371 38391 "records.ml" 724 38371 38462
+type(
+  string
+)
+"records.ml" 724 38371 38380 "records.ml" 724 38371 38463
+type(
+  unit -> string
+)
+"records.ml" 724 38371 38464 "records.ml" 724 38371 38466
+type(
+  unit
+)
+"records.ml" 723 38339 38342 "records.ml" 724 38371 38466
+type(
+  field
+)
+"records.ml" 725 38468 38471 "records.ml" 725 38468 38481
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 725 38468 38488 "records.ml" 725 38468 38503
+type(
+  string
+)
+"records.ml" 726 38504 38518 "records.ml" 726 38504 38520
+type(
+  unit
+)
+"records.ml" 726 38504 38524 "records.ml" 726 38504 38538
+type(
+  API.datetime -> string
+)
+ident(
+  ext_ref Date.to_string
+)
+"records.ml" 726 38504 38540 "records.ml" 726 38504 38541
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 726 38504 38542 "records.ml" 726 38504 38544
+type(
+  unit
+)
+"records.ml" 726 38504 38539 "records.ml" 726 38504 38545
+type(
+  API.vM_t
+)
+"records.ml" 726 38504 38539 "records.ml" 726 38504 38566
+type(
+  API.datetime
+)
+"records.ml" 726 38504 38524 "records.ml" 726 38504 38566
+type(
+  string
+)
+"records.ml" 726 38504 38513 "records.ml" 726 38504 38567
+type(
+  unit -> string
+)
+"records.ml" 726 38504 38568 "records.ml" 726 38504 38570
+type(
+  unit
+)
+"records.ml" 725 38468 38471 "records.ml" 726 38504 38570
+type(
+  field
+)
+"records.ml" 727 38572 38575 "records.ml" 727 38572 38585
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 727 38572 38592 "records.ml" 727 38572 38619
+type(
+  string
+)
+"records.ml" 727 38572 38628 "records.ml" 727 38572 38632
+type(
+  bool
+)
+"records.ml" 728 38633 38647 "records.ml" 728 38633 38649
+type(
+  unit
+)
+"records.ml" 728 38633 38654 "records.ml" 728 38633 38655
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 728 38633 38655 "records.ml" 728 38633 38657
+type(
+  unit
+)
+"records.ml" 728 38633 38653 "records.ml" 728 38633 38658
+type(
+  API.vM_t
+)
+"records.ml" 728 38633 38653 "records.ml" 728 38633 38691
+type(
+  string
+)
+"records.ml" 728 38633 38642 "records.ml" 728 38633 38692
+type(
+  unit -> string
+)
+"records.ml" 728 38633 38693 "records.ml" 728 38633 38695
+type(
+  unit
+)
+"records.ml" 727 38572 38575 "records.ml" 728 38633 38695
+type(
+  field
+)
+"records.ml" 729 38697 38700 "records.ml" 729 38697 38710
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 729 38697 38717 "records.ml" 729 38697 38732
+type(
+  string
+)
+"records.ml" 730 38733 38747 "records.ml" 730 38733 38749
+type(
+  unit
+)
+"records.ml" 730 38733 38753 "records.ml" 730 38733 38779
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 730 38733 38780 "records.ml" 730 38733 38784
+type(
+  string
+)
+"records.ml" 730 38733 38786 "records.ml" 730 38733 38787
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 730 38733 38788 "records.ml" 730 38733 38790
+type(
+  unit
+)
+"records.ml" 730 38733 38785 "records.ml" 730 38733 38791
+type(
+  API.vM_t
+)
+"records.ml" 730 38733 38785 "records.ml" 730 38733 38812
+type(
+  API.string_to_string_map
+)
+"records.ml" 730 38733 38753 "records.ml" 730 38733 38812
+type(
+  string
+)
+"records.ml" 730 38733 38742 "records.ml" 730 38733 38813
+type(
+  unit -> string
+)
+"records.ml" 730 38733 38814 "records.ml" 730 38733 38816
+type(
+  unit
+)
+"records.ml" 729 38697 38700 "records.ml" 730 38733 38816
+type(
+  field
+)
+"records.ml" 731 38818 38821 "records.ml" 731 38818 38831
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 731 38818 38838 "records.ml" 731 38818 38846
+type(
+  string
+)
+"records.ml" 732 38847 38861 "records.ml" 732 38847 38863
+type(
+  unit
+)
+"records.ml" 732 38847 38867 "records.ml" 732 38847 38884
+type(
+  API.ref_VM -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 732 38847 38886 "records.ml" 732 38847 38887
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 732 38847 38887 "records.ml" 732 38847 38889
+type(
+  unit
+)
+"records.ml" 732 38847 38885 "records.ml" 732 38847 38890
+type(
+  API.vM_t
+)
+"records.ml" 732 38847 38885 "records.ml" 732 38847 38904
+type(
+  API.ref_VM
+)
+"records.ml" 732 38847 38867 "records.ml" 732 38847 38904
+type(
+  string
+)
+"records.ml" 732 38847 38856 "records.ml" 732 38847 38905
+type(
+  unit -> string
+)
+"records.ml" 732 38847 38906 "records.ml" 732 38847 38908
+type(
+  unit
+)
+"records.ml" 731 38818 38821 "records.ml" 732 38847 38908
+type(
+  field
+)
+"records.ml" 733 38910 38913 "records.ml" 733 38910 38923
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 733 38910 38930 "records.ml" 733 38910 38940
+type(
+  string
+)
+"records.ml" 734 38941 38955 "records.ml" 734 38941 38957
+type(
+  unit
+)
+"records.ml" 734 38941 38961 "records.ml" 734 38941 38974
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 734 38941 38975 "records.ml" 734 38941 38979
+type(
+  string
+)
+"records.ml" 734 38941 38981 "records.ml" 734 38941 38989
+type(
+  ([ `VM ] Ref.t -> string) -> API.ref_VM_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 734 38941 38990 "records.ml" 734 38941 39007
+type(
+  [ `VM ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 734 38941 39009 "records.ml" 734 38941 39010
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 734 38941 39011 "records.ml" 734 38941 39013
+type(
+  unit
+)
+"records.ml" 734 38941 39008 "records.ml" 734 38941 39014
+type(
+  API.vM_t
+)
+"records.ml" 734 38941 39008 "records.ml" 734 38941 39030
+type(
+  API.ref_VM_set
+)
+"records.ml" 734 38941 38980 "records.ml" 734 38941 39031
+type(
+  string list
+)
+"records.ml" 734 38941 38961 "records.ml" 734 38941 39031
+type(
+  string
+)
+"records.ml" 734 38941 38950 "records.ml" 734 38941 39032
+type(
+  unit -> string
+)
+"records.ml" 734 38941 39033 "records.ml" 734 38941 39035
+type(
+  unit
+)
+"records.ml" 733 38910 38913 "records.ml" 734 38941 39035
+type(
+  field
+)
+"records.ml" 735 39037 39040 "records.ml" 735 39037 39050
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 735 39037 39057 "records.ml" 735 39037 39076
+type(
+  string
+)
+"records.ml" 736 39077 39091 "records.ml" 736 39077 39093
+type(
+  unit
+)
+"records.ml" 736 39077 39097 "records.ml" 736 39077 39111
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 736 39077 39113 "records.ml" 736 39077 39114
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 736 39077 39115 "records.ml" 736 39077 39117
+type(
+  unit
+)
+"records.ml" 736 39077 39112 "records.ml" 736 39077 39118
+type(
+  API.vM_t
+)
+"records.ml" 736 39077 39112 "records.ml" 736 39077 39143
+type(
+  bool
+)
+"records.ml" 736 39077 39097 "records.ml" 736 39077 39143
+type(
+  string
+)
+"records.ml" 736 39077 39086 "records.ml" 736 39077 39144
+type(
+  unit -> string
+)
+"records.ml" 736 39077 39145 "records.ml" 736 39077 39147
+type(
+  unit
+)
+"records.ml" 735 39037 39040 "records.ml" 736 39077 39147
+type(
+  field
+)
+"records.ml" 737 39149 39152 "records.ml" 737 39149 39162
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 737 39149 39169 "records.ml" 737 39149 39182
+type(
+  string
+)
+"records.ml" 738 39183 39197 "records.ml" 738 39183 39199
+type(
+  unit
+)
+"records.ml" 738 39183 39203 "records.ml" 738 39183 39230
+type(
+  API.vm_power_state -> string
+)
+ident(
+  ext_ref Record_util.power_to_string
+)
+"records.ml" 738 39183 39232 "records.ml" 738 39183 39233
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 738 39183 39234 "records.ml" 738 39183 39236
+type(
+  unit
+)
+"records.ml" 738 39183 39231 "records.ml" 738 39183 39237
+type(
+  API.vM_t
+)
+"records.ml" 738 39183 39231 "records.ml" 738 39183 39256
+type(
+  API.vm_power_state
+)
+"records.ml" 738 39183 39203 "records.ml" 738 39183 39256
+type(
+  string
+)
+"records.ml" 738 39183 39192 "records.ml" 738 39183 39257
+type(
+  unit -> string
+)
+"records.ml" 738 39183 39258 "records.ml" 738 39183 39260
+type(
+  unit
+)
+"records.ml" 737 39149 39152 "records.ml" 738 39183 39260
+type(
+  field
+)
+"records.ml" 739 39262 39265 "records.ml" 739 39262 39275
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 739 39262 39282 "records.ml" 739 39262 39297
+type(
+  string
+)
+"records.ml" 740 39298 39312 "records.ml" 740 39298 39314
+type(
+  unit
+)
+"records.ml" 740 39298 39318 "records.ml" 740 39298 39325
+type(
+  string -> string option -> string
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 740 39298 39326 "records.ml" 740 39298 39329
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 740 39298 39331 "records.ml" 740 39298 39334
+type(
+  (API.vM_metrics_t -> string) -> API.vM_metrics_t option -> string option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 740 39298 39340 "records.ml" 740 39298 39341
+type(
+  API.vM_metrics_t
+)
+ident(
+  def m "records.ml" 740 39298 39345 "records.ml" 740 39298 39391
+)
+"records.ml" 740 39298 39345 "records.ml" 740 39298 39360
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 740 39298 39361 "records.ml" 740 39298 39362
+type(
+  API.vM_metrics_t
+)
+ident(
+  int_ref m "records.ml" 740 39298 39340 "records.ml" 740 39298 39341
+)
+"records.ml" 740 39298 39361 "records.ml" 740 39298 39391
+type(
+  int64
+)
+"records.ml" 740 39298 39345 "records.ml" 740 39298 39391
+type(
+  string
+)
+"records.ml" 740 39298 39335 "records.ml" 740 39298 39392
+type(
+  API.vM_metrics_t -> string
+)
+"records.ml" 740 39298 39394 "records.ml" 740 39298 39396
+type(
+  unit -> API.vM_metrics_t option
+)
+ident(
+  int_ref xm "records.ml" 674 36254 36259 "records.ml" 674 36254 36261
+)
+"records.ml" 740 39298 39397 "records.ml" 740 39298 39399
+type(
+  unit
+)
+"records.ml" 740 39298 39393 "records.ml" 740 39298 39400
+type(
+  API.vM_metrics_t option
+)
+"records.ml" 740 39298 39330 "records.ml" 740 39298 39402
+type(
+  string option
+)
+"records.ml" 740 39298 39318 "records.ml" 740 39298 39402
+type(
+  string
+)
+"records.ml" 740 39298 39307 "records.ml" 740 39298 39403
+type(
+  unit -> string
+)
+"records.ml" 740 39298 39404 "records.ml" 740 39298 39406
+type(
+  unit
+)
+"records.ml" 739 39262 39265 "records.ml" 740 39298 39406
+type(
+  field
+)
+"records.ml" 741 39408 39411 "records.ml" 741 39408 39421
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 741 39408 39428 "records.ml" 741 39408 39443
+type(
+  string
+)
+"records.ml" 741 39408 39455 "records.ml" 741 39408 39459
+type(
+  bool
+)
+"records.ml" 742 39460 39474 "records.ml" 742 39460 39476
+type(
+  unit
+)
+"records.ml" 742 39460 39480 "records.ml" 742 39460 39497
+type(
+  unit -> string
+)
+ident(
+  int_ref get_memory_target "records.ml" 685 36812 36817 "records.ml" 685 36812 36834
+)
+"records.ml" 742 39460 39498 "records.ml" 742 39460 39500
+type(
+  unit
+)
+"records.ml" 742 39460 39480 "records.ml" 742 39460 39500
+type(
+  string
+)
+"records.ml" 742 39460 39469 "records.ml" 742 39460 39501
+type(
+  unit -> string
+)
+"records.ml" 742 39460 39502 "records.ml" 742 39460 39504
+type(
+  unit
+)
+"records.ml" 741 39408 39411 "records.ml" 742 39460 39504
+type(
+  field
+)
+"records.ml" 743 39506 39509 "records.ml" 743 39506 39519
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 743 39506 39526 "records.ml" 743 39506 39543
+type(
+  string
+)
+"records.ml" 744 39544 39558 "records.ml" 744 39544 39560
+type(
+  unit
+)
+"records.ml" 744 39544 39564 "records.ml" 744 39544 39579
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 744 39544 39581 "records.ml" 744 39544 39582
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 744 39544 39583 "records.ml" 744 39544 39585
+type(
+  unit
+)
+"records.ml" 744 39544 39580 "records.ml" 744 39544 39586
+type(
+  API.vM_t
+)
+"records.ml" 744 39544 39580 "records.ml" 744 39544 39609
+type(
+  int64
+)
+"records.ml" 744 39544 39564 "records.ml" 744 39544 39609
+type(
+  string
+)
+"records.ml" 744 39544 39553 "records.ml" 744 39544 39610
+type(
+  unit -> string
+)
+"records.ml" 744 39544 39611 "records.ml" 744 39544 39613
+type(
+  unit
+)
+"records.ml" 743 39506 39509 "records.ml" 744 39544 39613
+type(
+  field
+)
+"records.ml" 745 39615 39618 "records.ml" 745 39615 39628
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 745 39615 39635 "records.ml" 745 39615 39654
+type(
+  string
+)
+"records.ml" 746 39655 39669 "records.ml" 746 39655 39671
+type(
+  unit
+)
+"records.ml" 746 39655 39675 "records.ml" 746 39655 39690
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 746 39655 39692 "records.ml" 746 39655 39693
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 746 39655 39694 "records.ml" 746 39655 39696
+type(
+  unit
+)
+"records.ml" 746 39655 39691 "records.ml" 746 39655 39697
+type(
+  API.vM_t
+)
+"records.ml" 746 39655 39691 "records.ml" 746 39655 39722
+type(
+  int64
+)
+"records.ml" 746 39655 39675 "records.ml" 746 39655 39722
+type(
+  string
+)
+"records.ml" 746 39655 39664 "records.ml" 746 39655 39723
+type(
+  unit -> string
+)
+"records.ml" 747 39724 39738 "records.ml" 747 39724 39739
+type(
+  string
+)
+ident(
+  def x "records.ml" 747 39724 39743 "records.ml" 747 39724 39844
+)
+"records.ml" 747 39724 39743 "records.ml" 747 39724 39774
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:int64 -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_memory_static_max
+)
+"records.ml" 747 39724 39775 "records.ml" 747 39724 39778
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 747 39724 39779 "records.ml" 747 39724 39789
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 747 39724 39790 "records.ml" 747 39724 39792
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 747 39724 39794 "records.ml" 747 39724 39821
+type(
+  string -> string -> int64
+)
+ident(
+  ext_ref Record_util.bytes_of_string
+)
+"records.ml" 747 39724 39822 "records.ml" 747 39724 39841
+type(
+  string
+)
+"records.ml" 747 39724 39842 "records.ml" 747 39724 39843
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 747 39724 39738 "records.ml" 747 39724 39739
+)
+"records.ml" 747 39724 39793 "records.ml" 747 39724 39844
+type(
+  int64
+)
+"records.ml" 747 39724 39743 "records.ml" 747 39724 39844
+type(
+  unit
+)
+"records.ml" 747 39724 39733 "records.ml" 747 39724 39845
+type(
+  string -> unit
+)
+"records.ml" 747 39724 39846 "records.ml" 747 39724 39848
+type(
+  unit
+)
+"records.ml" 745 39615 39618 "records.ml" 747 39724 39848
+type(
+  field
+)
+"records.ml" 748 39850 39853 "records.ml" 748 39850 39863
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 748 39850 39870 "records.ml" 748 39850 39890
+type(
+  string
+)
+"records.ml" 749 39891 39905 "records.ml" 749 39891 39907
+type(
+  unit
+)
+"records.ml" 749 39891 39911 "records.ml" 749 39891 39926
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 749 39891 39928 "records.ml" 749 39891 39929
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 749 39891 39930 "records.ml" 749 39891 39932
+type(
+  unit
+)
+"records.ml" 749 39891 39927 "records.ml" 749 39891 39933
+type(
+  API.vM_t
+)
+"records.ml" 749 39891 39927 "records.ml" 749 39891 39959
+type(
+  int64
+)
+"records.ml" 749 39891 39911 "records.ml" 749 39891 39959
+type(
+  string
+)
+"records.ml" 749 39891 39900 "records.ml" 749 39891 39960
+type(
+  unit -> string
+)
+"records.ml" 750 39961 39975 "records.ml" 750 39961 39976
+type(
+  string
+)
+ident(
+  def x "records.ml" 750 39961 39980 "records.ml" 750 39961 40083
+)
+"records.ml" 750 39961 39980 "records.ml" 750 39961 40012
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:int64 -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_memory_dynamic_max
+)
+"records.ml" 750 39961 40013 "records.ml" 750 39961 40016
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 750 39961 40017 "records.ml" 750 39961 40027
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 750 39961 40028 "records.ml" 750 39961 40030
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 750 39961 40032 "records.ml" 750 39961 40059
+type(
+  string -> string -> int64
+)
+ident(
+  ext_ref Record_util.bytes_of_string
+)
+"records.ml" 750 39961 40060 "records.ml" 750 39961 40080
+type(
+  string
+)
+"records.ml" 750 39961 40081 "records.ml" 750 39961 40082
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 750 39961 39975 "records.ml" 750 39961 39976
+)
+"records.ml" 750 39961 40031 "records.ml" 750 39961 40083
+type(
+  int64
+)
+"records.ml" 750 39961 39980 "records.ml" 750 39961 40083
+type(
+  unit
+)
+"records.ml" 750 39961 39970 "records.ml" 750 39961 40084
+type(
+  string -> unit
+)
+"records.ml" 750 39961 40085 "records.ml" 750 39961 40087
+type(
+  unit
+)
+"records.ml" 748 39850 39853 "records.ml" 750 39961 40087
+type(
+  field
+)
+"records.ml" 751 40089 40092 "records.ml" 751 40089 40102
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 751 40089 40109 "records.ml" 751 40089 40129
+type(
+  string
+)
+"records.ml" 752 40130 40144 "records.ml" 752 40130 40146
+type(
+  unit
+)
+"records.ml" 752 40130 40150 "records.ml" 752 40130 40165
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 752 40130 40167 "records.ml" 752 40130 40168
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 752 40130 40169 "records.ml" 752 40130 40171
+type(
+  unit
+)
+"records.ml" 752 40130 40166 "records.ml" 752 40130 40172
+type(
+  API.vM_t
+)
+"records.ml" 752 40130 40166 "records.ml" 752 40130 40198
+type(
+  int64
+)
+"records.ml" 752 40130 40150 "records.ml" 752 40130 40198
+type(
+  string
+)
+"records.ml" 752 40130 40139 "records.ml" 752 40130 40199
+type(
+  unit -> string
+)
+"records.ml" 753 40200 40214 "records.ml" 753 40200 40215
+type(
+  string
+)
+ident(
+  def x "records.ml" 753 40200 40219 "records.ml" 753 40200 40322
+)
+"records.ml" 753 40200 40219 "records.ml" 753 40200 40251
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:int64 -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_memory_dynamic_min
+)
+"records.ml" 753 40200 40252 "records.ml" 753 40200 40255
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 753 40200 40256 "records.ml" 753 40200 40266
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 753 40200 40267 "records.ml" 753 40200 40269
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 753 40200 40271 "records.ml" 753 40200 40298
+type(
+  string -> string -> int64
+)
+ident(
+  ext_ref Record_util.bytes_of_string
+)
+"records.ml" 753 40200 40299 "records.ml" 753 40200 40319
+type(
+  string
+)
+"records.ml" 753 40200 40320 "records.ml" 753 40200 40321
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 753 40200 40214 "records.ml" 753 40200 40215
+)
+"records.ml" 753 40200 40270 "records.ml" 753 40200 40322
+type(
+  int64
+)
+"records.ml" 753 40200 40219 "records.ml" 753 40200 40322
+type(
+  unit
+)
+"records.ml" 753 40200 40209 "records.ml" 753 40200 40323
+type(
+  string -> unit
+)
+"records.ml" 753 40200 40324 "records.ml" 753 40200 40326
+type(
+  unit
+)
+"records.ml" 751 40089 40092 "records.ml" 753 40200 40326
+type(
+  field
+)
+"records.ml" 754 40328 40331 "records.ml" 754 40328 40341
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 754 40328 40348 "records.ml" 754 40328 40367
+type(
+  string
+)
+"records.ml" 755 40368 40382 "records.ml" 755 40368 40384
+type(
+  unit
+)
+"records.ml" 755 40368 40388 "records.ml" 755 40368 40403
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 755 40368 40405 "records.ml" 755 40368 40406
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 755 40368 40407 "records.ml" 755 40368 40409
+type(
+  unit
+)
+"records.ml" 755 40368 40404 "records.ml" 755 40368 40410
+type(
+  API.vM_t
+)
+"records.ml" 755 40368 40404 "records.ml" 755 40368 40435
+type(
+  int64
+)
+"records.ml" 755 40368 40388 "records.ml" 755 40368 40435
+type(
+  string
+)
+"records.ml" 755 40368 40377 "records.ml" 755 40368 40436
+type(
+  unit -> string
+)
+"records.ml" 756 40437 40451 "records.ml" 756 40437 40452
+type(
+  string
+)
+ident(
+  def x "records.ml" 756 40437 40456 "records.ml" 756 40437 40557
+)
+"records.ml" 756 40437 40456 "records.ml" 756 40437 40487
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:int64 -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_memory_static_min
+)
+"records.ml" 756 40437 40488 "records.ml" 756 40437 40491
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 756 40437 40492 "records.ml" 756 40437 40502
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 756 40437 40503 "records.ml" 756 40437 40505
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 756 40437 40507 "records.ml" 756 40437 40534
+type(
+  string -> string -> int64
+)
+ident(
+  ext_ref Record_util.bytes_of_string
+)
+"records.ml" 756 40437 40535 "records.ml" 756 40437 40554
+type(
+  string
+)
+"records.ml" 756 40437 40555 "records.ml" 756 40437 40556
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 756 40437 40451 "records.ml" 756 40437 40452
+)
+"records.ml" 756 40437 40506 "records.ml" 756 40437 40557
+type(
+  int64
+)
+"records.ml" 756 40437 40456 "records.ml" 756 40437 40557
+type(
+  unit
+)
+"records.ml" 756 40437 40446 "records.ml" 756 40437 40558
+type(
+  string -> unit
+)
+"records.ml" 756 40437 40559 "records.ml" 756 40437 40561
+type(
+  unit
+)
+"records.ml" 754 40328 40331 "records.ml" 756 40437 40561
+type(
+  field
+)
+"records.ml" 757 40563 40566 "records.ml" 757 40563 40576
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 757 40563 40583 "records.ml" 757 40563 40601
+type(
+  string
+)
+"records.ml" 758 40602 40616 "records.ml" 758 40602 40618
+type(
+  unit
+)
+"records.ml" 758 40602 40622 "records.ml" 758 40602 40639
+type(
+  API.ref_VDI -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 758 40602 40641 "records.ml" 758 40602 40642
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 758 40602 40643 "records.ml" 758 40602 40645
+type(
+  unit
+)
+"records.ml" 758 40602 40640 "records.ml" 758 40602 40646
+type(
+  API.vM_t
+)
+"records.ml" 758 40602 40640 "records.ml" 758 40602 40665
+type(
+  API.ref_VDI
+)
+"records.ml" 758 40602 40622 "records.ml" 758 40602 40665
+type(
+  string
+)
+"records.ml" 758 40602 40611 "records.ml" 758 40602 40666
+type(
+  unit -> string
+)
+"records.ml" 759 40667 40681 "records.ml" 759 40667 40682
+type(
+  string
+)
+ident(
+  def x "records.ml" 759 40667 40686 "records.ml" 759 40667 40771
+)
+"records.ml" 759 40667 40686 "records.ml" 759 40667 40711
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:API.ref_VDI -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_suspend_VDI
+)
+"records.ml" 759 40667 40712 "records.ml" 759 40667 40715
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 759 40667 40716 "records.ml" 759 40667 40726
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 759 40667 40727 "records.ml" 759 40667 40729
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 759 40667 40731 "records.ml" 759 40667 40753
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> uuid:string -> API.ref_VDI
+)
+ident(
+  ext_ref Client.( Client ).( VDI ).get_by_uuid
+)
+"records.ml" 759 40667 40754 "records.ml" 759 40667 40757
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 759 40667 40758 "records.ml" 759 40667 40768
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 759 40667 40769 "records.ml" 759 40667 40770
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 759 40667 40681 "records.ml" 759 40667 40682
+)
+"records.ml" 759 40667 40730 "records.ml" 759 40667 40771
+type(
+  API.ref_VDI
+)
+"records.ml" 759 40667 40686 "records.ml" 759 40667 40771
+type(
+  unit
+)
+"records.ml" 759 40667 40676 "records.ml" 759 40667 40772
+type(
+  string -> unit
+)
+"records.ml" 759 40667 40773 "records.ml" 759 40667 40775
+type(
+  unit
+)
+"records.ml" 757 40563 40566 "records.ml" 759 40667 40775
+type(
+  field
+)
+"records.ml" 760 40777 40780 "records.ml" 760 40777 40790
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 760 40777 40797 "records.ml" 760 40777 40814
+type(
+  string
+)
+"records.ml" 761 40815 40829 "records.ml" 761 40815 40831
+type(
+  unit
+)
+"records.ml" 761 40815 40835 "records.ml" 761 40815 40852
+type(
+  API.ref_SR -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 761 40815 40854 "records.ml" 761 40815 40855
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 761 40815 40856 "records.ml" 761 40815 40858
+type(
+  unit
+)
+"records.ml" 761 40815 40853 "records.ml" 761 40815 40859
+type(
+  API.vM_t
+)
+"records.ml" 761 40815 40853 "records.ml" 761 40815 40877
+type(
+  API.ref_SR
+)
+"records.ml" 761 40815 40835 "records.ml" 761 40815 40877
+type(
+  string
+)
+"records.ml" 761 40815 40824 "records.ml" 761 40815 40878
+type(
+  unit -> string
+)
+"records.ml" 762 40879 40893 "records.ml" 762 40879 40894
+type(
+  string
+)
+ident(
+  def x "records.ml" 762 40879 40898 "records.ml" 762 40879 40981
+)
+"records.ml" 762 40879 40898 "records.ml" 762 40879 40922
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:API.ref_SR -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_suspend_SR
+)
+"records.ml" 762 40879 40923 "records.ml" 762 40879 40926
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 762 40879 40927 "records.ml" 762 40879 40937
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 762 40879 40938 "records.ml" 762 40879 40940
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 762 40879 40942 "records.ml" 762 40879 40963
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> uuid:string -> API.ref_SR
+)
+ident(
+  ext_ref Client.( Client ).( SR ).get_by_uuid
+)
+"records.ml" 762 40879 40964 "records.ml" 762 40879 40967
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 762 40879 40968 "records.ml" 762 40879 40978
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 762 40879 40979 "records.ml" 762 40879 40980
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 762 40879 40893 "records.ml" 762 40879 40894
+)
+"records.ml" 762 40879 40941 "records.ml" 762 40879 40981
+type(
+  API.ref_SR
+)
+"records.ml" 762 40879 40898 "records.ml" 762 40879 40981
+type(
+  unit
+)
+"records.ml" 762 40879 40888 "records.ml" 762 40879 40982
+type(
+  string -> unit
+)
+"records.ml" 762 40879 40983 "records.ml" 762 40879 40985
+type(
+  unit
+)
+"records.ml" 760 40777 40780 "records.ml" 762 40879 40985
+type(
+  field
+)
+"records.ml" 763 40987 40990 "records.ml" 763 40987 41000
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 763 40987 41007 "records.ml" 763 40987 41021
+type(
+  string
+)
+"records.ml" 764 41022 41036 "records.ml" 764 41022 41038
+type(
+  unit
+)
+"records.ml" 764 41022 41042 "records.ml" 764 41022 41068
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 764 41022 41069 "records.ml" 764 41022 41073
+type(
+  string
+)
+"records.ml" 764 41022 41075 "records.ml" 764 41022 41076
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 764 41022 41077 "records.ml" 764 41022 41079
+type(
+  unit
+)
+"records.ml" 764 41022 41074 "records.ml" 764 41022 41080
+type(
+  API.vM_t
+)
+"records.ml" 764 41022 41074 "records.ml" 764 41022 41100
+type(
+  API.string_to_string_map
+)
+"records.ml" 764 41022 41042 "records.ml" 764 41022 41100
+type(
+  string
+)
+"records.ml" 764 41022 41031 "records.ml" 764 41022 41101
+type(
+  unit -> string
+)
+"records.ml" 765 41102 41123 "records.ml" 765 41102 41124
+type(
+  string
+)
+ident(
+  def k "records.ml" 765 41102 41125 "records.ml" 767 41231 41349
+)
+"records.ml" 765 41102 41125 "records.ml" 765 41102 41126
+type(
+  string
+)
+ident(
+  def v "records.ml" 765 41102 41130 "records.ml" 767 41231 41349
+)
+"records.ml" 765 41102 41136 "records.ml" 765 41102 41137
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 765 41102 41123 "records.ml" 765 41102 41124
+)
+"records.ml" 766 41143 41150 "records.ml" 766 41143 41158
+type(
+  string
+)
+"records.ml" 766 41143 41161 "records.ml" 766 41143 41166
+type(
+  string
+)
+"records.ml" 766 41143 41150 "records.ml" 766 41143 41166
+type(
+  string
+)
+"records.ml" 766 41143 41169 "records.ml" 766 41143 41175
+type(
+  string
+)
+"records.ml" 766 41143 41150 "records.ml" 766 41143 41175
+type(
+  string
+)
+"records.ml" 766 41143 41179 "records.ml" 766 41143 41208
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VM -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).add_to_VCPUs_params
+)
+"records.ml" 766 41143 41209 "records.ml" 766 41143 41212
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 766 41143 41213 "records.ml" 766 41143 41223
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 766 41143 41224 "records.ml" 766 41143 41226
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 766 41143 41227 "records.ml" 766 41143 41228
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 765 41102 41123 "records.ml" 765 41102 41124
+)
+"records.ml" 766 41143 41229 "records.ml" 766 41143 41230
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 765 41102 41125 "records.ml" 765 41102 41126
+)
+"records.ml" 766 41143 41179 "records.ml" 766 41143 41230
+type(
+  unit
+)
+"records.ml" 767 41231 41238 "records.ml" 767 41231 41239
+type(
+  string
+)
+"records.ml" 767 41231 41243 "records.ml" 767 41231 41248
+type(
+  exn -> unit
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"records.ml" 767 41231 41278 "records.ml" 767 41231 41305
+type(
+  string
+)
+"records.ml" 767 41231 41305 "records.ml" 767 41231 41306
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"records.ml" 767 41231 41306 "records.ml" 767 41231 41307
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 765 41102 41123 "records.ml" 765 41102 41124
+)
+"records.ml" 767 41231 41307 "records.ml" 767 41231 41308
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"records.ml" 767 41231 41308 "records.ml" 767 41231 41347
+type(
+  string
+)
+"records.ml" 767 41231 41306 "records.ml" 767 41231 41347
+type(
+  string
+)
+"records.ml" 767 41231 41277 "records.ml" 767 41231 41348
+type(
+  string
+)
+"records.ml" 767 41231 41249 "records.ml" 767 41231 41349
+type(
+  exn
+)
+"records.ml" 767 41231 41243 "records.ml" 767 41231 41349
+type(
+  unit
+)
+"records.ml" 765 41102 41130 "records.ml" 767 41231 41349
+type(
+  unit
+)
+"records.ml" 765 41102 41118 "records.ml" 767 41231 41350
+type(
+  string -> string -> unit
+)
+"records.ml" 768 41351 41377 "records.ml" 768 41351 41378
+type(
+  string
+)
+ident(
+  def k "records.ml" 768 41351 41382 "records.ml" 768 41351 41436
+)
+"records.ml" 768 41351 41382 "records.ml" 768 41351 41416
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).remove_from_VCPUs_params
+)
+"records.ml" 768 41351 41417 "records.ml" 768 41351 41420
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 768 41351 41421 "records.ml" 768 41351 41431
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 768 41351 41432 "records.ml" 768 41351 41434
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 768 41351 41435 "records.ml" 768 41351 41436
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 768 41351 41377 "records.ml" 768 41351 41378
+)
+"records.ml" 768 41351 41382 "records.ml" 768 41351 41436
+type(
+  unit
+)
+"records.ml" 768 41351 41372 "records.ml" 768 41351 41437
+type(
+  string -> unit
+)
+"records.ml" 769 41439 41457 "records.ml" 769 41439 41459
+type(
+  unit
+)
+"records.ml" 769 41439 41464 "records.ml" 769 41439 41465
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 769 41439 41466 "records.ml" 769 41439 41468
+type(
+  unit
+)
+"records.ml" 769 41439 41463 "records.ml" 769 41439 41469
+type(
+  API.vM_t
+)
+"records.ml" 769 41439 41463 "records.ml" 769 41439 41489
+type(
+  API.string_to_string_map
+)
+"records.ml" 769 41439 41452 "records.ml" 769 41439 41490
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 769 41439 41491 "records.ml" 769 41439 41493
+type(
+  unit
+)
+"records.ml" 763 40987 40990 "records.ml" 769 41439 41493
+type(
+  field
+)
+"records.ml" 770 41495 41498 "records.ml" 770 41495 41508
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 770 41495 41515 "records.ml" 770 41495 41526
+type(
+  string
+)
+"records.ml" 771 41527 41541 "records.ml" 771 41527 41543
+type(
+  unit
+)
+"records.ml" 771 41527 41547 "records.ml" 771 41527 41562
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 771 41527 41564 "records.ml" 771 41527 41565
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 771 41527 41566 "records.ml" 771 41527 41568
+type(
+  unit
+)
+"records.ml" 771 41527 41563 "records.ml" 771 41527 41569
+type(
+  API.vM_t
+)
+"records.ml" 771 41527 41563 "records.ml" 771 41527 41586
+type(
+  int64
+)
+"records.ml" 771 41527 41547 "records.ml" 771 41527 41586
+type(
+  string
+)
+"records.ml" 771 41527 41536 "records.ml" 771 41527 41587
+type(
+  unit -> string
+)
+"records.ml" 772 41588 41602 "records.ml" 772 41588 41603
+type(
+  string
+)
+ident(
+  def x "records.ml" 772 41588 41607 "records.ml" 772 41588 41683
+)
+"records.ml" 772 41588 41607 "records.ml" 772 41588 41630
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:int64 -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_VCPUs_max
+)
+"records.ml" 772 41588 41631 "records.ml" 772 41588 41634
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 772 41588 41635 "records.ml" 772 41588 41645
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 772 41588 41646 "records.ml" 772 41588 41648
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 772 41588 41650 "records.ml" 772 41588 41668
+type(
+  string -> string -> int64
+)
+ident(
+  int_ref safe_i64_of_string "records.ml" 69 2547 2551 "records.ml" 69 2547 2569
+)
+"records.ml" 772 41588 41669 "records.ml" 772 41588 41680
+type(
+  string
+)
+"records.ml" 772 41588 41681 "records.ml" 772 41588 41682
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 772 41588 41602 "records.ml" 772 41588 41603
+)
+"records.ml" 772 41588 41649 "records.ml" 772 41588 41683
+type(
+  int64
+)
+"records.ml" 772 41588 41607 "records.ml" 772 41588 41683
+type(
+  unit
+)
+"records.ml" 772 41588 41597 "records.ml" 772 41588 41684
+type(
+  string -> unit
+)
+"records.ml" 772 41588 41685 "records.ml" 772 41588 41687
+type(
+  unit
+)
+"records.ml" 770 41495 41498 "records.ml" 772 41588 41687
+type(
+  field
+)
+"records.ml" 773 41689 41692 "records.ml" 773 41689 41702
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 773 41689 41709 "records.ml" 773 41689 41727
+type(
+  string
+)
+"records.ml" 774 41728 41742 "records.ml" 774 41728 41744
+type(
+  unit
+)
+"records.ml" 774 41728 41748 "records.ml" 774 41728 41763
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 774 41728 41765 "records.ml" 774 41728 41766
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 774 41728 41767 "records.ml" 774 41728 41769
+type(
+  unit
+)
+"records.ml" 774 41728 41764 "records.ml" 774 41728 41770
+type(
+  API.vM_t
+)
+"records.ml" 774 41728 41764 "records.ml" 774 41728 41794
+type(
+  int64
+)
+"records.ml" 774 41728 41748 "records.ml" 774 41728 41794
+type(
+  string
+)
+"records.ml" 774 41728 41737 "records.ml" 774 41728 41795
+type(
+  unit -> string
+)
+"records.ml" 775 41796 41810 "records.ml" 775 41796 41811
+type(
+  string
+)
+ident(
+  def x "records.ml" 775 41796 41815 "records.ml" 775 41796 41905
+)
+"records.ml" 775 41796 41815 "records.ml" 775 41796 41845
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:int64 -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_VCPUs_at_startup
+)
+"records.ml" 775 41796 41846 "records.ml" 775 41796 41849
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 775 41796 41850 "records.ml" 775 41796 41860
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 775 41796 41861 "records.ml" 775 41796 41863
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 775 41796 41865 "records.ml" 775 41796 41883
+type(
+  string -> string -> int64
+)
+ident(
+  int_ref safe_i64_of_string "records.ml" 69 2547 2551 "records.ml" 69 2547 2569
+)
+"records.ml" 775 41796 41884 "records.ml" 775 41796 41902
+type(
+  string
+)
+"records.ml" 775 41796 41903 "records.ml" 775 41796 41904
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 775 41796 41810 "records.ml" 775 41796 41811
+)
+"records.ml" 775 41796 41864 "records.ml" 775 41796 41905
+type(
+  int64
+)
+"records.ml" 775 41796 41815 "records.ml" 775 41796 41905
+type(
+  unit
+)
+"records.ml" 775 41796 41805 "records.ml" 775 41796 41906
+type(
+  string -> unit
+)
+"records.ml" 775 41796 41907 "records.ml" 775 41796 41909
+type(
+  unit
+)
+"records.ml" 773 41689 41692 "records.ml" 775 41796 41909
+type(
+  field
+)
+"records.ml" 776 41911 41914 "records.ml" 776 41911 41924
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 776 41911 41931 "records.ml" 776 41911 41955
+type(
+  string
+)
+"records.ml" 777 41956 41970 "records.ml" 777 41956 41972
+type(
+  unit
+)
+"records.ml" 777 41956 41976 "records.ml" 777 41956 42012
+type(
+  API.on_normal_exit -> string
+)
+ident(
+  ext_ref Record_util.on_normal_exit_to_string
+)
+"records.ml" 777 41956 42014 "records.ml" 777 41956 42015
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 777 41956 42016 "records.ml" 777 41956 42018
+type(
+  unit
+)
+"records.ml" 777 41956 42013 "records.ml" 777 41956 42019
+type(
+  API.vM_t
+)
+"records.ml" 777 41956 42013 "records.ml" 777 41956 42049
+type(
+  API.on_normal_exit
+)
+"records.ml" 777 41956 41976 "records.ml" 777 41956 42049
+type(
+  string
+)
+"records.ml" 777 41956 41965 "records.ml" 777 41956 42050
+type(
+  unit -> string
+)
+"records.ml" 778 42051 42065 "records.ml" 778 42051 42066
+type(
+  string
+)
+ident(
+  def x "records.ml" 778 42051 42070 "records.ml" 778 42051 42165
+)
+"records.ml" 778 42051 42070 "records.ml" 778 42051 42106
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VM -> value:API.on_normal_exit -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_actions_after_shutdown
+)
+"records.ml" 778 42051 42107 "records.ml" 778 42051 42110
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 778 42051 42111 "records.ml" 778 42051 42121
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 778 42051 42122 "records.ml" 778 42051 42124
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 778 42051 42126 "records.ml" 778 42051 42162
+type(
+  string -> API.on_normal_exit
+)
+ident(
+  ext_ref Record_util.string_to_on_normal_exit
+)
+"records.ml" 778 42051 42163 "records.ml" 778 42051 42164
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 778 42051 42065 "records.ml" 778 42051 42066
+)
+"records.ml" 778 42051 42125 "records.ml" 778 42051 42165
+type(
+  API.on_normal_exit
+)
+"records.ml" 778 42051 42070 "records.ml" 778 42051 42165
+type(
+  unit
+)
+"records.ml" 778 42051 42060 "records.ml" 778 42051 42166
+type(
+  string -> unit
+)
+"records.ml" 778 42051 42167 "records.ml" 778 42051 42169
+type(
+  unit
+)
+"records.ml" 776 41911 41914 "records.ml" 778 42051 42169
+type(
+  field
+)
+"records.ml" 779 42171 42174 "records.ml" 779 42171 42184
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 779 42171 42191 "records.ml" 779 42171 42213
+type(
+  string
+)
+"records.ml" 780 42214 42228 "records.ml" 780 42214 42230
+type(
+  unit
+)
+"records.ml" 780 42214 42234 "records.ml" 780 42214 42270
+type(
+  API.on_normal_exit -> string
+)
+ident(
+  ext_ref Record_util.on_normal_exit_to_string
+)
+"records.ml" 780 42214 42272 "records.ml" 780 42214 42273
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 780 42214 42274 "records.ml" 780 42214 42276
+type(
+  unit
+)
+"records.ml" 780 42214 42271 "records.ml" 780 42214 42277
+type(
+  API.vM_t
+)
+"records.ml" 780 42214 42271 "records.ml" 780 42214 42305
+type(
+  API.on_normal_exit
+)
+"records.ml" 780 42214 42234 "records.ml" 780 42214 42305
+type(
+  string
+)
+"records.ml" 780 42214 42223 "records.ml" 780 42214 42306
+type(
+  unit -> string
+)
+"records.ml" 781 42307 42321 "records.ml" 781 42307 42322
+type(
+  string
+)
+ident(
+  def x "records.ml" 781 42307 42326 "records.ml" 781 42307 42419
+)
+"records.ml" 781 42307 42326 "records.ml" 781 42307 42360
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VM -> value:API.on_normal_exit -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_actions_after_reboot
+)
+"records.ml" 781 42307 42361 "records.ml" 781 42307 42364
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 781 42307 42365 "records.ml" 781 42307 42375
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 781 42307 42376 "records.ml" 781 42307 42378
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 781 42307 42380 "records.ml" 781 42307 42416
+type(
+  string -> API.on_normal_exit
+)
+ident(
+  ext_ref Record_util.string_to_on_normal_exit
+)
+"records.ml" 781 42307 42417 "records.ml" 781 42307 42418
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 781 42307 42321 "records.ml" 781 42307 42322
+)
+"records.ml" 781 42307 42379 "records.ml" 781 42307 42419
+type(
+  API.on_normal_exit
+)
+"records.ml" 781 42307 42326 "records.ml" 781 42307 42419
+type(
+  unit
+)
+"records.ml" 781 42307 42316 "records.ml" 781 42307 42420
+type(
+  string -> unit
+)
+"records.ml" 781 42307 42421 "records.ml" 781 42307 42423
+type(
+  unit
+)
+"records.ml" 779 42171 42174 "records.ml" 781 42307 42423
+type(
+  field
+)
+"records.ml" 782 42425 42428 "records.ml" 782 42425 42438
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 782 42425 42445 "records.ml" 782 42425 42466
+type(
+  string
+)
+"records.ml" 783 42467 42481 "records.ml" 783 42467 42483
+type(
+  unit
+)
+"records.ml" 783 42467 42487 "records.ml" 783 42467 42527
+type(
+  API.on_crash_behaviour -> string
+)
+ident(
+  ext_ref Record_util.on_crash_behaviour_to_string
+)
+"records.ml" 783 42467 42529 "records.ml" 783 42467 42530
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 783 42467 42531 "records.ml" 783 42467 42533
+type(
+  unit
+)
+"records.ml" 783 42467 42528 "records.ml" 783 42467 42534
+type(
+  API.vM_t
+)
+"records.ml" 783 42467 42528 "records.ml" 783 42467 42561
+type(
+  API.on_crash_behaviour
+)
+"records.ml" 783 42467 42487 "records.ml" 783 42467 42561
+type(
+  string
+)
+"records.ml" 783 42467 42476 "records.ml" 783 42467 42562
+type(
+  unit -> string
+)
+"records.ml" 784 42563 42577 "records.ml" 784 42563 42578
+type(
+  string
+)
+ident(
+  def x "records.ml" 784 42563 42582 "records.ml" 784 42563 42678
+)
+"records.ml" 784 42563 42582 "records.ml" 784 42563 42615
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VM -> value:API.on_crash_behaviour -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_actions_after_crash
+)
+"records.ml" 784 42563 42616 "records.ml" 784 42563 42619
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 784 42563 42620 "records.ml" 784 42563 42630
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 784 42563 42631 "records.ml" 784 42563 42633
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 784 42563 42635 "records.ml" 784 42563 42675
+type(
+  string -> API.on_crash_behaviour
+)
+ident(
+  ext_ref Record_util.string_to_on_crash_behaviour
+)
+"records.ml" 784 42563 42676 "records.ml" 784 42563 42677
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 784 42563 42577 "records.ml" 784 42563 42578
+)
+"records.ml" 784 42563 42634 "records.ml" 784 42563 42678
+type(
+  API.on_crash_behaviour
+)
+"records.ml" 784 42563 42582 "records.ml" 784 42563 42678
+type(
+  unit
+)
+"records.ml" 784 42563 42572 "records.ml" 784 42563 42679
+type(
+  string -> unit
+)
+"records.ml" 784 42563 42680 "records.ml" 784 42563 42682
+type(
+  unit
+)
+"records.ml" 782 42425 42428 "records.ml" 784 42563 42682
+type(
+  field
+)
+"records.ml" 785 42684 42687 "records.ml" 785 42684 42697
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 785 42684 42704 "records.ml" 785 42684 42719
+type(
+  string
+)
+"records.ml" 786 42720 42734 "records.ml" 786 42720 42736
+type(
+  unit
+)
+"records.ml" 786 42720 42740 "records.ml" 786 42720 42753
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 786 42720 42754 "records.ml" 786 42720 42758
+type(
+  string
+)
+"records.ml" 786 42720 42760 "records.ml" 786 42720 42768
+type(
+  ([ `console ] Ref.t -> string) -> API.ref_console_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 786 42720 42769 "records.ml" 786 42720 42786
+type(
+  [ `console ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 786 42720 42788 "records.ml" 786 42720 42789
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 786 42720 42790 "records.ml" 786 42720 42792
+type(
+  unit
+)
+"records.ml" 786 42720 42787 "records.ml" 786 42720 42793
+type(
+  API.vM_t
+)
+"records.ml" 786 42720 42787 "records.ml" 786 42720 42809
+type(
+  API.ref_console_set
+)
+"records.ml" 786 42720 42759 "records.ml" 786 42720 42810
+type(
+  string list
+)
+"records.ml" 786 42720 42740 "records.ml" 786 42720 42810
+type(
+  string
+)
+"records.ml" 786 42720 42729 "records.ml" 786 42720 42811
+type(
+  unit -> string
+)
+"records.ml" 787 42812 42830 "records.ml" 787 42812 42832
+type(
+  unit
+)
+"records.ml" 787 42812 42836 "records.ml" 787 42812 42844
+type(
+  ([ `console ] Ref.t -> string) -> API.ref_console_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 787 42812 42845 "records.ml" 787 42812 42862
+type(
+  [ `console ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 787 42812 42864 "records.ml" 787 42812 42865
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 787 42812 42866 "records.ml" 787 42812 42868
+type(
+  unit
+)
+"records.ml" 787 42812 42863 "records.ml" 787 42812 42869
+type(
+  API.vM_t
+)
+"records.ml" 787 42812 42863 "records.ml" 787 42812 42885
+type(
+  API.ref_console_set
+)
+"records.ml" 787 42812 42836 "records.ml" 787 42812 42885
+type(
+  string list
+)
+"records.ml" 787 42812 42825 "records.ml" 787 42812 42886
+type(
+  unit -> string list
+)
+"records.ml" 787 42812 42887 "records.ml" 787 42812 42889
+type(
+  unit
+)
+"records.ml" 785 42684 42687 "records.ml" 787 42812 42889
+type(
+  field
+)
+"records.ml" 788 42891 42894 "records.ml" 788 42891 42904
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 788 42891 42911 "records.ml" 788 42891 42921
+type(
+  string
+)
+"records.ml" 789 42922 42936 "records.ml" 789 42922 42938
+type(
+  unit
+)
+"records.ml" 789 42922 42942 "records.ml" 789 42922 42968
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 789 42922 42969 "records.ml" 789 42922 42973
+type(
+  string
+)
+"records.ml" 789 42922 42975 "records.ml" 789 42922 42976
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 789 42922 42977 "records.ml" 789 42922 42979
+type(
+  unit
+)
+"records.ml" 789 42922 42974 "records.ml" 789 42922 42980
+type(
+  API.vM_t
+)
+"records.ml" 789 42922 42974 "records.ml" 789 42922 42996
+type(
+  API.string_to_string_map
+)
+"records.ml" 789 42922 42942 "records.ml" 789 42922 42996
+type(
+  string
+)
+"records.ml" 789 42922 42931 "records.ml" 789 42922 42997
+type(
+  unit -> string
+)
+"records.ml" 790 42998 43019 "records.ml" 790 42998 43020
+type(
+  string
+)
+ident(
+  def k "records.ml" 790 42998 43021 "records.ml" 790 42998 43073
+)
+"records.ml" 790 42998 43021 "records.ml" 790 42998 43022
+type(
+  string
+)
+ident(
+  def v "records.ml" 790 42998 43026 "records.ml" 790 42998 43073
+)
+"records.ml" 790 42998 43026 "records.ml" 790 42998 43051
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VM -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).add_to_platform
+)
+"records.ml" 790 42998 43052 "records.ml" 790 42998 43055
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 790 42998 43056 "records.ml" 790 42998 43066
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 790 42998 43067 "records.ml" 790 42998 43069
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 790 42998 43070 "records.ml" 790 42998 43071
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 790 42998 43019 "records.ml" 790 42998 43020
+)
+"records.ml" 790 42998 43072 "records.ml" 790 42998 43073
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 790 42998 43021 "records.ml" 790 42998 43022
+)
+"records.ml" 790 42998 43026 "records.ml" 790 42998 43073
+type(
+  unit
+)
+"records.ml" 790 42998 43014 "records.ml" 790 42998 43074
+type(
+  string -> string -> unit
+)
+"records.ml" 791 43075 43101 "records.ml" 791 43075 43102
+type(
+  string
+)
+ident(
+  def k "records.ml" 791 43075 43106 "records.ml" 791 43075 43156
+)
+"records.ml" 791 43075 43106 "records.ml" 791 43075 43136
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).remove_from_platform
+)
+"records.ml" 791 43075 43137 "records.ml" 791 43075 43140
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 791 43075 43141 "records.ml" 791 43075 43151
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 791 43075 43152 "records.ml" 791 43075 43154
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 791 43075 43155 "records.ml" 791 43075 43156
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 791 43075 43101 "records.ml" 791 43075 43102
+)
+"records.ml" 791 43075 43106 "records.ml" 791 43075 43156
+type(
+  unit
+)
+"records.ml" 791 43075 43096 "records.ml" 791 43075 43157
+type(
+  string -> unit
+)
+"records.ml" 792 43159 43177 "records.ml" 792 43159 43179
+type(
+  unit
+)
+"records.ml" 792 43159 43184 "records.ml" 792 43159 43185
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 792 43159 43186 "records.ml" 792 43159 43188
+type(
+  unit
+)
+"records.ml" 792 43159 43183 "records.ml" 792 43159 43189
+type(
+  API.vM_t
+)
+"records.ml" 792 43159 43183 "records.ml" 792 43159 43205
+type(
+  API.string_to_string_map
+)
+"records.ml" 792 43159 43172 "records.ml" 792 43159 43206
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 792 43159 43207 "records.ml" 792 43159 43209
+type(
+  unit
+)
+"records.ml" 788 42891 42894 "records.ml" 792 43159 43209
+type(
+  field
+)
+"records.ml" 793 43211 43214 "records.ml" 793 43211 43224
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 793 43211 43231 "records.ml" 793 43211 43251
+type(
+  string
+)
+"records.ml" 794 43252 43266 "records.ml" 794 43252 43268
+type(
+  unit
+)
+"records.ml" 794 43252 43272 "records.ml" 794 43252 43285
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 794 43252 43286 "records.ml" 794 43252 43290
+type(
+  string
+)
+"records.ml" 794 43252 43292 "records.ml" 794 43252 43300
+type(
+  ([ `assert_operation_valid
+   | `awaiting_memory_live
+   | `changing_VCPUs
+   | `changing_VCPUs_live
+   | `changing_dynamic_range
+   | `changing_memory_limits
+   | `changing_memory_live
+   | `changing_shadow_memory
+   | `changing_shadow_memory_live
+   | `changing_static_range
+   | `checkpoint
+   | `clean_reboot
+   | `clean_shutdown
+   | `clone
+   | `copy
+   | `create_template
+   | `csvm
+   | `data_source_op
+   | `destroy
+   | `export
+   | `get_boot_record
+   | `get_cooperative
+   | `hard_reboot
+   | `hard_shutdown
+   | `import
+   | `make_into_template
+   | `metadata_export
+   | `migrate
+   | `pause
+   | `pool_migrate
+   | `power_state_reset
+   | `provision
+   | `resume
+   | `resume_on
+   | `revert
+   | `reverting
+   | `send_sysrq
+   | `send_trigger
+   | `snapshot
+   | `snapshot_with_quiesce
+   | `start
+   | `start_on
+   | `suspend
+   | `unpause
+   | `update_allowed_operations ] -> string) ->
+  API.vm_operations_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 794 43252 43301 "records.ml" 794 43252 43335
+type(
+  [ `assert_operation_valid
+  | `awaiting_memory_live
+  | `changing_VCPUs
+  | `changing_VCPUs_live
+  | `changing_dynamic_range
+  | `changing_memory_limits
+  | `changing_memory_live
+  | `changing_shadow_memory
+  | `changing_shadow_memory_live
+  | `changing_static_range
+  | `checkpoint
+  | `clean_reboot
+  | `clean_shutdown
+  | `clone
+  | `copy
+  | `create_template
+  | `csvm
+  | `data_source_op
+  | `destroy
+  | `export
+  | `get_boot_record
+  | `get_cooperative
+  | `hard_reboot
+  | `hard_shutdown
+  | `import
+  | `make_into_template
+  | `metadata_export
+  | `migrate
+  | `pause
+  | `pool_migrate
+  | `power_state_reset
+  | `provision
+  | `resume
+  | `resume_on
+  | `revert
+  | `reverting
+  | `send_sysrq
+  | `send_trigger
+  | `snapshot
+  | `snapshot_with_quiesce
+  | `start
+  | `start_on
+  | `suspend
+  | `unpause
+  | `update_allowed_operations ] -> string
+)
+ident(
+  ext_ref Record_util.vm_operation_to_string
+)
+"records.ml" 794 43252 43337 "records.ml" 794 43252 43338
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 794 43252 43339 "records.ml" 794 43252 43341
+type(
+  unit
+)
+"records.ml" 794 43252 43336 "records.ml" 794 43252 43342
+type(
+  API.vM_t
+)
+"records.ml" 794 43252 43336 "records.ml" 794 43252 43368
+type(
+  API.vm_operations_set
+)
+"records.ml" 794 43252 43291 "records.ml" 794 43252 43369
+type(
+  string list
+)
+"records.ml" 794 43252 43272 "records.ml" 794 43252 43369
+type(
+  string
+)
+"records.ml" 794 43252 43261 "records.ml" 794 43252 43370
+type(
+  unit -> string
+)
+"records.ml" 795 43372 43390 "records.ml" 795 43372 43392
+type(
+  unit
+)
+"records.ml" 795 43372 43396 "records.ml" 795 43372 43404
+type(
+  ([ `assert_operation_valid
+   | `awaiting_memory_live
+   | `changing_VCPUs
+   | `changing_VCPUs_live
+   | `changing_dynamic_range
+   | `changing_memory_limits
+   | `changing_memory_live
+   | `changing_shadow_memory
+   | `changing_shadow_memory_live
+   | `changing_static_range
+   | `checkpoint
+   | `clean_reboot
+   | `clean_shutdown
+   | `clone
+   | `copy
+   | `create_template
+   | `csvm
+   | `data_source_op
+   | `destroy
+   | `export
+   | `get_boot_record
+   | `get_cooperative
+   | `hard_reboot
+   | `hard_shutdown
+   | `import
+   | `make_into_template
+   | `metadata_export
+   | `migrate
+   | `pause
+   | `pool_migrate
+   | `power_state_reset
+   | `provision
+   | `resume
+   | `resume_on
+   | `revert
+   | `reverting
+   | `send_sysrq
+   | `send_trigger
+   | `snapshot
+   | `snapshot_with_quiesce
+   | `start
+   | `start_on
+   | `suspend
+   | `unpause
+   | `update_allowed_operations ] -> string) ->
+  API.vm_operations_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 795 43372 43405 "records.ml" 795 43372 43439
+type(
+  [ `assert_operation_valid
+  | `awaiting_memory_live
+  | `changing_VCPUs
+  | `changing_VCPUs_live
+  | `changing_dynamic_range
+  | `changing_memory_limits
+  | `changing_memory_live
+  | `changing_shadow_memory
+  | `changing_shadow_memory_live
+  | `changing_static_range
+  | `checkpoint
+  | `clean_reboot
+  | `clean_shutdown
+  | `clone
+  | `copy
+  | `create_template
+  | `csvm
+  | `data_source_op
+  | `destroy
+  | `export
+  | `get_boot_record
+  | `get_cooperative
+  | `hard_reboot
+  | `hard_shutdown
+  | `import
+  | `make_into_template
+  | `metadata_export
+  | `migrate
+  | `pause
+  | `pool_migrate
+  | `power_state_reset
+  | `provision
+  | `resume
+  | `resume_on
+  | `revert
+  | `reverting
+  | `send_sysrq
+  | `send_trigger
+  | `snapshot
+  | `snapshot_with_quiesce
+  | `start
+  | `start_on
+  | `suspend
+  | `unpause
+  | `update_allowed_operations ] -> string
+)
+ident(
+  ext_ref Record_util.vm_operation_to_string
+)
+"records.ml" 795 43372 43441 "records.ml" 795 43372 43442
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 795 43372 43443 "records.ml" 795 43372 43445
+type(
+  unit
+)
+"records.ml" 795 43372 43440 "records.ml" 795 43372 43446
+type(
+  API.vM_t
+)
+"records.ml" 795 43372 43440 "records.ml" 795 43372 43472
+type(
+  API.vm_operations_set
+)
+"records.ml" 795 43372 43396 "records.ml" 795 43372 43472
+type(
+  string list
+)
+"records.ml" 795 43372 43385 "records.ml" 795 43372 43473
+type(
+  unit -> string list
+)
+"records.ml" 795 43372 43474 "records.ml" 795 43372 43476
+type(
+  unit
+)
+"records.ml" 793 43211 43214 "records.ml" 795 43372 43476
+type(
+  field
+)
+"records.ml" 796 43478 43481 "records.ml" 796 43478 43491
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 796 43478 43498 "records.ml" 796 43478 43518
+type(
+  string
+)
+"records.ml" 797 43519 43533 "records.ml" 797 43519 43535
+type(
+  unit
+)
+"records.ml" 797 43519 43539 "records.ml" 797 43519 43552
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 797 43519 43553 "records.ml" 797 43519 43557
+type(
+  string
+)
+"records.ml" 797 43519 43559 "records.ml" 797 43519 43567
+type(
+  (string * API.vm_operations -> string) ->
+  API.string_to_vm_operations_map -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 797 43519 43574 "records.ml" 797 43519 43575
+type(
+  string
+)
+ident(
+  def a "records.ml" 797 43519 43582 "records.ml" 797 43519 43618
+)
+"records.ml" 797 43519 43576 "records.ml" 797 43519 43577
+type(
+  API.vm_operations
+)
+ident(
+  def b "records.ml" 797 43519 43582 "records.ml" 797 43519 43618
+)
+"records.ml" 797 43519 43573 "records.ml" 797 43519 43578
+type(
+  string * API.vm_operations
+)
+"records.ml" 797 43519 43582 "records.ml" 797 43519 43616
+type(
+  API.vm_operations -> string
+)
+ident(
+  ext_ref Record_util.vm_operation_to_string
+)
+"records.ml" 797 43519 43617 "records.ml" 797 43519 43618
+type(
+  API.vm_operations
+)
+ident(
+  int_ref b "records.ml" 797 43519 43576 "records.ml" 797 43519 43577
+)
+"records.ml" 797 43519 43582 "records.ml" 797 43519 43618
+type(
+  string
+)
+"records.ml" 797 43519 43568 "records.ml" 797 43519 43619
+type(
+  string * API.vm_operations -> string
+)
+"records.ml" 797 43519 43621 "records.ml" 797 43519 43622
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 797 43519 43623 "records.ml" 797 43519 43625
+type(
+  unit
+)
+"records.ml" 797 43519 43620 "records.ml" 797 43519 43626
+type(
+  API.vM_t
+)
+"records.ml" 797 43519 43620 "records.ml" 797 43519 43652
+type(
+  API.string_to_vm_operations_map
+)
+"records.ml" 797 43519 43558 "records.ml" 797 43519 43653
+type(
+  string list
+)
+"records.ml" 797 43519 43539 "records.ml" 797 43519 43653
+type(
+  string
+)
+"records.ml" 797 43519 43528 "records.ml" 797 43519 43654
+type(
+  unit -> string
+)
+"records.ml" 798 43656 43674 "records.ml" 798 43656 43676
+type(
+  unit
+)
+"records.ml" 798 43656 43680 "records.ml" 798 43656 43688
+type(
+  (string * API.vm_operations -> string) ->
+  API.string_to_vm_operations_map -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 798 43656 43695 "records.ml" 798 43656 43696
+type(
+  string
+)
+ident(
+  def a "records.ml" 798 43656 43703 "records.ml" 798 43656 43739
+)
+"records.ml" 798 43656 43697 "records.ml" 798 43656 43698
+type(
+  API.vm_operations
+)
+ident(
+  def b "records.ml" 798 43656 43703 "records.ml" 798 43656 43739
+)
+"records.ml" 798 43656 43694 "records.ml" 798 43656 43699
+type(
+  string * API.vm_operations
+)
+"records.ml" 798 43656 43703 "records.ml" 798 43656 43737
+type(
+  API.vm_operations -> string
+)
+ident(
+  ext_ref Record_util.vm_operation_to_string
+)
+"records.ml" 798 43656 43738 "records.ml" 798 43656 43739
+type(
+  API.vm_operations
+)
+ident(
+  int_ref b "records.ml" 798 43656 43697 "records.ml" 798 43656 43698
+)
+"records.ml" 798 43656 43703 "records.ml" 798 43656 43739
+type(
+  string
+)
+"records.ml" 798 43656 43689 "records.ml" 798 43656 43740
+type(
+  string * API.vm_operations -> string
+)
+"records.ml" 798 43656 43742 "records.ml" 798 43656 43743
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 798 43656 43744 "records.ml" 798 43656 43746
+type(
+  unit
+)
+"records.ml" 798 43656 43741 "records.ml" 798 43656 43747
+type(
+  API.vM_t
+)
+"records.ml" 798 43656 43741 "records.ml" 798 43656 43773
+type(
+  API.string_to_vm_operations_map
+)
+"records.ml" 798 43656 43680 "records.ml" 798 43656 43773
+type(
+  string list
+)
+"records.ml" 798 43656 43669 "records.ml" 798 43656 43774
+type(
+  unit -> string list
+)
+"records.ml" 798 43656 43775 "records.ml" 798 43656 43777
+type(
+  unit
+)
+"records.ml" 796 43478 43481 "records.ml" 798 43656 43777
+type(
+  field
+)
+"records.ml" 799 43779 43782 "records.ml" 799 43779 43792
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 799 43779 43799 "records.ml" 799 43779 43819
+type(
+  string
+)
+"records.ml" 800 43820 43834 "records.ml" 800 43820 43836
+type(
+  unit
+)
+"records.ml" 800 43820 43840 "records.ml" 800 43820 43866
+type(
+  string -> (string * string) list -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 800 43820 43867 "records.ml" 800 43820 43871
+type(
+  string
+)
+"records.ml" 800 43820 43873 "records.ml" 800 43820 43881
+type(
+  (API.vm_operations * string -> string * string) ->
+  API.vm_operations_to_string_map -> (string * string) list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 800 43820 43888 "records.ml" 800 43820 43889
+type(
+  API.vm_operations
+)
+ident(
+  def k "records.ml" 800 43820 43897 "records.ml" 800 43820 43936
+)
+"records.ml" 800 43820 43891 "records.ml" 800 43820 43892
+type(
+  string
+)
+ident(
+  def v "records.ml" 800 43820 43897 "records.ml" 800 43820 43936
+)
+"records.ml" 800 43820 43887 "records.ml" 800 43820 43893
+type(
+  API.vm_operations * string
+)
+"records.ml" 800 43820 43897 "records.ml" 800 43820 43931
+type(
+  API.vm_operations -> string
+)
+ident(
+  ext_ref Record_util.vm_operation_to_string
+)
+"records.ml" 800 43820 43932 "records.ml" 800 43820 43933
+type(
+  API.vm_operations
+)
+ident(
+  int_ref k "records.ml" 800 43820 43888 "records.ml" 800 43820 43889
+)
+"records.ml" 800 43820 43897 "records.ml" 800 43820 43933
+type(
+  string
+)
+"records.ml" 800 43820 43935 "records.ml" 800 43820 43936
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 800 43820 43891 "records.ml" 800 43820 43892
+)
+"records.ml" 800 43820 43897 "records.ml" 800 43820 43936
+type(
+  string * string
+)
+"records.ml" 800 43820 43882 "records.ml" 800 43820 43937
+type(
+  API.vm_operations * string -> string * string
+)
+"records.ml" 800 43820 43940 "records.ml" 800 43820 43941
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 800 43820 43942 "records.ml" 800 43820 43944
+type(
+  unit
+)
+"records.ml" 800 43820 43939 "records.ml" 800 43820 43945
+type(
+  API.vM_t
+)
+"records.ml" 800 43820 43938 "records.ml" 800 43820 43972
+type(
+  API.vm_operations_to_string_map
+)
+"records.ml" 800 43820 43872 "records.ml" 800 43820 43973
+type(
+  (string * string) list
+)
+"records.ml" 800 43820 43840 "records.ml" 800 43820 43973
+type(
+  string
+)
+"records.ml" 800 43820 43829 "records.ml" 800 43820 43974
+type(
+  unit -> string
+)
+"records.ml" 801 43975 43996 "records.ml" 801 43975 43997
+type(
+  string
+)
+ident(
+  def k "records.ml" 801 43975 43998 "records.ml" 801 43975 44097
+)
+"records.ml" 801 43975 43998 "records.ml" 801 43975 43999
+type(
+  string
+)
+ident(
+  def v "records.ml" 801 43975 44003 "records.ml" 801 43975 44097
+)
+"records.ml" 801 43975 44003 "records.ml" 801 43975 44038
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VM -> key:API.vm_operations -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).add_to_blocked_operations
+)
+"records.ml" 801 43975 44039 "records.ml" 801 43975 44042
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 801 43975 44043 "records.ml" 801 43975 44053
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 801 43975 44054 "records.ml" 801 43975 44056
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 801 43975 44058 "records.ml" 801 43975 44092
+type(
+  string -> API.vm_operations
+)
+ident(
+  ext_ref Record_util.string_to_vm_operation
+)
+"records.ml" 801 43975 44093 "records.ml" 801 43975 44094
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 801 43975 43996 "records.ml" 801 43975 43997
+)
+"records.ml" 801 43975 44057 "records.ml" 801 43975 44095
+type(
+  API.vm_operations
+)
+"records.ml" 801 43975 44096 "records.ml" 801 43975 44097
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 801 43975 43998 "records.ml" 801 43975 43999
+)
+"records.ml" 801 43975 44003 "records.ml" 801 43975 44097
+type(
+  unit
+)
+"records.ml" 801 43975 43991 "records.ml" 801 43975 44098
+type(
+  string -> string -> unit
+)
+"records.ml" 802 44099 44125 "records.ml" 802 44099 44126
+type(
+  string
+)
+ident(
+  def k "records.ml" 802 44099 44130 "records.ml" 802 44099 44227
+)
+"records.ml" 802 44099 44130 "records.ml" 802 44099 44170
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VM -> key:API.vm_operations -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).remove_from_blocked_operations
+)
+"records.ml" 802 44099 44171 "records.ml" 802 44099 44174
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 802 44099 44175 "records.ml" 802 44099 44185
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 802 44099 44186 "records.ml" 802 44099 44188
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 802 44099 44190 "records.ml" 802 44099 44224
+type(
+  string -> API.vm_operations
+)
+ident(
+  ext_ref Record_util.string_to_vm_operation
+)
+"records.ml" 802 44099 44225 "records.ml" 802 44099 44226
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 802 44099 44125 "records.ml" 802 44099 44126
+)
+"records.ml" 802 44099 44189 "records.ml" 802 44099 44227
+type(
+  API.vm_operations
+)
+"records.ml" 802 44099 44130 "records.ml" 802 44099 44227
+type(
+  unit
+)
+"records.ml" 802 44099 44120 "records.ml" 802 44099 44228
+type(
+  string -> unit
+)
+"records.ml" 803 44229 44247 "records.ml" 803 44229 44249
+type(
+  unit
+)
+"records.ml" 803 44229 44253 "records.ml" 803 44229 44261
+type(
+  (API.vm_operations * string -> string * string) ->
+  API.vm_operations_to_string_map -> (string * string) list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 803 44229 44268 "records.ml" 803 44229 44269
+type(
+  API.vm_operations
+)
+ident(
+  def k "records.ml" 803 44229 44277 "records.ml" 803 44229 44316
+)
+"records.ml" 803 44229 44271 "records.ml" 803 44229 44272
+type(
+  string
+)
+ident(
+  def v "records.ml" 803 44229 44277 "records.ml" 803 44229 44316
+)
+"records.ml" 803 44229 44267 "records.ml" 803 44229 44273
+type(
+  API.vm_operations * string
+)
+"records.ml" 803 44229 44277 "records.ml" 803 44229 44311
+type(
+  API.vm_operations -> string
+)
+ident(
+  ext_ref Record_util.vm_operation_to_string
+)
+"records.ml" 803 44229 44312 "records.ml" 803 44229 44313
+type(
+  API.vm_operations
+)
+ident(
+  int_ref k "records.ml" 803 44229 44268 "records.ml" 803 44229 44269
+)
+"records.ml" 803 44229 44277 "records.ml" 803 44229 44313
+type(
+  string
+)
+"records.ml" 803 44229 44315 "records.ml" 803 44229 44316
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 803 44229 44271 "records.ml" 803 44229 44272
+)
+"records.ml" 803 44229 44277 "records.ml" 803 44229 44316
+type(
+  string * string
+)
+"records.ml" 803 44229 44262 "records.ml" 803 44229 44317
+type(
+  API.vm_operations * string -> string * string
+)
+"records.ml" 803 44229 44320 "records.ml" 803 44229 44321
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 803 44229 44322 "records.ml" 803 44229 44324
+type(
+  unit
+)
+"records.ml" 803 44229 44319 "records.ml" 803 44229 44325
+type(
+  API.vM_t
+)
+"records.ml" 803 44229 44318 "records.ml" 803 44229 44352
+type(
+  API.vm_operations_to_string_map
+)
+"records.ml" 803 44229 44253 "records.ml" 803 44229 44352
+type(
+  (string * string) list
+)
+"records.ml" 803 44229 44242 "records.ml" 803 44229 44353
+type(
+  unit -> (string * string) list
+)
+"records.ml" 803 44229 44354 "records.ml" 803 44229 44356
+type(
+  unit
+)
+"records.ml" 799 43779 43782 "records.ml" 803 44229 44356
+type(
+  field
+)
+"records.ml" 805 44435 44438 "records.ml" 805 44435 44448
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> API.string_set) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 805 44435 44455 "records.ml" 805 44435 44476
+type(
+  string
+)
+"records.ml" 806 44477 44491 "records.ml" 806 44477 44493
+type(
+  unit
+)
+"records.ml" 806 44477 44497 "records.ml" 806 44477 44510
+type(
+  string -> API.string_set -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 806 44477 44511 "records.ml" 806 44477 44515
+type(
+  string
+)
+"records.ml" 806 44477 44521 "records.ml" 806 44477 44554
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> vm:API.ref_VM -> API.string_set
+)
+ident(
+  ext_ref Client.( Client ).( VM ).get_allowed_VBD_devices
+)
+"records.ml" 806 44477 44555 "records.ml" 806 44477 44558
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 806 44477 44559 "records.ml" 806 44477 44569
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 806 44477 44570 "records.ml" 806 44477 44572
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 806 44477 44521 "records.ml" 806 44477 44572
+type(
+  API.string_set
+)
+"records.ml" 806 44477 44578 "records.ml" 806 44477 44579
+type(
+  exn
+)
+"records.ml" 806 44477 44583 "records.ml" 806 44477 44585
+type(
+  API.string_set
+)
+"records.ml" 806 44477 44516 "records.ml" 806 44477 44586
+type(
+  API.string_set
+)
+"records.ml" 806 44477 44497 "records.ml" 806 44477 44586
+type(
+  string
+)
+"records.ml" 806 44477 44486 "records.ml" 806 44477 44587
+type(
+  unit -> string
+)
+"records.ml" 806 44477 44599 "records.ml" 806 44477 44603
+type(
+  bool
+)
+"records.ml" 807 44605 44623 "records.ml" 807 44605 44625
+type(
+  unit
+)
+"records.ml" 807 44605 44633 "records.ml" 807 44605 44666
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> vm:API.ref_VM -> API.string_set
+)
+ident(
+  ext_ref Client.( Client ).( VM ).get_allowed_VBD_devices
+)
+"records.ml" 807 44605 44667 "records.ml" 807 44605 44670
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 807 44605 44671 "records.ml" 807 44605 44681
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 807 44605 44682 "records.ml" 807 44605 44684
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 807 44605 44633 "records.ml" 807 44605 44684
+type(
+  API.string_set
+)
+"records.ml" 807 44605 44690 "records.ml" 807 44605 44691
+type(
+  exn
+)
+"records.ml" 807 44605 44695 "records.ml" 807 44605 44697
+type(
+  API.string_set
+)
+"records.ml" 807 44605 44629 "records.ml" 807 44605 44697
+type(
+  API.string_set
+)
+"records.ml" 807 44605 44618 "records.ml" 807 44605 44698
+type(
+  unit -> API.string_set
+)
+"records.ml" 807 44605 44699 "records.ml" 807 44605 44701
+type(
+  unit
+)
+"records.ml" 805 44435 44438 "records.ml" 807 44605 44701
+type(
+  field
+)
+"records.ml" 808 44703 44706 "records.ml" 808 44703 44716
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> API.string_set) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 808 44703 44723 "records.ml" 808 44703 44744
+type(
+  string
+)
+"records.ml" 809 44745 44759 "records.ml" 809 44745 44761
+type(
+  unit
+)
+"records.ml" 809 44745 44765 "records.ml" 809 44745 44778
+type(
+  string -> API.string_set -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 809 44745 44779 "records.ml" 809 44745 44783
+type(
+  string
+)
+"records.ml" 809 44745 44789 "records.ml" 809 44745 44822
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> vm:API.ref_VM -> API.string_set
+)
+ident(
+  ext_ref Client.( Client ).( VM ).get_allowed_VIF_devices
+)
+"records.ml" 809 44745 44823 "records.ml" 809 44745 44826
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 809 44745 44827 "records.ml" 809 44745 44837
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 809 44745 44838 "records.ml" 809 44745 44840
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 809 44745 44789 "records.ml" 809 44745 44840
+type(
+  API.string_set
+)
+"records.ml" 809 44745 44846 "records.ml" 809 44745 44847
+type(
+  exn
+)
+"records.ml" 809 44745 44851 "records.ml" 809 44745 44853
+type(
+  API.string_set
+)
+"records.ml" 809 44745 44784 "records.ml" 809 44745 44854
+type(
+  API.string_set
+)
+"records.ml" 809 44745 44765 "records.ml" 809 44745 44854
+type(
+  string
+)
+"records.ml" 809 44745 44754 "records.ml" 809 44745 44855
+type(
+  unit -> string
+)
+"records.ml" 809 44745 44867 "records.ml" 809 44745 44871
+type(
+  bool
+)
+"records.ml" 810 44873 44891 "records.ml" 810 44873 44893
+type(
+  unit
+)
+"records.ml" 810 44873 44901 "records.ml" 810 44873 44934
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> vm:API.ref_VM -> API.string_set
+)
+ident(
+  ext_ref Client.( Client ).( VM ).get_allowed_VIF_devices
+)
+"records.ml" 810 44873 44935 "records.ml" 810 44873 44938
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 810 44873 44939 "records.ml" 810 44873 44949
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 810 44873 44950 "records.ml" 810 44873 44952
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 810 44873 44901 "records.ml" 810 44873 44952
+type(
+  API.string_set
+)
+"records.ml" 810 44873 44958 "records.ml" 810 44873 44959
+type(
+  exn
+)
+"records.ml" 810 44873 44963 "records.ml" 810 44873 44965
+type(
+  API.string_set
+)
+"records.ml" 810 44873 44897 "records.ml" 810 44873 44965
+type(
+  API.string_set
+)
+"records.ml" 810 44873 44886 "records.ml" 810 44873 44966
+type(
+  unit -> API.string_set
+)
+"records.ml" 810 44873 44967 "records.ml" 810 44873 44969
+type(
+  unit
+)
+"records.ml" 808 44703 44706 "records.ml" 810 44873 44969
+type(
+  field
+)
+"records.ml" 811 44971 44974 "records.ml" 811 44971 44984
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 811 44971 44991 "records.ml" 811 44971 45007
+type(
+  string
+)
+"records.ml" 812 45008 45022 "records.ml" 812 45008 45024
+type(
+  unit
+)
+"records.ml" 812 45008 45028 "records.ml" 812 45008 45041
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 812 45008 45042 "records.ml" 812 45008 45046
+type(
+  string
+)
+"records.ml" 812 45008 45048 "records.ml" 812 45008 45056
+type(
+  ([ `host ] Ref.t -> string) -> API.ref_host_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 812 45008 45057 "records.ml" 812 45008 45074
+type(
+  [ `host ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 812 45008 45076 "records.ml" 812 45008 45104
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> vm:API.ref_VM -> API.ref_host_set
+)
+ident(
+  ext_ref Client.( Client ).( VM ).get_possible_hosts
+)
+"records.ml" 812 45008 45105 "records.ml" 812 45008 45108
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 812 45008 45109 "records.ml" 812 45008 45119
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 812 45008 45120 "records.ml" 812 45008 45122
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 812 45008 45075 "records.ml" 812 45008 45123
+type(
+  API.ref_host_set
+)
+"records.ml" 812 45008 45047 "records.ml" 812 45008 45124
+type(
+  string list
+)
+"records.ml" 812 45008 45028 "records.ml" 812 45008 45124
+type(
+  string
+)
+"records.ml" 812 45008 45017 "records.ml" 812 45008 45125
+type(
+  unit -> string
+)
+"records.ml" 812 45008 45137 "records.ml" 812 45008 45141
+type(
+  bool
+)
+"records.ml" 812 45008 45142 "records.ml" 812 45008 45144
+type(
+  unit
+)
+"records.ml" 811 44971 44974 "records.ml" 812 45008 45144
+type(
+  field
+)
+"records.ml" 813 45146 45149 "records.ml" 813 45146 45159
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 813 45146 45166 "records.ml" 813 45146 45183
+type(
+  string
+)
+"records.ml" 814 45184 45198 "records.ml" 814 45184 45200
+type(
+  unit
+)
+"records.ml" 814 45184 45205 "records.ml" 814 45184 45206
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 814 45184 45207 "records.ml" 814 45184 45209
+type(
+  unit
+)
+"records.ml" 814 45184 45204 "records.ml" 814 45184 45210
+type(
+  API.vM_t
+)
+"records.ml" 814 45184 45204 "records.ml" 814 45184 45233
+type(
+  string
+)
+"records.ml" 814 45184 45193 "records.ml" 814 45184 45234
+type(
+  unit -> string
+)
+"records.ml" 815 45235 45249 "records.ml" 815 45235 45250
+type(
+  string
+)
+ident(
+  def x "records.ml" 815 45235 45254 "records.ml" 815 45235 45303
+)
+"records.ml" 815 45235 45254 "records.ml" 815 45235 45283
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_HVM_boot_policy
+)
+"records.ml" 815 45235 45284 "records.ml" 815 45235 45287
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 815 45235 45288 "records.ml" 815 45235 45298
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 815 45235 45299 "records.ml" 815 45235 45301
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 815 45235 45302 "records.ml" 815 45235 45303
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 815 45235 45249 "records.ml" 815 45235 45250
+)
+"records.ml" 815 45235 45254 "records.ml" 815 45235 45303
+type(
+  unit
+)
+"records.ml" 815 45235 45244 "records.ml" 815 45235 45304
+type(
+  string -> unit
+)
+"records.ml" 815 45235 45305 "records.ml" 815 45235 45307
+type(
+  unit
+)
+"records.ml" 813 45146 45149 "records.ml" 815 45235 45307
+type(
+  field
+)
+"records.ml" 816 45309 45312 "records.ml" 816 45309 45322
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 816 45309 45329 "records.ml" 816 45309 45346
+type(
+  string
+)
+"records.ml" 817 45347 45361 "records.ml" 817 45347 45363
+type(
+  unit
+)
+"records.ml" 817 45347 45367 "records.ml" 817 45347 45393
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 817 45347 45394 "records.ml" 817 45347 45398
+type(
+  string
+)
+"records.ml" 817 45347 45400 "records.ml" 817 45347 45401
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 817 45347 45402 "records.ml" 817 45347 45404
+type(
+  unit
+)
+"records.ml" 817 45347 45399 "records.ml" 817 45347 45405
+type(
+  API.vM_t
+)
+"records.ml" 817 45347 45399 "records.ml" 817 45347 45428
+type(
+  API.string_to_string_map
+)
+"records.ml" 817 45347 45367 "records.ml" 817 45347 45428
+type(
+  string
+)
+"records.ml" 817 45347 45356 "records.ml" 817 45347 45429
+type(
+  unit -> string
+)
+"records.ml" 818 45430 45451 "records.ml" 818 45430 45452
+type(
+  string
+)
+ident(
+  def k "records.ml" 818 45430 45453 "records.ml" 818 45430 45512
+)
+"records.ml" 818 45430 45453 "records.ml" 818 45430 45454
+type(
+  string
+)
+ident(
+  def v "records.ml" 818 45430 45458 "records.ml" 818 45430 45512
+)
+"records.ml" 818 45430 45458 "records.ml" 818 45430 45490
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VM -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).add_to_HVM_boot_params
+)
+"records.ml" 818 45430 45491 "records.ml" 818 45430 45494
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 818 45430 45495 "records.ml" 818 45430 45505
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 818 45430 45506 "records.ml" 818 45430 45508
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 818 45430 45509 "records.ml" 818 45430 45510
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 818 45430 45451 "records.ml" 818 45430 45452
+)
+"records.ml" 818 45430 45511 "records.ml" 818 45430 45512
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 818 45430 45453 "records.ml" 818 45430 45454
+)
+"records.ml" 818 45430 45458 "records.ml" 818 45430 45512
+type(
+  unit
+)
+"records.ml" 818 45430 45446 "records.ml" 818 45430 45513
+type(
+  string -> string -> unit
+)
+"records.ml" 819 45514 45540 "records.ml" 819 45514 45541
+type(
+  string
+)
+ident(
+  def k "records.ml" 819 45514 45545 "records.ml" 819 45514 45602
+)
+"records.ml" 819 45514 45545 "records.ml" 819 45514 45582
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).remove_from_HVM_boot_params
+)
+"records.ml" 819 45514 45583 "records.ml" 819 45514 45586
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 819 45514 45587 "records.ml" 819 45514 45597
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 819 45514 45598 "records.ml" 819 45514 45600
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 819 45514 45601 "records.ml" 819 45514 45602
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 819 45514 45540 "records.ml" 819 45514 45541
+)
+"records.ml" 819 45514 45545 "records.ml" 819 45514 45602
+type(
+  unit
+)
+"records.ml" 819 45514 45535 "records.ml" 819 45514 45603
+type(
+  string -> unit
+)
+"records.ml" 820 45604 45622 "records.ml" 820 45604 45624
+type(
+  unit
+)
+"records.ml" 820 45604 45629 "records.ml" 820 45604 45630
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 820 45604 45631 "records.ml" 820 45604 45633
+type(
+  unit
+)
+"records.ml" 820 45604 45628 "records.ml" 820 45604 45634
+type(
+  API.vM_t
+)
+"records.ml" 820 45604 45628 "records.ml" 820 45604 45657
+type(
+  API.string_to_string_map
+)
+"records.ml" 820 45604 45617 "records.ml" 820 45604 45658
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 820 45604 45659 "records.ml" 820 45604 45661
+type(
+  unit
+)
+"records.ml" 816 45309 45312 "records.ml" 820 45604 45661
+type(
+  field
+)
+"records.ml" 821 45663 45666 "records.ml" 821 45663 45676
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 821 45663 45683 "records.ml" 821 45663 45706
+type(
+  string
+)
+"records.ml" 822 45707 45721 "records.ml" 822 45707 45723
+type(
+  unit
+)
+"records.ml" 822 45707 45727 "records.ml" 822 45707 45742
+type(
+  float -> string
+)
+ident(
+  int_ref string_of_float "records.ml" 34 990 994 "records.ml" 34 990 1009
+)
+"records.ml" 822 45707 45744 "records.ml" 822 45707 45745
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 822 45707 45746 "records.ml" 822 45707 45748
+type(
+  unit
+)
+"records.ml" 822 45707 45743 "records.ml" 822 45707 45749
+type(
+  API.vM_t
+)
+"records.ml" 822 45707 45743 "records.ml" 822 45707 45778
+type(
+  float
+)
+"records.ml" 822 45707 45727 "records.ml" 822 45707 45778
+type(
+  string
+)
+"records.ml" 822 45707 45716 "records.ml" 822 45707 45779
+type(
+  unit -> string
+)
+"records.ml" 823 45780 45794 "records.ml" 823 45780 45795
+type(
+  string
+)
+ident(
+  def x "records.ml" 823 45780 45799 "records.ml" 823 45780 45872
+)
+"records.ml" 823 45780 45799 "records.ml" 823 45780 45834
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:float -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_HVM_shadow_multiplier
+)
+"records.ml" 823 45780 45835 "records.ml" 823 45780 45838
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 823 45780 45839 "records.ml" 823 45780 45849
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 823 45780 45850 "records.ml" 823 45780 45852
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 823 45780 45854 "records.ml" 823 45780 45869
+type(
+  string -> float
+)
+ident(
+  ext_ref Pervasives.float_of_string
+)
+"records.ml" 823 45780 45870 "records.ml" 823 45780 45871
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 823 45780 45794 "records.ml" 823 45780 45795
+)
+"records.ml" 823 45780 45853 "records.ml" 823 45780 45872
+type(
+  float
+)
+"records.ml" 823 45780 45799 "records.ml" 823 45780 45872
+type(
+  unit
+)
+"records.ml" 823 45780 45789 "records.ml" 823 45780 45873
+type(
+  string -> unit
+)
+"records.ml" 823 45780 45874 "records.ml" 823 45780 45876
+type(
+  unit
+)
+"records.ml" 821 45663 45666 "records.ml" 823 45780 45876
+type(
+  field
+)
+"records.ml" 824 45878 45881 "records.ml" 824 45878 45891
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 824 45878 45898 "records.ml" 824 45878 45909
+type(
+  string
+)
+"records.ml" 825 45910 45924 "records.ml" 825 45910 45926
+type(
+  unit
+)
+"records.ml" 825 45910 45931 "records.ml" 825 45910 45932
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 825 45910 45933 "records.ml" 825 45910 45935
+type(
+  unit
+)
+"records.ml" 825 45910 45930 "records.ml" 825 45910 45936
+type(
+  API.vM_t
+)
+"records.ml" 825 45910 45930 "records.ml" 825 45910 45953
+type(
+  string
+)
+"records.ml" 825 45910 45919 "records.ml" 825 45910 45954
+type(
+  unit -> string
+)
+"records.ml" 826 45955 45969 "records.ml" 826 45955 45970
+type(
+  string
+)
+ident(
+  def x "records.ml" 826 45955 45974 "records.ml" 826 45955 46017
+)
+"records.ml" 826 45955 45974 "records.ml" 826 45955 45997
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_PV_kernel
+)
+"records.ml" 826 45955 45998 "records.ml" 826 45955 46001
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 826 45955 46002 "records.ml" 826 45955 46012
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 826 45955 46013 "records.ml" 826 45955 46015
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 826 45955 46016 "records.ml" 826 45955 46017
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 826 45955 45969 "records.ml" 826 45955 45970
+)
+"records.ml" 826 45955 45974 "records.ml" 826 45955 46017
+type(
+  unit
+)
+"records.ml" 826 45955 45964 "records.ml" 826 45955 46018
+type(
+  string -> unit
+)
+"records.ml" 826 45955 46019 "records.ml" 826 45955 46021
+type(
+  unit
+)
+"records.ml" 824 45878 45881 "records.ml" 826 45955 46021
+type(
+  field
+)
+"records.ml" 827 46023 46026 "records.ml" 827 46023 46036
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 827 46023 46043 "records.ml" 827 46023 46055
+type(
+  string
+)
+"records.ml" 828 46056 46070 "records.ml" 828 46056 46072
+type(
+  unit
+)
+"records.ml" 828 46056 46077 "records.ml" 828 46056 46078
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 828 46056 46079 "records.ml" 828 46056 46081
+type(
+  unit
+)
+"records.ml" 828 46056 46076 "records.ml" 828 46056 46082
+type(
+  API.vM_t
+)
+"records.ml" 828 46056 46076 "records.ml" 828 46056 46100
+type(
+  string
+)
+"records.ml" 828 46056 46065 "records.ml" 828 46056 46101
+type(
+  unit -> string
+)
+"records.ml" 829 46102 46116 "records.ml" 829 46102 46117
+type(
+  string
+)
+ident(
+  def x "records.ml" 829 46102 46121 "records.ml" 829 46102 46165
+)
+"records.ml" 829 46102 46121 "records.ml" 829 46102 46145
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_PV_ramdisk
+)
+"records.ml" 829 46102 46146 "records.ml" 829 46102 46149
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 829 46102 46150 "records.ml" 829 46102 46160
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 829 46102 46161 "records.ml" 829 46102 46163
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 829 46102 46164 "records.ml" 829 46102 46165
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 829 46102 46116 "records.ml" 829 46102 46117
+)
+"records.ml" 829 46102 46121 "records.ml" 829 46102 46165
+type(
+  unit
+)
+"records.ml" 829 46102 46111 "records.ml" 829 46102 46166
+type(
+  string -> unit
+)
+"records.ml" 829 46102 46167 "records.ml" 829 46102 46169
+type(
+  unit
+)
+"records.ml" 827 46023 46026 "records.ml" 829 46102 46169
+type(
+  field
+)
+"records.ml" 830 46171 46174 "records.ml" 830 46171 46184
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 830 46171 46191 "records.ml" 830 46171 46200
+type(
+  string
+)
+"records.ml" 831 46201 46215 "records.ml" 831 46201 46217
+type(
+  unit
+)
+"records.ml" 831 46201 46222 "records.ml" 831 46201 46223
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 831 46201 46224 "records.ml" 831 46201 46226
+type(
+  unit
+)
+"records.ml" 831 46201 46221 "records.ml" 831 46201 46227
+type(
+  API.vM_t
+)
+"records.ml" 831 46201 46221 "records.ml" 831 46201 46242
+type(
+  string
+)
+"records.ml" 831 46201 46210 "records.ml" 831 46201 46243
+type(
+  unit -> string
+)
+"records.ml" 832 46244 46258 "records.ml" 832 46244 46259
+type(
+  string
+)
+ident(
+  def x "records.ml" 832 46244 46263 "records.ml" 832 46244 46304
+)
+"records.ml" 832 46244 46263 "records.ml" 832 46244 46284
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_PV_args
+)
+"records.ml" 832 46244 46285 "records.ml" 832 46244 46288
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 832 46244 46289 "records.ml" 832 46244 46299
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 832 46244 46300 "records.ml" 832 46244 46302
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 832 46244 46303 "records.ml" 832 46244 46304
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 832 46244 46258 "records.ml" 832 46244 46259
+)
+"records.ml" 832 46244 46263 "records.ml" 832 46244 46304
+type(
+  unit
+)
+"records.ml" 832 46244 46253 "records.ml" 832 46244 46305
+type(
+  string -> unit
+)
+"records.ml" 832 46244 46306 "records.ml" 832 46244 46308
+type(
+  unit
+)
+"records.ml" 830 46171 46174 "records.ml" 832 46244 46308
+type(
+  field
+)
+"records.ml" 833 46310 46313 "records.ml" 833 46310 46323
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 833 46310 46330 "records.ml" 833 46310 46346
+type(
+  string
+)
+"records.ml" 834 46347 46361 "records.ml" 834 46347 46363
+type(
+  unit
+)
+"records.ml" 834 46347 46368 "records.ml" 834 46347 46369
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 834 46347 46370 "records.ml" 834 46347 46372
+type(
+  unit
+)
+"records.ml" 834 46347 46367 "records.ml" 834 46347 46373
+type(
+  API.vM_t
+)
+"records.ml" 834 46347 46367 "records.ml" 834 46347 46395
+type(
+  string
+)
+"records.ml" 834 46347 46356 "records.ml" 834 46347 46396
+type(
+  unit -> string
+)
+"records.ml" 835 46397 46411 "records.ml" 835 46397 46412
+type(
+  string
+)
+ident(
+  def x "records.ml" 835 46397 46416 "records.ml" 835 46397 46464
+)
+"records.ml" 835 46397 46416 "records.ml" 835 46397 46444
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_PV_legacy_args
+)
+"records.ml" 835 46397 46445 "records.ml" 835 46397 46448
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 835 46397 46449 "records.ml" 835 46397 46459
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 835 46397 46460 "records.ml" 835 46397 46462
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 835 46397 46463 "records.ml" 835 46397 46464
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 835 46397 46411 "records.ml" 835 46397 46412
+)
+"records.ml" 835 46397 46416 "records.ml" 835 46397 46464
+type(
+  unit
+)
+"records.ml" 835 46397 46406 "records.ml" 835 46397 46465
+type(
+  string -> unit
+)
+"records.ml" 835 46397 46466 "records.ml" 835 46397 46468
+type(
+  unit
+)
+"records.ml" 833 46310 46313 "records.ml" 835 46397 46468
+type(
+  field
+)
+"records.ml" 836 46470 46473 "records.ml" 836 46470 46483
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 836 46470 46490 "records.ml" 836 46470 46505
+type(
+  string
+)
+"records.ml" 837 46506 46520 "records.ml" 837 46506 46522
+type(
+  unit
+)
+"records.ml" 837 46506 46527 "records.ml" 837 46506 46528
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 837 46506 46529 "records.ml" 837 46506 46531
+type(
+  unit
+)
+"records.ml" 837 46506 46526 "records.ml" 837 46506 46532
+type(
+  API.vM_t
+)
+"records.ml" 837 46506 46526 "records.ml" 837 46506 46553
+type(
+  string
+)
+"records.ml" 837 46506 46515 "records.ml" 837 46506 46554
+type(
+  unit -> string
+)
+"records.ml" 838 46555 46569 "records.ml" 838 46555 46570
+type(
+  string
+)
+ident(
+  def x "records.ml" 838 46555 46574 "records.ml" 838 46555 46621
+)
+"records.ml" 838 46555 46574 "records.ml" 838 46555 46601
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_PV_bootloader
+)
+"records.ml" 838 46555 46602 "records.ml" 838 46555 46605
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 838 46555 46606 "records.ml" 838 46555 46616
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 838 46555 46617 "records.ml" 838 46555 46619
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 838 46555 46620 "records.ml" 838 46555 46621
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 838 46555 46569 "records.ml" 838 46555 46570
+)
+"records.ml" 838 46555 46574 "records.ml" 838 46555 46621
+type(
+  unit
+)
+"records.ml" 838 46555 46564 "records.ml" 838 46555 46622
+type(
+  string -> unit
+)
+"records.ml" 838 46555 46623 "records.ml" 838 46555 46625
+type(
+  unit
+)
+"records.ml" 836 46470 46473 "records.ml" 838 46555 46625
+type(
+  field
+)
+"records.ml" 839 46627 46630 "records.ml" 839 46627 46640
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 839 46627 46647 "records.ml" 839 46627 46667
+type(
+  string
+)
+"records.ml" 840 46668 46682 "records.ml" 840 46668 46684
+type(
+  unit
+)
+"records.ml" 840 46668 46689 "records.ml" 840 46668 46690
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 840 46668 46691 "records.ml" 840 46668 46693
+type(
+  unit
+)
+"records.ml" 840 46668 46688 "records.ml" 840 46668 46694
+type(
+  API.vM_t
+)
+"records.ml" 840 46668 46688 "records.ml" 840 46668 46720
+type(
+  string
+)
+"records.ml" 840 46668 46677 "records.ml" 840 46668 46721
+type(
+  unit -> string
+)
+"records.ml" 841 46722 46736 "records.ml" 841 46722 46737
+type(
+  string
+)
+ident(
+  def x "records.ml" 841 46722 46741 "records.ml" 841 46722 46793
+)
+"records.ml" 841 46722 46741 "records.ml" 841 46722 46773
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_PV_bootloader_args
+)
+"records.ml" 841 46722 46774 "records.ml" 841 46722 46777
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 841 46722 46778 "records.ml" 841 46722 46788
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 841 46722 46789 "records.ml" 841 46722 46791
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 841 46722 46792 "records.ml" 841 46722 46793
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 841 46722 46736 "records.ml" 841 46722 46737
+)
+"records.ml" 841 46722 46741 "records.ml" 841 46722 46793
+type(
+  unit
+)
+"records.ml" 841 46722 46731 "records.ml" 841 46722 46794
+type(
+  string -> unit
+)
+"records.ml" 841 46722 46795 "records.ml" 841 46722 46797
+type(
+  unit
+)
+"records.ml" 839 46627 46630 "records.ml" 841 46722 46797
+type(
+  field
+)
+"records.ml" 842 46799 46802 "records.ml" 842 46799 46812
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 842 46799 46819 "records.ml" 842 46799 46840
+type(
+  string
+)
+"records.ml" 843 46841 46855 "records.ml" 843 46841 46857
+type(
+  unit
+)
+"records.ml" 843 46841 46861 "records.ml" 843 46841 46887
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 843 46841 46888 "records.ml" 843 46841 46892
+type(
+  string
+)
+"records.ml" 843 46841 46894 "records.ml" 843 46841 46895
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 843 46841 46896 "records.ml" 843 46841 46898
+type(
+  unit
+)
+"records.ml" 843 46841 46893 "records.ml" 843 46841 46899
+type(
+  API.vM_t
+)
+"records.ml" 843 46841 46893 "records.ml" 843 46841 46926
+type(
+  API.string_to_string_map
+)
+"records.ml" 843 46841 46861 "records.ml" 843 46841 46926
+type(
+  string
+)
+"records.ml" 843 46841 46850 "records.ml" 843 46841 46927
+type(
+  unit -> string
+)
+"records.ml" 843 46841 46928 "records.ml" 843 46841 46930
+type(
+  unit
+)
+"records.ml" 842 46799 46802 "records.ml" 843 46841 46930
+type(
+  field
+)
+"records.ml" 844 46932 46935 "records.ml" 844 46932 46945
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 844 46932 46952 "records.ml" 844 46932 46970
+type(
+  string
+)
+"records.ml" 844 46932 46982 "records.ml" 844 46932 46986
+type(
+  bool
+)
+"records.ml" 845 46987 47001 "records.ml" 845 46987 47003
+type(
+  unit
+)
+"records.ml" 845 46987 47007 "records.ml" 845 46987 47010
+type(
+  string
+)
+"records.ml" 845 46987 47011 "records.ml" 845 46987 47012
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"records.ml" 845 46987 47015 "records.ml" 845 46987 47016
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 845 46987 47017 "records.ml" 845 46987 47019
+type(
+  unit
+)
+"records.ml" 845 46987 47014 "records.ml" 845 46987 47020
+type(
+  API.vM_t
+)
+"records.ml" 845 46987 47013 "records.ml" 845 46987 47047
+type(
+  string
+)
+"records.ml" 845 46987 47048 "records.ml" 845 46987 47049
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"records.ml" 845 46987 47050 "records.ml" 845 46987 47053
+type(
+  string
+)
+"records.ml" 845 46987 47013 "records.ml" 845 46987 47053
+type(
+  string
+)
+"records.ml" 845 46987 47007 "records.ml" 845 46987 47053
+type(
+  string
+)
+"records.ml" 845 46987 46996 "records.ml" 845 46987 47054
+type(
+  unit -> string
+)
+"records.ml" 845 46987 47055 "records.ml" 845 46987 47057
+type(
+  unit
+)
+"records.ml" 844 46932 46935 "records.ml" 845 46987 47057
+type(
+  field
+)
+"records.ml" 846 47059 47062 "records.ml" 846 47059 47072
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 846 47059 47079 "records.ml" 846 47059 47092
+type(
+  string
+)
+"records.ml" 847 47093 47107 "records.ml" 847 47093 47109
+type(
+  unit
+)
+"records.ml" 847 47093 47113 "records.ml" 847 47093 47130
+type(
+  API.ref_host -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 847 47093 47132 "records.ml" 847 47093 47133
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 847 47093 47134 "records.ml" 847 47093 47136
+type(
+  unit
+)
+"records.ml" 847 47093 47131 "records.ml" 847 47093 47137
+type(
+  API.vM_t
+)
+"records.ml" 847 47093 47131 "records.ml" 847 47093 47156
+type(
+  API.ref_host
+)
+"records.ml" 847 47093 47113 "records.ml" 847 47093 47156
+type(
+  string
+)
+"records.ml" 847 47093 47102 "records.ml" 847 47093 47157
+type(
+  unit -> string
+)
+"records.ml" 847 47093 47158 "records.ml" 847 47093 47160
+type(
+  unit
+)
+"records.ml" 846 47059 47062 "records.ml" 847 47093 47160
+type(
+  field
+)
+"records.ml" 848 47162 47165 "records.ml" 848 47162 47175
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 848 47162 47182 "records.ml" 848 47162 47192
+type(
+  string
+)
+"records.ml" 849 47193 47207 "records.ml" 849 47193 47209
+type(
+  unit
+)
+"records.ml" 849 47193 47213 "records.ml" 849 47193 47230
+type(
+  API.ref_host -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 849 47193 47232 "records.ml" 849 47193 47233
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 849 47193 47234 "records.ml" 849 47193 47236
+type(
+  unit
+)
+"records.ml" 849 47193 47231 "records.ml" 849 47193 47237
+type(
+  API.vM_t
+)
+"records.ml" 849 47193 47231 "records.ml" 849 47193 47253
+type(
+  API.ref_host
+)
+"records.ml" 849 47193 47213 "records.ml" 849 47193 47253
+type(
+  string
+)
+"records.ml" 849 47193 47202 "records.ml" 849 47193 47254
+type(
+  unit -> string
+)
+"records.ml" 850 47255 47269 "records.ml" 850 47255 47270
+type(
+  string
+)
+ident(
+  def x "records.ml" 850 47255 47274 "records.ml" 850 47255 47425
+)
+"records.ml" 850 47255 47277 "records.ml" 850 47255 47278
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 850 47255 47269 "records.ml" 850 47255 47270
+)
+"records.ml" 850 47255 47278 "records.ml" 850 47255 47279
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"records.ml" 850 47255 47279 "records.ml" 850 47255 47281
+type(
+  string
+)
+"records.ml" 850 47255 47277 "records.ml" 850 47255 47281
+type(
+  bool
+)
+"records.ml" 850 47255 47287 "records.ml" 850 47255 47309
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:API.ref_host -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_affinity
+)
+"records.ml" 850 47255 47310 "records.ml" 850 47255 47313
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 850 47255 47314 "records.ml" 850 47255 47324
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 850 47255 47325 "records.ml" 850 47255 47327
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 850 47255 47328 "records.ml" 850 47255 47336
+type(
+  API.ref_host
+)
+ident(
+  ext_ref Ref.null
+)
+"records.ml" 850 47255 47287 "records.ml" 850 47255 47336
+type(
+  unit
+)
+"records.ml" 850 47255 47342 "records.ml" 850 47255 47364
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:API.ref_host -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_affinity
+)
+"records.ml" 850 47255 47365 "records.ml" 850 47255 47368
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 850 47255 47369 "records.ml" 850 47255 47379
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 850 47255 47380 "records.ml" 850 47255 47382
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 850 47255 47384 "records.ml" 850 47255 47407
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> uuid:string -> API.ref_host
+)
+ident(
+  ext_ref Client.( Client ).( Host ).get_by_uuid
+)
+"records.ml" 850 47255 47408 "records.ml" 850 47255 47411
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 850 47255 47412 "records.ml" 850 47255 47422
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 850 47255 47423 "records.ml" 850 47255 47424
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 850 47255 47269 "records.ml" 850 47255 47270
+)
+"records.ml" 850 47255 47383 "records.ml" 850 47255 47425
+type(
+  API.ref_host
+)
+"records.ml" 850 47255 47342 "records.ml" 850 47255 47425
+type(
+  unit
+)
+"records.ml" 850 47255 47274 "records.ml" 850 47255 47425
+type(
+  unit
+)
+"records.ml" 850 47255 47264 "records.ml" 850 47255 47426
+type(
+  string -> unit
+)
+"records.ml" 850 47255 47427 "records.ml" 850 47255 47429
+type(
+  unit
+)
+"records.ml" 848 47162 47165 "records.ml" 850 47255 47429
+type(
+  field
+)
+"records.ml" 851 47431 47434 "records.ml" 851 47431 47444
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 851 47431 47451 "records.ml" 851 47431 47465
+type(
+  string
+)
+"records.ml" 852 47466 47480 "records.ml" 852 47466 47482
+type(
+  unit
+)
+"records.ml" 852 47466 47486 "records.ml" 852 47466 47512
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 852 47466 47513 "records.ml" 852 47466 47517
+type(
+  string
+)
+"records.ml" 852 47466 47519 "records.ml" 852 47466 47520
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 852 47466 47521 "records.ml" 852 47466 47523
+type(
+  unit
+)
+"records.ml" 852 47466 47518 "records.ml" 852 47466 47524
+type(
+  API.vM_t
+)
+"records.ml" 852 47466 47518 "records.ml" 852 47466 47544
+type(
+  API.string_to_string_map
+)
+"records.ml" 852 47466 47486 "records.ml" 852 47466 47544
+type(
+  string
+)
+"records.ml" 852 47466 47475 "records.ml" 852 47466 47545
+type(
+  unit -> string
+)
+"records.ml" 853 47546 47567 "records.ml" 853 47546 47568
+type(
+  string
+)
+ident(
+  def k "records.ml" 853 47546 47569 "records.ml" 853 47546 47625
+)
+"records.ml" 853 47546 47569 "records.ml" 853 47546 47570
+type(
+  string
+)
+ident(
+  def v "records.ml" 853 47546 47574 "records.ml" 853 47546 47625
+)
+"records.ml" 853 47546 47574 "records.ml" 853 47546 47603
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VM -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).add_to_other_config
+)
+"records.ml" 853 47546 47604 "records.ml" 853 47546 47607
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 853 47546 47608 "records.ml" 853 47546 47618
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 853 47546 47619 "records.ml" 853 47546 47621
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 853 47546 47622 "records.ml" 853 47546 47623
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 853 47546 47567 "records.ml" 853 47546 47568
+)
+"records.ml" 853 47546 47624 "records.ml" 853 47546 47625
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 853 47546 47569 "records.ml" 853 47546 47570
+)
+"records.ml" 853 47546 47574 "records.ml" 853 47546 47625
+type(
+  unit
+)
+"records.ml" 853 47546 47562 "records.ml" 853 47546 47626
+type(
+  string -> string -> unit
+)
+"records.ml" 854 47627 47653 "records.ml" 854 47627 47654
+type(
+  string
+)
+ident(
+  def k "records.ml" 854 47627 47658 "records.ml" 854 47627 47712
+)
+"records.ml" 854 47627 47658 "records.ml" 854 47627 47692
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).remove_from_other_config
+)
+"records.ml" 854 47627 47693 "records.ml" 854 47627 47696
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 854 47627 47697 "records.ml" 854 47627 47707
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 854 47627 47708 "records.ml" 854 47627 47710
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 854 47627 47711 "records.ml" 854 47627 47712
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 854 47627 47653 "records.ml" 854 47627 47654
+)
+"records.ml" 854 47627 47658 "records.ml" 854 47627 47712
+type(
+  unit
+)
+"records.ml" 854 47627 47648 "records.ml" 854 47627 47713
+type(
+  string -> unit
+)
+"records.ml" 855 47715 47733 "records.ml" 855 47715 47735
+type(
+  unit
+)
+"records.ml" 855 47715 47740 "records.ml" 855 47715 47741
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 855 47715 47742 "records.ml" 855 47715 47744
+type(
+  unit
+)
+"records.ml" 855 47715 47739 "records.ml" 855 47715 47745
+type(
+  API.vM_t
+)
+"records.ml" 855 47715 47739 "records.ml" 855 47715 47765
+type(
+  API.string_to_string_map
+)
+"records.ml" 855 47715 47728 "records.ml" 855 47715 47766
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 855 47715 47767 "records.ml" 855 47715 47769
+type(
+  unit
+)
+"records.ml" 851 47431 47434 "records.ml" 855 47715 47769
+type(
+  field
+)
+"records.ml" 856 47771 47774 "records.ml" 856 47771 47784
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 856 47771 47791 "records.ml" 856 47771 47799
+type(
+  string
+)
+"records.ml" 857 47800 47814 "records.ml" 857 47800 47816
+type(
+  unit
+)
+"records.ml" 857 47800 47820 "records.ml" 857 47800 47835
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 857 47800 47837 "records.ml" 857 47800 47838
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 857 47800 47839 "records.ml" 857 47800 47841
+type(
+  unit
+)
+"records.ml" 857 47800 47836 "records.ml" 857 47800 47842
+type(
+  API.vM_t
+)
+"records.ml" 857 47800 47836 "records.ml" 857 47800 47855
+type(
+  int64
+)
+"records.ml" 857 47800 47820 "records.ml" 857 47800 47855
+type(
+  string
+)
+"records.ml" 857 47800 47809 "records.ml" 857 47800 47856
+type(
+  unit -> string
+)
+"records.ml" 857 47800 47857 "records.ml" 857 47800 47859
+type(
+  unit
+)
+"records.ml" 856 47771 47774 "records.ml" 857 47800 47859
+type(
+  field
+)
+"records.ml" 858 47861 47864 "records.ml" 858 47861 47874
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 858 47861 47881 "records.ml" 858 47861 47898
+type(
+  string
+)
+"records.ml" 859 47899 47913 "records.ml" 859 47899 47915
+type(
+  unit
+)
+"records.ml" 859 47899 47920 "records.ml" 859 47899 47921
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 859 47899 47922 "records.ml" 859 47899 47924
+type(
+  unit
+)
+"records.ml" 859 47899 47919 "records.ml" 859 47899 47925
+type(
+  API.vM_t
+)
+"records.ml" 859 47899 47919 "records.ml" 859 47899 47948
+type(
+  string
+)
+"records.ml" 859 47899 47908 "records.ml" 859 47899 47949
+type(
+  unit -> string
+)
+"records.ml" 859 47899 47950 "records.ml" 859 47899 47952
+type(
+  unit
+)
+"records.ml" 858 47861 47864 "records.ml" 859 47899 47952
+type(
+  field
+)
+"records.ml" 860 47954 47957 "records.ml" 860 47954 47967
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 860 47954 47974 "records.ml" 860 47954 47989
+type(
+  string
+)
+"records.ml" 861 47990 48004 "records.ml" 861 47990 48006
+type(
+  unit
+)
+"records.ml" 861 47990 48010 "records.ml" 861 47990 48036
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 861 47990 48037 "records.ml" 861 47990 48041
+type(
+  string
+)
+"records.ml" 861 47990 48043 "records.ml" 861 47990 48044
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 861 47990 48045 "records.ml" 861 47990 48047
+type(
+  unit
+)
+"records.ml" 861 47990 48042 "records.ml" 861 47990 48048
+type(
+  API.vM_t
+)
+"records.ml" 861 47990 48042 "records.ml" 861 47990 48069
+type(
+  API.string_to_string_map
+)
+"records.ml" 861 47990 48010 "records.ml" 861 47990 48069
+type(
+  string
+)
+"records.ml" 861 47990 47999 "records.ml" 861 47990 48070
+type(
+  unit -> string
+)
+"records.ml" 862 48072 48093 "records.ml" 862 48072 48094
+type(
+  string
+)
+ident(
+  def k "records.ml" 862 48072 48095 "records.ml" 862 48072 48152
+)
+"records.ml" 862 48072 48095 "records.ml" 862 48072 48096
+type(
+  string
+)
+ident(
+  def v "records.ml" 862 48072 48100 "records.ml" 862 48072 48152
+)
+"records.ml" 862 48072 48100 "records.ml" 862 48072 48130
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VM -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).add_to_xenstore_data
+)
+"records.ml" 862 48072 48131 "records.ml" 862 48072 48134
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 862 48072 48135 "records.ml" 862 48072 48145
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 862 48072 48146 "records.ml" 862 48072 48148
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 862 48072 48149 "records.ml" 862 48072 48150
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 862 48072 48093 "records.ml" 862 48072 48094
+)
+"records.ml" 862 48072 48151 "records.ml" 862 48072 48152
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 862 48072 48095 "records.ml" 862 48072 48096
+)
+"records.ml" 862 48072 48100 "records.ml" 862 48072 48152
+type(
+  unit
+)
+"records.ml" 862 48072 48088 "records.ml" 862 48072 48153
+type(
+  string -> string -> unit
+)
+"records.ml" 863 48154 48180 "records.ml" 863 48154 48181
+type(
+  string
+)
+ident(
+  def k "records.ml" 863 48154 48185 "records.ml" 863 48154 48240
+)
+"records.ml" 863 48154 48185 "records.ml" 863 48154 48220
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).remove_from_xenstore_data
+)
+"records.ml" 863 48154 48221 "records.ml" 863 48154 48224
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 863 48154 48225 "records.ml" 863 48154 48235
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 863 48154 48236 "records.ml" 863 48154 48238
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 863 48154 48239 "records.ml" 863 48154 48240
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 863 48154 48180 "records.ml" 863 48154 48181
+)
+"records.ml" 863 48154 48185 "records.ml" 863 48154 48240
+type(
+  unit
+)
+"records.ml" 863 48154 48175 "records.ml" 863 48154 48241
+type(
+  string -> unit
+)
+"records.ml" 864 48243 48261 "records.ml" 864 48243 48263
+type(
+  unit
+)
+"records.ml" 864 48243 48268 "records.ml" 864 48243 48269
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 864 48243 48270 "records.ml" 864 48243 48272
+type(
+  unit
+)
+"records.ml" 864 48243 48267 "records.ml" 864 48243 48273
+type(
+  API.vM_t
+)
+"records.ml" 864 48243 48267 "records.ml" 864 48243 48294
+type(
+  API.string_to_string_map
+)
+"records.ml" 864 48243 48256 "records.ml" 864 48243 48295
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 864 48243 48296 "records.ml" 864 48243 48298
+type(
+  unit
+)
+"records.ml" 860 47954 47957 "records.ml" 864 48243 48298
+type(
+  field
+)
+"records.ml" 865 48300 48303 "records.ml" 865 48300 48313
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 865 48300 48320 "records.ml" 865 48300 48335
+type(
+  string
+)
+"records.ml" 865 48300 48348 "records.ml" 865 48300 48352
+type(
+  bool
+)
+"records.ml" 866 48353 48367 "records.ml" 866 48353 48369
+type(
+  unit
+)
+"records.ml" 866 48353 48373 "records.ml" 866 48353 48387
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 866 48353 48390 "records.ml" 866 48353 48391
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 866 48353 48392 "records.ml" 866 48353 48394
+type(
+  unit
+)
+"records.ml" 866 48353 48389 "records.ml" 866 48353 48395
+type(
+  API.vM_t
+)
+"records.ml" 866 48353 48388 "records.ml" 866 48353 48417
+type(
+  bool
+)
+"records.ml" 866 48353 48373 "records.ml" 866 48353 48417
+type(
+  string
+)
+"records.ml" 866 48353 48362 "records.ml" 866 48353 48418
+type(
+  unit -> string
+)
+"records.ml" 867 48419 48433 "records.ml" 867 48419 48434
+type(
+  string
+)
+ident(
+  def x "records.ml" 867 48419 48438 "records.ml" 867 48419 48502
+)
+"records.ml" 867 48419 48438 "records.ml" 867 48419 48465
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:bool -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_ha_always_run
+)
+"records.ml" 867 48419 48466 "records.ml" 867 48419 48469
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 867 48419 48470 "records.ml" 867 48419 48480
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 867 48419 48481 "records.ml" 867 48419 48483
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 867 48419 48485 "records.ml" 867 48419 48499
+type(
+  string -> bool
+)
+ident(
+  ext_ref Pervasives.bool_of_string
+)
+"records.ml" 867 48419 48500 "records.ml" 867 48419 48501
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 867 48419 48433 "records.ml" 867 48419 48434
+)
+"records.ml" 867 48419 48484 "records.ml" 867 48419 48502
+type(
+  bool
+)
+"records.ml" 867 48419 48438 "records.ml" 867 48419 48502
+type(
+  unit
+)
+"records.ml" 867 48419 48428 "records.ml" 867 48419 48503
+type(
+  string -> unit
+)
+"records.ml" 867 48419 48504 "records.ml" 867 48419 48506
+type(
+  unit
+)
+"records.ml" 865 48300 48303 "records.ml" 867 48419 48506
+type(
+  field
+)
+"records.ml" 868 48508 48511 "records.ml" 868 48508 48521
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 868 48508 48528 "records.ml" 868 48508 48549
+type(
+  string
+)
+"records.ml" 869 48550 48564 "records.ml" 869 48550 48566
+type(
+  unit
+)
+"records.ml" 869 48550 48571 "records.ml" 869 48550 48572
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 869 48550 48573 "records.ml" 869 48550 48575
+type(
+  unit
+)
+"records.ml" 869 48550 48570 "records.ml" 869 48550 48576
+type(
+  API.vM_t
+)
+"records.ml" 869 48550 48570 "records.ml" 869 48550 48603
+type(
+  string
+)
+"records.ml" 869 48550 48559 "records.ml" 869 48550 48604
+type(
+  unit -> string
+)
+"records.ml" 870 48605 48619 "records.ml" 870 48605 48620
+type(
+  string
+)
+ident(
+  def x "records.ml" 870 48605 48624 "records.ml" 870 48605 48677
+)
+"records.ml" 870 48605 48624 "records.ml" 870 48605 48657
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_ha_restart_priority
+)
+"records.ml" 870 48605 48658 "records.ml" 870 48605 48661
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 870 48605 48662 "records.ml" 870 48605 48672
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 870 48605 48673 "records.ml" 870 48605 48675
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 870 48605 48676 "records.ml" 870 48605 48677
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 870 48605 48619 "records.ml" 870 48605 48620
+)
+"records.ml" 870 48605 48624 "records.ml" 870 48605 48677
+type(
+  unit
+)
+"records.ml" 870 48605 48614 "records.ml" 870 48605 48678
+type(
+  string -> unit
+)
+"records.ml" 870 48605 48679 "records.ml" 870 48605 48681
+type(
+  unit
+)
+"records.ml" 868 48508 48511 "records.ml" 870 48605 48681
+type(
+  field
+)
+"records.ml" 871 48683 48686 "records.ml" 871 48683 48696
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 871 48683 48703 "records.ml" 871 48683 48710
+type(
+  string
+)
+"records.ml" 872 48711 48725 "records.ml" 872 48711 48727
+type(
+  unit
+)
+"records.ml" 872 48711 48731 "records.ml" 872 48711 48758
+type(
+  (API.ref_blob -> string) -> string -> API.string_to_ref_blob_map -> string
+)
+ident(
+  ext_ref Record_util.s2brm_to_string
+)
+"records.ml" 872 48711 48759 "records.ml" 872 48711 48776
+type(
+  API.ref_blob -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 872 48711 48777 "records.ml" 872 48711 48781
+type(
+  string
+)
+"records.ml" 872 48711 48783 "records.ml" 872 48711 48784
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 872 48711 48785 "records.ml" 872 48711 48787
+type(
+  unit
+)
+"records.ml" 872 48711 48782 "records.ml" 872 48711 48788
+type(
+  API.vM_t
+)
+"records.ml" 872 48711 48782 "records.ml" 872 48711 48801
+type(
+  API.string_to_ref_blob_map
+)
+"records.ml" 872 48711 48731 "records.ml" 872 48711 48801
+type(
+  string
+)
+"records.ml" 872 48711 48720 "records.ml" 872 48711 48802
+type(
+  unit -> string
+)
+"records.ml" 872 48711 48803 "records.ml" 872 48711 48805
+type(
+  unit
+)
+"records.ml" 871 48683 48686 "records.ml" 872 48711 48805
+type(
+  field
+)
+"records.ml" 873 48807 48810 "records.ml" 873 48807 48820
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 873 48807 48827 "records.ml" 873 48807 48839
+type(
+  string
+)
+"records.ml" 874 48840 48854 "records.ml" 874 48840 48856
+type(
+  unit
+)
+"records.ml" 874 48840 48860 "records.ml" 874 48840 48867
+type(
+  string -> string option -> string
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 874 48840 48868 "records.ml" 874 48840 48880
+type(
+  string
+)
+ident(
+  int_ref unknown_time "records.ml" 24 779 783 "records.ml" 24 779 795
+)
+"records.ml" 874 48840 48882 "records.ml" 874 48840 48885
+type(
+  (API.vM_metrics_t -> string) -> API.vM_metrics_t option -> string option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 874 48840 48891 "records.ml" 874 48840 48892
+type(
+  API.vM_metrics_t
+)
+ident(
+  def m "records.ml" 874 48840 48896 "records.ml" 874 48840 48938
+)
+"records.ml" 874 48840 48896 "records.ml" 874 48840 48910
+type(
+  API.datetime -> string
+)
+ident(
+  ext_ref Date.to_string
+)
+"records.ml" 874 48840 48911 "records.ml" 874 48840 48912
+type(
+  API.vM_metrics_t
+)
+ident(
+  int_ref m "records.ml" 874 48840 48891 "records.ml" 874 48840 48892
+)
+"records.ml" 874 48840 48911 "records.ml" 874 48840 48938
+type(
+  API.datetime
+)
+"records.ml" 874 48840 48896 "records.ml" 874 48840 48938
+type(
+  string
+)
+"records.ml" 874 48840 48886 "records.ml" 874 48840 48939
+type(
+  API.vM_metrics_t -> string
+)
+"records.ml" 874 48840 48941 "records.ml" 874 48840 48943
+type(
+  unit -> API.vM_metrics_t option
+)
+ident(
+  int_ref xm "records.ml" 674 36254 36259 "records.ml" 674 36254 36261
+)
+"records.ml" 874 48840 48944 "records.ml" 874 48840 48946
+type(
+  unit
+)
+"records.ml" 874 48840 48940 "records.ml" 874 48840 48947
+type(
+  API.vM_metrics_t option
+)
+"records.ml" 874 48840 48881 "records.ml" 874 48840 48949
+type(
+  string option
+)
+"records.ml" 874 48840 48860 "records.ml" 874 48840 48949
+type(
+  string
+)
+"records.ml" 874 48840 48849 "records.ml" 874 48840 48950
+type(
+  unit -> string
+)
+"records.ml" 874 48840 48951 "records.ml" 874 48840 48953
+type(
+  unit
+)
+"records.ml" 873 48807 48810 "records.ml" 874 48840 48953
+type(
+  field
+)
+"records.ml" 875 48955 48958 "records.ml" 875 48955 48968
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 875 48955 48975 "records.ml" 875 48955 48989
+type(
+  string
+)
+"records.ml" 876 48990 49004 "records.ml" 876 48990 49006
+type(
+  unit
+)
+"records.ml" 876 48990 49010 "records.ml" 876 48990 49017
+type(
+  string -> string option -> string
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 876 48990 49018 "records.ml" 876 48990 49030
+type(
+  string
+)
+ident(
+  int_ref unknown_time "records.ml" 24 779 783 "records.ml" 24 779 795
+)
+"records.ml" 876 48990 49032 "records.ml" 876 48990 49035
+type(
+  (API.vM_metrics_t -> string) -> API.vM_metrics_t option -> string option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 876 48990 49041 "records.ml" 876 48990 49042
+type(
+  API.vM_metrics_t
+)
+ident(
+  def m "records.ml" 876 48990 49046 "records.ml" 876 48990 49090
+)
+"records.ml" 876 48990 49046 "records.ml" 876 48990 49060
+type(
+  API.datetime -> string
+)
+ident(
+  ext_ref Date.to_string
+)
+"records.ml" 876 48990 49061 "records.ml" 876 48990 49062
+type(
+  API.vM_metrics_t
+)
+ident(
+  int_ref m "records.ml" 876 48990 49041 "records.ml" 876 48990 49042
+)
+"records.ml" 876 48990 49061 "records.ml" 876 48990 49090
+type(
+  API.datetime
+)
+"records.ml" 876 48990 49046 "records.ml" 876 48990 49090
+type(
+  string
+)
+"records.ml" 876 48990 49036 "records.ml" 876 48990 49091
+type(
+  API.vM_metrics_t -> string
+)
+"records.ml" 876 48990 49093 "records.ml" 876 48990 49095
+type(
+  unit -> API.vM_metrics_t option
+)
+ident(
+  int_ref xm "records.ml" 674 36254 36259 "records.ml" 674 36254 36261
+)
+"records.ml" 876 48990 49096 "records.ml" 876 48990 49098
+type(
+  unit
+)
+"records.ml" 876 48990 49092 "records.ml" 876 48990 49099
+type(
+  API.vM_metrics_t option
+)
+"records.ml" 876 48990 49031 "records.ml" 876 48990 49101
+type(
+  string option
+)
+"records.ml" 876 48990 49010 "records.ml" 876 48990 49101
+type(
+  string
+)
+"records.ml" 876 48990 48999 "records.ml" 876 48990 49102
+type(
+  unit -> string
+)
+"records.ml" 876 48990 49103 "records.ml" 876 48990 49105
+type(
+  unit
+)
+"records.ml" 875 48955 48958 "records.ml" 876 48990 49105
+type(
+  field
+)
+"records.ml" 877 49107 49110 "records.ml" 877 49107 49120
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 877 49107 49127 "records.ml" 877 49107 49141
+type(
+  string
+)
+"records.ml" 878 49142 49156 "records.ml" 878 49142 49158
+type(
+  unit
+)
+"records.ml" 878 49142 49162 "records.ml" 878 49142 49169
+type(
+  string -> string option -> string
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 878 49142 49170 "records.ml" 878 49142 49173
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 878 49142 49175 "records.ml" 878 49142 49178
+type(
+  (API.vM_metrics_t -> string) -> API.vM_metrics_t option -> string option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 878 49142 49184 "records.ml" 878 49142 49185
+type(
+  API.vM_metrics_t
+)
+ident(
+  def m "records.ml" 878 49142 49189 "records.ml" 878 49142 49234
+)
+"records.ml" 878 49142 49189 "records.ml" 878 49142 49204
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 878 49142 49205 "records.ml" 878 49142 49206
+type(
+  API.vM_metrics_t
+)
+ident(
+  int_ref m "records.ml" 878 49142 49184 "records.ml" 878 49142 49185
+)
+"records.ml" 878 49142 49205 "records.ml" 878 49142 49234
+type(
+  int64
+)
+"records.ml" 878 49142 49189 "records.ml" 878 49142 49234
+type(
+  string
+)
+"records.ml" 878 49142 49179 "records.ml" 878 49142 49235
+type(
+  API.vM_metrics_t -> string
+)
+"records.ml" 878 49142 49237 "records.ml" 878 49142 49239
+type(
+  unit -> API.vM_metrics_t option
+)
+ident(
+  int_ref xm "records.ml" 674 36254 36259 "records.ml" 674 36254 36261
+)
+"records.ml" 878 49142 49240 "records.ml" 878 49142 49242
+type(
+  unit
+)
+"records.ml" 878 49142 49236 "records.ml" 878 49142 49243
+type(
+  API.vM_metrics_t option
+)
+"records.ml" 878 49142 49174 "records.ml" 878 49142 49245
+type(
+  string option
+)
+"records.ml" 878 49142 49162 "records.ml" 878 49142 49245
+type(
+  string
+)
+"records.ml" 878 49142 49151 "records.ml" 878 49142 49246
+type(
+  unit -> string
+)
+"records.ml" 878 49142 49247 "records.ml" 878 49142 49249
+type(
+  unit
+)
+"records.ml" 877 49107 49110 "records.ml" 878 49142 49249
+type(
+  field
+)
+"records.ml" 879 49251 49254 "records.ml" 879 49251 49264
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 879 49251 49271 "records.ml" 879 49251 49290
+type(
+  string
+)
+"records.ml" 880 49291 49305 "records.ml" 880 49291 49307
+type(
+  unit
+)
+"records.ml" 880 49291 49319 "records.ml" 880 49291 49323
+type(
+  (string * string) list
+)
+ident(
+  def info "records.ml" 880 49291 49354 "records.ml" 880 49291 49431
+)
+"records.ml" 880 49291 49326 "records.ml" 880 49291 49347
+type(
+  unit -> (string * string) list
+)
+ident(
+  int_ref get_vcpus_utilisation "records.ml" 677 36486 36491 "records.ml" 677 36486 36512
+)
+"records.ml" 880 49291 49348 "records.ml" 880 49291 49350
+type(
+  unit
+)
+"records.ml" 880 49291 49326 "records.ml" 880 49291 49350
+type(
+  (string * string) list
+)
+"records.ml" 880 49291 49354 "records.ml" 880 49291 49367
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 880 49291 49368 "records.ml" 880 49291 49372
+type(
+  string
+)
+"records.ml" 880 49291 49374 "records.ml" 880 49291 49382
+type(
+  (string * string -> string) -> (string * string) list -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 880 49291 49389 "records.ml" 880 49291 49390
+type(
+  string
+)
+ident(
+  def a "records.ml" 880 49291 49397 "records.ml" 880 49291 49424
+)
+"records.ml" 880 49291 49391 "records.ml" 880 49291 49392
+type(
+  string
+)
+ident(
+  def b "records.ml" 880 49291 49397 "records.ml" 880 49291 49424
+)
+"records.ml" 880 49291 49388 "records.ml" 880 49291 49393
+type(
+  string * string
+)
+"records.ml" 880 49291 49397 "records.ml" 880 49291 49411
+type(
+  (string -> string -> string, unit, string) format ->
+  string -> string -> string
+)
+ident(
+  ext_ref Printf.sprintf
+)
+"records.ml" 880 49291 49412 "records.ml" 880 49291 49420
+type(
+  (string -> string -> string, unit, string) format
+)
+"records.ml" 880 49291 49421 "records.ml" 880 49291 49422
+type(
+  string
+)
+ident(
+  int_ref a "records.ml" 880 49291 49389 "records.ml" 880 49291 49390
+)
+"records.ml" 880 49291 49423 "records.ml" 880 49291 49424
+type(
+  string
+)
+ident(
+  int_ref b "records.ml" 880 49291 49391 "records.ml" 880 49291 49392
+)
+"records.ml" 880 49291 49397 "records.ml" 880 49291 49424
+type(
+  string
+)
+"records.ml" 880 49291 49383 "records.ml" 880 49291 49425
+type(
+  string * string -> string
+)
+"records.ml" 880 49291 49426 "records.ml" 880 49291 49430
+type(
+  (string * string) list
+)
+ident(
+  int_ref info "records.ml" 880 49291 49319 "records.ml" 880 49291 49323
+)
+"records.ml" 880 49291 49373 "records.ml" 880 49291 49431
+type(
+  string list
+)
+"records.ml" 880 49291 49354 "records.ml" 880 49291 49431
+type(
+  string
+)
+"records.ml" 880 49291 49315 "records.ml" 880 49291 49431
+type(
+  string
+)
+"records.ml" 880 49291 49437 "records.ml" 880 49291 49438
+type(
+  exn
+)
+"records.ml" 880 49291 49442 "records.ml" 880 49291 49444
+type(
+  string
+)
+"records.ml" 880 49291 49311 "records.ml" 880 49291 49444
+type(
+  string
+)
+"records.ml" 880 49291 49300 "records.ml" 880 49291 49445
+type(
+  unit -> string
+)
+"records.ml" 881 49446 49464 "records.ml" 881 49446 49466
+type(
+  unit
+)
+"records.ml" 881 49446 49474 "records.ml" 881 49446 49495
+type(
+  unit -> (string * string) list
+)
+ident(
+  int_ref get_vcpus_utilisation "records.ml" 677 36486 36491 "records.ml" 677 36486 36512
+)
+"records.ml" 881 49446 49496 "records.ml" 881 49446 49498
+type(
+  unit
+)
+"records.ml" 881 49446 49474 "records.ml" 881 49446 49498
+type(
+  (string * string) list
+)
+"records.ml" 881 49446 49504 "records.ml" 881 49446 49505
+type(
+  exn
+)
+"records.ml" 881 49446 49509 "records.ml" 881 49446 49511
+type(
+  (string * string) list
+)
+"records.ml" 881 49446 49470 "records.ml" 881 49446 49511
+type(
+  (string * string) list
+)
+"records.ml" 881 49446 49459 "records.ml" 881 49446 49512
+type(
+  unit -> (string * string) list
+)
+"records.ml" 881 49446 49524 "records.ml" 881 49446 49528
+type(
+  bool
+)
+"records.ml" 881 49446 49529 "records.ml" 881 49446 49531
+type(
+  unit
+)
+"records.ml" 879 49251 49254 "records.ml" 881 49446 49531
+type(
+  field
+)
+"records.ml" 882 49533 49536 "records.ml" 882 49533 49546
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 882 49533 49553 "records.ml" 882 49533 49565
+type(
+  string
+)
+"records.ml" 883 49566 49580 "records.ml" 883 49566 49582
+type(
+  unit
+)
+"records.ml" 883 49566 49586 "records.ml" 883 49566 49593
+type(
+  string -> string option -> string
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 883 49566 49594 "records.ml" 883 49566 49597
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 883 49566 49599 "records.ml" 883 49566 49602
+type(
+  (API.vM_guest_metrics_t -> string) ->
+  API.vM_guest_metrics_t option -> string option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 883 49566 49608 "records.ml" 883 49566 49609
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  def m "records.ml" 883 49566 49613 "records.ml" 883 49566 49678
+)
+"records.ml" 883 49566 49613 "records.ml" 883 49566 49639
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 883 49566 49640 "records.ml" 883 49566 49644
+type(
+  string
+)
+"records.ml" 883 49566 49645 "records.ml" 883 49566 49646
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  int_ref m "records.ml" 883 49566 49608 "records.ml" 883 49566 49609
+)
+"records.ml" 883 49566 49645 "records.ml" 883 49566 49678
+type(
+  API.string_to_string_map
+)
+"records.ml" 883 49566 49613 "records.ml" 883 49566 49678
+type(
+  string
+)
+"records.ml" 883 49566 49603 "records.ml" 883 49566 49679
+type(
+  API.vM_guest_metrics_t -> string
+)
+"records.ml" 883 49566 49681 "records.ml" 883 49566 49684
+type(
+  unit -> API.vM_guest_metrics_t option
+)
+ident(
+  int_ref xgm "records.ml" 698 37112 37117 "records.ml" 698 37112 37120
+)
+"records.ml" 883 49566 49685 "records.ml" 883 49566 49687
+type(
+  unit
+)
+"records.ml" 883 49566 49680 "records.ml" 883 49566 49688
+type(
+  API.vM_guest_metrics_t option
+)
+"records.ml" 883 49566 49598 "records.ml" 883 49566 49689
+type(
+  string option
+)
+"records.ml" 883 49566 49586 "records.ml" 883 49566 49689
+type(
+  string
+)
+"records.ml" 883 49566 49575 "records.ml" 883 49566 49690
+type(
+  unit -> string
+)
+"records.ml" 884 49691 49709 "records.ml" 884 49691 49711
+type(
+  unit
+)
+"records.ml" 884 49691 49715 "records.ml" 884 49691 49722
+type(
+  API.string_to_string_map ->
+  API.string_to_string_map option -> API.string_to_string_map
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 884 49691 49723 "records.ml" 884 49691 49725
+type(
+  API.string_to_string_map
+)
+"records.ml" 884 49691 49727 "records.ml" 884 49691 49730
+type(
+  (API.vM_guest_metrics_t -> API.string_to_string_map) ->
+  API.vM_guest_metrics_t option -> API.string_to_string_map option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 884 49691 49736 "records.ml" 884 49691 49737
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  def m "records.ml" 884 49691 49741 "records.ml" 884 49691 49774
+)
+"records.ml" 884 49691 49741 "records.ml" 884 49691 49742
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  int_ref m "records.ml" 884 49691 49736 "records.ml" 884 49691 49737
+)
+"records.ml" 884 49691 49741 "records.ml" 884 49691 49774
+type(
+  API.string_to_string_map
+)
+"records.ml" 884 49691 49731 "records.ml" 884 49691 49775
+type(
+  API.vM_guest_metrics_t -> API.string_to_string_map
+)
+"records.ml" 884 49691 49777 "records.ml" 884 49691 49780
+type(
+  unit -> API.vM_guest_metrics_t option
+)
+ident(
+  int_ref xgm "records.ml" 698 37112 37117 "records.ml" 698 37112 37120
+)
+"records.ml" 884 49691 49781 "records.ml" 884 49691 49783
+type(
+  unit
+)
+"records.ml" 884 49691 49776 "records.ml" 884 49691 49784
+type(
+  API.vM_guest_metrics_t option
+)
+"records.ml" 884 49691 49726 "records.ml" 884 49691 49785
+type(
+  API.string_to_string_map option
+)
+"records.ml" 884 49691 49715 "records.ml" 884 49691 49785
+type(
+  API.string_to_string_map
+)
+"records.ml" 884 49691 49704 "records.ml" 884 49691 49786
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 884 49691 49787 "records.ml" 884 49691 49789
+type(
+  unit
+)
+"records.ml" 882 49533 49536 "records.ml" 884 49691 49789
+type(
+  field
+)
+"records.ml" 885 49791 49794 "records.ml" 885 49791 49804
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 885 49791 49811 "records.ml" 885 49791 49831
+type(
+  string
+)
+"records.ml" 886 49832 49846 "records.ml" 886 49832 49848
+type(
+  unit
+)
+"records.ml" 886 49832 49852 "records.ml" 886 49832 49859
+type(
+  string -> string option -> string
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 886 49832 49860 "records.ml" 886 49832 49863
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 886 49832 49865 "records.ml" 886 49832 49868
+type(
+  (API.vM_guest_metrics_t -> string) ->
+  API.vM_guest_metrics_t option -> string option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 886 49832 49874 "records.ml" 886 49832 49875
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  def m "records.ml" 886 49832 49879 "records.ml" 886 49832 49952
+)
+"records.ml" 886 49832 49879 "records.ml" 886 49832 49905
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 886 49832 49906 "records.ml" 886 49832 49910
+type(
+  string
+)
+"records.ml" 886 49832 49911 "records.ml" 886 49832 49912
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  int_ref m "records.ml" 886 49832 49874 "records.ml" 886 49832 49875
+)
+"records.ml" 886 49832 49911 "records.ml" 886 49832 49952
+type(
+  API.string_to_string_map
+)
+"records.ml" 886 49832 49879 "records.ml" 886 49832 49952
+type(
+  string
+)
+"records.ml" 886 49832 49869 "records.ml" 886 49832 49953
+type(
+  API.vM_guest_metrics_t -> string
+)
+"records.ml" 886 49832 49955 "records.ml" 886 49832 49958
+type(
+  unit -> API.vM_guest_metrics_t option
+)
+ident(
+  int_ref xgm "records.ml" 698 37112 37117 "records.ml" 698 37112 37120
+)
+"records.ml" 886 49832 49959 "records.ml" 886 49832 49961
+type(
+  unit
+)
+"records.ml" 886 49832 49954 "records.ml" 886 49832 49962
+type(
+  API.vM_guest_metrics_t option
+)
+"records.ml" 886 49832 49864 "records.ml" 886 49832 49964
+type(
+  string option
+)
+"records.ml" 886 49832 49852 "records.ml" 886 49832 49964
+type(
+  string
+)
+"records.ml" 886 49832 49841 "records.ml" 886 49832 49965
+type(
+  unit -> string
+)
+"records.ml" 887 49967 49985 "records.ml" 887 49967 49987
+type(
+  unit
+)
+"records.ml" 887 49967 49991 "records.ml" 887 49967 49998
+type(
+  API.string_to_string_map ->
+  API.string_to_string_map option -> API.string_to_string_map
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 887 49967 49999 "records.ml" 887 49967 50001
+type(
+  API.string_to_string_map
+)
+"records.ml" 887 49967 50003 "records.ml" 887 49967 50006
+type(
+  (API.vM_guest_metrics_t -> API.string_to_string_map) ->
+  API.vM_guest_metrics_t option -> API.string_to_string_map option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 887 49967 50012 "records.ml" 887 49967 50013
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  def m "records.ml" 887 49967 50017 "records.ml" 887 49967 50058
+)
+"records.ml" 887 49967 50017 "records.ml" 887 49967 50018
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  int_ref m "records.ml" 887 49967 50012 "records.ml" 887 49967 50013
+)
+"records.ml" 887 49967 50017 "records.ml" 887 49967 50058
+type(
+  API.string_to_string_map
+)
+"records.ml" 887 49967 50007 "records.ml" 887 49967 50059
+type(
+  API.vM_guest_metrics_t -> API.string_to_string_map
+)
+"records.ml" 887 49967 50061 "records.ml" 887 49967 50064
+type(
+  unit -> API.vM_guest_metrics_t option
+)
+ident(
+  int_ref xgm "records.ml" 698 37112 37117 "records.ml" 698 37112 37120
+)
+"records.ml" 887 49967 50065 "records.ml" 887 49967 50067
+type(
+  unit
+)
+"records.ml" 887 49967 50060 "records.ml" 887 49967 50068
+type(
+  API.vM_guest_metrics_t option
+)
+"records.ml" 887 49967 50002 "records.ml" 887 49967 50069
+type(
+  API.string_to_string_map option
+)
+"records.ml" 887 49967 49991 "records.ml" 887 49967 50069
+type(
+  API.string_to_string_map
+)
+"records.ml" 887 49967 49980 "records.ml" 887 49967 50070
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 887 49967 50071 "records.ml" 887 49967 50073
+type(
+  unit
+)
+"records.ml" 885 49791 49794 "records.ml" 887 49967 50073
+type(
+  field
+)
+"records.ml" 888 50075 50078 "records.ml" 888 50075 50088
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 888 50075 50095 "records.ml" 888 50075 50118
+type(
+  string
+)
+"records.ml" 889 50119 50133 "records.ml" 889 50119 50135
+type(
+  unit
+)
+"records.ml" 889 50119 50139 "records.ml" 889 50119 50146
+type(
+  string -> string option -> string
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 889 50119 50147 "records.ml" 889 50119 50150
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 889 50119 50152 "records.ml" 889 50119 50155
+type(
+  (API.vM_guest_metrics_t -> string) ->
+  API.vM_guest_metrics_t option -> string option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 889 50119 50161 "records.ml" 889 50119 50162
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  def m "records.ml" 889 50119 50166 "records.ml" 889 50119 50225
+)
+"records.ml" 889 50119 50166 "records.ml" 889 50119 50180
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 889 50119 50181 "records.ml" 889 50119 50182
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  int_ref m "records.ml" 889 50119 50161 "records.ml" 889 50119 50162
+)
+"records.ml" 889 50119 50181 "records.ml" 889 50119 50225
+type(
+  bool
+)
+"records.ml" 889 50119 50166 "records.ml" 889 50119 50225
+type(
+  string
+)
+"records.ml" 889 50119 50156 "records.ml" 889 50119 50226
+type(
+  API.vM_guest_metrics_t -> string
+)
+"records.ml" 889 50119 50228 "records.ml" 889 50119 50231
+type(
+  unit -> API.vM_guest_metrics_t option
+)
+ident(
+  int_ref xgm "records.ml" 698 37112 37117 "records.ml" 698 37112 37120
+)
+"records.ml" 889 50119 50232 "records.ml" 889 50119 50234
+type(
+  unit
+)
+"records.ml" 889 50119 50227 "records.ml" 889 50119 50235
+type(
+  API.vM_guest_metrics_t option
+)
+"records.ml" 889 50119 50151 "records.ml" 889 50119 50237
+type(
+  string option
+)
+"records.ml" 889 50119 50139 "records.ml" 889 50119 50237
+type(
+  string
+)
+"records.ml" 889 50119 50128 "records.ml" 889 50119 50238
+type(
+  unit -> string
+)
+"records.ml" 889 50119 50239 "records.ml" 889 50119 50241
+type(
+  unit
+)
+"records.ml" 888 50075 50078 "records.ml" 889 50119 50241
+type(
+  field
+)
+"records.ml" 890 50243 50246 "records.ml" 890 50243 50256
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 890 50243 50263 "records.ml" 890 50243 50271
+type(
+  string
+)
+"records.ml" 891 50272 50286 "records.ml" 891 50272 50288
+type(
+  unit
+)
+"records.ml" 891 50272 50292 "records.ml" 891 50272 50299
+type(
+  string -> string option -> string
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 891 50272 50300 "records.ml" 891 50272 50303
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 891 50272 50305 "records.ml" 891 50272 50308
+type(
+  (API.vM_guest_metrics_t -> string) ->
+  API.vM_guest_metrics_t option -> string option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 891 50272 50314 "records.ml" 891 50272 50315
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  def m "records.ml" 891 50272 50319 "records.ml" 891 50272 50380
+)
+"records.ml" 891 50272 50319 "records.ml" 891 50272 50345
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 891 50272 50346 "records.ml" 891 50272 50350
+type(
+  string
+)
+"records.ml" 891 50272 50351 "records.ml" 891 50272 50352
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  int_ref m "records.ml" 891 50272 50314 "records.ml" 891 50272 50315
+)
+"records.ml" 891 50272 50351 "records.ml" 891 50272 50380
+type(
+  API.string_to_string_map
+)
+"records.ml" 891 50272 50319 "records.ml" 891 50272 50380
+type(
+  string
+)
+"records.ml" 891 50272 50309 "records.ml" 891 50272 50381
+type(
+  API.vM_guest_metrics_t -> string
+)
+"records.ml" 891 50272 50383 "records.ml" 891 50272 50386
+type(
+  unit -> API.vM_guest_metrics_t option
+)
+ident(
+  int_ref xgm "records.ml" 698 37112 37117 "records.ml" 698 37112 37120
+)
+"records.ml" 891 50272 50387 "records.ml" 891 50272 50389
+type(
+  unit
+)
+"records.ml" 891 50272 50382 "records.ml" 891 50272 50390
+type(
+  API.vM_guest_metrics_t option
+)
+"records.ml" 891 50272 50304 "records.ml" 891 50272 50391
+type(
+  string option
+)
+"records.ml" 891 50272 50292 "records.ml" 891 50272 50391
+type(
+  string
+)
+"records.ml" 891 50272 50281 "records.ml" 891 50272 50392
+type(
+  unit -> string
+)
+"records.ml" 892 50394 50412 "records.ml" 892 50394 50414
+type(
+  unit
+)
+"records.ml" 892 50394 50418 "records.ml" 892 50394 50425
+type(
+  API.string_to_string_map ->
+  API.string_to_string_map option -> API.string_to_string_map
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 892 50394 50426 "records.ml" 892 50394 50428
+type(
+  API.string_to_string_map
+)
+"records.ml" 892 50394 50430 "records.ml" 892 50394 50433
+type(
+  (API.vM_guest_metrics_t -> API.string_to_string_map) ->
+  API.vM_guest_metrics_t option -> API.string_to_string_map option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 892 50394 50439 "records.ml" 892 50394 50440
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  def m "records.ml" 892 50394 50444 "records.ml" 892 50394 50473
+)
+"records.ml" 892 50394 50444 "records.ml" 892 50394 50445
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  int_ref m "records.ml" 892 50394 50439 "records.ml" 892 50394 50440
+)
+"records.ml" 892 50394 50444 "records.ml" 892 50394 50473
+type(
+  API.string_to_string_map
+)
+"records.ml" 892 50394 50434 "records.ml" 892 50394 50474
+type(
+  API.vM_guest_metrics_t -> API.string_to_string_map
+)
+"records.ml" 892 50394 50476 "records.ml" 892 50394 50479
+type(
+  unit -> API.vM_guest_metrics_t option
+)
+ident(
+  int_ref xgm "records.ml" 698 37112 37117 "records.ml" 698 37112 37120
+)
+"records.ml" 892 50394 50480 "records.ml" 892 50394 50482
+type(
+  unit
+)
+"records.ml" 892 50394 50475 "records.ml" 892 50394 50483
+type(
+  API.vM_guest_metrics_t option
+)
+"records.ml" 892 50394 50429 "records.ml" 892 50394 50484
+type(
+  API.string_to_string_map option
+)
+"records.ml" 892 50394 50418 "records.ml" 892 50394 50484
+type(
+  API.string_to_string_map
+)
+"records.ml" 892 50394 50407 "records.ml" 892 50394 50485
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 892 50394 50486 "records.ml" 892 50394 50488
+type(
+  unit
+)
+"records.ml" 890 50243 50246 "records.ml" 892 50394 50488
+type(
+  field
+)
+"records.ml" 893 50490 50493 "records.ml" 893 50490 50503
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 893 50490 50510 "records.ml" 893 50490 50517
+type(
+  string
+)
+"records.ml" 894 50518 50532 "records.ml" 894 50518 50534
+type(
+  unit
+)
+"records.ml" 894 50518 50538 "records.ml" 894 50518 50545
+type(
+  string -> string option -> string
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 894 50518 50546 "records.ml" 894 50518 50549
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 894 50518 50551 "records.ml" 894 50518 50554
+type(
+  (API.vM_guest_metrics_t -> string) ->
+  API.vM_guest_metrics_t option -> string option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 894 50518 50560 "records.ml" 894 50518 50561
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  def m "records.ml" 894 50518 50565 "records.ml" 894 50518 50625
+)
+"records.ml" 894 50518 50565 "records.ml" 894 50518 50591
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 894 50518 50592 "records.ml" 894 50518 50596
+type(
+  string
+)
+"records.ml" 894 50518 50597 "records.ml" 894 50518 50598
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  int_ref m "records.ml" 894 50518 50560 "records.ml" 894 50518 50561
+)
+"records.ml" 894 50518 50597 "records.ml" 894 50518 50625
+type(
+  API.string_to_string_map
+)
+"records.ml" 894 50518 50565 "records.ml" 894 50518 50625
+type(
+  string
+)
+"records.ml" 894 50518 50555 "records.ml" 894 50518 50626
+type(
+  API.vM_guest_metrics_t -> string
+)
+"records.ml" 894 50518 50628 "records.ml" 894 50518 50631
+type(
+  unit -> API.vM_guest_metrics_t option
+)
+ident(
+  int_ref xgm "records.ml" 698 37112 37117 "records.ml" 698 37112 37120
+)
+"records.ml" 894 50518 50632 "records.ml" 894 50518 50634
+type(
+  unit
+)
+"records.ml" 894 50518 50627 "records.ml" 894 50518 50635
+type(
+  API.vM_guest_metrics_t option
+)
+"records.ml" 894 50518 50550 "records.ml" 894 50518 50637
+type(
+  string option
+)
+"records.ml" 894 50518 50538 "records.ml" 894 50518 50637
+type(
+  string
+)
+"records.ml" 894 50518 50527 "records.ml" 894 50518 50638
+type(
+  unit -> string
+)
+"records.ml" 895 50640 50658 "records.ml" 895 50640 50660
+type(
+  unit
+)
+"records.ml" 895 50640 50664 "records.ml" 895 50640 50671
+type(
+  API.string_to_string_map ->
+  API.string_to_string_map option -> API.string_to_string_map
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 895 50640 50672 "records.ml" 895 50640 50674
+type(
+  API.string_to_string_map
+)
+"records.ml" 895 50640 50676 "records.ml" 895 50640 50679
+type(
+  (API.vM_guest_metrics_t -> API.string_to_string_map) ->
+  API.vM_guest_metrics_t option -> API.string_to_string_map option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 895 50640 50685 "records.ml" 895 50640 50686
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  def m "records.ml" 895 50640 50690 "records.ml" 895 50640 50718
+)
+"records.ml" 895 50640 50690 "records.ml" 895 50640 50691
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  int_ref m "records.ml" 895 50640 50685 "records.ml" 895 50640 50686
+)
+"records.ml" 895 50640 50690 "records.ml" 895 50640 50718
+type(
+  API.string_to_string_map
+)
+"records.ml" 895 50640 50680 "records.ml" 895 50640 50719
+type(
+  API.vM_guest_metrics_t -> API.string_to_string_map
+)
+"records.ml" 895 50640 50721 "records.ml" 895 50640 50724
+type(
+  unit -> API.vM_guest_metrics_t option
+)
+ident(
+  int_ref xgm "records.ml" 698 37112 37117 "records.ml" 698 37112 37120
+)
+"records.ml" 895 50640 50725 "records.ml" 895 50640 50727
+type(
+  unit
+)
+"records.ml" 895 50640 50720 "records.ml" 895 50640 50728
+type(
+  API.vM_guest_metrics_t option
+)
+"records.ml" 895 50640 50675 "records.ml" 895 50640 50729
+type(
+  API.string_to_string_map option
+)
+"records.ml" 895 50640 50664 "records.ml" 895 50640 50729
+type(
+  API.string_to_string_map
+)
+"records.ml" 895 50640 50653 "records.ml" 895 50640 50730
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 895 50640 50731 "records.ml" 895 50640 50733
+type(
+  unit
+)
+"records.ml" 893 50490 50493 "records.ml" 895 50640 50733
+type(
+  field
+)
+"records.ml" 896 50735 50738 "records.ml" 896 50735 50748
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 896 50735 50755 "records.ml" 896 50735 50765
+type(
+  string
+)
+"records.ml" 897 50766 50780 "records.ml" 897 50766 50782
+type(
+  unit
+)
+"records.ml" 897 50766 50786 "records.ml" 897 50766 50793
+type(
+  string -> string option -> string
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 897 50766 50794 "records.ml" 897 50766 50797
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 897 50766 50799 "records.ml" 897 50766 50802
+type(
+  (API.vM_guest_metrics_t -> string) ->
+  API.vM_guest_metrics_t option -> string option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 897 50766 50808 "records.ml" 897 50766 50809
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  def m "records.ml" 897 50766 50813 "records.ml" 897 50766 50876
+)
+"records.ml" 897 50766 50813 "records.ml" 897 50766 50839
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 897 50766 50840 "records.ml" 897 50766 50844
+type(
+  string
+)
+"records.ml" 897 50766 50845 "records.ml" 897 50766 50846
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  int_ref m "records.ml" 897 50766 50808 "records.ml" 897 50766 50809
+)
+"records.ml" 897 50766 50845 "records.ml" 897 50766 50876
+type(
+  API.string_to_string_map
+)
+"records.ml" 897 50766 50813 "records.ml" 897 50766 50876
+type(
+  string
+)
+"records.ml" 897 50766 50803 "records.ml" 897 50766 50877
+type(
+  API.vM_guest_metrics_t -> string
+)
+"records.ml" 897 50766 50879 "records.ml" 897 50766 50882
+type(
+  unit -> API.vM_guest_metrics_t option
+)
+ident(
+  int_ref xgm "records.ml" 698 37112 37117 "records.ml" 698 37112 37120
+)
+"records.ml" 897 50766 50883 "records.ml" 897 50766 50885
+type(
+  unit
+)
+"records.ml" 897 50766 50878 "records.ml" 897 50766 50886
+type(
+  API.vM_guest_metrics_t option
+)
+"records.ml" 897 50766 50798 "records.ml" 897 50766 50888
+type(
+  string option
+)
+"records.ml" 897 50766 50786 "records.ml" 897 50766 50888
+type(
+  string
+)
+"records.ml" 897 50766 50775 "records.ml" 897 50766 50889
+type(
+  unit -> string
+)
+"records.ml" 898 50891 50909 "records.ml" 898 50891 50911
+type(
+  unit
+)
+"records.ml" 898 50891 50915 "records.ml" 898 50891 50922
+type(
+  API.string_to_string_map ->
+  API.string_to_string_map option -> API.string_to_string_map
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 898 50891 50923 "records.ml" 898 50891 50925
+type(
+  API.string_to_string_map
+)
+"records.ml" 898 50891 50927 "records.ml" 898 50891 50930
+type(
+  (API.vM_guest_metrics_t -> API.string_to_string_map) ->
+  API.vM_guest_metrics_t option -> API.string_to_string_map option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 898 50891 50936 "records.ml" 898 50891 50937
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  def m "records.ml" 898 50891 50941 "records.ml" 898 50891 50972
+)
+"records.ml" 898 50891 50941 "records.ml" 898 50891 50942
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  int_ref m "records.ml" 898 50891 50936 "records.ml" 898 50891 50937
+)
+"records.ml" 898 50891 50941 "records.ml" 898 50891 50972
+type(
+  API.string_to_string_map
+)
+"records.ml" 898 50891 50931 "records.ml" 898 50891 50973
+type(
+  API.vM_guest_metrics_t -> API.string_to_string_map
+)
+"records.ml" 898 50891 50975 "records.ml" 898 50891 50978
+type(
+  unit -> API.vM_guest_metrics_t option
+)
+ident(
+  int_ref xgm "records.ml" 698 37112 37117 "records.ml" 698 37112 37120
+)
+"records.ml" 898 50891 50979 "records.ml" 898 50891 50981
+type(
+  unit
+)
+"records.ml" 898 50891 50974 "records.ml" 898 50891 50982
+type(
+  API.vM_guest_metrics_t option
+)
+"records.ml" 898 50891 50926 "records.ml" 898 50891 50983
+type(
+  API.string_to_string_map option
+)
+"records.ml" 898 50891 50915 "records.ml" 898 50891 50983
+type(
+  API.string_to_string_map
+)
+"records.ml" 898 50891 50904 "records.ml" 898 50891 50984
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 898 50891 50985 "records.ml" 898 50891 50987
+type(
+  unit
+)
+"records.ml" 896 50735 50738 "records.ml" 898 50891 50987
+type(
+  field
+)
+"records.ml" 899 50989 50992 "records.ml" 899 50989 51002
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 899 50989 51009 "records.ml" 899 50989 51016
+type(
+  string
+)
+"records.ml" 900 51017 51031 "records.ml" 900 51017 51033
+type(
+  unit
+)
+"records.ml" 900 51017 51037 "records.ml" 900 51017 51044
+type(
+  string -> string option -> string
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 900 51017 51045 "records.ml" 900 51017 51048
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 900 51017 51050 "records.ml" 900 51017 51053
+type(
+  (API.vM_guest_metrics_t -> string) ->
+  API.vM_guest_metrics_t option -> string option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 900 51017 51059 "records.ml" 900 51017 51060
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  def m "records.ml" 900 51017 51064 "records.ml" 900 51017 51124
+)
+"records.ml" 900 51017 51064 "records.ml" 900 51017 51090
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 900 51017 51091 "records.ml" 900 51017 51095
+type(
+  string
+)
+"records.ml" 900 51017 51096 "records.ml" 900 51017 51097
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  int_ref m "records.ml" 900 51017 51059 "records.ml" 900 51017 51060
+)
+"records.ml" 900 51017 51096 "records.ml" 900 51017 51124
+type(
+  API.string_to_string_map
+)
+"records.ml" 900 51017 51064 "records.ml" 900 51017 51124
+type(
+  string
+)
+"records.ml" 900 51017 51054 "records.ml" 900 51017 51125
+type(
+  API.vM_guest_metrics_t -> string
+)
+"records.ml" 900 51017 51127 "records.ml" 900 51017 51130
+type(
+  unit -> API.vM_guest_metrics_t option
+)
+ident(
+  int_ref xgm "records.ml" 698 37112 37117 "records.ml" 698 37112 37120
+)
+"records.ml" 900 51017 51131 "records.ml" 900 51017 51133
+type(
+  unit
+)
+"records.ml" 900 51017 51126 "records.ml" 900 51017 51134
+type(
+  API.vM_guest_metrics_t option
+)
+"records.ml" 900 51017 51049 "records.ml" 900 51017 51136
+type(
+  string option
+)
+"records.ml" 900 51017 51037 "records.ml" 900 51017 51136
+type(
+  string
+)
+"records.ml" 900 51017 51026 "records.ml" 900 51017 51137
+type(
+  unit -> string
+)
+"records.ml" 901 51139 51157 "records.ml" 901 51139 51159
+type(
+  unit
+)
+"records.ml" 901 51139 51163 "records.ml" 901 51139 51170
+type(
+  API.string_to_string_map ->
+  API.string_to_string_map option -> API.string_to_string_map
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 901 51139 51171 "records.ml" 901 51139 51173
+type(
+  API.string_to_string_map
+)
+"records.ml" 901 51139 51175 "records.ml" 901 51139 51178
+type(
+  (API.vM_guest_metrics_t -> API.string_to_string_map) ->
+  API.vM_guest_metrics_t option -> API.string_to_string_map option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 901 51139 51184 "records.ml" 901 51139 51185
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  def m "records.ml" 901 51139 51189 "records.ml" 901 51139 51217
+)
+"records.ml" 901 51139 51189 "records.ml" 901 51139 51190
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  int_ref m "records.ml" 901 51139 51184 "records.ml" 901 51139 51185
+)
+"records.ml" 901 51139 51189 "records.ml" 901 51139 51217
+type(
+  API.string_to_string_map
+)
+"records.ml" 901 51139 51179 "records.ml" 901 51139 51218
+type(
+  API.vM_guest_metrics_t -> API.string_to_string_map
+)
+"records.ml" 901 51139 51220 "records.ml" 901 51139 51223
+type(
+  unit -> API.vM_guest_metrics_t option
+)
+ident(
+  int_ref xgm "records.ml" 698 37112 37117 "records.ml" 698 37112 37120
+)
+"records.ml" 901 51139 51223 "records.ml" 901 51139 51225
+type(
+  unit
+)
+"records.ml" 901 51139 51219 "records.ml" 901 51139 51226
+type(
+  API.vM_guest_metrics_t option
+)
+"records.ml" 901 51139 51174 "records.ml" 901 51139 51227
+type(
+  API.string_to_string_map option
+)
+"records.ml" 901 51139 51163 "records.ml" 901 51139 51227
+type(
+  API.string_to_string_map
+)
+"records.ml" 901 51139 51152 "records.ml" 901 51139 51228
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 901 51139 51229 "records.ml" 901 51139 51231
+type(
+  unit
+)
+"records.ml" 899 50989 50992 "records.ml" 901 51139 51231
+type(
+  field
+)
+"records.ml" 902 51233 51236 "records.ml" 902 51233 51246
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 902 51233 51253 "records.ml" 902 51233 51259
+type(
+  string
+)
+"records.ml" 903 51260 51274 "records.ml" 903 51260 51276
+type(
+  unit
+)
+"records.ml" 903 51260 51280 "records.ml" 903 51260 51287
+type(
+  string -> string option -> string
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 903 51260 51288 "records.ml" 903 51260 51291
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 903 51260 51293 "records.ml" 903 51260 51296
+type(
+  (API.vM_guest_metrics_t -> string) ->
+  API.vM_guest_metrics_t option -> string option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 903 51260 51302 "records.ml" 903 51260 51303
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  def m "records.ml" 903 51260 51307 "records.ml" 903 51260 51349
+)
+"records.ml" 903 51260 51307 "records.ml" 903 51260 51321
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 903 51260 51322 "records.ml" 903 51260 51323
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  int_ref m "records.ml" 903 51260 51302 "records.ml" 903 51260 51303
+)
+"records.ml" 903 51260 51322 "records.ml" 903 51260 51349
+type(
+  bool
+)
+"records.ml" 903 51260 51307 "records.ml" 903 51260 51349
+type(
+  string
+)
+"records.ml" 903 51260 51297 "records.ml" 903 51260 51350
+type(
+  API.vM_guest_metrics_t -> string
+)
+"records.ml" 903 51260 51352 "records.ml" 903 51260 51355
+type(
+  unit -> API.vM_guest_metrics_t option
+)
+ident(
+  int_ref xgm "records.ml" 698 37112 37117 "records.ml" 698 37112 37120
+)
+"records.ml" 903 51260 51356 "records.ml" 903 51260 51358
+type(
+  unit
+)
+"records.ml" 903 51260 51351 "records.ml" 903 51260 51359
+type(
+  API.vM_guest_metrics_t option
+)
+"records.ml" 903 51260 51292 "records.ml" 903 51260 51361
+type(
+  string option
+)
+"records.ml" 903 51260 51280 "records.ml" 903 51260 51361
+type(
+  string
+)
+"records.ml" 903 51260 51269 "records.ml" 903 51260 51362
+type(
+  unit -> string
+)
+"records.ml" 903 51260 51363 "records.ml" 903 51260 51365
+type(
+  unit
+)
+"records.ml" 902 51233 51236 "records.ml" 903 51260 51365
+type(
+  field
+)
+"records.ml" 904 51367 51370 "records.ml" 904 51367 51380
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 904 51367 51387 "records.ml" 904 51367 51415
+type(
+  string
+)
+"records.ml" 905 51416 51430 "records.ml" 905 51416 51432
+type(
+  unit
+)
+"records.ml" 905 51416 51436 "records.ml" 905 51416 51443
+type(
+  string -> string option -> string
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 905 51416 51444 "records.ml" 905 51416 51447
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 905 51416 51449 "records.ml" 905 51416 51452
+type(
+  (API.vM_guest_metrics_t -> string) ->
+  API.vM_guest_metrics_t option -> string option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 905 51416 51458 "records.ml" 905 51416 51459
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  def m "records.ml" 905 51416 51463 "records.ml" 905 51416 51513
+)
+"records.ml" 905 51416 51463 "records.ml" 905 51416 51477
+type(
+  API.datetime -> string
+)
+ident(
+  ext_ref Date.to_string
+)
+"records.ml" 905 51416 51478 "records.ml" 905 51416 51479
+type(
+  API.vM_guest_metrics_t
+)
+ident(
+  int_ref m "records.ml" 905 51416 51458 "records.ml" 905 51416 51459
+)
+"records.ml" 905 51416 51478 "records.ml" 905 51416 51513
+type(
+  API.datetime
+)
+"records.ml" 905 51416 51463 "records.ml" 905 51416 51513
+type(
+  string
+)
+"records.ml" 905 51416 51453 "records.ml" 905 51416 51514
+type(
+  API.vM_guest_metrics_t -> string
+)
+"records.ml" 905 51416 51516 "records.ml" 905 51416 51519
+type(
+  unit -> API.vM_guest_metrics_t option
+)
+ident(
+  int_ref xgm "records.ml" 698 37112 37117 "records.ml" 698 37112 37120
+)
+"records.ml" 905 51416 51520 "records.ml" 905 51416 51522
+type(
+  unit
+)
+"records.ml" 905 51416 51515 "records.ml" 905 51416 51523
+type(
+  API.vM_guest_metrics_t option
+)
+"records.ml" 905 51416 51448 "records.ml" 905 51416 51525
+type(
+  string option
+)
+"records.ml" 905 51416 51436 "records.ml" 905 51416 51525
+type(
+  string
+)
+"records.ml" 905 51416 51425 "records.ml" 905 51416 51526
+type(
+  unit -> string
+)
+"records.ml" 905 51416 51527 "records.ml" 905 51416 51529
+type(
+  unit
+)
+"records.ml" 904 51367 51370 "records.ml" 905 51416 51529
+type(
+  field
+)
+"records.ml" 906 51531 51534 "records.ml" 906 51531 51544
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 906 51531 51551 "records.ml" 906 51531 51564
+type(
+  string
+)
+"records.ml" 908 51610 51624 "records.ml" 908 51610 51626
+type(
+  unit
+)
+"records.ml" 908 51610 51630 "records.ml" 908 51610 51644
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 908 51610 51650 "records.ml" 908 51610 51675
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> bool
+)
+ident(
+  ext_ref Client.( Client ).( VM ).get_cooperative
+)
+"records.ml" 908 51610 51676 "records.ml" 908 51610 51679
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 908 51610 51680 "records.ml" 908 51610 51690
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 908 51610 51691 "records.ml" 908 51610 51693
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 908 51610 51650 "records.ml" 908 51610 51693
+type(
+  bool
+)
+"records.ml" 908 51610 51699 "records.ml" 908 51610 51700
+type(
+  exn
+)
+"records.ml" 908 51610 51704 "records.ml" 908 51610 51708
+type(
+  bool
+)
+"records.ml" 908 51610 51645 "records.ml" 908 51610 51709
+type(
+  bool
+)
+"records.ml" 908 51610 51630 "records.ml" 908 51610 51709
+type(
+  string
+)
+"records.ml" 908 51610 51619 "records.ml" 908 51610 51710
+type(
+  unit -> string
+)
+"records.ml" 908 51610 51722 "records.ml" 908 51610 51726
+type(
+  bool
+)
+"records.ml" 908 51610 51727 "records.ml" 908 51610 51729
+type(
+  unit
+)
+"records.ml" 906 51531 51534 "records.ml" 908 51610 51729
+type(
+  field
+)
+"records.ml" 909 51731 51734 "records.ml" 909 51731 51744
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 909 51731 51751 "records.ml" 909 51731 51770
+type(
+  string
+)
+"records.ml" 910 51771 51785 "records.ml" 910 51771 51787
+type(
+  unit
+)
+"records.ml" 910 51771 51791 "records.ml" 910 51771 51808
+type(
+  API.ref_VMPP -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 910 51771 51810 "records.ml" 910 51771 51811
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 910 51771 51812 "records.ml" 910 51771 51814
+type(
+  unit
+)
+"records.ml" 910 51771 51809 "records.ml" 910 51771 51815
+type(
+  API.vM_t
+)
+"records.ml" 910 51771 51809 "records.ml" 910 51771 51840
+type(
+  API.ref_VMPP
+)
+"records.ml" 910 51771 51791 "records.ml" 910 51771 51840
+type(
+  string
+)
+"records.ml" 910 51771 51780 "records.ml" 910 51771 51841
+type(
+  unit -> string
+)
+"records.ml" 911 51842 51856 "records.ml" 911 51842 51857
+type(
+  string
+)
+ident(
+  def x "records.ml" 911 51842 51861 "records.ml" 911 51842 52030
+)
+"records.ml" 911 51842 51864 "records.ml" 911 51842 51865
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 911 51842 51856 "records.ml" 911 51842 51857
+)
+"records.ml" 911 51842 51865 "records.ml" 911 51842 51866
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"records.ml" 911 51842 51866 "records.ml" 911 51842 51868
+type(
+  string
+)
+"records.ml" 911 51842 51864 "records.ml" 911 51842 51868
+type(
+  bool
+)
+"records.ml" 911 51842 51874 "records.ml" 911 51842 51905
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:API.ref_VMPP -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_protection_policy
+)
+"records.ml" 911 51842 51906 "records.ml" 911 51842 51909
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 911 51842 51910 "records.ml" 911 51842 51920
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 911 51842 51921 "records.ml" 911 51842 51923
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 911 51842 51924 "records.ml" 911 51842 51932
+type(
+  API.ref_VMPP
+)
+ident(
+  ext_ref Ref.null
+)
+"records.ml" 911 51842 51874 "records.ml" 911 51842 51932
+type(
+  unit
+)
+"records.ml" 911 51842 51938 "records.ml" 911 51842 51969
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:API.ref_VMPP -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_protection_policy
+)
+"records.ml" 911 51842 51970 "records.ml" 911 51842 51973
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 911 51842 51974 "records.ml" 911 51842 51984
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 911 51842 51985 "records.ml" 911 51842 51987
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 911 51842 51989 "records.ml" 911 51842 52012
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> uuid:string -> API.ref_VMPP
+)
+ident(
+  ext_ref Client.( Client ).( VMPP ).get_by_uuid
+)
+"records.ml" 911 51842 52013 "records.ml" 911 51842 52016
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 911 51842 52017 "records.ml" 911 51842 52027
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 911 51842 52028 "records.ml" 911 51842 52029
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 911 51842 51856 "records.ml" 911 51842 51857
+)
+"records.ml" 911 51842 51988 "records.ml" 911 51842 52030
+type(
+  API.ref_VMPP
+)
+"records.ml" 911 51842 51938 "records.ml" 911 51842 52030
+type(
+  unit
+)
+"records.ml" 911 51842 51861 "records.ml" 911 51842 52030
+type(
+  unit
+)
+"records.ml" 911 51842 51851 "records.ml" 911 51842 52031
+type(
+  string -> unit
+)
+"records.ml" 911 51842 52032 "records.ml" 911 51842 52034
+type(
+  unit
+)
+"records.ml" 909 51731 51734 "records.ml" 911 51842 52034
+type(
+  field
+)
+"records.ml" 912 52036 52039 "records.ml" 912 52036 52049
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 912 52036 52056 "records.ml" 912 52036 52079
+type(
+  string
+)
+"records.ml" 913 52080 52094 "records.ml" 913 52080 52096
+type(
+  unit
+)
+"records.ml" 913 52080 52100 "records.ml" 913 52080 52114
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 913 52080 52116 "records.ml" 913 52080 52117
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 913 52080 52118 "records.ml" 913 52080 52120
+type(
+  unit
+)
+"records.ml" 913 52080 52115 "records.ml" 913 52080 52121
+type(
+  API.vM_t
+)
+"records.ml" 913 52080 52115 "records.ml" 913 52080 52150
+type(
+  bool
+)
+"records.ml" 913 52080 52100 "records.ml" 913 52080 52150
+type(
+  string
+)
+"records.ml" 913 52080 52089 "records.ml" 913 52080 52151
+type(
+  unit -> string
+)
+"records.ml" 913 52080 52152 "records.ml" 913 52080 52154
+type(
+  unit
+)
+"records.ml" 912 52036 52039 "records.ml" 913 52080 52154
+type(
+  field
+)
+"records.ml" 914 52156 52159 "records.ml" 914 52156 52169
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> API.string_set) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 914 52156 52176 "records.ml" 914 52156 52182
+type(
+  string
+)
+"records.ml" 915 52183 52197 "records.ml" 915 52183 52199
+type(
+  unit
+)
+"records.ml" 915 52183 52203 "records.ml" 915 52183 52216
+type(
+  string -> API.string_set -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 915 52183 52217 "records.ml" 915 52183 52221
+type(
+  string
+)
+"records.ml" 915 52183 52223 "records.ml" 915 52183 52224
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 915 52183 52225 "records.ml" 915 52183 52227
+type(
+  unit
+)
+"records.ml" 915 52183 52222 "records.ml" 915 52183 52228
+type(
+  API.vM_t
+)
+"records.ml" 915 52183 52222 "records.ml" 915 52183 52240
+type(
+  API.string_set
+)
+"records.ml" 915 52183 52203 "records.ml" 915 52183 52240
+type(
+  string
+)
+"records.ml" 915 52183 52192 "records.ml" 915 52183 52241
+type(
+  unit -> string
+)
+"records.ml" 916 52242 52260 "records.ml" 916 52242 52262
+type(
+  unit
+)
+"records.ml" 916 52242 52267 "records.ml" 916 52242 52268
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 916 52242 52269 "records.ml" 916 52242 52271
+type(
+  unit
+)
+"records.ml" 916 52242 52266 "records.ml" 916 52242 52272
+type(
+  API.vM_t
+)
+"records.ml" 916 52242 52266 "records.ml" 916 52242 52284
+type(
+  API.string_set
+)
+"records.ml" 916 52242 52255 "records.ml" 916 52242 52285
+type(
+  unit -> API.string_set
+)
+"records.ml" 917 52286 52307 "records.ml" 917 52286 52310
+type(
+  string
+)
+ident(
+  def tag "records.ml" 917 52286 52314 "records.ml" 917 52286 52354
+)
+"records.ml" 917 52286 52314 "records.ml" 917 52286 52332
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).add_tags
+)
+"records.ml" 917 52286 52333 "records.ml" 917 52286 52336
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 917 52286 52337 "records.ml" 917 52286 52347
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 917 52286 52348 "records.ml" 917 52286 52350
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 917 52286 52351 "records.ml" 917 52286 52354
+type(
+  string
+)
+ident(
+  int_ref tag "records.ml" 917 52286 52307 "records.ml" 917 52286 52310
+)
+"records.ml" 917 52286 52314 "records.ml" 917 52286 52354
+type(
+  unit
+)
+"records.ml" 917 52286 52302 "records.ml" 917 52286 52355
+type(
+  string -> unit
+)
+"records.ml" 918 52356 52382 "records.ml" 918 52356 52385
+type(
+  string
+)
+ident(
+  def tag "records.ml" 918 52356 52389 "records.ml" 918 52356 52432
+)
+"records.ml" 918 52356 52389 "records.ml" 918 52356 52410
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).remove_tags
+)
+"records.ml" 918 52356 52411 "records.ml" 918 52356 52414
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 918 52356 52415 "records.ml" 918 52356 52425
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 918 52356 52426 "records.ml" 918 52356 52428
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 918 52356 52429 "records.ml" 918 52356 52432
+type(
+  string
+)
+ident(
+  int_ref tag "records.ml" 918 52356 52382 "records.ml" 918 52356 52385
+)
+"records.ml" 918 52356 52389 "records.ml" 918 52356 52432
+type(
+  unit
+)
+"records.ml" 918 52356 52377 "records.ml" 918 52356 52433
+type(
+  string -> unit
+)
+"records.ml" 918 52356 52434 "records.ml" 918 52356 52436
+type(
+  unit
+)
+"records.ml" 914 52156 52159 "records.ml" 918 52356 52436
+type(
+  field
+)
+"records.ml" 919 52438 52441 "records.ml" 919 52438 52451
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 919 52438 52458 "records.ml" 919 52438 52469
+type(
+  string
+)
+"records.ml" 920 52470 52484 "records.ml" 920 52470 52486
+type(
+  unit
+)
+"records.ml" 920 52470 52490 "records.ml" 920 52470 52507
+type(
+  API.ref_VM_appliance -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 920 52470 52509 "records.ml" 920 52470 52510
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 920 52470 52511 "records.ml" 920 52470 52513
+type(
+  unit
+)
+"records.ml" 920 52470 52508 "records.ml" 920 52470 52514
+type(
+  API.vM_t
+)
+"records.ml" 920 52470 52508 "records.ml" 920 52470 52531
+type(
+  API.ref_VM_appliance
+)
+"records.ml" 920 52470 52490 "records.ml" 920 52470 52531
+type(
+  string
+)
+"records.ml" 920 52470 52479 "records.ml" 920 52470 52532
+type(
+  unit -> string
+)
+"records.ml" 921 52533 52547 "records.ml" 921 52533 52548
+type(
+  string
+)
+ident(
+  def x "records.ml" 921 52533 52552 "records.ml" 921 52533 52713
+)
+"records.ml" 921 52533 52555 "records.ml" 921 52533 52556
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 921 52533 52547 "records.ml" 921 52533 52548
+)
+"records.ml" 921 52533 52556 "records.ml" 921 52533 52557
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"records.ml" 921 52533 52557 "records.ml" 921 52533 52559
+type(
+  string
+)
+"records.ml" 921 52533 52555 "records.ml" 921 52533 52559
+type(
+  bool
+)
+"records.ml" 921 52533 52565 "records.ml" 921 52533 52588
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VM -> value:API.ref_VM_appliance -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_appliance
+)
+"records.ml" 921 52533 52589 "records.ml" 921 52533 52592
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 921 52533 52593 "records.ml" 921 52533 52603
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 921 52533 52604 "records.ml" 921 52533 52606
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 921 52533 52607 "records.ml" 921 52533 52615
+type(
+  API.ref_VM_appliance
+)
+ident(
+  ext_ref Ref.null
+)
+"records.ml" 921 52533 52565 "records.ml" 921 52533 52615
+type(
+  unit
+)
+"records.ml" 921 52533 52621 "records.ml" 921 52533 52644
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VM -> value:API.ref_VM_appliance -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_appliance
+)
+"records.ml" 921 52533 52645 "records.ml" 921 52533 52648
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 921 52533 52649 "records.ml" 921 52533 52659
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 921 52533 52660 "records.ml" 921 52533 52662
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 921 52533 52664 "records.ml" 921 52533 52695
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> uuid:string -> API.ref_VM_appliance
+)
+ident(
+  ext_ref Client.( Client ).( VM_appliance ).get_by_uuid
+)
+"records.ml" 921 52533 52696 "records.ml" 921 52533 52699
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 921 52533 52700 "records.ml" 921 52533 52710
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 921 52533 52711 "records.ml" 921 52533 52712
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 921 52533 52547 "records.ml" 921 52533 52548
+)
+"records.ml" 921 52533 52663 "records.ml" 921 52533 52713
+type(
+  API.ref_VM_appliance
+)
+"records.ml" 921 52533 52621 "records.ml" 921 52533 52713
+type(
+  unit
+)
+"records.ml" 921 52533 52552 "records.ml" 921 52533 52713
+type(
+  unit
+)
+"records.ml" 921 52533 52542 "records.ml" 921 52533 52714
+type(
+  string -> unit
+)
+"records.ml" 921 52533 52715 "records.ml" 921 52533 52717
+type(
+  unit
+)
+"records.ml" 919 52438 52441 "records.ml" 921 52533 52717
+type(
+  field
+)
+"records.ml" 922 52719 52722 "records.ml" 922 52719 52732
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 922 52719 52739 "records.ml" 922 52719 52752
+type(
+  string
+)
+"records.ml" 923 52753 52767 "records.ml" 923 52753 52769
+type(
+  unit
+)
+"records.ml" 923 52753 52773 "records.ml" 923 52753 52788
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 923 52753 52790 "records.ml" 923 52753 52791
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 923 52753 52792 "records.ml" 923 52753 52794
+type(
+  unit
+)
+"records.ml" 923 52753 52789 "records.ml" 923 52753 52795
+type(
+  API.vM_t
+)
+"records.ml" 923 52753 52789 "records.ml" 923 52753 52814
+type(
+  int64
+)
+"records.ml" 923 52753 52773 "records.ml" 923 52753 52814
+type(
+  string
+)
+"records.ml" 923 52753 52762 "records.ml" 923 52753 52815
+type(
+  unit -> string
+)
+"records.ml" 924 52816 52830 "records.ml" 924 52816 52831
+type(
+  string
+)
+ident(
+  def x "records.ml" 924 52816 52835 "records.ml" 924 52816 52915
+)
+"records.ml" 924 52816 52835 "records.ml" 924 52816 52860
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:int64 -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_start_delay
+)
+"records.ml" 924 52816 52861 "records.ml" 924 52816 52864
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 924 52816 52865 "records.ml" 924 52816 52875
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 924 52816 52876 "records.ml" 924 52816 52878
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 924 52816 52880 "records.ml" 924 52816 52898
+type(
+  string -> string -> int64
+)
+ident(
+  int_ref safe_i64_of_string "records.ml" 69 2547 2551 "records.ml" 69 2547 2569
+)
+"records.ml" 924 52816 52899 "records.ml" 924 52816 52912
+type(
+  string
+)
+"records.ml" 924 52816 52913 "records.ml" 924 52816 52914
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 924 52816 52830 "records.ml" 924 52816 52831
+)
+"records.ml" 924 52816 52879 "records.ml" 924 52816 52915
+type(
+  int64
+)
+"records.ml" 924 52816 52835 "records.ml" 924 52816 52915
+type(
+  unit
+)
+"records.ml" 924 52816 52825 "records.ml" 924 52816 52916
+type(
+  string -> unit
+)
+"records.ml" 924 52816 52917 "records.ml" 924 52816 52919
+type(
+  unit
+)
+"records.ml" 922 52719 52722 "records.ml" 924 52816 52919
+type(
+  field
+)
+"records.ml" 925 52921 52924 "records.ml" 925 52921 52934
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 925 52921 52941 "records.ml" 925 52921 52957
+type(
+  string
+)
+"records.ml" 926 52958 52972 "records.ml" 926 52958 52974
+type(
+  unit
+)
+"records.ml" 926 52958 52978 "records.ml" 926 52958 52993
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 926 52958 52995 "records.ml" 926 52958 52996
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 926 52958 52997 "records.ml" 926 52958 52999
+type(
+  unit
+)
+"records.ml" 926 52958 52994 "records.ml" 926 52958 53000
+type(
+  API.vM_t
+)
+"records.ml" 926 52958 52994 "records.ml" 926 52958 53022
+type(
+  int64
+)
+"records.ml" 926 52958 52978 "records.ml" 926 52958 53022
+type(
+  string
+)
+"records.ml" 926 52958 52967 "records.ml" 926 52958 53023
+type(
+  unit -> string
+)
+"records.ml" 927 53024 53038 "records.ml" 927 53024 53039
+type(
+  string
+)
+ident(
+  def x "records.ml" 927 53024 53043 "records.ml" 927 53024 53129
+)
+"records.ml" 927 53024 53043 "records.ml" 927 53024 53071
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:int64 -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_shutdown_delay
+)
+"records.ml" 927 53024 53072 "records.ml" 927 53024 53075
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 927 53024 53076 "records.ml" 927 53024 53086
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 927 53024 53087 "records.ml" 927 53024 53089
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 927 53024 53091 "records.ml" 927 53024 53109
+type(
+  string -> string -> int64
+)
+ident(
+  int_ref safe_i64_of_string "records.ml" 69 2547 2551 "records.ml" 69 2547 2569
+)
+"records.ml" 927 53024 53110 "records.ml" 927 53024 53126
+type(
+  string
+)
+"records.ml" 927 53024 53127 "records.ml" 927 53024 53128
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 927 53024 53038 "records.ml" 927 53024 53039
+)
+"records.ml" 927 53024 53090 "records.ml" 927 53024 53129
+type(
+  int64
+)
+"records.ml" 927 53024 53043 "records.ml" 927 53024 53129
+type(
+  unit
+)
+"records.ml" 927 53024 53033 "records.ml" 927 53024 53130
+type(
+  string -> unit
+)
+"records.ml" 927 53024 53131 "records.ml" 927 53024 53133
+type(
+  unit
+)
+"records.ml" 925 52921 52924 "records.ml" 927 53024 53133
+type(
+  field
+)
+"records.ml" 928 53135 53138 "records.ml" 928 53135 53148
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 928 53135 53155 "records.ml" 928 53135 53162
+type(
+  string
+)
+"records.ml" 929 53163 53177 "records.ml" 929 53163 53179
+type(
+  unit
+)
+"records.ml" 929 53163 53183 "records.ml" 929 53163 53198
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 929 53163 53200 "records.ml" 929 53163 53201
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 929 53163 53202 "records.ml" 929 53163 53204
+type(
+  unit
+)
+"records.ml" 929 53163 53199 "records.ml" 929 53163 53205
+type(
+  API.vM_t
+)
+"records.ml" 929 53163 53199 "records.ml" 929 53163 53218
+type(
+  int64
+)
+"records.ml" 929 53163 53183 "records.ml" 929 53163 53218
+type(
+  string
+)
+"records.ml" 929 53163 53172 "records.ml" 929 53163 53219
+type(
+  unit -> string
+)
+"records.ml" 930 53220 53234 "records.ml" 930 53220 53235
+type(
+  string
+)
+ident(
+  def x "records.ml" 930 53220 53239 "records.ml" 930 53220 53307
+)
+"records.ml" 930 53220 53239 "records.ml" 930 53220 53258
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VM -> value:int64 -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM ).set_order
+)
+"records.ml" 930 53220 53259 "records.ml" 930 53220 53262
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 667 35881 35895 "records.ml" 667 35881 35898
+)
+"records.ml" 930 53220 53263 "records.ml" 930 53220 53273
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 667 35881 35899 "records.ml" 667 35881 35909
+)
+"records.ml" 930 53220 53274 "records.ml" 930 53220 53276
+type(
+  API.ref_VM
+)
+ident(
+  int_ref vm "records.ml" 667 35881 35910 "records.ml" 667 35881 35912
+)
+"records.ml" 930 53220 53278 "records.ml" 930 53220 53296
+type(
+  string -> string -> int64
+)
+ident(
+  int_ref safe_i64_of_string "records.ml" 69 2547 2551 "records.ml" 69 2547 2569
+)
+"records.ml" 930 53220 53297 "records.ml" 930 53220 53304
+type(
+  string
+)
+"records.ml" 930 53220 53305 "records.ml" 930 53220 53306
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 930 53220 53234 "records.ml" 930 53220 53235
+)
+"records.ml" 930 53220 53277 "records.ml" 930 53220 53307
+type(
+  int64
+)
+"records.ml" 930 53220 53239 "records.ml" 930 53220 53307
+type(
+  unit
+)
+"records.ml" 930 53220 53229 "records.ml" 930 53220 53308
+type(
+  string -> unit
+)
+"records.ml" 930 53220 53309 "records.ml" 930 53220 53311
+type(
+  unit
+)
+"records.ml" 928 53135 53138 "records.ml" 930 53220 53311
+type(
+  field
+)
+"records.ml" 931 53313 53316 "records.ml" 931 53313 53326
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 931 53313 53333 "records.ml" 931 53313 53342
+type(
+  string
+)
+"records.ml" 932 53343 53357 "records.ml" 932 53343 53359
+type(
+  unit
+)
+"records.ml" 932 53343 53363 "records.ml" 932 53343 53378
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 932 53343 53380 "records.ml" 932 53343 53381
+type(
+  unit -> API.vM_t
+)
+ident(
+  int_ref x "records.ml" 671 36054 36059 "records.ml" 671 36054 36060
+)
+"records.ml" 932 53343 53382 "records.ml" 932 53343 53384
+type(
+  unit
+)
+"records.ml" 932 53343 53379 "records.ml" 932 53343 53385
+type(
+  API.vM_t
+)
+"records.ml" 932 53343 53379 "records.ml" 932 53343 53400
+type(
+  int64
+)
+"records.ml" 932 53343 53363 "records.ml" 932 53343 53400
+type(
+  string
+)
+"records.ml" 932 53343 53352 "records.ml" 932 53343 53401
+type(
+  unit -> string
+)
+"records.ml" 932 53343 53402 "records.ml" 932 53343 53404
+type(
+  unit
+)
+"records.ml" 931 53313 53316 "records.ml" 932 53343 53404
+type(
+  field
+)
+"records.ml" 704 37317 37329 "records.ml" 933 53406 53409
+type(
+  field list
+)
+"records.ml" 699 37151 37152 "records.ml" 933 53406 53410
+type(
+  ([ `VM ], API.vM_t) record
+)
+"records.ml" 698 37112 37113 "records.ml" 933 53406 53410
+type(
+  ([ `VM ], API.vM_t) record
+)
+"records.ml" 685 36812 36813 "records.ml" 933 53406 53410
+type(
+  ([ `VM ], API.vM_t) record
+)
+"records.ml" 677 36486 36487 "records.ml" 933 53406 53410
+type(
+  ([ `VM ], API.vM_t) record
+)
+"records.ml" 676 36438 36439 "records.ml" 933 53406 53410
+type(
+  ([ `VM ], API.vM_t) record
+)
+"records.ml" 675 36286 36287 "records.ml" 933 53406 53410
+type(
+  ([ `VM ], API.vM_t) record
+)
+"records.ml" 674 36254 36255 "records.ml" 933 53406 53410
+type(
+  ([ `VM ], API.vM_t) record
+)
+"records.ml" 673 36218 36219 "records.ml" 933 53406 53410
+type(
+  ([ `VM ], API.vM_t) record
+)
+"records.ml" 672 36084 36085 "records.ml" 933 53406 53410
+type(
+  ([ `VM ], API.vM_t) record
+)
+"records.ml" 671 36054 36055 "records.ml" 933 53406 53410
+type(
+  ([ `VM ], API.vM_t) record
+)
+"records.ml" 670 36020 36021 "records.ml" 933 53406 53410
+type(
+  ([ `VM ], API.vM_t) record
+)
+"records.ml" 669 35937 35938 "records.ml" 933 53406 53410
+type(
+  ([ `VM ], API.vM_t) record
+)
+"records.ml" 668 35915 35916 "records.ml" 933 53406 53410
+type(
+  ([ `VM ], API.vM_t) record
+)
+"records.ml" 935 53412 53416 "records.ml" 935 53412 53437
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session ->
+  API.ref_host_crashdump ->
+  ([ `host_crashdump ], API.host_crashdump_t) record
+)
+ident(
+  def host_crashdump_record "records.ml" 952 54265 54265 --
+)
+"records.ml" 935 53412 53438 "records.ml" 935 53412 53441
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 935 53412 53442 "records.ml" 950 54259 54263
+)
+"records.ml" 935 53412 53442 "records.ml" 935 53412 53452
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 935 53412 53453 "records.ml" 950 54259 54263
+)
+"records.ml" 935 53412 53453 "records.ml" 935 53412 53457
+type(
+  API.ref_host_crashdump
+)
+ident(
+  def host "records.ml" 936 53461 53463 "records.ml" 950 54259 54263
+)
+"records.ml" 936 53461 53467 "records.ml" 936 53461 53471
+type(
+  API.ref_host_crashdump ref
+)
+"records.ml" 936 53461 53474 "records.ml" 936 53461 53477
+type(
+  API.ref_host_crashdump -> API.ref_host_crashdump ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 936 53461 53478 "records.ml" 936 53461 53482
+type(
+  API.ref_host_crashdump
+)
+ident(
+  int_ref host "records.ml" 935 53412 53453 "records.ml" 935 53412 53457
+)
+"records.ml" 936 53461 53474 "records.ml" 936 53461 53482
+type(
+  API.ref_host_crashdump ref
+)
+"records.ml" 937 53486 53492 "records.ml" 937 53486 53504
+type(
+  API.host_crashdump_t lzy
+)
+"records.ml" 937 53486 53518 "records.ml" 937 53486 53520
+type(
+  unit
+)
+"records.ml" 937 53486 53524 "records.ml" 937 53486 53556
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_host_crashdump -> API.host_crashdump_t
+)
+ident(
+  ext_ref Client.( Client ).( Host_crashdump ).get_record
+)
+"records.ml" 937 53486 53557 "records.ml" 937 53486 53560
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 935 53412 53438 "records.ml" 935 53412 53441
+)
+"records.ml" 937 53486 53561 "records.ml" 937 53486 53571
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 935 53412 53442 "records.ml" 935 53412 53452
+)
+"records.ml" 937 53486 53572 "records.ml" 937 53486 53573
+type(
+  API.ref_host_crashdump ref -> API.ref_host_crashdump
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 937 53486 53573 "records.ml" 937 53486 53577
+type(
+  API.ref_host_crashdump ref
+)
+ident(
+  int_ref _ref "records.ml" 936 53461 53467 "records.ml" 936 53461 53471
+)
+"records.ml" 937 53486 53572 "records.ml" 937 53486 53577
+type(
+  API.ref_host_crashdump
+)
+"records.ml" 937 53486 53524 "records.ml" 937 53486 53577
+type(
+  API.host_crashdump_t
+)
+"records.ml" 937 53486 53513 "records.ml" 937 53486 53578
+type(
+  unit -> API.host_crashdump_t
+)
+"records.ml" 937 53486 53507 "records.ml" 937 53486 53578
+type(
+  API.host_crashdump_t lzy
+)
+"records.ml" 938 53582 53588 "records.ml" 938 53582 53594
+type(
+  API.host_crashdump_t lzy ref
+)
+"records.ml" 938 53582 53597 "records.ml" 938 53582 53600
+type(
+  API.host_crashdump_t lzy -> API.host_crashdump_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 938 53582 53601 "records.ml" 938 53582 53613
+type(
+  API.host_crashdump_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 937 53486 53492 "records.ml" 937 53486 53504
+)
+"records.ml" 938 53582 53597 "records.ml" 938 53582 53613
+type(
+  API.host_crashdump_t lzy ref
+)
+"records.ml" 939 53617 53623 "records.ml" 939 53617 53624
+type(
+  unit -> API.host_crashdump_t
+)
+"records.ml" 939 53617 53625 "records.ml" 939 53617 53627
+type(
+  unit
+)
+"records.ml" 939 53617 53630 "records.ml" 939 53617 53637
+type(
+  API.host_crashdump_t lzy ref -> API.host_crashdump_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 939 53617 53638 "records.ml" 939 53617 53644
+type(
+  API.host_crashdump_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 938 53582 53588 "records.ml" 938 53582 53594
+)
+"records.ml" 939 53617 53630 "records.ml" 939 53617 53644
+type(
+  API.host_crashdump_t
+)
+"records.ml" 940 53648 53664 "records.ml" 940 53648 53665
+type(
+  API.ref_host_crashdump
+)
+ident(
+  def r "records.ml" 940 53648 53669 "records.ml" 940 53648 53702
+)
+"records.ml" 940 53648 53669 "records.ml" 940 53648 53673
+type(
+  API.ref_host_crashdump ref
+)
+ident(
+  int_ref _ref "records.ml" 936 53461 53467 "records.ml" 936 53461 53471
+)
+"records.ml" 940 53648 53674 "records.ml" 940 53648 53676
+type(
+  API.ref_host_crashdump ref -> API.ref_host_crashdump -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 940 53648 53677 "records.ml" 940 53648 53678
+type(
+  API.ref_host_crashdump
+)
+ident(
+  int_ref r "records.ml" 940 53648 53664 "records.ml" 940 53648 53665
+)
+"records.ml" 940 53648 53669 "records.ml" 940 53648 53678
+type(
+  unit
+)
+"records.ml" 940 53648 53680 "records.ml" 940 53648 53686
+type(
+  API.host_crashdump_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 938 53582 53588 "records.ml" 938 53582 53594
+)
+"records.ml" 940 53648 53687 "records.ml" 940 53648 53689
+type(
+  API.host_crashdump_t lzy ref -> API.host_crashdump_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 940 53648 53690 "records.ml" 940 53648 53702
+type(
+  API.host_crashdump_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 937 53486 53492 "records.ml" 937 53486 53504
+)
+"records.ml" 940 53648 53680 "records.ml" 940 53648 53702
+type(
+  unit
+)
+"records.ml" 940 53648 53669 "records.ml" 940 53648 53702
+type(
+  unit
+)
+"records.ml" 940 53648 53659 "records.ml" 940 53648 53704
+type(
+  API.ref_host_crashdump -> unit
+)
+"records.ml" 941 53706 53726 "records.ml" 941 53706 53727
+type(
+  API.ref_host_crashdump
+)
+ident(
+  def a "records.ml" 941 53706 53734 "records.ml" 941 53706 53760
+)
+"records.ml" 941 53706 53728 "records.ml" 941 53706 53729
+type(
+  API.host_crashdump_t
+)
+ident(
+  def b "records.ml" 941 53706 53734 "records.ml" 941 53706 53760
+)
+"records.ml" 941 53706 53725 "records.ml" 941 53706 53730
+type(
+  API.ref_host_crashdump * API.host_crashdump_t
+)
+"records.ml" 941 53706 53734 "records.ml" 941 53706 53738
+type(
+  API.ref_host_crashdump ref
+)
+ident(
+  int_ref _ref "records.ml" 936 53461 53467 "records.ml" 936 53461 53471
+)
+"records.ml" 941 53706 53739 "records.ml" 941 53706 53741
+type(
+  API.ref_host_crashdump ref -> API.ref_host_crashdump -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 941 53706 53742 "records.ml" 941 53706 53743
+type(
+  API.ref_host_crashdump
+)
+ident(
+  int_ref a "records.ml" 941 53706 53726 "records.ml" 941 53706 53727
+)
+"records.ml" 941 53706 53734 "records.ml" 941 53706 53743
+type(
+  unit
+)
+"records.ml" 941 53706 53745 "records.ml" 941 53706 53751
+type(
+  API.host_crashdump_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 938 53582 53588 "records.ml" 938 53582 53594
+)
+"records.ml" 941 53706 53752 "records.ml" 941 53706 53754
+type(
+  API.host_crashdump_t lzy ref -> API.host_crashdump_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 941 53706 53759 "records.ml" 941 53706 53760
+type(
+  API.host_crashdump_t
+)
+ident(
+  int_ref b "records.ml" 941 53706 53728 "records.ml" 941 53706 53729
+)
+"records.ml" 941 53706 53755 "records.ml" 941 53706 53760
+type(
+  API.host_crashdump_t lzy
+)
+"records.ml" 941 53706 53745 "records.ml" 941 53706 53760
+type(
+  unit
+)
+"records.ml" 941 53706 53734 "records.ml" 941 53706 53760
+type(
+  unit
+)
+"records.ml" 941 53706 53720 "records.ml" 941 53706 53761
+type(
+  API.ref_host_crashdump * API.host_crashdump_t -> unit
+)
+"records.ml" 942 53763 53774 "records.ml" 942 53763 53775
+type(
+  unit -> API.host_crashdump_t
+)
+ident(
+  int_ref x "records.ml" 939 53617 53623 "records.ml" 939 53617 53624
+)
+"records.ml" 943 53777 53793 "records.ml" 943 53777 53795
+type(
+  unit
+)
+"records.ml" 943 53777 53799 "records.ml" 943 53777 53800
+type(
+  API.ref_host_crashdump ref -> API.ref_host_crashdump
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 943 53777 53800 "records.ml" 943 53777 53804
+type(
+  API.ref_host_crashdump ref
+)
+ident(
+  int_ref _ref "records.ml" 936 53461 53467 "records.ml" 936 53461 53471
+)
+"records.ml" 943 53777 53799 "records.ml" 943 53777 53804
+type(
+  API.ref_host_crashdump
+)
+"records.ml" 943 53777 53788 "records.ml" 943 53777 53805
+type(
+  unit -> API.ref_host_crashdump
+)
+"records.ml" 946 53825 53829 "records.ml" 946 53825 53839
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 946 53825 53846 "records.ml" 946 53825 53852
+type(
+  string
+)
+"records.ml" 946 53825 53878 "records.ml" 946 53825 53880
+type(
+  unit
+)
+"records.ml" 946 53825 53885 "records.ml" 946 53825 53886
+type(
+  unit -> API.host_crashdump_t
+)
+ident(
+  int_ref x "records.ml" 939 53617 53623 "records.ml" 939 53617 53624
+)
+"records.ml" 946 53825 53887 "records.ml" 946 53825 53889
+type(
+  unit
+)
+"records.ml" 946 53825 53884 "records.ml" 946 53825 53890
+type(
+  API.host_crashdump_t
+)
+"records.ml" 946 53825 53884 "records.ml" 946 53825 53914
+type(
+  string
+)
+"records.ml" 946 53825 53873 "records.ml" 946 53825 53915
+type(
+  unit -> string
+)
+"records.ml" 946 53825 53916 "records.ml" 946 53825 53918
+type(
+  unit
+)
+"records.ml" 946 53825 53829 "records.ml" 946 53825 53918
+type(
+  field
+)
+"records.ml" 947 53920 53924 "records.ml" 947 53920 53934
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 947 53920 53941 "records.ml" 947 53920 53952
+type(
+  string
+)
+"records.ml" 947 53920 53973 "records.ml" 947 53920 53975
+type(
+  unit
+)
+"records.ml" 947 53920 53979 "records.ml" 947 53920 53996
+type(
+  API.ref_host -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 947 53920 53998 "records.ml" 947 53920 53999
+type(
+  unit -> API.host_crashdump_t
+)
+ident(
+  int_ref x "records.ml" 939 53617 53623 "records.ml" 939 53617 53624
+)
+"records.ml" 947 53920 54000 "records.ml" 947 53920 54002
+type(
+  unit
+)
+"records.ml" 947 53920 53997 "records.ml" 947 53920 54003
+type(
+  API.host_crashdump_t
+)
+"records.ml" 947 53920 53997 "records.ml" 947 53920 54027
+type(
+  API.ref_host
+)
+"records.ml" 947 53920 53979 "records.ml" 947 53920 54027
+type(
+  string
+)
+"records.ml" 947 53920 53968 "records.ml" 947 53920 54028
+type(
+  unit -> string
+)
+"records.ml" 947 53920 54029 "records.ml" 947 53920 54031
+type(
+  unit
+)
+"records.ml" 947 53920 53924 "records.ml" 947 53920 54031
+type(
+  field
+)
+"records.ml" 948 54033 54037 "records.ml" 948 54033 54047
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 948 54033 54054 "records.ml" 948 54033 54065
+type(
+  string
+)
+"records.ml" 948 54033 54086 "records.ml" 948 54033 54088
+type(
+  unit
+)
+"records.ml" 948 54033 54092 "records.ml" 948 54033 54106
+type(
+  API.datetime -> string
+)
+ident(
+  ext_ref Date.to_string
+)
+"records.ml" 948 54033 54108 "records.ml" 948 54033 54109
+type(
+  unit -> API.host_crashdump_t
+)
+ident(
+  int_ref x "records.ml" 939 53617 53623 "records.ml" 939 53617 53624
+)
+"records.ml" 948 54033 54110 "records.ml" 948 54033 54112
+type(
+  unit
+)
+"records.ml" 948 54033 54107 "records.ml" 948 54033 54113
+type(
+  API.host_crashdump_t
+)
+"records.ml" 948 54033 54107 "records.ml" 948 54033 54142
+type(
+  API.datetime
+)
+"records.ml" 948 54033 54092 "records.ml" 948 54033 54142
+type(
+  string
+)
+"records.ml" 948 54033 54081 "records.ml" 948 54033 54143
+type(
+  unit -> string
+)
+"records.ml" 948 54033 54144 "records.ml" 948 54033 54146
+type(
+  unit
+)
+"records.ml" 948 54033 54037 "records.ml" 948 54033 54146
+type(
+  field
+)
+"records.ml" 949 54148 54152 "records.ml" 949 54148 54162
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 949 54148 54169 "records.ml" 949 54148 54175
+type(
+  string
+)
+"records.ml" 949 54148 54201 "records.ml" 949 54148 54203
+type(
+  unit
+)
+"records.ml" 949 54148 54207 "records.ml" 949 54148 54222
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 949 54148 54224 "records.ml" 949 54148 54225
+type(
+  unit -> API.host_crashdump_t
+)
+ident(
+  int_ref x "records.ml" 939 53617 53623 "records.ml" 939 53617 53624
+)
+"records.ml" 949 54148 54226 "records.ml" 949 54148 54228
+type(
+  unit
+)
+"records.ml" 949 54148 54223 "records.ml" 949 54148 54229
+type(
+  API.host_crashdump_t
+)
+"records.ml" 949 54148 54223 "records.ml" 949 54148 54253
+type(
+  int64
+)
+"records.ml" 949 54148 54207 "records.ml" 949 54148 54253
+type(
+  string
+)
+"records.ml" 949 54148 54196 "records.ml" 949 54148 54254
+type(
+  unit -> string
+)
+"records.ml" 949 54148 54255 "records.ml" 949 54148 54257
+type(
+  unit
+)
+"records.ml" 949 54148 54152 "records.ml" 949 54148 54257
+type(
+  field
+)
+"records.ml" 945 53821 53823 "records.ml" 950 54259 54262
+type(
+  field list
+)
+"records.ml" 940 53648 53650 "records.ml" 950 54259 54263
+type(
+  ([ `host_crashdump ], API.host_crashdump_t) record
+)
+"records.ml" 939 53617 53619 "records.ml" 950 54259 54263
+type(
+  ([ `host_crashdump ], API.host_crashdump_t) record
+)
+"records.ml" 938 53582 53584 "records.ml" 950 54259 54263
+type(
+  ([ `host_crashdump ], API.host_crashdump_t) record
+)
+"records.ml" 937 53486 53488 "records.ml" 950 54259 54263
+type(
+  ([ `host_crashdump ], API.host_crashdump_t) record
+)
+"records.ml" 936 53461 53463 "records.ml" 950 54259 54263
+type(
+  ([ `host_crashdump ], API.host_crashdump_t) record
+)
+"records.ml" 952 54265 54269 "records.ml" 952 54265 54286
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session ->
+  API.ref_pool_patch -> ([ `pool_patch ], API.pool_patch_t) record
+)
+ident(
+  def pool_patch_record "records.ml" 990 56115 56115 --
+)
+"records.ml" 952 54265 54287 "records.ml" 952 54265 54290
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 952 54265 54291 "records.ml" 987 56102 56112
+)
+"records.ml" 952 54265 54291 "records.ml" 952 54265 54301
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 952 54265 54302 "records.ml" 987 56102 56112
+)
+"records.ml" 952 54265 54302 "records.ml" 952 54265 54307
+type(
+  API.ref_pool_patch
+)
+ident(
+  def patch "records.ml" 953 54311 54313 "records.ml" 987 56102 56112
+)
+"records.ml" 953 54311 54317 "records.ml" 953 54311 54321
+type(
+  API.ref_pool_patch ref
+)
+"records.ml" 953 54311 54324 "records.ml" 953 54311 54327
+type(
+  API.ref_pool_patch -> API.ref_pool_patch ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 953 54311 54328 "records.ml" 953 54311 54333
+type(
+  API.ref_pool_patch
+)
+ident(
+  int_ref patch "records.ml" 952 54265 54302 "records.ml" 952 54265 54307
+)
+"records.ml" 953 54311 54324 "records.ml" 953 54311 54333
+type(
+  API.ref_pool_patch ref
+)
+"records.ml" 954 54337 54343 "records.ml" 954 54337 54355
+type(
+  API.pool_patch_t lzy
+)
+"records.ml" 954 54337 54369 "records.ml" 954 54337 54371
+type(
+  unit
+)
+"records.ml" 954 54337 54375 "records.ml" 954 54337 54403
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_pool_patch -> API.pool_patch_t
+)
+ident(
+  ext_ref Client.( Client ).( Pool_patch ).get_record
+)
+"records.ml" 954 54337 54404 "records.ml" 954 54337 54407
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 952 54265 54287 "records.ml" 952 54265 54290
+)
+"records.ml" 954 54337 54408 "records.ml" 954 54337 54418
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 952 54265 54291 "records.ml" 952 54265 54301
+)
+"records.ml" 954 54337 54419 "records.ml" 954 54337 54420
+type(
+  API.ref_pool_patch ref -> API.ref_pool_patch
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 954 54337 54420 "records.ml" 954 54337 54424
+type(
+  API.ref_pool_patch ref
+)
+ident(
+  int_ref _ref "records.ml" 953 54311 54317 "records.ml" 953 54311 54321
+)
+"records.ml" 954 54337 54419 "records.ml" 954 54337 54424
+type(
+  API.ref_pool_patch
+)
+"records.ml" 954 54337 54375 "records.ml" 954 54337 54424
+type(
+  API.pool_patch_t
+)
+"records.ml" 954 54337 54364 "records.ml" 954 54337 54425
+type(
+  unit -> API.pool_patch_t
+)
+"records.ml" 954 54337 54358 "records.ml" 954 54337 54425
+type(
+  API.pool_patch_t lzy
+)
+"records.ml" 955 54429 54435 "records.ml" 955 54429 54441
+type(
+  API.pool_patch_t lzy ref
+)
+"records.ml" 955 54429 54444 "records.ml" 955 54429 54447
+type(
+  API.pool_patch_t lzy -> API.pool_patch_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 955 54429 54448 "records.ml" 955 54429 54460
+type(
+  API.pool_patch_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 954 54337 54343 "records.ml" 954 54337 54355
+)
+"records.ml" 955 54429 54444 "records.ml" 955 54429 54460
+type(
+  API.pool_patch_t lzy ref
+)
+"records.ml" 956 54464 54470 "records.ml" 956 54464 54471
+type(
+  unit -> API.pool_patch_t
+)
+"records.ml" 956 54464 54472 "records.ml" 956 54464 54474
+type(
+  unit
+)
+"records.ml" 956 54464 54477 "records.ml" 956 54464 54484
+type(
+  API.pool_patch_t lzy ref -> API.pool_patch_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 956 54464 54485 "records.ml" 956 54464 54491
+type(
+  API.pool_patch_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 955 54429 54435 "records.ml" 955 54429 54441
+)
+"records.ml" 956 54464 54477 "records.ml" 956 54464 54491
+type(
+  API.pool_patch_t
+)
+"records.ml" 957 54495 54501 "records.ml" 957 54495 54510
+type(
+  unit -> string list
+)
+"records.ml" 957 54495 54511 "records.ml" 957 54495 54513
+type(
+  unit
+)
+"records.ml" 958 54517 54525 "records.ml" 958 54517 54540
+type(
+  API.ref_host_patch_set
+)
+"records.ml" 958 54517 54544 "records.ml" 958 54517 54545
+type(
+  unit -> API.pool_patch_t
+)
+ident(
+  int_ref x "records.ml" 956 54464 54470 "records.ml" 956 54464 54471
+)
+"records.ml" 958 54517 54546 "records.ml" 958 54517 54548
+type(
+  unit
+)
+"records.ml" 958 54517 54543 "records.ml" 958 54517 54549
+type(
+  API.pool_patch_t
+)
+"records.ml" 958 54517 54543 "records.ml" 958 54517 54577
+type(
+  API.ref_host_patch_set
+)
+"records.ml" 959 54581 54589 "records.ml" 959 54581 54598
+type(
+  API.ref_host list
+)
+"records.ml" 959 54581 54601 "records.ml" 959 54581 54609
+type(
+  (API.ref_host_patch -> API.ref_host) ->
+  API.ref_host_patch_set -> API.ref_host list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 959 54581 54615 "records.ml" 959 54581 54616
+type(
+  API.ref_host_patch
+)
+ident(
+  def x "records.ml" 959 54581 54620 "records.ml" 959 54581 54671
+)
+"records.ml" 959 54581 54620 "records.ml" 959 54581 54646
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_host_patch -> API.ref_host
+)
+ident(
+  ext_ref Client.( Client ).( Host_patch ).get_host
+)
+"records.ml" 959 54581 54648 "records.ml" 959 54581 54651
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 952 54265 54287 "records.ml" 952 54265 54290
+)
+"records.ml" 959 54581 54653 "records.ml" 959 54581 54663
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 952 54265 54291 "records.ml" 952 54265 54301
+)
+"records.ml" 959 54581 54670 "records.ml" 959 54581 54671
+type(
+  API.ref_host_patch
+)
+ident(
+  int_ref x "records.ml" 959 54581 54615 "records.ml" 959 54581 54616
+)
+"records.ml" 959 54581 54620 "records.ml" 959 54581 54671
+type(
+  API.ref_host
+)
+"records.ml" 959 54581 54610 "records.ml" 959 54581 54672
+type(
+  API.ref_host_patch -> API.ref_host
+)
+"records.ml" 959 54581 54673 "records.ml" 959 54581 54688
+type(
+  API.ref_host_patch_set
+)
+ident(
+  int_ref host_patch_refs "records.ml" 958 54517 54525 "records.ml" 958 54517 54540
+)
+"records.ml" 959 54581 54601 "records.ml" 959 54581 54688
+type(
+  API.ref_host list
+)
+"records.ml" 960 54692 54700 "records.ml" 960 54692 54710
+type(
+  string list
+)
+"records.ml" 960 54692 54713 "records.ml" 960 54692 54721
+type(
+  (API.ref_host -> string) -> API.ref_host list -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 960 54692 54727 "records.ml" 960 54692 54728
+type(
+  API.ref_host
+)
+ident(
+  def x "records.ml" 960 54692 54732 "records.ml" 960 54692 54777
+)
+"records.ml" 960 54692 54732 "records.ml" 960 54692 54752
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_host -> string
+)
+ident(
+  ext_ref Client.( Client ).( Host ).get_uuid
+)
+"records.ml" 960 54692 54754 "records.ml" 960 54692 54757
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 952 54265 54287 "records.ml" 952 54265 54290
+)
+"records.ml" 960 54692 54759 "records.ml" 960 54692 54769
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 952 54265 54291 "records.ml" 952 54265 54301
+)
+"records.ml" 960 54692 54776 "records.ml" 960 54692 54777
+type(
+  API.ref_host
+)
+ident(
+  int_ref x "records.ml" 960 54692 54727 "records.ml" 960 54692 54728
+)
+"records.ml" 960 54692 54732 "records.ml" 960 54692 54777
+type(
+  string
+)
+"records.ml" 960 54692 54722 "records.ml" 960 54692 54778
+type(
+  API.ref_host -> string
+)
+"records.ml" 960 54692 54779 "records.ml" 960 54692 54788
+type(
+  API.ref_host list
+)
+ident(
+  int_ref host_refs "records.ml" 959 54581 54589 "records.ml" 959 54581 54598
+)
+"records.ml" 960 54692 54713 "records.ml" 960 54692 54788
+type(
+  string list
+)
+"records.ml" 961 54792 54798 "records.ml" 961 54792 54808
+type(
+  string list
+)
+ident(
+  int_ref host_uuids "records.ml" 960 54692 54700 "records.ml" 960 54692 54710
+)
+"records.ml" 960 54692 54696 "records.ml" 961 54792 54808
+type(
+  string list
+)
+"records.ml" 959 54581 54585 "records.ml" 961 54792 54808
+type(
+  string list
+)
+"records.ml" 958 54517 54521 "records.ml" 961 54792 54808
+type(
+  string list
+)
+"records.ml" 963 54814 54820 "records.ml" 963 54814 54850
+type(
+  [< `restartHVM | `restartHost | `restartPV | `restartXAPI ] -> string
+)
+"records.ml" 964 54862 54868 "records.ml" 964 54862 54879
+type(
+  [< `restartHVM | `restartHost | `restartPV | `restartXAPI ] as 'a
+)
+"records.ml" 964 54862 54883 "records.ml" 964 54862 54895
+type(
+  string
+)
+"records.ml" 965 54896 54902 "records.ml" 965 54896 54912
+type(
+  'a
+)
+"records.ml" 965 54896 54916 "records.ml" 965 54896 54927
+type(
+  string
+)
+"records.ml" 966 54928 54934 "records.ml" 966 54928 54946
+type(
+  'a
+)
+"records.ml" 966 54928 54950 "records.ml" 966 54928 54963
+type(
+  string
+)
+"records.ml" 967 54964 54970 "records.ml" 967 54964 54982
+type(
+  'a
+)
+"records.ml" 967 54964 54986 "records.ml" 967 54964 54999
+type(
+  string
+)
+"records.ml" 963 54814 54853 "records.ml" 967 54964 54999
+type(
+  'a -> string
+)
+"records.ml" 969 55005 55011 "records.ml" 969 55005 55045
+type(
+  API.after_apply_guidance_set -> string list
+)
+"records.ml" 970 55049 55053 "records.ml" 970 55049 55061
+type(
+  ([ `restartHVM | `restartHost | `restartPV | `restartXAPI ] -> string) ->
+  API.after_apply_guidance_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 970 55049 55062 "records.ml" 970 55049 55092
+type(
+  [ `restartHVM | `restartHost | `restartPV | `restartXAPI ] -> string
+)
+ident(
+  int_ref after_apply_guidance_to_string "records.ml" 963 54814 54820 "records.ml" 963 54814 54850
+)
+"records.ml" 970 55049 55053 "records.ml" 970 55049 55092
+type(
+  API.after_apply_guidance_set -> string list
+)
+"records.ml" 972 55099 55105 "records.ml" 972 55099 55125
+type(
+  unit -> string list
+)
+"records.ml" 972 55099 55126 "records.ml" 972 55099 55128
+type(
+  unit
+)
+"records.ml" 973 55131 55135 "records.ml" 973 55131 55169
+type(
+  API.after_apply_guidance_set -> string list
+)
+ident(
+  int_ref after_apply_guidance_to_string_set "records.ml" 969 55005 55011 "records.ml" 969 55005 55045
+)
+"records.ml" 973 55131 55171 "records.ml" 973 55131 55172
+type(
+  unit -> API.pool_patch_t
+)
+ident(
+  int_ref x "records.ml" 956 54464 54470 "records.ml" 956 54464 54471
+)
+"records.ml" 973 55131 55173 "records.ml" 973 55131 55175
+type(
+  unit
+)
+"records.ml" 973 55131 55170 "records.ml" 973 55131 55176
+type(
+  API.pool_patch_t
+)
+"records.ml" 973 55131 55170 "records.ml" 973 55131 55212
+type(
+  API.after_apply_guidance_set
+)
+"records.ml" 973 55131 55135 "records.ml" 973 55131 55212
+type(
+  string list
+)
+"records.ml" 975 55218 55236 "records.ml" 975 55218 55237
+type(
+  API.ref_pool_patch
+)
+ident(
+  def r "records.ml" 975 55218 55241 "records.ml" 975 55218 55274
+)
+"records.ml" 975 55218 55241 "records.ml" 975 55218 55245
+type(
+  API.ref_pool_patch ref
+)
+ident(
+  int_ref _ref "records.ml" 953 54311 54317 "records.ml" 953 54311 54321
+)
+"records.ml" 975 55218 55246 "records.ml" 975 55218 55248
+type(
+  API.ref_pool_patch ref -> API.ref_pool_patch -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 975 55218 55249 "records.ml" 975 55218 55250
+type(
+  API.ref_pool_patch
+)
+ident(
+  int_ref r "records.ml" 975 55218 55236 "records.ml" 975 55218 55237
+)
+"records.ml" 975 55218 55241 "records.ml" 975 55218 55250
+type(
+  unit
+)
+"records.ml" 975 55218 55252 "records.ml" 975 55218 55258
+type(
+  API.pool_patch_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 955 54429 54435 "records.ml" 955 54429 54441
+)
+"records.ml" 975 55218 55259 "records.ml" 975 55218 55261
+type(
+  API.pool_patch_t lzy ref -> API.pool_patch_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 975 55218 55262 "records.ml" 975 55218 55274
+type(
+  API.pool_patch_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 954 54337 54343 "records.ml" 954 54337 54355
+)
+"records.ml" 975 55218 55252 "records.ml" 975 55218 55274
+type(
+  unit
+)
+"records.ml" 975 55218 55241 "records.ml" 975 55218 55274
+type(
+  unit
+)
+"records.ml" 975 55218 55231 "records.ml" 975 55218 55276
+type(
+  API.ref_pool_patch -> unit
+)
+"records.ml" 976 55278 55300 "records.ml" 976 55278 55301
+type(
+  API.ref_pool_patch
+)
+ident(
+  def a "records.ml" 976 55278 55308 "records.ml" 976 55278 55334
+)
+"records.ml" 976 55278 55302 "records.ml" 976 55278 55303
+type(
+  API.pool_patch_t
+)
+ident(
+  def b "records.ml" 976 55278 55308 "records.ml" 976 55278 55334
+)
+"records.ml" 976 55278 55299 "records.ml" 976 55278 55304
+type(
+  API.ref_pool_patch * API.pool_patch_t
+)
+"records.ml" 976 55278 55308 "records.ml" 976 55278 55312
+type(
+  API.ref_pool_patch ref
+)
+ident(
+  int_ref _ref "records.ml" 953 54311 54317 "records.ml" 953 54311 54321
+)
+"records.ml" 976 55278 55313 "records.ml" 976 55278 55315
+type(
+  API.ref_pool_patch ref -> API.ref_pool_patch -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 976 55278 55316 "records.ml" 976 55278 55317
+type(
+  API.ref_pool_patch
+)
+ident(
+  int_ref a "records.ml" 976 55278 55300 "records.ml" 976 55278 55301
+)
+"records.ml" 976 55278 55308 "records.ml" 976 55278 55317
+type(
+  unit
+)
+"records.ml" 976 55278 55319 "records.ml" 976 55278 55325
+type(
+  API.pool_patch_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 955 54429 54435 "records.ml" 955 54429 54441
+)
+"records.ml" 976 55278 55326 "records.ml" 976 55278 55328
+type(
+  API.pool_patch_t lzy ref -> API.pool_patch_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 976 55278 55333 "records.ml" 976 55278 55334
+type(
+  API.pool_patch_t
+)
+ident(
+  int_ref b "records.ml" 976 55278 55302 "records.ml" 976 55278 55303
+)
+"records.ml" 976 55278 55329 "records.ml" 976 55278 55334
+type(
+  API.pool_patch_t lzy
+)
+"records.ml" 976 55278 55319 "records.ml" 976 55278 55334
+type(
+  unit
+)
+"records.ml" 976 55278 55308 "records.ml" 976 55278 55334
+type(
+  unit
+)
+"records.ml" 976 55278 55294 "records.ml" 976 55278 55335
+type(
+  API.ref_pool_patch * API.pool_patch_t -> unit
+)
+"records.ml" 977 55337 55350 "records.ml" 977 55337 55351
+type(
+  unit -> API.pool_patch_t
+)
+ident(
+  int_ref x "records.ml" 956 54464 54470 "records.ml" 956 54464 54471
+)
+"records.ml" 978 55353 55371 "records.ml" 978 55353 55373
+type(
+  unit
+)
+"records.ml" 978 55353 55377 "records.ml" 978 55353 55378
+type(
+  API.ref_pool_patch ref -> API.ref_pool_patch
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 978 55353 55378 "records.ml" 978 55353 55382
+type(
+  API.ref_pool_patch ref
+)
+ident(
+  int_ref _ref "records.ml" 953 54311 54317 "records.ml" 953 54311 54321
+)
+"records.ml" 978 55353 55377 "records.ml" 978 55353 55382
+type(
+  API.ref_pool_patch
+)
+"records.ml" 978 55353 55366 "records.ml" 978 55353 55383
+type(
+  unit -> API.ref_pool_patch
+)
+"records.ml" 981 55411 55421 "records.ml" 981 55411 55431
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 981 55411 55438 "records.ml" 981 55411 55444
+type(
+  string
+)
+"records.ml" 981 55411 55470 "records.ml" 981 55411 55472
+type(
+  unit
+)
+"records.ml" 981 55411 55477 "records.ml" 981 55411 55478
+type(
+  unit -> API.pool_patch_t
+)
+ident(
+  int_ref x "records.ml" 956 54464 54470 "records.ml" 956 54464 54471
+)
+"records.ml" 981 55411 55479 "records.ml" 981 55411 55481
+type(
+  unit
+)
+"records.ml" 981 55411 55476 "records.ml" 981 55411 55482
+type(
+  API.pool_patch_t
+)
+"records.ml" 981 55411 55476 "records.ml" 981 55411 55502
+type(
+  string
+)
+"records.ml" 981 55411 55465 "records.ml" 981 55411 55503
+type(
+  unit -> string
+)
+"records.ml" 981 55411 55504 "records.ml" 981 55411 55506
+type(
+  unit
+)
+"records.ml" 981 55411 55421 "records.ml" 981 55411 55506
+type(
+  field
+)
+"records.ml" 982 55508 55518 "records.ml" 982 55508 55528
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 982 55508 55535 "records.ml" 982 55508 55547
+type(
+  string
+)
+"records.ml" 982 55508 55567 "records.ml" 982 55508 55569
+type(
+  unit
+)
+"records.ml" 982 55508 55574 "records.ml" 982 55508 55575
+type(
+  unit -> API.pool_patch_t
+)
+ident(
+  int_ref x "records.ml" 956 54464 54470 "records.ml" 956 54464 54471
+)
+"records.ml" 982 55508 55576 "records.ml" 982 55508 55578
+type(
+  unit
+)
+"records.ml" 982 55508 55573 "records.ml" 982 55508 55579
+type(
+  API.pool_patch_t
+)
+"records.ml" 982 55508 55573 "records.ml" 982 55508 55605
+type(
+  string
+)
+"records.ml" 982 55508 55562 "records.ml" 982 55508 55606
+type(
+  unit -> string
+)
+"records.ml" 982 55508 55607 "records.ml" 982 55508 55609
+type(
+  unit
+)
+"records.ml" 982 55508 55518 "records.ml" 982 55508 55609
+type(
+  field
+)
+"records.ml" 983 55611 55621 "records.ml" 983 55611 55631
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 983 55611 55638 "records.ml" 983 55611 55656
+type(
+  string
+)
+"records.ml" 983 55611 55670 "records.ml" 983 55611 55672
+type(
+  unit
+)
+"records.ml" 983 55611 55677 "records.ml" 983 55611 55678
+type(
+  unit -> API.pool_patch_t
+)
+ident(
+  int_ref x "records.ml" 956 54464 54470 "records.ml" 956 54464 54471
+)
+"records.ml" 983 55611 55679 "records.ml" 983 55611 55681
+type(
+  unit
+)
+"records.ml" 983 55611 55676 "records.ml" 983 55611 55682
+type(
+  API.pool_patch_t
+)
+"records.ml" 983 55611 55676 "records.ml" 983 55611 55714
+type(
+  string
+)
+"records.ml" 983 55611 55665 "records.ml" 983 55611 55715
+type(
+  unit -> string
+)
+"records.ml" 983 55611 55716 "records.ml" 983 55611 55718
+type(
+  unit
+)
+"records.ml" 983 55611 55621 "records.ml" 983 55611 55718
+type(
+  field
+)
+"records.ml" 984 55720 55730 "records.ml" 984 55720 55740
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 984 55720 55747 "records.ml" 984 55720 55753
+type(
+  string
+)
+"records.ml" 984 55720 55779 "records.ml" 984 55720 55781
+type(
+  unit
+)
+"records.ml" 984 55720 55785 "records.ml" 984 55720 55800
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 984 55720 55802 "records.ml" 984 55720 55803
+type(
+  unit -> API.pool_patch_t
+)
+ident(
+  int_ref x "records.ml" 956 54464 54470 "records.ml" 956 54464 54471
+)
+"records.ml" 984 55720 55804 "records.ml" 984 55720 55806
+type(
+  unit
+)
+"records.ml" 984 55720 55801 "records.ml" 984 55720 55807
+type(
+  API.pool_patch_t
+)
+"records.ml" 984 55720 55801 "records.ml" 984 55720 55827
+type(
+  int64
+)
+"records.ml" 984 55720 55785 "records.ml" 984 55720 55827
+type(
+  string
+)
+"records.ml" 984 55720 55774 "records.ml" 984 55720 55828
+type(
+  unit -> string
+)
+"records.ml" 984 55720 55829 "records.ml" 984 55720 55831
+type(
+  unit
+)
+"records.ml" 984 55720 55730 "records.ml" 984 55720 55831
+type(
+  field
+)
+"records.ml" 985 55833 55843 "records.ml" 985 55833 55853
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 985 55833 55860 "records.ml" 985 55833 55867
+type(
+  string
+)
+"records.ml" 985 55833 55892 "records.ml" 985 55833 55894
+type(
+  unit
+)
+"records.ml" 985 55833 55898 "records.ml" 985 55833 55911
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 985 55833 55912 "records.ml" 985 55833 55916
+type(
+  string
+)
+"records.ml" 985 55833 55918 "records.ml" 985 55833 55927
+type(
+  unit -> string list
+)
+ident(
+  int_ref get_hosts "records.ml" 957 54495 54501 "records.ml" 957 54495 54510
+)
+"records.ml" 985 55833 55928 "records.ml" 985 55833 55930
+type(
+  unit
+)
+"records.ml" 985 55833 55917 "records.ml" 985 55833 55931
+type(
+  string list
+)
+"records.ml" 985 55833 55898 "records.ml" 985 55833 55931
+type(
+  string
+)
+"records.ml" 985 55833 55887 "records.ml" 985 55833 55932
+type(
+  unit -> string
+)
+"records.ml" 985 55833 55942 "records.ml" 985 55833 55951
+type(
+  unit -> string list
+)
+ident(
+  int_ref get_hosts "records.ml" 957 54495 54501 "records.ml" 957 54495 54510
+)
+"records.ml" 985 55833 55952 "records.ml" 985 55833 55954
+type(
+  unit
+)
+"records.ml" 985 55833 55843 "records.ml" 985 55833 55954
+type(
+  field
+)
+"records.ml" 986 55956 55966 "records.ml" 986 55956 55976
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 986 55956 55983 "records.ml" 986 55956 56005
+type(
+  string
+)
+"records.ml" 986 55956 56016 "records.ml" 986 55956 56018
+type(
+  unit
+)
+"records.ml" 986 55956 56022 "records.ml" 986 55956 56035
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 986 55956 56036 "records.ml" 986 55956 56040
+type(
+  string
+)
+"records.ml" 986 55956 56042 "records.ml" 986 55956 56062
+type(
+  unit -> string list
+)
+ident(
+  int_ref after_apply_guidance "records.ml" 972 55099 55105 "records.ml" 972 55099 55125
+)
+"records.ml" 986 55956 56063 "records.ml" 986 55956 56065
+type(
+  unit
+)
+"records.ml" 986 55956 56041 "records.ml" 986 55956 56066
+type(
+  string list
+)
+"records.ml" 986 55956 56022 "records.ml" 986 55956 56066
+type(
+  string
+)
+"records.ml" 986 55956 56011 "records.ml" 986 55956 56067
+type(
+  unit -> string
+)
+"records.ml" 986 55956 56077 "records.ml" 986 55956 56097
+type(
+  unit -> string list
+)
+ident(
+  int_ref after_apply_guidance "records.ml" 972 55099 55105 "records.ml" 972 55099 55125
+)
+"records.ml" 986 55956 56098 "records.ml" 986 55956 56100
+type(
+  unit
+)
+"records.ml" 986 55956 55966 "records.ml" 986 55956 56100
+type(
+  field
+)
+"records.ml" 980 55401 55409 "records.ml" 987 56102 56111
+type(
+  field list
+)
+"records.ml" 975 55218 55222 "records.ml" 987 56102 56112
+type(
+  ([ `pool_patch ], API.pool_patch_t) record
+)
+"records.ml" 972 55099 55101 "records.ml" 987 56102 56112
+type(
+  ([ `pool_patch ], API.pool_patch_t) record
+)
+"records.ml" 969 55005 55007 "records.ml" 987 56102 56112
+type(
+  ([ `pool_patch ], API.pool_patch_t) record
+)
+"records.ml" 963 54814 54816 "records.ml" 987 56102 56112
+type(
+  ([ `pool_patch ], API.pool_patch_t) record
+)
+"records.ml" 957 54495 54497 "records.ml" 987 56102 56112
+type(
+  ([ `pool_patch ], API.pool_patch_t) record
+)
+"records.ml" 956 54464 54466 "records.ml" 987 56102 56112
+type(
+  ([ `pool_patch ], API.pool_patch_t) record
+)
+"records.ml" 955 54429 54431 "records.ml" 987 56102 56112
+type(
+  ([ `pool_patch ], API.pool_patch_t) record
+)
+"records.ml" 954 54337 54339 "records.ml" 987 56102 56112
+type(
+  ([ `pool_patch ], API.pool_patch_t) record
+)
+"records.ml" 953 54311 54313 "records.ml" 987 56102 56112
+type(
+  ([ `pool_patch ], API.pool_patch_t) record
+)
+"records.ml" 990 56115 56119 "records.ml" 990 56115 56134
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session ->
+  API.ref_host_cpu -> ([ `host_cpu ], API.host_cpu_t) record
+)
+ident(
+  def host_cpu_record "records.ml" 1017 57746 57746 --
+)
+"records.ml" 990 56115 56135 "records.ml" 990 56115 56138
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 990 56115 56139 "records.ml" 1015 57740 57744
+)
+"records.ml" 990 56115 56139 "records.ml" 990 56115 56149
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 990 56115 56150 "records.ml" 1015 57740 57744
+)
+"records.ml" 990 56115 56150 "records.ml" 990 56115 56158
+type(
+  API.ref_host_cpu
+)
+ident(
+  def host_cpu "records.ml" 991 56162 56164 "records.ml" 1015 57740 57744
+)
+"records.ml" 991 56162 56168 "records.ml" 991 56162 56172
+type(
+  API.ref_host_cpu ref
+)
+"records.ml" 991 56162 56175 "records.ml" 991 56162 56178
+type(
+  API.ref_host_cpu -> API.ref_host_cpu ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 991 56162 56179 "records.ml" 991 56162 56187
+type(
+  API.ref_host_cpu
+)
+ident(
+  int_ref host_cpu "records.ml" 990 56115 56150 "records.ml" 990 56115 56158
+)
+"records.ml" 991 56162 56175 "records.ml" 991 56162 56187
+type(
+  API.ref_host_cpu ref
+)
+"records.ml" 992 56191 56197 "records.ml" 992 56191 56209
+type(
+  API.host_cpu_t lzy
+)
+"records.ml" 992 56191 56223 "records.ml" 992 56191 56225
+type(
+  unit
+)
+"records.ml" 992 56191 56229 "records.ml" 992 56191 56255
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_host_cpu -> API.host_cpu_t
+)
+ident(
+  ext_ref Client.( Client ).( Host_cpu ).get_record
+)
+"records.ml" 992 56191 56256 "records.ml" 992 56191 56259
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 990 56115 56135 "records.ml" 990 56115 56138
+)
+"records.ml" 992 56191 56260 "records.ml" 992 56191 56270
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 990 56115 56139 "records.ml" 990 56115 56149
+)
+"records.ml" 992 56191 56271 "records.ml" 992 56191 56272
+type(
+  API.ref_host_cpu ref -> API.ref_host_cpu
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 992 56191 56272 "records.ml" 992 56191 56276
+type(
+  API.ref_host_cpu ref
+)
+ident(
+  int_ref _ref "records.ml" 991 56162 56168 "records.ml" 991 56162 56172
+)
+"records.ml" 992 56191 56271 "records.ml" 992 56191 56276
+type(
+  API.ref_host_cpu
+)
+"records.ml" 992 56191 56229 "records.ml" 992 56191 56276
+type(
+  API.host_cpu_t
+)
+"records.ml" 992 56191 56218 "records.ml" 992 56191 56277
+type(
+  unit -> API.host_cpu_t
+)
+"records.ml" 992 56191 56212 "records.ml" 992 56191 56277
+type(
+  API.host_cpu_t lzy
+)
+"records.ml" 993 56281 56287 "records.ml" 993 56281 56293
+type(
+  API.host_cpu_t lzy ref
+)
+"records.ml" 993 56281 56296 "records.ml" 993 56281 56299
+type(
+  API.host_cpu_t lzy -> API.host_cpu_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 993 56281 56300 "records.ml" 993 56281 56312
+type(
+  API.host_cpu_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 992 56191 56197 "records.ml" 992 56191 56209
+)
+"records.ml" 993 56281 56296 "records.ml" 993 56281 56312
+type(
+  API.host_cpu_t lzy ref
+)
+"records.ml" 994 56316 56322 "records.ml" 994 56316 56323
+type(
+  unit -> API.host_cpu_t
+)
+"records.ml" 994 56316 56324 "records.ml" 994 56316 56326
+type(
+  unit
+)
+"records.ml" 994 56316 56329 "records.ml" 994 56316 56336
+type(
+  API.host_cpu_t lzy ref -> API.host_cpu_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 994 56316 56337 "records.ml" 994 56316 56343
+type(
+  API.host_cpu_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 993 56281 56287 "records.ml" 993 56281 56293
+)
+"records.ml" 994 56316 56329 "records.ml" 994 56316 56343
+type(
+  API.host_cpu_t
+)
+"records.ml" 995 56347 56363 "records.ml" 995 56347 56364
+type(
+  API.ref_host_cpu
+)
+ident(
+  def r "records.ml" 995 56347 56368 "records.ml" 995 56347 56401
+)
+"records.ml" 995 56347 56368 "records.ml" 995 56347 56372
+type(
+  API.ref_host_cpu ref
+)
+ident(
+  int_ref _ref "records.ml" 991 56162 56168 "records.ml" 991 56162 56172
+)
+"records.ml" 995 56347 56373 "records.ml" 995 56347 56375
+type(
+  API.ref_host_cpu ref -> API.ref_host_cpu -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 995 56347 56376 "records.ml" 995 56347 56377
+type(
+  API.ref_host_cpu
+)
+ident(
+  int_ref r "records.ml" 995 56347 56363 "records.ml" 995 56347 56364
+)
+"records.ml" 995 56347 56368 "records.ml" 995 56347 56377
+type(
+  unit
+)
+"records.ml" 995 56347 56379 "records.ml" 995 56347 56385
+type(
+  API.host_cpu_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 993 56281 56287 "records.ml" 993 56281 56293
+)
+"records.ml" 995 56347 56386 "records.ml" 995 56347 56388
+type(
+  API.host_cpu_t lzy ref -> API.host_cpu_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 995 56347 56389 "records.ml" 995 56347 56401
+type(
+  API.host_cpu_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 992 56191 56197 "records.ml" 992 56191 56209
+)
+"records.ml" 995 56347 56379 "records.ml" 995 56347 56401
+type(
+  unit
+)
+"records.ml" 995 56347 56368 "records.ml" 995 56347 56401
+type(
+  unit
+)
+"records.ml" 995 56347 56358 "records.ml" 995 56347 56403
+type(
+  API.ref_host_cpu -> unit
+)
+"records.ml" 996 56405 56425 "records.ml" 996 56405 56426
+type(
+  API.ref_host_cpu
+)
+ident(
+  def a "records.ml" 996 56405 56433 "records.ml" 996 56405 56459
+)
+"records.ml" 996 56405 56427 "records.ml" 996 56405 56428
+type(
+  API.host_cpu_t
+)
+ident(
+  def b "records.ml" 996 56405 56433 "records.ml" 996 56405 56459
+)
+"records.ml" 996 56405 56424 "records.ml" 996 56405 56429
+type(
+  API.ref_host_cpu * API.host_cpu_t
+)
+"records.ml" 996 56405 56433 "records.ml" 996 56405 56437
+type(
+  API.ref_host_cpu ref
+)
+ident(
+  int_ref _ref "records.ml" 991 56162 56168 "records.ml" 991 56162 56172
+)
+"records.ml" 996 56405 56438 "records.ml" 996 56405 56440
+type(
+  API.ref_host_cpu ref -> API.ref_host_cpu -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 996 56405 56441 "records.ml" 996 56405 56442
+type(
+  API.ref_host_cpu
+)
+ident(
+  int_ref a "records.ml" 996 56405 56425 "records.ml" 996 56405 56426
+)
+"records.ml" 996 56405 56433 "records.ml" 996 56405 56442
+type(
+  unit
+)
+"records.ml" 996 56405 56444 "records.ml" 996 56405 56450
+type(
+  API.host_cpu_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 993 56281 56287 "records.ml" 993 56281 56293
+)
+"records.ml" 996 56405 56451 "records.ml" 996 56405 56453
+type(
+  API.host_cpu_t lzy ref -> API.host_cpu_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 996 56405 56458 "records.ml" 996 56405 56459
+type(
+  API.host_cpu_t
+)
+ident(
+  int_ref b "records.ml" 996 56405 56427 "records.ml" 996 56405 56428
+)
+"records.ml" 996 56405 56454 "records.ml" 996 56405 56459
+type(
+  API.host_cpu_t lzy
+)
+"records.ml" 996 56405 56444 "records.ml" 996 56405 56459
+type(
+  unit
+)
+"records.ml" 996 56405 56433 "records.ml" 996 56405 56459
+type(
+  unit
+)
+"records.ml" 996 56405 56419 "records.ml" 996 56405 56460
+type(
+  API.ref_host_cpu * API.host_cpu_t -> unit
+)
+"records.ml" 997 56462 56473 "records.ml" 997 56462 56474
+type(
+  unit -> API.host_cpu_t
+)
+ident(
+  int_ref x "records.ml" 994 56316 56322 "records.ml" 994 56316 56323
+)
+"records.ml" 998 56476 56492 "records.ml" 998 56476 56494
+type(
+  unit
+)
+"records.ml" 998 56476 56498 "records.ml" 998 56476 56499
+type(
+  API.ref_host_cpu ref -> API.ref_host_cpu
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 998 56476 56499 "records.ml" 998 56476 56503
+type(
+  API.ref_host_cpu ref
+)
+ident(
+  int_ref _ref "records.ml" 991 56162 56168 "records.ml" 991 56162 56172
+)
+"records.ml" 998 56476 56498 "records.ml" 998 56476 56503
+type(
+  API.ref_host_cpu
+)
+"records.ml" 998 56476 56487 "records.ml" 998 56476 56504
+type(
+  unit -> API.ref_host_cpu
+)
+"records.ml" 1001 56524 56528 "records.ml" 1001 56524 56538
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1001 56524 56545 "records.ml" 1001 56524 56551
+type(
+  string
+)
+"records.ml" 1001 56524 56573 "records.ml" 1001 56524 56575
+type(
+  unit
+)
+"records.ml" 1001 56524 56580 "records.ml" 1001 56524 56581
+type(
+  unit -> API.host_cpu_t
+)
+ident(
+  int_ref x "records.ml" 994 56316 56322 "records.ml" 994 56316 56323
+)
+"records.ml" 1001 56524 56582 "records.ml" 1001 56524 56584
+type(
+  unit
+)
+"records.ml" 1001 56524 56579 "records.ml" 1001 56524 56585
+type(
+  API.host_cpu_t
+)
+"records.ml" 1001 56524 56579 "records.ml" 1001 56524 56603
+type(
+  string
+)
+"records.ml" 1001 56524 56568 "records.ml" 1001 56524 56604
+type(
+  unit -> string
+)
+"records.ml" 1001 56524 56605 "records.ml" 1001 56524 56607
+type(
+  unit
+)
+"records.ml" 1001 56524 56528 "records.ml" 1001 56524 56607
+type(
+  field
+)
+"records.ml" 1002 56609 56613 "records.ml" 1002 56609 56623
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1002 56609 56630 "records.ml" 1002 56609 56641
+type(
+  string
+)
+"records.ml" 1002 56609 56658 "records.ml" 1002 56609 56660
+type(
+  unit
+)
+"records.ml" 1002 56609 56664 "records.ml" 1002 56609 56681
+type(
+  API.ref_host -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1002 56609 56683 "records.ml" 1002 56609 56684
+type(
+  unit -> API.host_cpu_t
+)
+ident(
+  int_ref x "records.ml" 994 56316 56322 "records.ml" 994 56316 56323
+)
+"records.ml" 1002 56609 56685 "records.ml" 1002 56609 56687
+type(
+  unit
+)
+"records.ml" 1002 56609 56682 "records.ml" 1002 56609 56688
+type(
+  API.host_cpu_t
+)
+"records.ml" 1002 56609 56682 "records.ml" 1002 56609 56706
+type(
+  API.ref_host
+)
+"records.ml" 1002 56609 56664 "records.ml" 1002 56609 56706
+type(
+  string
+)
+"records.ml" 1002 56609 56653 "records.ml" 1002 56609 56707
+type(
+  unit -> string
+)
+"records.ml" 1002 56609 56708 "records.ml" 1002 56609 56710
+type(
+  unit
+)
+"records.ml" 1002 56609 56613 "records.ml" 1002 56609 56710
+type(
+  field
+)
+"records.ml" 1003 56712 56716 "records.ml" 1003 56712 56726
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1003 56712 56733 "records.ml" 1003 56712 56741
+type(
+  string
+)
+"records.ml" 1003 56712 56761 "records.ml" 1003 56712 56763
+type(
+  unit
+)
+"records.ml" 1003 56712 56767 "records.ml" 1003 56712 56782
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 1003 56712 56785 "records.ml" 1003 56712 56786
+type(
+  unit -> API.host_cpu_t
+)
+ident(
+  int_ref x "records.ml" 994 56316 56322 "records.ml" 994 56316 56323
+)
+"records.ml" 1003 56712 56787 "records.ml" 1003 56712 56789
+type(
+  unit
+)
+"records.ml" 1003 56712 56784 "records.ml" 1003 56712 56790
+type(
+  API.host_cpu_t
+)
+"records.ml" 1003 56712 56783 "records.ml" 1003 56712 56811
+type(
+  int64
+)
+"records.ml" 1003 56712 56767 "records.ml" 1003 56712 56811
+type(
+  string
+)
+"records.ml" 1003 56712 56756 "records.ml" 1003 56712 56812
+type(
+  unit -> string
+)
+"records.ml" 1003 56712 56813 "records.ml" 1003 56712 56815
+type(
+  unit
+)
+"records.ml" 1003 56712 56716 "records.ml" 1003 56712 56815
+type(
+  field
+)
+"records.ml" 1004 56817 56821 "records.ml" 1004 56817 56831
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1004 56817 56838 "records.ml" 1004 56817 56846
+type(
+  string
+)
+"records.ml" 1004 56817 56866 "records.ml" 1004 56817 56868
+type(
+  unit
+)
+"records.ml" 1004 56817 56873 "records.ml" 1004 56817 56874
+type(
+  unit -> API.host_cpu_t
+)
+ident(
+  int_ref x "records.ml" 994 56316 56322 "records.ml" 994 56316 56323
+)
+"records.ml" 1004 56817 56875 "records.ml" 1004 56817 56877
+type(
+  unit
+)
+"records.ml" 1004 56817 56872 "records.ml" 1004 56817 56878
+type(
+  API.host_cpu_t
+)
+"records.ml" 1004 56817 56872 "records.ml" 1004 56817 56898
+type(
+  string
+)
+"records.ml" 1004 56817 56861 "records.ml" 1004 56817 56899
+type(
+  unit -> string
+)
+"records.ml" 1004 56817 56900 "records.ml" 1004 56817 56902
+type(
+  unit
+)
+"records.ml" 1004 56817 56821 "records.ml" 1004 56817 56902
+type(
+  field
+)
+"records.ml" 1005 56904 56908 "records.ml" 1005 56904 56918
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1005 56904 56925 "records.ml" 1005 56904 56932
+type(
+  string
+)
+"records.ml" 1005 56904 56953 "records.ml" 1005 56904 56955
+type(
+  unit
+)
+"records.ml" 1005 56904 56959 "records.ml" 1005 56904 56974
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 1005 56904 56977 "records.ml" 1005 56904 56978
+type(
+  unit -> API.host_cpu_t
+)
+ident(
+  int_ref x "records.ml" 994 56316 56322 "records.ml" 994 56316 56323
+)
+"records.ml" 1005 56904 56979 "records.ml" 1005 56904 56981
+type(
+  unit
+)
+"records.ml" 1005 56904 56976 "records.ml" 1005 56904 56982
+type(
+  API.host_cpu_t
+)
+"records.ml" 1005 56904 56975 "records.ml" 1005 56904 57002
+type(
+  int64
+)
+"records.ml" 1005 56904 56959 "records.ml" 1005 56904 57002
+type(
+  string
+)
+"records.ml" 1005 56904 56948 "records.ml" 1005 56904 57003
+type(
+  unit -> string
+)
+"records.ml" 1005 56904 57004 "records.ml" 1005 56904 57006
+type(
+  unit
+)
+"records.ml" 1005 56904 56908 "records.ml" 1005 56904 57006
+type(
+  field
+)
+"records.ml" 1006 57008 57012 "records.ml" 1006 57008 57022
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1006 57008 57029 "records.ml" 1006 57008 57036
+type(
+  string
+)
+"records.ml" 1006 57008 57057 "records.ml" 1006 57008 57059
+type(
+  unit
+)
+"records.ml" 1006 57008 57063 "records.ml" 1006 57008 57078
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 1006 57008 57081 "records.ml" 1006 57008 57082
+type(
+  unit -> API.host_cpu_t
+)
+ident(
+  int_ref x "records.ml" 994 56316 56322 "records.ml" 994 56316 56323
+)
+"records.ml" 1006 57008 57083 "records.ml" 1006 57008 57085
+type(
+  unit
+)
+"records.ml" 1006 57008 57080 "records.ml" 1006 57008 57086
+type(
+  API.host_cpu_t
+)
+"records.ml" 1006 57008 57079 "records.ml" 1006 57008 57106
+type(
+  int64
+)
+"records.ml" 1006 57008 57063 "records.ml" 1006 57008 57106
+type(
+  string
+)
+"records.ml" 1006 57008 57052 "records.ml" 1006 57008 57107
+type(
+  unit -> string
+)
+"records.ml" 1006 57008 57108 "records.ml" 1006 57008 57110
+type(
+  unit
+)
+"records.ml" 1006 57008 57012 "records.ml" 1006 57008 57110
+type(
+  field
+)
+"records.ml" 1007 57112 57116 "records.ml" 1007 57112 57126
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1007 57112 57133 "records.ml" 1007 57112 57141
+type(
+  string
+)
+"records.ml" 1007 57112 57161 "records.ml" 1007 57112 57163
+type(
+  unit
+)
+"records.ml" 1007 57112 57167 "records.ml" 1007 57112 57182
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 1007 57112 57185 "records.ml" 1007 57112 57186
+type(
+  unit -> API.host_cpu_t
+)
+ident(
+  int_ref x "records.ml" 994 56316 56322 "records.ml" 994 56316 56323
+)
+"records.ml" 1007 57112 57187 "records.ml" 1007 57112 57189
+type(
+  unit
+)
+"records.ml" 1007 57112 57184 "records.ml" 1007 57112 57190
+type(
+  API.host_cpu_t
+)
+"records.ml" 1007 57112 57183 "records.ml" 1007 57112 57211
+type(
+  int64
+)
+"records.ml" 1007 57112 57167 "records.ml" 1007 57112 57211
+type(
+  string
+)
+"records.ml" 1007 57112 57156 "records.ml" 1007 57112 57212
+type(
+  unit -> string
+)
+"records.ml" 1007 57112 57213 "records.ml" 1007 57112 57215
+type(
+  unit
+)
+"records.ml" 1007 57112 57116 "records.ml" 1007 57112 57215
+type(
+  field
+)
+"records.ml" 1008 57217 57221 "records.ml" 1008 57217 57231
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1008 57217 57238 "records.ml" 1008 57217 57249
+type(
+  string
+)
+"records.ml" 1008 57217 57266 "records.ml" 1008 57217 57268
+type(
+  unit
+)
+"records.ml" 1008 57217 57273 "records.ml" 1008 57217 57274
+type(
+  unit -> API.host_cpu_t
+)
+ident(
+  int_ref x "records.ml" 994 56316 56322 "records.ml" 994 56316 56323
+)
+"records.ml" 1008 57217 57275 "records.ml" 1008 57217 57277
+type(
+  unit
+)
+"records.ml" 1008 57217 57272 "records.ml" 1008 57217 57278
+type(
+  API.host_cpu_t
+)
+"records.ml" 1008 57217 57272 "records.ml" 1008 57217 57301
+type(
+  string
+)
+"records.ml" 1008 57217 57261 "records.ml" 1008 57217 57302
+type(
+  unit -> string
+)
+"records.ml" 1008 57217 57303 "records.ml" 1008 57217 57305
+type(
+  unit
+)
+"records.ml" 1008 57217 57221 "records.ml" 1008 57217 57305
+type(
+  field
+)
+"records.ml" 1009 57307 57311 "records.ml" 1009 57307 57321
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1009 57307 57328 "records.ml" 1009 57307 57338
+type(
+  string
+)
+"records.ml" 1009 57307 57356 "records.ml" 1009 57307 57358
+type(
+  unit
+)
+"records.ml" 1009 57307 57363 "records.ml" 1009 57307 57364
+type(
+  unit -> API.host_cpu_t
+)
+ident(
+  int_ref x "records.ml" 994 56316 56322 "records.ml" 994 56316 56323
+)
+"records.ml" 1009 57307 57365 "records.ml" 1009 57307 57367
+type(
+  unit
+)
+"records.ml" 1009 57307 57362 "records.ml" 1009 57307 57368
+type(
+  API.host_cpu_t
+)
+"records.ml" 1009 57307 57362 "records.ml" 1009 57307 57390
+type(
+  string
+)
+"records.ml" 1009 57307 57351 "records.ml" 1009 57307 57391
+type(
+  unit -> string
+)
+"records.ml" 1009 57307 57392 "records.ml" 1009 57307 57394
+type(
+  unit
+)
+"records.ml" 1009 57307 57311 "records.ml" 1009 57307 57394
+type(
+  field
+)
+"records.ml" 1010 57396 57400 "records.ml" 1010 57396 57410
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1010 57396 57417 "records.ml" 1010 57396 57424
+type(
+  string
+)
+"records.ml" 1010 57396 57445 "records.ml" 1010 57396 57447
+type(
+  unit
+)
+"records.ml" 1010 57396 57452 "records.ml" 1010 57396 57453
+type(
+  unit -> API.host_cpu_t
+)
+ident(
+  int_ref x "records.ml" 994 56316 56322 "records.ml" 994 56316 56323
+)
+"records.ml" 1010 57396 57454 "records.ml" 1010 57396 57456
+type(
+  unit
+)
+"records.ml" 1010 57396 57451 "records.ml" 1010 57396 57457
+type(
+  API.host_cpu_t
+)
+"records.ml" 1010 57396 57451 "records.ml" 1010 57396 57476
+type(
+  string
+)
+"records.ml" 1010 57396 57440 "records.ml" 1010 57396 57477
+type(
+  unit -> string
+)
+"records.ml" 1010 57396 57478 "records.ml" 1010 57396 57480
+type(
+  unit
+)
+"records.ml" 1010 57396 57400 "records.ml" 1010 57396 57480
+type(
+  field
+)
+"records.ml" 1011 57482 57486 "records.ml" 1011 57482 57496
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1011 57482 57503 "records.ml" 1011 57482 57516
+type(
+  string
+)
+"records.ml" 1011 57482 57531 "records.ml" 1011 57482 57533
+type(
+  unit
+)
+"records.ml" 1013 57549 57550 "records.ml" 1013 57549 57565
+type(
+  float -> string
+)
+ident(
+  int_ref string_of_float "records.ml" 34 990 994 "records.ml" 34 990 1009
+)
+"records.ml" 1013 57549 57567 "records.ml" 1013 57549 57596
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  host:API.ref_host -> data_source:string -> float
+)
+ident(
+  ext_ref Client.( Client ).( Host ).query_data_source
+)
+"records.ml" 1013 57549 57597 "records.ml" 1013 57549 57600
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 990 56115 56135 "records.ml" 990 56115 56138
+)
+"records.ml" 1013 57549 57601 "records.ml" 1013 57549 57611
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 990 56115 56139 "records.ml" 990 56115 56149
+)
+"records.ml" 1013 57549 57613 "records.ml" 1013 57549 57614
+type(
+  unit -> API.host_cpu_t
+)
+ident(
+  int_ref x "records.ml" 994 56316 56322 "records.ml" 994 56316 56323
+)
+"records.ml" 1013 57549 57615 "records.ml" 1013 57549 57617
+type(
+  unit
+)
+"records.ml" 1013 57549 57612 "records.ml" 1013 57549 57618
+type(
+  API.host_cpu_t
+)
+"records.ml" 1013 57549 57612 "records.ml" 1013 57549 57636
+type(
+  API.ref_host
+)
+"records.ml" 1013 57549 57638 "records.ml" 1013 57549 57652
+type(
+  (int64 -> string, unit, string) format -> int64 -> string
+)
+ident(
+  ext_ref Printf.sprintf
+)
+"records.ml" 1013 57549 57653 "records.ml" 1013 57549 57661
+type(
+  (int64 -> string, unit, string) format
+)
+"records.ml" 1013 57549 57663 "records.ml" 1013 57549 57664
+type(
+  unit -> API.host_cpu_t
+)
+ident(
+  int_ref x "records.ml" 994 56316 56322 "records.ml" 994 56316 56323
+)
+"records.ml" 1013 57549 57665 "records.ml" 1013 57549 57667
+type(
+  unit
+)
+"records.ml" 1013 57549 57662 "records.ml" 1013 57549 57668
+type(
+  API.host_cpu_t
+)
+"records.ml" 1013 57549 57662 "records.ml" 1013 57549 57688
+type(
+  int64
+)
+"records.ml" 1013 57549 57637 "records.ml" 1013 57549 57689
+type(
+  string
+)
+"records.ml" 1013 57549 57566 "records.ml" 1013 57549 57690
+type(
+  float
+)
+"records.ml" 1013 57549 57550 "records.ml" 1013 57549 57690
+type(
+  string
+)
+"records.ml" 1014 57691 57702 "records.ml" 1014 57691 57703
+type(
+  exn
+)
+"records.ml" 1014 57691 57707 "records.ml" 1014 57691 57718
+type(
+  string
+)
+"records.ml" 1012 57538 57544 "records.ml" 1014 57691 57718
+type(
+  string
+)
+"records.ml" 1011 57482 57526 "records.ml" 1014 57691 57719
+type(
+  unit -> string
+)
+"records.ml" 1014 57691 57731 "records.ml" 1014 57691 57735
+type(
+  bool
+)
+"records.ml" 1014 57691 57736 "records.ml" 1014 57691 57738
+type(
+  unit
+)
+"records.ml" 1011 57482 57486 "records.ml" 1014 57691 57738
+type(
+  field
+)
+"records.ml" 1000 56520 56522 "records.ml" 1015 57740 57743
+type(
+  field list
+)
+"records.ml" 995 56347 56349 "records.ml" 1015 57740 57744
+type(
+  ([ `host_cpu ], API.host_cpu_t) record
+)
+"records.ml" 994 56316 56318 "records.ml" 1015 57740 57744
+type(
+  ([ `host_cpu ], API.host_cpu_t) record
+)
+"records.ml" 993 56281 56283 "records.ml" 1015 57740 57744
+type(
+  ([ `host_cpu ], API.host_cpu_t) record
+)
+"records.ml" 992 56191 56193 "records.ml" 1015 57740 57744
+type(
+  ([ `host_cpu ], API.host_cpu_t) record
+)
+"records.ml" 991 56162 56164 "records.ml" 1015 57740 57744
+type(
+  ([ `host_cpu ], API.host_cpu_t) record
+)
+"records.ml" 1017 57746 57750 "records.ml" 1017 57746 57761
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_host -> ([ `host ], API.host_t) record
+)
+ident(
+  def host_record "records.ml" 1099 64986 64986 --
+)
+"records.ml" 1017 57746 57762 "records.ml" 1017 57746 57765
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 1017 57746 57766 "records.ml" 1097 64980 64984
+)
+"records.ml" 1017 57746 57766 "records.ml" 1017 57746 57776
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 1017 57746 57777 "records.ml" 1097 64980 64984
+)
+"records.ml" 1017 57746 57777 "records.ml" 1017 57746 57781
+type(
+  API.ref_host
+)
+ident(
+  def host "records.ml" 1018 57784 57785 "records.ml" 1097 64980 64984
+)
+"records.ml" 1018 57784 57789 "records.ml" 1018 57784 57793
+type(
+  API.ref_host ref
+)
+"records.ml" 1018 57784 57796 "records.ml" 1018 57784 57799
+type(
+  API.ref_host -> API.ref_host ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1018 57784 57800 "records.ml" 1018 57784 57804
+type(
+  API.ref_host
+)
+ident(
+  int_ref host "records.ml" 1017 57746 57777 "records.ml" 1017 57746 57781
+)
+"records.ml" 1018 57784 57796 "records.ml" 1018 57784 57804
+type(
+  API.ref_host ref
+)
+"records.ml" 1019 57808 57813 "records.ml" 1019 57808 57825
+type(
+  API.host_t lzy
+)
+"records.ml" 1019 57808 57839 "records.ml" 1019 57808 57841
+type(
+  unit
+)
+"records.ml" 1019 57808 57845 "records.ml" 1019 57808 57867
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_host -> API.host_t
+)
+ident(
+  ext_ref Client.( Client ).( Host ).get_record
+)
+"records.ml" 1019 57808 57868 "records.ml" 1019 57808 57871
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1017 57746 57762 "records.ml" 1017 57746 57765
+)
+"records.ml" 1019 57808 57872 "records.ml" 1019 57808 57882
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1017 57746 57766 "records.ml" 1017 57746 57776
+)
+"records.ml" 1019 57808 57883 "records.ml" 1019 57808 57884
+type(
+  API.ref_host ref -> API.ref_host
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1019 57808 57884 "records.ml" 1019 57808 57888
+type(
+  API.ref_host ref
+)
+ident(
+  int_ref _ref "records.ml" 1018 57784 57789 "records.ml" 1018 57784 57793
+)
+"records.ml" 1019 57808 57883 "records.ml" 1019 57808 57888
+type(
+  API.ref_host
+)
+"records.ml" 1019 57808 57845 "records.ml" 1019 57808 57888
+type(
+  API.host_t
+)
+"records.ml" 1019 57808 57834 "records.ml" 1019 57808 57889
+type(
+  unit -> API.host_t
+)
+"records.ml" 1019 57808 57828 "records.ml" 1019 57808 57889
+type(
+  API.host_t lzy
+)
+"records.ml" 1020 57893 57898 "records.ml" 1020 57893 57904
+type(
+  API.host_t lzy ref
+)
+"records.ml" 1020 57893 57907 "records.ml" 1020 57893 57910
+type(
+  API.host_t lzy -> API.host_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1020 57893 57911 "records.ml" 1020 57893 57923
+type(
+  API.host_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1019 57808 57813 "records.ml" 1019 57808 57825
+)
+"records.ml" 1020 57893 57907 "records.ml" 1020 57893 57923
+type(
+  API.host_t lzy ref
+)
+"records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+type(
+  unit -> API.host_t
+)
+"records.ml" 1021 57927 57934 "records.ml" 1021 57927 57936
+type(
+  unit
+)
+"records.ml" 1021 57927 57939 "records.ml" 1021 57927 57946
+type(
+  API.host_t lzy ref -> API.host_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 1021 57927 57947 "records.ml" 1021 57927 57953
+type(
+  API.host_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1020 57893 57898 "records.ml" 1020 57893 57904
+)
+"records.ml" 1021 57927 57939 "records.ml" 1021 57927 57953
+type(
+  API.host_t
+)
+"records.ml" 1022 57957 57962 "records.ml" 1022 57957 57969
+type(
+  API.host_metrics_t option lzy ref
+)
+"records.ml" 1022 57957 57972 "records.ml" 1022 57957 57975
+type(
+  API.host_metrics_t option lzy -> API.host_metrics_t option lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1022 57957 57988 "records.ml" 1022 57957 57990
+type(
+  unit
+)
+"records.ml" 1022 57957 58004 "records.ml" 1022 57957 58034
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_host_metrics -> API.host_metrics_t
+)
+ident(
+  ext_ref Client.( Client ).( Host_metrics ).get_record
+)
+"records.ml" 1022 57957 58035 "records.ml" 1022 57957 58038
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1017 57746 57762 "records.ml" 1017 57746 57765
+)
+"records.ml" 1022 57957 58039 "records.ml" 1022 57957 58049
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1017 57746 57766 "records.ml" 1017 57746 57776
+)
+"records.ml" 1022 57957 58051 "records.ml" 1022 57957 58052
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1022 57957 58053 "records.ml" 1022 57957 58055
+type(
+  unit
+)
+"records.ml" 1022 57957 58050 "records.ml" 1022 57957 58056
+type(
+  API.host_t
+)
+"records.ml" 1022 57957 58050 "records.ml" 1022 57957 58073
+type(
+  API.ref_host_metrics
+)
+"records.ml" 1022 57957 58003 "records.ml" 1022 57957 58074
+type(
+  API.host_metrics_t
+)
+"records.ml" 1022 57957 57998 "records.ml" 1022 57957 58074
+type(
+  API.host_metrics_t option
+)
+"records.ml" 1022 57957 58080 "records.ml" 1022 57957 58081
+type(
+  exn
+)
+"records.ml" 1022 57957 58085 "records.ml" 1022 57957 58089
+type(
+  API.host_metrics_t option
+)
+"records.ml" 1022 57957 57994 "records.ml" 1022 57957 58089
+type(
+  API.host_metrics_t option
+)
+"records.ml" 1022 57957 57983 "records.ml" 1022 57957 58090
+type(
+  unit -> API.host_metrics_t option
+)
+"records.ml" 1022 57957 57976 "records.ml" 1022 57957 58091
+type(
+  API.host_metrics_t option lzy
+)
+"records.ml" 1022 57957 57972 "records.ml" 1022 57957 58091
+type(
+  API.host_metrics_t option lzy ref
+)
+"records.ml" 1023 58095 58100 "records.ml" 1023 58095 58102
+type(
+  unit -> API.host_metrics_t option
+)
+"records.ml" 1023 58095 58103 "records.ml" 1023 58095 58105
+type(
+  unit
+)
+"records.ml" 1023 58095 58108 "records.ml" 1023 58095 58115
+type(
+  API.host_metrics_t option lzy ref -> API.host_metrics_t option
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 1023 58095 58116 "records.ml" 1023 58095 58123
+type(
+  API.host_metrics_t option lzy ref
+)
+ident(
+  int_ref metrics "records.ml" 1022 57957 57962 "records.ml" 1022 57957 57969
+)
+"records.ml" 1023 58095 58108 "records.ml" 1023 58095 58123
+type(
+  API.host_metrics_t option
+)
+"records.ml" 1024 58127 58132 "records.ml" 1024 58127 58143
+type(
+  unit -> string list
+)
+"records.ml" 1024 58127 58144 "records.ml" 1024 58127 58146
+type(
+  unit
+)
+"records.ml" 1025 58149 58155 "records.ml" 1025 58149 58170
+type(
+  API.ref_host_patch_set
+)
+"records.ml" 1025 58149 58174 "records.ml" 1025 58149 58175
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1025 58149 58176 "records.ml" 1025 58149 58178
+type(
+  unit
+)
+"records.ml" 1025 58149 58173 "records.ml" 1025 58149 58179
+type(
+  API.host_t
+)
+"records.ml" 1025 58149 58173 "records.ml" 1025 58149 58196
+type(
+  API.ref_host_patch_set
+)
+"records.ml" 1026 58200 58206 "records.ml" 1026 58200 58216
+type(
+  API.ref_pool_patch list
+)
+"records.ml" 1026 58200 58219 "records.ml" 1026 58200 58227
+type(
+  (API.ref_host_patch -> API.ref_pool_patch) ->
+  API.ref_host_patch_set -> API.ref_pool_patch list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1026 58200 58233 "records.ml" 1026 58200 58234
+type(
+  API.ref_host_patch
+)
+ident(
+  def x "records.ml" 1026 58200 58238 "records.ml" 1026 58200 58295
+)
+"records.ml" 1026 58200 58238 "records.ml" 1026 58200 58270
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_host_patch -> API.ref_pool_patch
+)
+ident(
+  ext_ref Client.( Client ).( Host_patch ).get_pool_patch
+)
+"records.ml" 1026 58200 58272 "records.ml" 1026 58200 58275
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1017 57746 57762 "records.ml" 1017 57746 57765
+)
+"records.ml" 1026 58200 58277 "records.ml" 1026 58200 58287
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1017 57746 57766 "records.ml" 1017 57746 57776
+)
+"records.ml" 1026 58200 58294 "records.ml" 1026 58200 58295
+type(
+  API.ref_host_patch
+)
+ident(
+  int_ref x "records.ml" 1026 58200 58233 "records.ml" 1026 58200 58234
+)
+"records.ml" 1026 58200 58238 "records.ml" 1026 58200 58295
+type(
+  API.ref_pool_patch
+)
+"records.ml" 1026 58200 58228 "records.ml" 1026 58200 58296
+type(
+  API.ref_host_patch -> API.ref_pool_patch
+)
+"records.ml" 1026 58200 58297 "records.ml" 1026 58200 58312
+type(
+  API.ref_host_patch_set
+)
+ident(
+  int_ref host_patch_refs "records.ml" 1025 58149 58155 "records.ml" 1025 58149 58170
+)
+"records.ml" 1026 58200 58219 "records.ml" 1026 58200 58312
+type(
+  API.ref_pool_patch list
+)
+"records.ml" 1027 58316 58322 "records.ml" 1027 58316 58333
+type(
+  string list
+)
+"records.ml" 1027 58316 58336 "records.ml" 1027 58316 58344
+type(
+  (API.ref_pool_patch -> string) -> API.ref_pool_patch list -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1027 58316 58350 "records.ml" 1027 58316 58351
+type(
+  API.ref_pool_patch
+)
+ident(
+  def x "records.ml" 1027 58316 58355 "records.ml" 1027 58316 58406
+)
+"records.ml" 1027 58316 58355 "records.ml" 1027 58316 58381
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_pool_patch -> string
+)
+ident(
+  ext_ref Client.( Client ).( Pool_patch ).get_uuid
+)
+"records.ml" 1027 58316 58383 "records.ml" 1027 58316 58386
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1017 57746 57762 "records.ml" 1017 57746 57765
+)
+"records.ml" 1027 58316 58388 "records.ml" 1027 58316 58398
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1017 57746 57766 "records.ml" 1017 57746 57776
+)
+"records.ml" 1027 58316 58405 "records.ml" 1027 58316 58406
+type(
+  API.ref_pool_patch
+)
+ident(
+  int_ref x "records.ml" 1027 58316 58350 "records.ml" 1027 58316 58351
+)
+"records.ml" 1027 58316 58355 "records.ml" 1027 58316 58406
+type(
+  string
+)
+"records.ml" 1027 58316 58345 "records.ml" 1027 58316 58407
+type(
+  API.ref_pool_patch -> string
+)
+"records.ml" 1027 58316 58408 "records.ml" 1027 58316 58418
+type(
+  API.ref_pool_patch list
+)
+ident(
+  int_ref patch_refs "records.ml" 1026 58200 58206 "records.ml" 1026 58200 58216
+)
+"records.ml" 1027 58316 58336 "records.ml" 1027 58316 58418
+type(
+  string list
+)
+"records.ml" 1028 58422 58424 "records.ml" 1028 58422 58435
+type(
+  string list
+)
+ident(
+  int_ref patch_uuids "records.ml" 1027 58316 58322 "records.ml" 1027 58316 58333
+)
+"records.ml" 1027 58316 58318 "records.ml" 1028 58422 58435
+type(
+  string list
+)
+"records.ml" 1026 58200 58202 "records.ml" 1028 58422 58435
+type(
+  string list
+)
+"records.ml" 1025 58149 58151 "records.ml" 1028 58422 58435
+type(
+  string list
+)
+"records.ml" 1030 58440 58455 "records.ml" 1030 58440 58456
+type(
+  API.ref_host
+)
+ident(
+  def r "records.ml" 1030 58440 58460 "records.ml" 1030 58440 58493
+)
+"records.ml" 1030 58440 58460 "records.ml" 1030 58440 58464
+type(
+  API.ref_host ref
+)
+ident(
+  int_ref _ref "records.ml" 1018 57784 57789 "records.ml" 1018 57784 57793
+)
+"records.ml" 1030 58440 58465 "records.ml" 1030 58440 58467
+type(
+  API.ref_host ref -> API.ref_host -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1030 58440 58468 "records.ml" 1030 58440 58469
+type(
+  API.ref_host
+)
+ident(
+  int_ref r "records.ml" 1030 58440 58455 "records.ml" 1030 58440 58456
+)
+"records.ml" 1030 58440 58460 "records.ml" 1030 58440 58469
+type(
+  unit
+)
+"records.ml" 1030 58440 58471 "records.ml" 1030 58440 58477
+type(
+  API.host_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1020 57893 57898 "records.ml" 1020 57893 57904
+)
+"records.ml" 1030 58440 58478 "records.ml" 1030 58440 58480
+type(
+  API.host_t lzy ref -> API.host_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1030 58440 58481 "records.ml" 1030 58440 58493
+type(
+  API.host_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1019 57808 57813 "records.ml" 1019 57808 57825
+)
+"records.ml" 1030 58440 58471 "records.ml" 1030 58440 58493
+type(
+  unit
+)
+"records.ml" 1030 58440 58460 "records.ml" 1030 58440 58493
+type(
+  unit
+)
+"records.ml" 1030 58440 58450 "records.ml" 1030 58440 58495
+type(
+  API.ref_host -> unit
+)
+"records.ml" 1031 58497 58516 "records.ml" 1031 58497 58517
+type(
+  API.ref_host
+)
+ident(
+  def a "records.ml" 1031 58497 58524 "records.ml" 1031 58497 58550
+)
+"records.ml" 1031 58497 58518 "records.ml" 1031 58497 58519
+type(
+  API.host_t
+)
+ident(
+  def b "records.ml" 1031 58497 58524 "records.ml" 1031 58497 58550
+)
+"records.ml" 1031 58497 58515 "records.ml" 1031 58497 58520
+type(
+  API.ref_host * API.host_t
+)
+"records.ml" 1031 58497 58524 "records.ml" 1031 58497 58528
+type(
+  API.ref_host ref
+)
+ident(
+  int_ref _ref "records.ml" 1018 57784 57789 "records.ml" 1018 57784 57793
+)
+"records.ml" 1031 58497 58529 "records.ml" 1031 58497 58531
+type(
+  API.ref_host ref -> API.ref_host -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1031 58497 58532 "records.ml" 1031 58497 58533
+type(
+  API.ref_host
+)
+ident(
+  int_ref a "records.ml" 1031 58497 58516 "records.ml" 1031 58497 58517
+)
+"records.ml" 1031 58497 58524 "records.ml" 1031 58497 58533
+type(
+  unit
+)
+"records.ml" 1031 58497 58535 "records.ml" 1031 58497 58541
+type(
+  API.host_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1020 57893 57898 "records.ml" 1020 57893 57904
+)
+"records.ml" 1031 58497 58542 "records.ml" 1031 58497 58544
+type(
+  API.host_t lzy ref -> API.host_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1031 58497 58549 "records.ml" 1031 58497 58550
+type(
+  API.host_t
+)
+ident(
+  int_ref b "records.ml" 1031 58497 58518 "records.ml" 1031 58497 58519
+)
+"records.ml" 1031 58497 58545 "records.ml" 1031 58497 58550
+type(
+  API.host_t lzy
+)
+"records.ml" 1031 58497 58535 "records.ml" 1031 58497 58550
+type(
+  unit
+)
+"records.ml" 1031 58497 58524 "records.ml" 1031 58497 58550
+type(
+  unit
+)
+"records.ml" 1031 58497 58510 "records.ml" 1031 58497 58551
+type(
+  API.ref_host * API.host_t -> unit
+)
+"records.ml" 1032 58553 58563 "records.ml" 1032 58553 58564
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1033 58566 58581 "records.ml" 1033 58566 58583
+type(
+  unit
+)
+"records.ml" 1033 58566 58587 "records.ml" 1033 58566 58588
+type(
+  API.ref_host ref -> API.ref_host
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1033 58566 58588 "records.ml" 1033 58566 58592
+type(
+  API.ref_host ref
+)
+ident(
+  int_ref _ref "records.ml" 1018 57784 57789 "records.ml" 1018 57784 57793
+)
+"records.ml" 1033 58566 58587 "records.ml" 1033 58566 58592
+type(
+  API.ref_host
+)
+"records.ml" 1033 58566 58576 "records.ml" 1033 58566 58593
+type(
+  unit -> API.ref_host
+)
+"records.ml" 1035 58609 58612 "records.ml" 1035 58609 58622
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1035 58609 58629 "records.ml" 1035 58609 58635
+type(
+  string
+)
+"records.ml" 1035 58609 58646 "records.ml" 1035 58609 58648
+type(
+  unit
+)
+"records.ml" 1035 58609 58653 "records.ml" 1035 58609 58654
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1035 58609 58655 "records.ml" 1035 58609 58657
+type(
+  unit
+)
+"records.ml" 1035 58609 58652 "records.ml" 1035 58609 58658
+type(
+  API.host_t
+)
+"records.ml" 1035 58609 58652 "records.ml" 1035 58609 58672
+type(
+  string
+)
+"records.ml" 1035 58609 58641 "records.ml" 1035 58609 58673
+type(
+  unit -> string
+)
+"records.ml" 1035 58609 58674 "records.ml" 1035 58609 58676
+type(
+  unit
+)
+"records.ml" 1035 58609 58612 "records.ml" 1035 58609 58676
+type(
+  field
+)
+"records.ml" 1036 58678 58681 "records.ml" 1036 58678 58691
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1036 58678 58698 "records.ml" 1036 58678 58710
+type(
+  string
+)
+"records.ml" 1036 58678 58721 "records.ml" 1036 58678 58723
+type(
+  unit
+)
+"records.ml" 1036 58678 58728 "records.ml" 1036 58678 58729
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1036 58678 58730 "records.ml" 1036 58678 58732
+type(
+  unit
+)
+"records.ml" 1036 58678 58727 "records.ml" 1036 58678 58733
+type(
+  API.host_t
+)
+"records.ml" 1036 58678 58727 "records.ml" 1036 58678 58753
+type(
+  string
+)
+"records.ml" 1036 58678 58716 "records.ml" 1036 58678 58754
+type(
+  unit -> string
+)
+"records.ml" 1036 58678 58765 "records.ml" 1036 58678 58766
+type(
+  string
+)
+ident(
+  def s "records.ml" 1036 58678 58770 "records.ml" 1036 58678 58818
+)
+"records.ml" 1036 58678 58770 "records.ml" 1036 58678 58796
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_host -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Host ).set_name_label
+)
+"records.ml" 1036 58678 58797 "records.ml" 1036 58678 58800
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1017 57746 57762 "records.ml" 1017 57746 57765
+)
+"records.ml" 1036 58678 58801 "records.ml" 1036 58678 58811
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1017 57746 57766 "records.ml" 1017 57746 57776
+)
+"records.ml" 1036 58678 58812 "records.ml" 1036 58678 58816
+type(
+  API.ref_host
+)
+ident(
+  int_ref host "records.ml" 1017 57746 57777 "records.ml" 1017 57746 57781
+)
+"records.ml" 1036 58678 58817 "records.ml" 1036 58678 58818
+type(
+  string
+)
+ident(
+  int_ref s "records.ml" 1036 58678 58765 "records.ml" 1036 58678 58766
+)
+"records.ml" 1036 58678 58770 "records.ml" 1036 58678 58818
+type(
+  unit
+)
+"records.ml" 1036 58678 58760 "records.ml" 1036 58678 58819
+type(
+  string -> unit
+)
+"records.ml" 1036 58678 58820 "records.ml" 1036 58678 58822
+type(
+  unit
+)
+"records.ml" 1036 58678 58681 "records.ml" 1036 58678 58822
+type(
+  field
+)
+"records.ml" 1037 58824 58827 "records.ml" 1037 58824 58837
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1037 58824 58844 "records.ml" 1037 58824 58862
+type(
+  string
+)
+"records.ml" 1037 58824 58873 "records.ml" 1037 58824 58875
+type(
+  unit
+)
+"records.ml" 1037 58824 58880 "records.ml" 1037 58824 58881
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1037 58824 58882 "records.ml" 1037 58824 58884
+type(
+  unit
+)
+"records.ml" 1037 58824 58879 "records.ml" 1037 58824 58885
+type(
+  API.host_t
+)
+"records.ml" 1037 58824 58879 "records.ml" 1037 58824 58911
+type(
+  string
+)
+"records.ml" 1037 58824 58868 "records.ml" 1037 58824 58912
+type(
+  unit -> string
+)
+"records.ml" 1037 58824 58923 "records.ml" 1037 58824 58924
+type(
+  string
+)
+ident(
+  def s "records.ml" 1037 58824 58928 "records.ml" 1037 58824 58982
+)
+"records.ml" 1037 58824 58928 "records.ml" 1037 58824 58960
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_host -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Host ).set_name_description
+)
+"records.ml" 1037 58824 58961 "records.ml" 1037 58824 58964
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1017 57746 57762 "records.ml" 1017 57746 57765
+)
+"records.ml" 1037 58824 58965 "records.ml" 1037 58824 58975
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1017 57746 57766 "records.ml" 1017 57746 57776
+)
+"records.ml" 1037 58824 58976 "records.ml" 1037 58824 58980
+type(
+  API.ref_host
+)
+ident(
+  int_ref host "records.ml" 1017 57746 57777 "records.ml" 1017 57746 57781
+)
+"records.ml" 1037 58824 58981 "records.ml" 1037 58824 58982
+type(
+  string
+)
+ident(
+  int_ref s "records.ml" 1037 58824 58923 "records.ml" 1037 58824 58924
+)
+"records.ml" 1037 58824 58928 "records.ml" 1037 58824 58982
+type(
+  unit
+)
+"records.ml" 1037 58824 58918 "records.ml" 1037 58824 58983
+type(
+  string -> unit
+)
+"records.ml" 1037 58824 58984 "records.ml" 1037 58824 58986
+type(
+  unit
+)
+"records.ml" 1037 58824 58827 "records.ml" 1037 58824 58986
+type(
+  field
+)
+"records.ml" 1038 58988 58991 "records.ml" 1038 58988 59001
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1038 58988 59008 "records.ml" 1038 58988 59028
+type(
+  string
+)
+"records.ml" 1039 59029 59043 "records.ml" 1039 59029 59045
+type(
+  unit
+)
+"records.ml" 1039 59029 59049 "records.ml" 1039 59029 59062
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1039 59029 59063 "records.ml" 1039 59029 59067
+type(
+  string
+)
+"records.ml" 1039 59029 59069 "records.ml" 1039 59029 59077
+type(
+  ([ `evacuate
+   | `power_on
+   | `provision
+   | `reboot
+   | `shutdown
+   | `vm_migrate
+   | `vm_resume
+   | `vm_start ] -> string) ->
+  API.host_allowed_operations_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1039 59029 59078 "records.ml" 1039 59029 59114
+type(
+  [ `evacuate
+  | `power_on
+  | `provision
+  | `reboot
+  | `shutdown
+  | `vm_migrate
+  | `vm_resume
+  | `vm_start ] -> string
+)
+ident(
+  ext_ref Record_util.host_operation_to_string
+)
+"records.ml" 1039 59029 59116 "records.ml" 1039 59029 59117
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1039 59029 59118 "records.ml" 1039 59029 59120
+type(
+  unit
+)
+"records.ml" 1039 59029 59115 "records.ml" 1039 59029 59121
+type(
+  API.host_t
+)
+"records.ml" 1039 59029 59115 "records.ml" 1039 59029 59149
+type(
+  API.host_allowed_operations_set
+)
+"records.ml" 1039 59029 59068 "records.ml" 1039 59029 59150
+type(
+  string list
+)
+"records.ml" 1039 59029 59049 "records.ml" 1039 59029 59150
+type(
+  string
+)
+"records.ml" 1039 59029 59038 "records.ml" 1039 59029 59151
+type(
+  unit -> string
+)
+"records.ml" 1040 59152 59170 "records.ml" 1040 59152 59172
+type(
+  unit
+)
+"records.ml" 1040 59152 59176 "records.ml" 1040 59152 59184
+type(
+  ([ `evacuate
+   | `power_on
+   | `provision
+   | `reboot
+   | `shutdown
+   | `vm_migrate
+   | `vm_resume
+   | `vm_start ] -> string) ->
+  API.host_allowed_operations_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1040 59152 59185 "records.ml" 1040 59152 59221
+type(
+  [ `evacuate
+  | `power_on
+  | `provision
+  | `reboot
+  | `shutdown
+  | `vm_migrate
+  | `vm_resume
+  | `vm_start ] -> string
+)
+ident(
+  ext_ref Record_util.host_operation_to_string
+)
+"records.ml" 1040 59152 59223 "records.ml" 1040 59152 59224
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1040 59152 59225 "records.ml" 1040 59152 59227
+type(
+  unit
+)
+"records.ml" 1040 59152 59222 "records.ml" 1040 59152 59228
+type(
+  API.host_t
+)
+"records.ml" 1040 59152 59222 "records.ml" 1040 59152 59256
+type(
+  API.host_allowed_operations_set
+)
+"records.ml" 1040 59152 59176 "records.ml" 1040 59152 59256
+type(
+  string list
+)
+"records.ml" 1040 59152 59165 "records.ml" 1040 59152 59257
+type(
+  unit -> string list
+)
+"records.ml" 1040 59152 59258 "records.ml" 1040 59152 59260
+type(
+  unit
+)
+"records.ml" 1038 58988 58991 "records.ml" 1040 59152 59260
+type(
+  field
+)
+"records.ml" 1041 59262 59265 "records.ml" 1041 59262 59275
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1041 59262 59282 "records.ml" 1041 59262 59302
+type(
+  string
+)
+"records.ml" 1042 59303 59317 "records.ml" 1042 59303 59319
+type(
+  unit
+)
+"records.ml" 1042 59303 59323 "records.ml" 1042 59303 59336
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1042 59303 59337 "records.ml" 1042 59303 59341
+type(
+  string
+)
+"records.ml" 1042 59303 59343 "records.ml" 1042 59303 59351
+type(
+  (string * API.host_allowed_operations -> string) ->
+  API.string_to_host_allowed_operations_map -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1042 59303 59358 "records.ml" 1042 59303 59359
+type(
+  string
+)
+ident(
+  def a "records.ml" 1042 59303 59366 "records.ml" 1042 59303 59404
+)
+"records.ml" 1042 59303 59360 "records.ml" 1042 59303 59361
+type(
+  API.host_allowed_operations
+)
+ident(
+  def b "records.ml" 1042 59303 59366 "records.ml" 1042 59303 59404
+)
+"records.ml" 1042 59303 59357 "records.ml" 1042 59303 59362
+type(
+  string * API.host_allowed_operations
+)
+"records.ml" 1042 59303 59366 "records.ml" 1042 59303 59402
+type(
+  API.host_allowed_operations -> string
+)
+ident(
+  ext_ref Record_util.host_operation_to_string
+)
+"records.ml" 1042 59303 59403 "records.ml" 1042 59303 59404
+type(
+  API.host_allowed_operations
+)
+ident(
+  int_ref b "records.ml" 1042 59303 59360 "records.ml" 1042 59303 59361
+)
+"records.ml" 1042 59303 59366 "records.ml" 1042 59303 59404
+type(
+  string
+)
+"records.ml" 1042 59303 59352 "records.ml" 1042 59303 59405
+type(
+  string * API.host_allowed_operations -> string
+)
+"records.ml" 1042 59303 59407 "records.ml" 1042 59303 59408
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1042 59303 59409 "records.ml" 1042 59303 59411
+type(
+  unit
+)
+"records.ml" 1042 59303 59406 "records.ml" 1042 59303 59412
+type(
+  API.host_t
+)
+"records.ml" 1042 59303 59406 "records.ml" 1042 59303 59440
+type(
+  API.string_to_host_allowed_operations_map
+)
+"records.ml" 1042 59303 59342 "records.ml" 1042 59303 59441
+type(
+  string list
+)
+"records.ml" 1042 59303 59323 "records.ml" 1042 59303 59441
+type(
+  string
+)
+"records.ml" 1042 59303 59312 "records.ml" 1042 59303 59442
+type(
+  unit -> string
+)
+"records.ml" 1043 59443 59461 "records.ml" 1043 59443 59463
+type(
+  unit
+)
+"records.ml" 1043 59443 59467 "records.ml" 1043 59443 59475
+type(
+  (string * API.host_allowed_operations -> string) ->
+  API.string_to_host_allowed_operations_map -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1043 59443 59482 "records.ml" 1043 59443 59483
+type(
+  string
+)
+ident(
+  def a "records.ml" 1043 59443 59490 "records.ml" 1043 59443 59528
+)
+"records.ml" 1043 59443 59484 "records.ml" 1043 59443 59485
+type(
+  API.host_allowed_operations
+)
+ident(
+  def b "records.ml" 1043 59443 59490 "records.ml" 1043 59443 59528
+)
+"records.ml" 1043 59443 59481 "records.ml" 1043 59443 59486
+type(
+  string * API.host_allowed_operations
+)
+"records.ml" 1043 59443 59490 "records.ml" 1043 59443 59526
+type(
+  API.host_allowed_operations -> string
+)
+ident(
+  ext_ref Record_util.host_operation_to_string
+)
+"records.ml" 1043 59443 59527 "records.ml" 1043 59443 59528
+type(
+  API.host_allowed_operations
+)
+ident(
+  int_ref b "records.ml" 1043 59443 59484 "records.ml" 1043 59443 59485
+)
+"records.ml" 1043 59443 59490 "records.ml" 1043 59443 59528
+type(
+  string
+)
+"records.ml" 1043 59443 59476 "records.ml" 1043 59443 59529
+type(
+  string * API.host_allowed_operations -> string
+)
+"records.ml" 1043 59443 59531 "records.ml" 1043 59443 59532
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1043 59443 59533 "records.ml" 1043 59443 59535
+type(
+  unit
+)
+"records.ml" 1043 59443 59530 "records.ml" 1043 59443 59536
+type(
+  API.host_t
+)
+"records.ml" 1043 59443 59530 "records.ml" 1043 59443 59564
+type(
+  API.string_to_host_allowed_operations_map
+)
+"records.ml" 1043 59443 59467 "records.ml" 1043 59443 59564
+type(
+  string list
+)
+"records.ml" 1043 59443 59456 "records.ml" 1043 59443 59565
+type(
+  unit -> string list
+)
+"records.ml" 1043 59443 59566 "records.ml" 1043 59443 59568
+type(
+  unit
+)
+"records.ml" 1041 59262 59265 "records.ml" 1043 59443 59568
+type(
+  field
+)
+"records.ml" 1044 59570 59573 "records.ml" 1044 59570 59583
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1044 59570 59590 "records.ml" 1044 59570 59599
+type(
+  string
+)
+"records.ml" 1044 59570 59610 "records.ml" 1044 59570 59612
+type(
+  unit
+)
+"records.ml" 1044 59570 59616 "records.ml" 1044 59570 59630
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 1044 59570 59632 "records.ml" 1044 59570 59633
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1044 59570 59634 "records.ml" 1044 59570 59636
+type(
+  unit
+)
+"records.ml" 1044 59570 59631 "records.ml" 1044 59570 59637
+type(
+  API.host_t
+)
+"records.ml" 1044 59570 59631 "records.ml" 1044 59570 59654
+type(
+  bool
+)
+"records.ml" 1044 59570 59616 "records.ml" 1044 59570 59654
+type(
+  string
+)
+"records.ml" 1044 59570 59605 "records.ml" 1044 59570 59655
+type(
+  unit -> string
+)
+"records.ml" 1044 59570 59656 "records.ml" 1044 59570 59658
+type(
+  unit
+)
+"records.ml" 1044 59570 59573 "records.ml" 1044 59570 59658
+type(
+  field
+)
+"records.ml" 1045 59660 59663 "records.ml" 1045 59660 59673
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1045 59660 59680 "records.ml" 1045 59660 59699
+type(
+  string
+)
+"records.ml" 1045 59660 59710 "records.ml" 1045 59660 59712
+type(
+  unit
+)
+"records.ml" 1045 59660 59716 "records.ml" 1045 59660 59731
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 1045 59660 59733 "records.ml" 1045 59660 59734
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1045 59660 59735 "records.ml" 1045 59660 59737
+type(
+  unit
+)
+"records.ml" 1045 59660 59732 "records.ml" 1045 59660 59738
+type(
+  API.host_t
+)
+"records.ml" 1045 59660 59732 "records.ml" 1045 59660 59765
+type(
+  int64
+)
+"records.ml" 1045 59660 59716 "records.ml" 1045 59660 59765
+type(
+  string
+)
+"records.ml" 1045 59660 59705 "records.ml" 1045 59660 59766
+type(
+  unit -> string
+)
+"records.ml" 1045 59660 59767 "records.ml" 1045 59660 59769
+type(
+  unit
+)
+"records.ml" 1045 59660 59663 "records.ml" 1045 59660 59769
+type(
+  field
+)
+"records.ml" 1046 59771 59774 "records.ml" 1046 59771 59784
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1046 59771 59791 "records.ml" 1046 59771 59810
+type(
+  string
+)
+"records.ml" 1046 59771 59821 "records.ml" 1046 59771 59823
+type(
+  unit
+)
+"records.ml" 1046 59771 59827 "records.ml" 1046 59771 59842
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 1046 59771 59844 "records.ml" 1046 59771 59845
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1046 59771 59846 "records.ml" 1046 59771 59848
+type(
+  unit
+)
+"records.ml" 1046 59771 59843 "records.ml" 1046 59771 59849
+type(
+  API.host_t
+)
+"records.ml" 1046 59771 59843 "records.ml" 1046 59771 59876
+type(
+  int64
+)
+"records.ml" 1046 59771 59827 "records.ml" 1046 59771 59876
+type(
+  string
+)
+"records.ml" 1046 59771 59816 "records.ml" 1046 59771 59877
+type(
+  unit -> string
+)
+"records.ml" 1046 59771 59878 "records.ml" 1046 59771 59880
+type(
+  unit
+)
+"records.ml" 1046 59771 59774 "records.ml" 1046 59771 59880
+type(
+  field
+)
+"records.ml" 1047 59882 59885 "records.ml" 1047 59882 59895
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1047 59882 59902 "records.ml" 1047 59882 59922
+type(
+  string
+)
+"records.ml" 1047 59882 59933 "records.ml" 1047 59882 59935
+type(
+  unit
+)
+"records.ml" 1047 59882 59940 "records.ml" 1047 59882 59941
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1047 59882 59942 "records.ml" 1047 59882 59944
+type(
+  unit
+)
+"records.ml" 1047 59882 59939 "records.ml" 1047 59882 59945
+type(
+  API.host_t
+)
+"records.ml" 1047 59882 59939 "records.ml" 1047 59882 59973
+type(
+  string
+)
+"records.ml" 1047 59882 59928 "records.ml" 1047 59882 59974
+type(
+  unit -> string
+)
+"records.ml" 1047 59882 59975 "records.ml" 1047 59882 59977
+type(
+  unit
+)
+"records.ml" 1047 59882 59885 "records.ml" 1047 59882 59977
+type(
+  field
+)
+"records.ml" 1048 59979 59982 "records.ml" 1048 59979 59992
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1048 59979 59999 "records.ml" 1048 59979 60034
+type(
+  string
+)
+"records.ml" 1049 60035 60049 "records.ml" 1049 60035 60051
+type(
+  unit
+)
+"records.ml" 1049 60035 60055 "records.ml" 1049 60035 60081
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 1049 60035 60082 "records.ml" 1049 60035 60086
+type(
+  string
+)
+"records.ml" 1049 60035 60088 "records.ml" 1049 60035 60089
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1049 60035 60090 "records.ml" 1049 60035 60092
+type(
+  unit
+)
+"records.ml" 1049 60035 60087 "records.ml" 1049 60035 60093
+type(
+  API.host_t
+)
+"records.ml" 1049 60035 60087 "records.ml" 1049 60035 60136
+type(
+  API.string_to_string_map
+)
+"records.ml" 1049 60035 60055 "records.ml" 1049 60035 60136
+type(
+  string
+)
+"records.ml" 1049 60035 60044 "records.ml" 1049 60035 60137
+type(
+  unit -> string
+)
+"records.ml" 1050 60138 60156 "records.ml" 1050 60138 60158
+type(
+  unit
+)
+"records.ml" 1050 60138 60163 "records.ml" 1050 60138 60164
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1050 60138 60165 "records.ml" 1050 60138 60167
+type(
+  unit
+)
+"records.ml" 1050 60138 60162 "records.ml" 1050 60138 60168
+type(
+  API.host_t
+)
+"records.ml" 1050 60138 60162 "records.ml" 1050 60138 60211
+type(
+  API.string_to_string_map
+)
+"records.ml" 1050 60138 60151 "records.ml" 1050 60138 60212
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 1050 60138 60213 "records.ml" 1050 60138 60215
+type(
+  unit
+)
+"records.ml" 1048 59979 59982 "records.ml" 1050 60138 60215
+type(
+  field
+)
+"records.ml" 1051 60217 60220 "records.ml" 1051 60217 60230
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1051 60217 60237 "records.ml" 1051 60217 60246
+type(
+  string
+)
+"records.ml" 1051 60217 60263 "records.ml" 1051 60217 60265
+type(
+  unit
+)
+"records.ml" 1051 60217 60269 "records.ml" 1051 60217 60295
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 1051 60217 60296 "records.ml" 1051 60217 60300
+type(
+  string
+)
+"records.ml" 1051 60217 60302 "records.ml" 1051 60217 60303
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1051 60217 60304 "records.ml" 1051 60217 60306
+type(
+  unit
+)
+"records.ml" 1051 60217 60301 "records.ml" 1051 60217 60307
+type(
+  API.host_t
+)
+"records.ml" 1051 60217 60301 "records.ml" 1051 60217 60324
+type(
+  API.string_to_string_map
+)
+"records.ml" 1051 60217 60269 "records.ml" 1051 60217 60324
+type(
+  string
+)
+"records.ml" 1051 60217 60258 "records.ml" 1051 60217 60325
+type(
+  unit -> string
+)
+"records.ml" 1052 60326 60347 "records.ml" 1052 60326 60348
+type(
+  string
+)
+ident(
+  def k "records.ml" 1052 60326 60349 "records.ml" 1052 60326 60404
+)
+"records.ml" 1052 60326 60349 "records.ml" 1052 60326 60350
+type(
+  string
+)
+ident(
+  def v "records.ml" 1052 60326 60354 "records.ml" 1052 60326 60404
+)
+"records.ml" 1052 60326 60354 "records.ml" 1052 60326 60380
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_host -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Host ).add_to_logging
+)
+"records.ml" 1052 60326 60381 "records.ml" 1052 60326 60384
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1017 57746 57762 "records.ml" 1017 57746 57765
+)
+"records.ml" 1052 60326 60385 "records.ml" 1052 60326 60395
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1017 57746 57766 "records.ml" 1017 57746 57776
+)
+"records.ml" 1052 60326 60396 "records.ml" 1052 60326 60400
+type(
+  API.ref_host
+)
+ident(
+  int_ref host "records.ml" 1017 57746 57777 "records.ml" 1017 57746 57781
+)
+"records.ml" 1052 60326 60401 "records.ml" 1052 60326 60402
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 1052 60326 60347 "records.ml" 1052 60326 60348
+)
+"records.ml" 1052 60326 60403 "records.ml" 1052 60326 60404
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 1052 60326 60349 "records.ml" 1052 60326 60350
+)
+"records.ml" 1052 60326 60354 "records.ml" 1052 60326 60404
+type(
+  unit
+)
+"records.ml" 1052 60326 60342 "records.ml" 1052 60326 60405
+type(
+  string -> string -> unit
+)
+"records.ml" 1053 60406 60432 "records.ml" 1053 60406 60433
+type(
+  string
+)
+ident(
+  def k "records.ml" 1053 60406 60437 "records.ml" 1053 60406 60490
+)
+"records.ml" 1053 60406 60437 "records.ml" 1053 60406 60468
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_host -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Host ).remove_from_logging
+)
+"records.ml" 1053 60406 60469 "records.ml" 1053 60406 60472
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1017 57746 57762 "records.ml" 1017 57746 57765
+)
+"records.ml" 1053 60406 60473 "records.ml" 1053 60406 60483
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1017 57746 57766 "records.ml" 1017 57746 57776
+)
+"records.ml" 1053 60406 60484 "records.ml" 1053 60406 60488
+type(
+  API.ref_host
+)
+ident(
+  int_ref host "records.ml" 1017 57746 57777 "records.ml" 1017 57746 57781
+)
+"records.ml" 1053 60406 60489 "records.ml" 1053 60406 60490
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 1053 60406 60432 "records.ml" 1053 60406 60433
+)
+"records.ml" 1053 60406 60437 "records.ml" 1053 60406 60490
+type(
+  unit
+)
+"records.ml" 1053 60406 60427 "records.ml" 1053 60406 60491
+type(
+  string -> unit
+)
+"records.ml" 1054 60492 60510 "records.ml" 1054 60492 60512
+type(
+  unit
+)
+"records.ml" 1054 60492 60517 "records.ml" 1054 60492 60518
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1054 60492 60519 "records.ml" 1054 60492 60521
+type(
+  unit
+)
+"records.ml" 1054 60492 60516 "records.ml" 1054 60492 60522
+type(
+  API.host_t
+)
+"records.ml" 1054 60492 60516 "records.ml" 1054 60492 60539
+type(
+  API.string_to_string_map
+)
+"records.ml" 1054 60492 60505 "records.ml" 1054 60492 60540
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 1054 60492 60541 "records.ml" 1054 60492 60543
+type(
+  unit
+)
+"records.ml" 1051 60217 60220 "records.ml" 1054 60492 60543
+type(
+  field
+)
+"records.ml" 1055 60545 60548 "records.ml" 1055 60545 60558
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1055 60545 60565 "records.ml" 1055 60545 60588
+type(
+  string
+)
+"records.ml" 1055 60545 60599 "records.ml" 1055 60545 60601
+type(
+  unit
+)
+"records.ml" 1055 60545 60605 "records.ml" 1055 60545 60622
+type(
+  API.ref_SR -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1055 60545 60624 "records.ml" 1055 60545 60625
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1055 60545 60626 "records.ml" 1055 60545 60628
+type(
+  unit
+)
+"records.ml" 1055 60545 60623 "records.ml" 1055 60545 60629
+type(
+  API.host_t
+)
+"records.ml" 1055 60545 60623 "records.ml" 1055 60545 60655
+type(
+  API.ref_SR
+)
+"records.ml" 1055 60545 60605 "records.ml" 1055 60545 60655
+type(
+  string
+)
+"records.ml" 1055 60545 60594 "records.ml" 1055 60545 60656
+type(
+  unit -> string
+)
+"records.ml" 1056 60657 60671 "records.ml" 1056 60657 60672
+type(
+  string
+)
+ident(
+  def s "records.ml" 1056 60657 60676 "records.ml" 1056 60657 60796
+)
+"records.ml" 1056 60657 60676 "records.ml" 1056 60657 60708
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_host -> value:API.ref_SR -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Host ).set_suspend_image_sr
+)
+"records.ml" 1056 60657 60709 "records.ml" 1056 60657 60712
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1017 57746 57762 "records.ml" 1017 57746 57765
+)
+"records.ml" 1056 60657 60713 "records.ml" 1056 60657 60723
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1017 57746 57766 "records.ml" 1017 57746 57776
+)
+"records.ml" 1056 60657 60724 "records.ml" 1056 60657 60728
+type(
+  API.ref_host
+)
+ident(
+  int_ref host "records.ml" 1017 57746 57777 "records.ml" 1017 57746 57781
+)
+"records.ml" 1056 60657 60733 "records.ml" 1056 60657 60734
+type(
+  string
+)
+ident(
+  int_ref s "records.ml" 1056 60657 60671 "records.ml" 1056 60657 60672
+)
+"records.ml" 1056 60657 60734 "records.ml" 1056 60657 60735
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"records.ml" 1056 60657 60735 "records.ml" 1056 60657 60737
+type(
+  string
+)
+"records.ml" 1056 60657 60733 "records.ml" 1056 60657 60737
+type(
+  bool
+)
+"records.ml" 1056 60657 60743 "records.ml" 1056 60657 60751
+type(
+  API.ref_SR
+)
+ident(
+  ext_ref Ref.null
+)
+"records.ml" 1056 60657 60757 "records.ml" 1056 60657 60778
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> uuid:string -> API.ref_SR
+)
+ident(
+  ext_ref Client.( Client ).( SR ).get_by_uuid
+)
+"records.ml" 1056 60657 60779 "records.ml" 1056 60657 60782
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1017 57746 57762 "records.ml" 1017 57746 57765
+)
+"records.ml" 1056 60657 60783 "records.ml" 1056 60657 60793
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1017 57746 57766 "records.ml" 1017 57746 57776
+)
+"records.ml" 1056 60657 60794 "records.ml" 1056 60657 60795
+type(
+  string
+)
+ident(
+  int_ref s "records.ml" 1056 60657 60671 "records.ml" 1056 60657 60672
+)
+"records.ml" 1056 60657 60757 "records.ml" 1056 60657 60795
+type(
+  API.ref_SR
+)
+"records.ml" 1056 60657 60729 "records.ml" 1056 60657 60796
+type(
+  API.ref_SR
+)
+"records.ml" 1056 60657 60676 "records.ml" 1056 60657 60796
+type(
+  unit
+)
+"records.ml" 1056 60657 60666 "records.ml" 1056 60657 60797
+type(
+  string -> unit
+)
+"records.ml" 1056 60657 60798 "records.ml" 1056 60657 60800
+type(
+  unit
+)
+"records.ml" 1055 60545 60548 "records.ml" 1056 60657 60800
+type(
+  field
+)
+"records.ml" 1057 60802 60805 "records.ml" 1057 60802 60815
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1057 60802 60822 "records.ml" 1057 60802 60842
+type(
+  string
+)
+"records.ml" 1057 60802 60853 "records.ml" 1057 60802 60855
+type(
+  unit
+)
+"records.ml" 1057 60802 60859 "records.ml" 1057 60802 60876
+type(
+  API.ref_SR -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1057 60802 60878 "records.ml" 1057 60802 60879
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1057 60802 60880 "records.ml" 1057 60802 60882
+type(
+  unit
+)
+"records.ml" 1057 60802 60877 "records.ml" 1057 60802 60883
+type(
+  API.host_t
+)
+"records.ml" 1057 60802 60877 "records.ml" 1057 60802 60906
+type(
+  API.ref_SR
+)
+"records.ml" 1057 60802 60859 "records.ml" 1057 60802 60906
+type(
+  string
+)
+"records.ml" 1057 60802 60848 "records.ml" 1057 60802 60907
+type(
+  unit -> string
+)
+"records.ml" 1058 60908 60922 "records.ml" 1058 60908 60923
+type(
+  string
+)
+ident(
+  def s "records.ml" 1058 60908 60927 "records.ml" 1058 60908 61044
+)
+"records.ml" 1058 60908 60927 "records.ml" 1058 60908 60956
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_host -> value:API.ref_SR -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Host ).set_crash_dump_sr
+)
+"records.ml" 1058 60908 60957 "records.ml" 1058 60908 60960
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1017 57746 57762 "records.ml" 1017 57746 57765
+)
+"records.ml" 1058 60908 60961 "records.ml" 1058 60908 60971
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1017 57746 57766 "records.ml" 1017 57746 57776
+)
+"records.ml" 1058 60908 60972 "records.ml" 1058 60908 60976
+type(
+  API.ref_host
+)
+ident(
+  int_ref host "records.ml" 1017 57746 57777 "records.ml" 1017 57746 57781
+)
+"records.ml" 1058 60908 60981 "records.ml" 1058 60908 60982
+type(
+  string
+)
+ident(
+  int_ref s "records.ml" 1058 60908 60922 "records.ml" 1058 60908 60923
+)
+"records.ml" 1058 60908 60982 "records.ml" 1058 60908 60983
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"records.ml" 1058 60908 60983 "records.ml" 1058 60908 60985
+type(
+  string
+)
+"records.ml" 1058 60908 60981 "records.ml" 1058 60908 60985
+type(
+  bool
+)
+"records.ml" 1058 60908 60991 "records.ml" 1058 60908 60999
+type(
+  API.ref_SR
+)
+ident(
+  ext_ref Ref.null
+)
+"records.ml" 1058 60908 61005 "records.ml" 1058 60908 61026
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> uuid:string -> API.ref_SR
+)
+ident(
+  ext_ref Client.( Client ).( SR ).get_by_uuid
+)
+"records.ml" 1058 60908 61027 "records.ml" 1058 60908 61030
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1017 57746 57762 "records.ml" 1017 57746 57765
+)
+"records.ml" 1058 60908 61031 "records.ml" 1058 60908 61041
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1017 57746 57766 "records.ml" 1017 57746 57776
+)
+"records.ml" 1058 60908 61042 "records.ml" 1058 60908 61043
+type(
+  string
+)
+ident(
+  int_ref s "records.ml" 1058 60908 60922 "records.ml" 1058 60908 60923
+)
+"records.ml" 1058 60908 61005 "records.ml" 1058 60908 61043
+type(
+  API.ref_SR
+)
+"records.ml" 1058 60908 60977 "records.ml" 1058 60908 61044
+type(
+  API.ref_SR
+)
+"records.ml" 1058 60908 60927 "records.ml" 1058 60908 61044
+type(
+  unit
+)
+"records.ml" 1058 60908 60917 "records.ml" 1058 60908 61045
+type(
+  string -> unit
+)
+"records.ml" 1058 60908 61046 "records.ml" 1058 60908 61048
+type(
+  unit
+)
+"records.ml" 1057 60802 60805 "records.ml" 1058 60908 61048
+type(
+  field
+)
+"records.ml" 1059 61050 61053 "records.ml" 1059 61050 61063
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1059 61050 61070 "records.ml" 1059 61050 61088
+type(
+  string
+)
+"records.ml" 1059 61050 61099 "records.ml" 1059 61050 61101
+type(
+  unit
+)
+"records.ml" 1059 61050 61105 "records.ml" 1059 61050 61131
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 1059 61050 61132 "records.ml" 1059 61050 61136
+type(
+  string
+)
+"records.ml" 1059 61050 61138 "records.ml" 1059 61050 61139
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1059 61050 61140 "records.ml" 1059 61050 61142
+type(
+  unit
+)
+"records.ml" 1059 61050 61137 "records.ml" 1059 61050 61143
+type(
+  API.host_t
+)
+"records.ml" 1059 61050 61137 "records.ml" 1059 61050 61169
+type(
+  API.string_to_string_map
+)
+"records.ml" 1059 61050 61105 "records.ml" 1059 61050 61169
+type(
+  string
+)
+"records.ml" 1059 61050 61094 "records.ml" 1059 61050 61170
+type(
+  unit -> string
+)
+"records.ml" 1060 61171 61189 "records.ml" 1060 61171 61191
+type(
+  unit
+)
+"records.ml" 1060 61171 61196 "records.ml" 1060 61171 61197
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1060 61171 61198 "records.ml" 1060 61171 61200
+type(
+  unit
+)
+"records.ml" 1060 61171 61195 "records.ml" 1060 61171 61201
+type(
+  API.host_t
+)
+"records.ml" 1060 61171 61195 "records.ml" 1060 61171 61227
+type(
+  API.string_to_string_map
+)
+"records.ml" 1060 61171 61184 "records.ml" 1060 61171 61228
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 1060 61171 61229 "records.ml" 1060 61171 61231
+type(
+  unit
+)
+"records.ml" 1059 61050 61053 "records.ml" 1060 61171 61231
+type(
+  field
+)
+"records.ml" 1061 61233 61236 "records.ml" 1061 61233 61246
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> API.string_set) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1061 61233 61253 "records.ml" 1061 61233 61267
+type(
+  string
+)
+"records.ml" 1061 61233 61278 "records.ml" 1061 61233 61280
+type(
+  unit
+)
+"records.ml" 1061 61233 61284 "records.ml" 1061 61233 61297
+type(
+  string -> API.string_set -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1061 61233 61298 "records.ml" 1061 61233 61302
+type(
+  string
+)
+"records.ml" 1061 61233 61304 "records.ml" 1061 61233 61305
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1061 61233 61306 "records.ml" 1061 61233 61308
+type(
+  unit
+)
+"records.ml" 1061 61233 61303 "records.ml" 1061 61233 61309
+type(
+  API.host_t
+)
+"records.ml" 1061 61233 61303 "records.ml" 1061 61233 61331
+type(
+  API.string_set
+)
+"records.ml" 1061 61233 61284 "records.ml" 1061 61233 61331
+type(
+  string
+)
+"records.ml" 1061 61233 61273 "records.ml" 1061 61233 61332
+type(
+  unit -> string
+)
+"records.ml" 1062 61333 61351 "records.ml" 1062 61333 61353
+type(
+  unit
+)
+"records.ml" 1062 61333 61358 "records.ml" 1062 61333 61359
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1062 61333 61360 "records.ml" 1062 61333 61362
+type(
+  unit
+)
+"records.ml" 1062 61333 61357 "records.ml" 1062 61333 61363
+type(
+  API.host_t
+)
+"records.ml" 1062 61333 61357 "records.ml" 1062 61333 61385
+type(
+  API.string_set
+)
+"records.ml" 1062 61333 61346 "records.ml" 1062 61333 61386
+type(
+  unit -> API.string_set
+)
+"records.ml" 1062 61333 61387 "records.ml" 1062 61333 61389
+type(
+  unit
+)
+"records.ml" 1061 61233 61236 "records.ml" 1062 61333 61389
+type(
+  field
+)
+"records.ml" 1063 61391 61394 "records.ml" 1063 61391 61404
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1063 61391 61411 "records.ml" 1063 61391 61425
+type(
+  string
+)
+"records.ml" 1063 61391 61436 "records.ml" 1063 61391 61438
+type(
+  unit
+)
+"records.ml" 1063 61391 61442 "records.ml" 1063 61391 61468
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 1063 61391 61469 "records.ml" 1063 61391 61473
+type(
+  string
+)
+"records.ml" 1063 61391 61475 "records.ml" 1063 61391 61476
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1063 61391 61477 "records.ml" 1063 61391 61479
+type(
+  unit
+)
+"records.ml" 1063 61391 61474 "records.ml" 1063 61391 61480
+type(
+  API.host_t
+)
+"records.ml" 1063 61391 61474 "records.ml" 1063 61391 61502
+type(
+  API.string_to_string_map
+)
+"records.ml" 1063 61391 61442 "records.ml" 1063 61391 61502
+type(
+  string
+)
+"records.ml" 1063 61391 61431 "records.ml" 1063 61391 61503
+type(
+  unit -> string
+)
+"records.ml" 1064 61504 61525 "records.ml" 1064 61504 61526
+type(
+  string
+)
+ident(
+  def k "records.ml" 1064 61504 61527 "records.ml" 1064 61504 61587
+)
+"records.ml" 1064 61504 61527 "records.ml" 1064 61504 61528
+type(
+  string
+)
+ident(
+  def v "records.ml" 1064 61504 61532 "records.ml" 1064 61504 61587
+)
+"records.ml" 1064 61504 61532 "records.ml" 1064 61504 61563
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_host -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Host ).add_to_other_config
+)
+"records.ml" 1064 61504 61564 "records.ml" 1064 61504 61567
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1017 57746 57762 "records.ml" 1017 57746 57765
+)
+"records.ml" 1064 61504 61568 "records.ml" 1064 61504 61578
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1017 57746 57766 "records.ml" 1017 57746 57776
+)
+"records.ml" 1064 61504 61579 "records.ml" 1064 61504 61583
+type(
+  API.ref_host
+)
+ident(
+  int_ref host "records.ml" 1017 57746 57777 "records.ml" 1017 57746 57781
+)
+"records.ml" 1064 61504 61584 "records.ml" 1064 61504 61585
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 1064 61504 61525 "records.ml" 1064 61504 61526
+)
+"records.ml" 1064 61504 61586 "records.ml" 1064 61504 61587
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 1064 61504 61527 "records.ml" 1064 61504 61528
+)
+"records.ml" 1064 61504 61532 "records.ml" 1064 61504 61587
+type(
+  unit
+)
+"records.ml" 1064 61504 61520 "records.ml" 1064 61504 61588
+type(
+  string -> string -> unit
+)
+"records.ml" 1065 61589 61615 "records.ml" 1065 61589 61616
+type(
+  string
+)
+ident(
+  def k "records.ml" 1065 61589 61620 "records.ml" 1065 61589 61678
+)
+"records.ml" 1065 61589 61620 "records.ml" 1065 61589 61656
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_host -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Host ).remove_from_other_config
+)
+"records.ml" 1065 61589 61657 "records.ml" 1065 61589 61660
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1017 57746 57762 "records.ml" 1017 57746 57765
+)
+"records.ml" 1065 61589 61661 "records.ml" 1065 61589 61671
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1017 57746 57766 "records.ml" 1017 57746 57776
+)
+"records.ml" 1065 61589 61672 "records.ml" 1065 61589 61676
+type(
+  API.ref_host
+)
+ident(
+  int_ref host "records.ml" 1017 57746 57777 "records.ml" 1017 57746 57781
+)
+"records.ml" 1065 61589 61677 "records.ml" 1065 61589 61678
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 1065 61589 61615 "records.ml" 1065 61589 61616
+)
+"records.ml" 1065 61589 61620 "records.ml" 1065 61589 61678
+type(
+  unit
+)
+"records.ml" 1065 61589 61610 "records.ml" 1065 61589 61679
+type(
+  string -> unit
+)
+"records.ml" 1066 61680 61698 "records.ml" 1066 61680 61700
+type(
+  unit
+)
+"records.ml" 1066 61680 61705 "records.ml" 1066 61680 61706
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1066 61680 61707 "records.ml" 1066 61680 61709
+type(
+  unit
+)
+"records.ml" 1066 61680 61704 "records.ml" 1066 61680 61710
+type(
+  API.host_t
+)
+"records.ml" 1066 61680 61704 "records.ml" 1066 61680 61732
+type(
+  API.string_to_string_map
+)
+"records.ml" 1066 61680 61693 "records.ml" 1066 61680 61733
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 1066 61680 61734 "records.ml" 1066 61680 61736
+type(
+  unit
+)
+"records.ml" 1063 61391 61394 "records.ml" 1066 61680 61736
+type(
+  field
+)
+"records.ml" 1067 61738 61741 "records.ml" 1067 61738 61751
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1067 61738 61758 "records.ml" 1067 61738 61768
+type(
+  string
+)
+"records.ml" 1067 61738 61779 "records.ml" 1067 61738 61781
+type(
+  unit
+)
+"records.ml" 1067 61738 61785 "records.ml" 1067 61738 61811
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 1067 61738 61812 "records.ml" 1067 61738 61816
+type(
+  string
+)
+"records.ml" 1067 61738 61818 "records.ml" 1067 61738 61819
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1067 61738 61820 "records.ml" 1067 61738 61822
+type(
+  unit
+)
+"records.ml" 1067 61738 61817 "records.ml" 1067 61738 61823
+type(
+  API.host_t
+)
+"records.ml" 1067 61738 61817 "records.ml" 1067 61738 61841
+type(
+  API.string_to_string_map
+)
+"records.ml" 1067 61738 61785 "records.ml" 1067 61738 61841
+type(
+  string
+)
+"records.ml" 1067 61738 61774 "records.ml" 1067 61738 61842
+type(
+  unit -> string
+)
+"records.ml" 1067 61738 61857 "records.ml" 1067 61738 61859
+type(
+  unit
+)
+"records.ml" 1067 61738 61864 "records.ml" 1067 61738 61865
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1067 61738 61866 "records.ml" 1067 61738 61868
+type(
+  unit
+)
+"records.ml" 1067 61738 61863 "records.ml" 1067 61738 61869
+type(
+  API.host_t
+)
+"records.ml" 1067 61738 61863 "records.ml" 1067 61738 61887
+type(
+  API.string_to_string_map
+)
+"records.ml" 1067 61738 61852 "records.ml" 1067 61738 61888
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 1067 61738 61889 "records.ml" 1067 61738 61891
+type(
+  unit
+)
+"records.ml" 1067 61738 61741 "records.ml" 1067 61738 61891
+type(
+  field
+)
+"records.ml" 1068 61893 61896 "records.ml" 1068 61893 61906
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1068 61893 61913 "records.ml" 1068 61893 61927
+type(
+  string
+)
+"records.ml" 1068 61893 61938 "records.ml" 1068 61893 61940
+type(
+  unit
+)
+"records.ml" 1068 61893 61944 "records.ml" 1068 61893 61970
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 1068 61893 61971 "records.ml" 1068 61893 61975
+type(
+  string
+)
+"records.ml" 1068 61893 61977 "records.ml" 1068 61893 61978
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1068 61893 61979 "records.ml" 1068 61893 61981
+type(
+  unit
+)
+"records.ml" 1068 61893 61976 "records.ml" 1068 61893 61982
+type(
+  API.host_t
+)
+"records.ml" 1068 61893 61976 "records.ml" 1068 61893 62004
+type(
+  API.string_to_string_map
+)
+"records.ml" 1068 61893 61944 "records.ml" 1068 61893 62004
+type(
+  string
+)
+"records.ml" 1068 61893 61933 "records.ml" 1068 61893 62005
+type(
+  unit -> string
+)
+"records.ml" 1068 61893 62020 "records.ml" 1068 61893 62022
+type(
+  unit
+)
+"records.ml" 1068 61893 62027 "records.ml" 1068 61893 62028
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1068 61893 62029 "records.ml" 1068 61893 62031
+type(
+  unit
+)
+"records.ml" 1068 61893 62026 "records.ml" 1068 61893 62032
+type(
+  API.host_t
+)
+"records.ml" 1068 61893 62026 "records.ml" 1068 61893 62054
+type(
+  API.string_to_string_map
+)
+"records.ml" 1068 61893 62015 "records.ml" 1068 61893 62055
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 1068 61893 62056 "records.ml" 1068 61893 62058
+type(
+  unit
+)
+"records.ml" 1068 61893 61896 "records.ml" 1068 61893 62058
+type(
+  field
+)
+"records.ml" 1069 62060 62063 "records.ml" 1069 62060 62073
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1069 62060 62080 "records.ml" 1069 62060 62090
+type(
+  string
+)
+"records.ml" 1069 62060 62101 "records.ml" 1069 62060 62103
+type(
+  unit
+)
+"records.ml" 1069 62060 62108 "records.ml" 1069 62060 62109
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1069 62060 62110 "records.ml" 1069 62060 62112
+type(
+  unit
+)
+"records.ml" 1069 62060 62107 "records.ml" 1069 62060 62113
+type(
+  API.host_t
+)
+"records.ml" 1069 62060 62107 "records.ml" 1069 62060 62131
+type(
+  string
+)
+"records.ml" 1069 62060 62096 "records.ml" 1069 62060 62132
+type(
+  unit -> string
+)
+"records.ml" 1069 62060 62133 "records.ml" 1069 62060 62135
+type(
+  unit
+)
+"records.ml" 1069 62060 62063 "records.ml" 1069 62060 62135
+type(
+  field
+)
+"records.ml" 1070 62137 62140 "records.ml" 1070 62137 62150
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1070 62137 62157 "records.ml" 1070 62137 62166
+type(
+  string
+)
+"records.ml" 1070 62137 62177 "records.ml" 1070 62137 62179
+type(
+  unit
+)
+"records.ml" 1070 62137 62184 "records.ml" 1070 62137 62185
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1070 62137 62186 "records.ml" 1070 62137 62188
+type(
+  unit
+)
+"records.ml" 1070 62137 62183 "records.ml" 1070 62137 62189
+type(
+  API.host_t
+)
+"records.ml" 1070 62137 62183 "records.ml" 1070 62137 62206
+type(
+  string
+)
+"records.ml" 1070 62137 62172 "records.ml" 1070 62137 62207
+type(
+  unit -> string
+)
+"records.ml" 1070 62137 62208 "records.ml" 1070 62137 62210
+type(
+  unit
+)
+"records.ml" 1070 62137 62140 "records.ml" 1070 62137 62210
+type(
+  field
+)
+"records.ml" 1071 62212 62215 "records.ml" 1071 62212 62225
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> API.string_set) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1071 62212 62232 "records.ml" 1071 62212 62255
+type(
+  string
+)
+"records.ml" 1071 62212 62266 "records.ml" 1071 62212 62268
+type(
+  unit
+)
+"records.ml" 1071 62212 62272 "records.ml" 1071 62212 62285
+type(
+  string -> API.string_set -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1071 62212 62286 "records.ml" 1071 62212 62290
+type(
+  string
+)
+"records.ml" 1071 62212 62292 "records.ml" 1071 62212 62293
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1071 62212 62294 "records.ml" 1071 62212 62296
+type(
+  unit
+)
+"records.ml" 1071 62212 62291 "records.ml" 1071 62212 62297
+type(
+  API.host_t
+)
+"records.ml" 1071 62212 62291 "records.ml" 1071 62212 62328
+type(
+  API.string_set
+)
+"records.ml" 1071 62212 62272 "records.ml" 1071 62212 62328
+type(
+  string
+)
+"records.ml" 1071 62212 62261 "records.ml" 1071 62212 62329
+type(
+  unit -> string
+)
+"records.ml" 1072 62330 62348 "records.ml" 1072 62330 62350
+type(
+  unit
+)
+"records.ml" 1072 62330 62355 "records.ml" 1072 62330 62356
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1072 62330 62357 "records.ml" 1072 62330 62359
+type(
+  unit
+)
+"records.ml" 1072 62330 62354 "records.ml" 1072 62330 62360
+type(
+  API.host_t
+)
+"records.ml" 1072 62330 62354 "records.ml" 1072 62330 62391
+type(
+  API.string_set
+)
+"records.ml" 1072 62330 62343 "records.ml" 1072 62330 62392
+type(
+  unit -> API.string_set
+)
+"records.ml" 1072 62330 62393 "records.ml" 1072 62330 62395
+type(
+  unit
+)
+"records.ml" 1071 62212 62215 "records.ml" 1072 62330 62395
+type(
+  field
+)
+"records.ml" 1073 62397 62400 "records.ml" 1073 62397 62410
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1073 62397 62417 "records.ml" 1073 62397 62424
+type(
+  string
+)
+"records.ml" 1073 62397 62435 "records.ml" 1073 62397 62437
+type(
+  unit
+)
+"records.ml" 1073 62397 62441 "records.ml" 1073 62397 62468
+type(
+  (API.ref_blob -> string) -> string -> API.string_to_ref_blob_map -> string
+)
+ident(
+  ext_ref Record_util.s2brm_to_string
+)
+"records.ml" 1073 62397 62469 "records.ml" 1073 62397 62486
+type(
+  API.ref_blob -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1073 62397 62487 "records.ml" 1073 62397 62491
+type(
+  string
+)
+"records.ml" 1073 62397 62493 "records.ml" 1073 62397 62494
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1073 62397 62495 "records.ml" 1073 62397 62497
+type(
+  unit
+)
+"records.ml" 1073 62397 62492 "records.ml" 1073 62397 62498
+type(
+  API.host_t
+)
+"records.ml" 1073 62397 62492 "records.ml" 1073 62397 62513
+type(
+  API.string_to_ref_blob_map
+)
+"records.ml" 1073 62397 62441 "records.ml" 1073 62397 62513
+type(
+  string
+)
+"records.ml" 1073 62397 62430 "records.ml" 1073 62397 62514
+type(
+  unit -> string
+)
+"records.ml" 1073 62397 62515 "records.ml" 1073 62397 62517
+type(
+  unit
+)
+"records.ml" 1073 62397 62400 "records.ml" 1073 62397 62517
+type(
+  field
+)
+"records.ml" 1074 62519 62522 "records.ml" 1074 62519 62532
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1074 62519 62539 "records.ml" 1074 62519 62556
+type(
+  string
+)
+"records.ml" 1074 62519 62567 "records.ml" 1074 62519 62569
+type(
+  unit
+)
+"records.ml" 1074 62519 62573 "records.ml" 1074 62519 62588
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 1074 62519 62590 "records.ml" 1074 62519 62591
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1074 62519 62592 "records.ml" 1074 62519 62594
+type(
+  unit
+)
+"records.ml" 1074 62519 62589 "records.ml" 1074 62519 62595
+type(
+  API.host_t
+)
+"records.ml" 1074 62519 62589 "records.ml" 1074 62519 62620
+type(
+  int64
+)
+"records.ml" 1074 62519 62573 "records.ml" 1074 62519 62620
+type(
+  string
+)
+"records.ml" 1074 62519 62562 "records.ml" 1074 62519 62621
+type(
+  unit -> string
+)
+"records.ml" 1074 62519 62622 "records.ml" 1074 62519 62624
+type(
+  unit
+)
+"records.ml" 1074 62519 62522 "records.ml" 1074 62519 62624
+type(
+  field
+)
+"records.ml" 1075 62626 62629 "records.ml" 1075 62626 62639
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1075 62626 62646 "records.ml" 1075 62626 62660
+type(
+  string
+)
+"records.ml" 1075 62626 62671 "records.ml" 1075 62626 62673
+type(
+  unit
+)
+"records.ml" 1075 62626 62677 "records.ml" 1075 62626 62684
+type(
+  string -> string option -> string
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 1075 62626 62685 "records.ml" 1075 62626 62688
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 1075 62626 62690 "records.ml" 1075 62626 62693
+type(
+  (API.host_metrics_t -> string) ->
+  API.host_metrics_t option -> string option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 1075 62626 62699 "records.ml" 1075 62626 62700
+type(
+  API.host_metrics_t
+)
+ident(
+  def m "records.ml" 1075 62626 62704 "records.ml" 1075 62626 62751
+)
+"records.ml" 1075 62626 62704 "records.ml" 1075 62626 62719
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 1075 62626 62720 "records.ml" 1075 62626 62721
+type(
+  API.host_metrics_t
+)
+ident(
+  int_ref m "records.ml" 1075 62626 62699 "records.ml" 1075 62626 62700
+)
+"records.ml" 1075 62626 62720 "records.ml" 1075 62626 62751
+type(
+  int64
+)
+"records.ml" 1075 62626 62704 "records.ml" 1075 62626 62751
+type(
+  string
+)
+"records.ml" 1075 62626 62694 "records.ml" 1075 62626 62752
+type(
+  API.host_metrics_t -> string
+)
+"records.ml" 1075 62626 62754 "records.ml" 1075 62626 62756
+type(
+  unit -> API.host_metrics_t option
+)
+ident(
+  int_ref xm "records.ml" 1023 58095 58100 "records.ml" 1023 58095 58102
+)
+"records.ml" 1075 62626 62757 "records.ml" 1075 62626 62759
+type(
+  unit
+)
+"records.ml" 1075 62626 62753 "records.ml" 1075 62626 62760
+type(
+  API.host_metrics_t option
+)
+"records.ml" 1075 62626 62689 "records.ml" 1075 62626 62762
+type(
+  string option
+)
+"records.ml" 1075 62626 62677 "records.ml" 1075 62626 62762
+type(
+  string
+)
+"records.ml" 1075 62626 62666 "records.ml" 1075 62626 62763
+type(
+  unit -> string
+)
+"records.ml" 1075 62626 62764 "records.ml" 1075 62626 62766
+type(
+  unit
+)
+"records.ml" 1075 62626 62629 "records.ml" 1075 62626 62766
+type(
+  field
+)
+"records.ml" 1076 62768 62771 "records.ml" 1076 62768 62781
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1076 62768 62788 "records.ml" 1076 62768 62801
+type(
+  string
+)
+"records.ml" 1076 62768 62812 "records.ml" 1076 62768 62814
+type(
+  unit
+)
+"records.ml" 1076 62768 62818 "records.ml" 1076 62768 62825
+type(
+  string -> string option -> string
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 1076 62768 62826 "records.ml" 1076 62768 62829
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 1076 62768 62831 "records.ml" 1076 62768 62834
+type(
+  (API.host_metrics_t -> string) ->
+  API.host_metrics_t option -> string option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 1076 62768 62840 "records.ml" 1076 62768 62841
+type(
+  API.host_metrics_t
+)
+ident(
+  def m "records.ml" 1076 62768 62845 "records.ml" 1076 62768 62891
+)
+"records.ml" 1076 62768 62845 "records.ml" 1076 62768 62860
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 1076 62768 62861 "records.ml" 1076 62768 62862
+type(
+  API.host_metrics_t
+)
+ident(
+  int_ref m "records.ml" 1076 62768 62840 "records.ml" 1076 62768 62841
+)
+"records.ml" 1076 62768 62861 "records.ml" 1076 62768 62891
+type(
+  int64
+)
+"records.ml" 1076 62768 62845 "records.ml" 1076 62768 62891
+type(
+  string
+)
+"records.ml" 1076 62768 62835 "records.ml" 1076 62768 62892
+type(
+  API.host_metrics_t -> string
+)
+"records.ml" 1076 62768 62894 "records.ml" 1076 62768 62896
+type(
+  unit -> API.host_metrics_t option
+)
+ident(
+  int_ref xm "records.ml" 1023 58095 58100 "records.ml" 1023 58095 58102
+)
+"records.ml" 1076 62768 62897 "records.ml" 1076 62768 62899
+type(
+  unit
+)
+"records.ml" 1076 62768 62893 "records.ml" 1076 62768 62900
+type(
+  API.host_metrics_t option
+)
+"records.ml" 1076 62768 62830 "records.ml" 1076 62768 62902
+type(
+  string option
+)
+"records.ml" 1076 62768 62818 "records.ml" 1076 62768 62902
+type(
+  string
+)
+"records.ml" 1076 62768 62807 "records.ml" 1076 62768 62903
+type(
+  unit -> string
+)
+"records.ml" 1076 62768 62904 "records.ml" 1076 62768 62906
+type(
+  unit
+)
+"records.ml" 1076 62768 62771 "records.ml" 1076 62768 62906
+type(
+  field
+)
+"records.ml" 1077 62908 62911 "records.ml" 1077 62908 62921
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1077 62908 62928 "records.ml" 1077 62908 62950
+type(
+  string
+)
+"records.ml" 1077 62908 62962 "records.ml" 1077 62908 62966
+type(
+  bool
+)
+"records.ml" 1077 62908 62977 "records.ml" 1077 62908 62979
+type(
+  unit
+)
+"records.ml" 1077 62908 62983 "records.ml" 1077 62908 62998
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 1077 62908 63000 "records.ml" 1077 62908 63031
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> host:API.ref_host -> int64
+)
+ident(
+  ext_ref Client.( Client ).( Host ).compute_free_memory
+)
+"records.ml" 1077 62908 63032 "records.ml" 1077 62908 63035
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1017 57746 57762 "records.ml" 1017 57746 57765
+)
+"records.ml" 1077 62908 63036 "records.ml" 1077 62908 63046
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1017 57746 57766 "records.ml" 1017 57746 57776
+)
+"records.ml" 1077 62908 63047 "records.ml" 1077 62908 63051
+type(
+  API.ref_host
+)
+ident(
+  int_ref host "records.ml" 1017 57746 57777 "records.ml" 1017 57746 57781
+)
+"records.ml" 1077 62908 62999 "records.ml" 1077 62908 63052
+type(
+  int64
+)
+"records.ml" 1077 62908 62983 "records.ml" 1077 62908 63052
+type(
+  string
+)
+"records.ml" 1077 62908 62972 "records.ml" 1077 62908 63053
+type(
+  unit -> string
+)
+"records.ml" 1077 62908 63054 "records.ml" 1077 62908 63056
+type(
+  unit
+)
+"records.ml" 1077 62908 62911 "records.ml" 1077 62908 63056
+type(
+  field
+)
+"records.ml" 1078 63058 63061 "records.ml" 1078 63058 63071
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1078 63058 63078 "records.ml" 1078 63058 63097
+type(
+  string
+)
+"records.ml" 1078 63058 63108 "records.ml" 1078 63058 63110
+type(
+  unit
+)
+"records.ml" 1078 63058 63114 "records.ml" 1078 63058 63121
+type(
+  string -> string option -> string
+)
+ident(
+  ext_ref Pervasiveext.default
+)
+"records.ml" 1078 63058 63122 "records.ml" 1078 63058 63125
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 1078 63058 63127 "records.ml" 1078 63058 63130
+type(
+  (API.host_metrics_t -> string) ->
+  API.host_metrics_t option -> string option
+)
+ident(
+  ext_ref Pervasiveext.may
+)
+"records.ml" 1078 63058 63136 "records.ml" 1078 63058 63137
+type(
+  API.host_metrics_t
+)
+ident(
+  def m "records.ml" 1078 63058 63141 "records.ml" 1078 63058 63179
+)
+"records.ml" 1078 63058 63141 "records.ml" 1078 63058 63155
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 1078 63058 63156 "records.ml" 1078 63058 63157
+type(
+  API.host_metrics_t
+)
+ident(
+  int_ref m "records.ml" 1078 63058 63136 "records.ml" 1078 63058 63137
+)
+"records.ml" 1078 63058 63156 "records.ml" 1078 63058 63179
+type(
+  bool
+)
+"records.ml" 1078 63058 63141 "records.ml" 1078 63058 63179
+type(
+  string
+)
+"records.ml" 1078 63058 63131 "records.ml" 1078 63058 63180
+type(
+  API.host_metrics_t -> string
+)
+"records.ml" 1078 63058 63182 "records.ml" 1078 63058 63184
+type(
+  unit -> API.host_metrics_t option
+)
+ident(
+  int_ref xm "records.ml" 1023 58095 58100 "records.ml" 1023 58095 58102
+)
+"records.ml" 1078 63058 63185 "records.ml" 1078 63058 63187
+type(
+  unit
+)
+"records.ml" 1078 63058 63181 "records.ml" 1078 63058 63188
+type(
+  API.host_metrics_t option
+)
+"records.ml" 1078 63058 63126 "records.ml" 1078 63058 63190
+type(
+  string option
+)
+"records.ml" 1078 63058 63114 "records.ml" 1078 63058 63190
+type(
+  string
+)
+"records.ml" 1078 63058 63103 "records.ml" 1078 63058 63191
+type(
+  unit -> string
+)
+"records.ml" 1078 63058 63192 "records.ml" 1078 63058 63194
+type(
+  unit
+)
+"records.ml" 1078 63058 63061 "records.ml" 1078 63058 63194
+type(
+  field
+)
+"records.ml" 1079 63196 63199 "records.ml" 1079 63196 63209
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1079 63196 63216 "records.ml" 1079 63196 63225
+type(
+  string
+)
+"records.ml" 1079 63196 63236 "records.ml" 1079 63196 63238
+type(
+  unit
+)
+"records.ml" 1079 63196 63242 "records.ml" 1079 63196 63255
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1079 63196 63256 "records.ml" 1079 63196 63260
+type(
+  string
+)
+"records.ml" 1079 63196 63262 "records.ml" 1079 63196 63273
+type(
+  unit -> string list
+)
+ident(
+  int_ref get_patches "records.ml" 1024 58127 58132 "records.ml" 1024 58127 58143
+)
+"records.ml" 1079 63196 63274 "records.ml" 1079 63196 63276
+type(
+  unit
+)
+"records.ml" 1079 63196 63261 "records.ml" 1079 63196 63277
+type(
+  string list
+)
+"records.ml" 1079 63196 63242 "records.ml" 1079 63196 63277
+type(
+  string
+)
+"records.ml" 1079 63196 63231 "records.ml" 1079 63196 63278
+type(
+  unit -> string
+)
+"records.ml" 1079 63196 63288 "records.ml" 1079 63196 63299
+type(
+  unit -> string list
+)
+ident(
+  int_ref get_patches "records.ml" 1024 58127 58132 "records.ml" 1024 58127 58143
+)
+"records.ml" 1079 63196 63300 "records.ml" 1079 63196 63302
+type(
+  unit
+)
+"records.ml" 1079 63196 63199 "records.ml" 1079 63196 63302
+type(
+  field
+)
+"records.ml" 1080 63304 63307 "records.ml" 1080 63304 63317
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1080 63304 63324 "records.ml" 1080 63304 63339
+type(
+  string
+)
+"records.ml" 1080 63304 63350 "records.ml" 1080 63304 63352
+type(
+  unit
+)
+"records.ml" 1080 63304 63356 "records.ml" 1080 63304 63369
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1080 63304 63370 "records.ml" 1080 63304 63374
+type(
+  string
+)
+"records.ml" 1080 63304 63376 "records.ml" 1080 63304 63384
+type(
+  (string -> string) -> API.string_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1080 63304 63390 "records.ml" 1080 63304 63391
+type(
+  string
+)
+ident(
+  def x "records.ml" 1080 63304 63395 "records.ml" 1080 63304 63430
+)
+"records.ml" 1080 63304 63395 "records.ml" 1080 63304 63412
+type(
+  '_a Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1080 63304 63414 "records.ml" 1080 63304 63427
+type(
+  string -> '_a Ref.t
+)
+ident(
+  ext_ref Ref.of_string
+)
+"records.ml" 1080 63304 63428 "records.ml" 1080 63304 63429
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 1080 63304 63390 "records.ml" 1080 63304 63391
+)
+"records.ml" 1080 63304 63413 "records.ml" 1080 63304 63430
+type(
+  '_a Ref.t
+)
+"records.ml" 1080 63304 63395 "records.ml" 1080 63304 63430
+type(
+  string
+)
+"records.ml" 1080 63304 63385 "records.ml" 1080 63304 63431
+type(
+  string -> string
+)
+"records.ml" 1080 63304 63433 "records.ml" 1080 63304 63434
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1080 63304 63435 "records.ml" 1080 63304 63437
+type(
+  unit
+)
+"records.ml" 1080 63304 63432 "records.ml" 1080 63304 63438
+type(
+  API.host_t
+)
+"records.ml" 1080 63304 63432 "records.ml" 1080 63304 63461
+type(
+  API.string_set
+)
+"records.ml" 1080 63304 63375 "records.ml" 1080 63304 63462
+type(
+  string list
+)
+"records.ml" 1080 63304 63356 "records.ml" 1080 63304 63462
+type(
+  string
+)
+"records.ml" 1080 63304 63345 "records.ml" 1080 63304 63463
+type(
+  unit -> string
+)
+"records.ml" 1080 63304 63464 "records.ml" 1080 63304 63466
+type(
+  unit
+)
+"records.ml" 1080 63304 63307 "records.ml" 1080 63304 63466
+type(
+  field
+)
+"records.ml" 1081 63468 63471 "records.ml" 1081 63468 63481
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1081 63468 63488 "records.ml" 1081 63468 63506
+type(
+  string
+)
+"records.ml" 1081 63468 63517 "records.ml" 1081 63468 63519
+type(
+  unit
+)
+"records.ml" 1081 63468 63523 "records.ml" 1081 63468 63536
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1081 63468 63537 "records.ml" 1081 63468 63541
+type(
+  string
+)
+"records.ml" 1081 63468 63543 "records.ml" 1081 63468 63551
+type(
+  (string -> string) -> API.string_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1081 63468 63557 "records.ml" 1081 63468 63558
+type(
+  string
+)
+ident(
+  def x "records.ml" 1081 63468 63562 "records.ml" 1081 63468 63597
+)
+"records.ml" 1081 63468 63562 "records.ml" 1081 63468 63579
+type(
+  '_b Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1081 63468 63581 "records.ml" 1081 63468 63594
+type(
+  string -> '_b Ref.t
+)
+ident(
+  ext_ref Ref.of_string
+)
+"records.ml" 1081 63468 63595 "records.ml" 1081 63468 63596
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 1081 63468 63557 "records.ml" 1081 63468 63558
+)
+"records.ml" 1081 63468 63580 "records.ml" 1081 63468 63597
+type(
+  '_b Ref.t
+)
+"records.ml" 1081 63468 63562 "records.ml" 1081 63468 63597
+type(
+  string
+)
+"records.ml" 1081 63468 63552 "records.ml" 1081 63468 63598
+type(
+  string -> string
+)
+"records.ml" 1081 63468 63600 "records.ml" 1081 63468 63601
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1081 63468 63602 "records.ml" 1081 63468 63604
+type(
+  unit
+)
+"records.ml" 1081 63468 63599 "records.ml" 1081 63468 63605
+type(
+  API.host_t
+)
+"records.ml" 1081 63468 63599 "records.ml" 1081 63468 63631
+type(
+  API.string_set
+)
+"records.ml" 1081 63468 63542 "records.ml" 1081 63468 63632
+type(
+  string list
+)
+"records.ml" 1081 63468 63523 "records.ml" 1081 63468 63632
+type(
+  string
+)
+"records.ml" 1081 63468 63512 "records.ml" 1081 63468 63633
+type(
+  unit -> string
+)
+"records.ml" 1081 63468 63634 "records.ml" 1081 63468 63636
+type(
+  unit
+)
+"records.ml" 1081 63468 63471 "records.ml" 1081 63468 63636
+type(
+  field
+)
+"records.ml" 1082 63638 63641 "records.ml" 1082 63638 63651
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1082 63638 63658 "records.ml" 1082 63638 63678
+type(
+  string
+)
+"records.ml" 1082 63638 63689 "records.ml" 1082 63638 63691
+type(
+  unit
+)
+"records.ml" 1082 63638 63696 "records.ml" 1082 63638 63697
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1082 63638 63698 "records.ml" 1082 63638 63700
+type(
+  unit
+)
+"records.ml" 1082 63638 63695 "records.ml" 1082 63638 63701
+type(
+  API.host_t
+)
+"records.ml" 1082 63638 63695 "records.ml" 1082 63638 63729
+type(
+  string
+)
+"records.ml" 1082 63638 63684 "records.ml" 1082 63638 63730
+type(
+  unit -> string
+)
+"records.ml" 1082 63638 63731 "records.ml" 1082 63638 63733
+type(
+  unit
+)
+"records.ml" 1082 63638 63641 "records.ml" 1082 63638 63733
+type(
+  field
+)
+"records.ml" 1083 63735 63738 "records.ml" 1083 63735 63748
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1083 63735 63755 "records.ml" 1083 63735 63783
+type(
+  string
+)
+"records.ml" 1083 63735 63794 "records.ml" 1083 63735 63796
+type(
+  unit
+)
+"records.ml" 1083 63735 63801 "records.ml" 1083 63735 63802
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1083 63735 63803 "records.ml" 1083 63735 63805
+type(
+  unit
+)
+"records.ml" 1083 63735 63800 "records.ml" 1083 63735 63806
+type(
+  API.host_t
+)
+"records.ml" 1083 63735 63800 "records.ml" 1083 63735 63842
+type(
+  string
+)
+"records.ml" 1083 63735 63789 "records.ml" 1083 63735 63843
+type(
+  unit -> string
+)
+"records.ml" 1083 63735 63844 "records.ml" 1083 63735 63846
+type(
+  unit
+)
+"records.ml" 1083 63735 63738 "records.ml" 1083 63735 63846
+type(
+  field
+)
+"records.ml" 1084 63848 63851 "records.ml" 1084 63848 63861
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1084 63848 63868 "records.ml" 1084 63848 63897
+type(
+  string
+)
+"records.ml" 1084 63848 63908 "records.ml" 1084 63848 63910
+type(
+  unit
+)
+"records.ml" 1084 63848 63914 "records.ml" 1084 63848 63940
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 1084 63848 63941 "records.ml" 1084 63848 63945
+type(
+  string
+)
+"records.ml" 1084 63848 63947 "records.ml" 1084 63848 63948
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1084 63848 63949 "records.ml" 1084 63848 63951
+type(
+  unit
+)
+"records.ml" 1084 63848 63946 "records.ml" 1084 63848 63952
+type(
+  API.host_t
+)
+"records.ml" 1084 63848 63946 "records.ml" 1084 63848 63989
+type(
+  API.string_to_string_map
+)
+"records.ml" 1084 63848 63914 "records.ml" 1084 63848 63989
+type(
+  string
+)
+"records.ml" 1084 63848 63903 "records.ml" 1084 63848 63990
+type(
+  unit -> string
+)
+"records.ml" 1085 63991 64009 "records.ml" 1085 63991 64011
+type(
+  unit
+)
+"records.ml" 1085 63991 64016 "records.ml" 1085 63991 64017
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1085 63991 64018 "records.ml" 1085 63991 64020
+type(
+  unit
+)
+"records.ml" 1085 63991 64015 "records.ml" 1085 63991 64021
+type(
+  API.host_t
+)
+"records.ml" 1085 63991 64015 "records.ml" 1085 63991 64058
+type(
+  API.string_to_string_map
+)
+"records.ml" 1085 63991 64004 "records.ml" 1085 63991 64059
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 1085 63991 64060 "records.ml" 1085 63991 64062
+type(
+  unit
+)
+"records.ml" 1084 63848 63851 "records.ml" 1085 63991 64062
+type(
+  field
+)
+"records.ml" 1086 64064 64067 "records.ml" 1086 64064 64077
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1086 64064 64084 "records.ml" 1086 64064 64093
+type(
+  string
+)
+"records.ml" 1086 64064 64104 "records.ml" 1086 64064 64106
+type(
+  unit
+)
+"records.ml" 1086 64064 64111 "records.ml" 1086 64064 64112
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1086 64064 64113 "records.ml" 1086 64064 64115
+type(
+  unit
+)
+"records.ml" 1086 64064 64110 "records.ml" 1086 64064 64116
+type(
+  API.host_t
+)
+"records.ml" 1086 64064 64110 "records.ml" 1086 64064 64133
+type(
+  string
+)
+"records.ml" 1086 64064 64099 "records.ml" 1086 64064 64134
+type(
+  unit -> string
+)
+"records.ml" 1086 64064 64135 "records.ml" 1086 64064 64137
+type(
+  unit
+)
+"records.ml" 1086 64064 64067 "records.ml" 1086 64064 64137
+type(
+  field
+)
+"records.ml" 1087 64139 64142 "records.ml" 1087 64139 64152
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1087 64139 64159 "records.ml" 1087 64139 64175
+type(
+  string
+)
+"records.ml" 1087 64139 64186 "records.ml" 1087 64139 64188
+type(
+  unit
+)
+"records.ml" 1087 64139 64192 "records.ml" 1087 64139 64218
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 1087 64139 64219 "records.ml" 1087 64139 64223
+type(
+  string
+)
+"records.ml" 1087 64139 64225 "records.ml" 1087 64139 64226
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1087 64139 64227 "records.ml" 1087 64139 64229
+type(
+  unit
+)
+"records.ml" 1087 64139 64224 "records.ml" 1087 64139 64230
+type(
+  API.host_t
+)
+"records.ml" 1087 64139 64224 "records.ml" 1087 64139 64254
+type(
+  API.string_to_string_map
+)
+"records.ml" 1087 64139 64192 "records.ml" 1087 64139 64254
+type(
+  string
+)
+"records.ml" 1087 64139 64181 "records.ml" 1087 64139 64255
+type(
+  unit -> string
+)
+"records.ml" 1087 64139 64270 "records.ml" 1087 64139 64272
+type(
+  unit
+)
+"records.ml" 1087 64139 64277 "records.ml" 1087 64139 64278
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1087 64139 64279 "records.ml" 1087 64139 64281
+type(
+  unit
+)
+"records.ml" 1087 64139 64276 "records.ml" 1087 64139 64282
+type(
+  API.host_t
+)
+"records.ml" 1087 64139 64276 "records.ml" 1087 64139 64306
+type(
+  API.string_to_string_map
+)
+"records.ml" 1087 64139 64265 "records.ml" 1087 64139 64307
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 1087 64139 64308 "records.ml" 1087 64139 64310
+type(
+  unit
+)
+"records.ml" 1087 64139 64142 "records.ml" 1087 64139 64310
+type(
+  field
+)
+"records.ml" 1088 64312 64315 "records.ml" 1088 64312 64325
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1088 64312 64332 "records.ml" 1088 64312 64347
+type(
+  string
+)
+"records.ml" 1088 64312 64358 "records.ml" 1088 64312 64360
+type(
+  unit
+)
+"records.ml" 1088 64312 64365 "records.ml" 1088 64312 64366
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1088 64312 64367 "records.ml" 1088 64312 64369
+type(
+  unit
+)
+"records.ml" 1088 64312 64364 "records.ml" 1088 64312 64370
+type(
+  API.host_t
+)
+"records.ml" 1088 64312 64364 "records.ml" 1088 64312 64393
+type(
+  string
+)
+"records.ml" 1088 64312 64353 "records.ml" 1088 64312 64394
+type(
+  unit -> string
+)
+"records.ml" 1088 64312 64395 "records.ml" 1088 64312 64397
+type(
+  unit
+)
+"records.ml" 1088 64312 64315 "records.ml" 1088 64312 64397
+type(
+  field
+)
+"records.ml" 1089 64399 64402 "records.ml" 1089 64399 64412
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1089 64399 64419 "records.ml" 1089 64399 64436
+type(
+  string
+)
+"records.ml" 1089 64399 64447 "records.ml" 1089 64399 64449
+type(
+  unit
+)
+"records.ml" 1089 64399 64453 "records.ml" 1089 64399 64479
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 1089 64399 64480 "records.ml" 1089 64399 64484
+type(
+  string
+)
+"records.ml" 1089 64399 64486 "records.ml" 1089 64399 64487
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1089 64399 64488 "records.ml" 1089 64399 64490
+type(
+  unit
+)
+"records.ml" 1089 64399 64485 "records.ml" 1089 64399 64491
+type(
+  API.host_t
+)
+"records.ml" 1089 64399 64485 "records.ml" 1089 64399 64516
+type(
+  API.string_to_string_map
+)
+"records.ml" 1089 64399 64453 "records.ml" 1089 64399 64516
+type(
+  string
+)
+"records.ml" 1089 64399 64442 "records.ml" 1089 64399 64517
+type(
+  unit -> string
+)
+"records.ml" 1090 64518 64536 "records.ml" 1090 64518 64538
+type(
+  unit
+)
+"records.ml" 1090 64518 64543 "records.ml" 1090 64518 64544
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1090 64518 64545 "records.ml" 1090 64518 64547
+type(
+  unit
+)
+"records.ml" 1090 64518 64542 "records.ml" 1090 64518 64548
+type(
+  API.host_t
+)
+"records.ml" 1090 64518 64542 "records.ml" 1090 64518 64573
+type(
+  API.string_to_string_map
+)
+"records.ml" 1090 64518 64531 "records.ml" 1090 64518 64574
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 1090 64518 64575 "records.ml" 1090 64518 64577
+type(
+  unit
+)
+"records.ml" 1089 64399 64402 "records.ml" 1090 64518 64577
+type(
+  field
+)
+"records.ml" 1091 64579 64582 "records.ml" 1091 64579 64592
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1091 64579 64599 "records.ml" 1091 64579 64615
+type(
+  string
+)
+"records.ml" 1091 64579 64626 "records.ml" 1091 64579 64628
+type(
+  unit
+)
+"records.ml" 1091 64579 64632 "records.ml" 1091 64579 64649
+type(
+  API.ref_SR -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1091 64579 64651 "records.ml" 1091 64579 64652
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1091 64579 64653 "records.ml" 1091 64579 64655
+type(
+  unit
+)
+"records.ml" 1091 64579 64650 "records.ml" 1091 64579 64656
+type(
+  API.host_t
+)
+"records.ml" 1091 64579 64650 "records.ml" 1091 64579 64680
+type(
+  API.ref_SR
+)
+"records.ml" 1091 64579 64632 "records.ml" 1091 64579 64680
+type(
+  string
+)
+"records.ml" 1091 64579 64621 "records.ml" 1091 64579 64681
+type(
+  unit -> string
+)
+"records.ml" 1091 64579 64682 "records.ml" 1091 64579 64684
+type(
+  unit
+)
+"records.ml" 1091 64579 64582 "records.ml" 1091 64579 64684
+type(
+  field
+)
+"records.ml" 1092 64686 64689 "records.ml" 1092 64686 64699
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> API.string_set) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1092 64686 64706 "records.ml" 1092 64686 64712
+type(
+  string
+)
+"records.ml" 1093 64713 64727 "records.ml" 1093 64713 64729
+type(
+  unit
+)
+"records.ml" 1093 64713 64733 "records.ml" 1093 64713 64746
+type(
+  string -> API.string_set -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1093 64713 64747 "records.ml" 1093 64713 64751
+type(
+  string
+)
+"records.ml" 1093 64713 64753 "records.ml" 1093 64713 64754
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1093 64713 64755 "records.ml" 1093 64713 64757
+type(
+  unit
+)
+"records.ml" 1093 64713 64752 "records.ml" 1093 64713 64758
+type(
+  API.host_t
+)
+"records.ml" 1093 64713 64752 "records.ml" 1093 64713 64772
+type(
+  API.string_set
+)
+"records.ml" 1093 64713 64733 "records.ml" 1093 64713 64772
+type(
+  string
+)
+"records.ml" 1093 64713 64722 "records.ml" 1093 64713 64773
+type(
+  unit -> string
+)
+"records.ml" 1094 64774 64792 "records.ml" 1094 64774 64794
+type(
+  unit
+)
+"records.ml" 1094 64774 64799 "records.ml" 1094 64774 64800
+type(
+  unit -> API.host_t
+)
+ident(
+  int_ref x "records.ml" 1021 57927 57932 "records.ml" 1021 57927 57933
+)
+"records.ml" 1094 64774 64801 "records.ml" 1094 64774 64803
+type(
+  unit
+)
+"records.ml" 1094 64774 64798 "records.ml" 1094 64774 64804
+type(
+  API.host_t
+)
+"records.ml" 1094 64774 64798 "records.ml" 1094 64774 64818
+type(
+  API.string_set
+)
+"records.ml" 1094 64774 64787 "records.ml" 1094 64774 64819
+type(
+  unit -> API.string_set
+)
+"records.ml" 1095 64820 64841 "records.ml" 1095 64820 64844
+type(
+  string
+)
+ident(
+  def tag "records.ml" 1095 64820 64848 "records.ml" 1095 64820 64892
+)
+"records.ml" 1095 64820 64848 "records.ml" 1095 64820 64868
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_host -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Host ).add_tags
+)
+"records.ml" 1095 64820 64869 "records.ml" 1095 64820 64872
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1017 57746 57762 "records.ml" 1017 57746 57765
+)
+"records.ml" 1095 64820 64873 "records.ml" 1095 64820 64883
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1017 57746 57766 "records.ml" 1017 57746 57776
+)
+"records.ml" 1095 64820 64884 "records.ml" 1095 64820 64888
+type(
+  API.ref_host
+)
+ident(
+  int_ref host "records.ml" 1017 57746 57777 "records.ml" 1017 57746 57781
+)
+"records.ml" 1095 64820 64889 "records.ml" 1095 64820 64892
+type(
+  string
+)
+ident(
+  int_ref tag "records.ml" 1095 64820 64841 "records.ml" 1095 64820 64844
+)
+"records.ml" 1095 64820 64848 "records.ml" 1095 64820 64892
+type(
+  unit
+)
+"records.ml" 1095 64820 64836 "records.ml" 1095 64820 64893
+type(
+  string -> unit
+)
+"records.ml" 1096 64894 64920 "records.ml" 1096 64894 64923
+type(
+  string
+)
+ident(
+  def tag "records.ml" 1096 64894 64927 "records.ml" 1096 64894 64974
+)
+"records.ml" 1096 64894 64927 "records.ml" 1096 64894 64950
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_host -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Host ).remove_tags
+)
+"records.ml" 1096 64894 64951 "records.ml" 1096 64894 64954
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1017 57746 57762 "records.ml" 1017 57746 57765
+)
+"records.ml" 1096 64894 64955 "records.ml" 1096 64894 64965
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1017 57746 57766 "records.ml" 1017 57746 57776
+)
+"records.ml" 1096 64894 64966 "records.ml" 1096 64894 64970
+type(
+  API.ref_host
+)
+ident(
+  int_ref host "records.ml" 1017 57746 57777 "records.ml" 1017 57746 57781
+)
+"records.ml" 1096 64894 64971 "records.ml" 1096 64894 64974
+type(
+  string
+)
+ident(
+  int_ref tag "records.ml" 1096 64894 64920 "records.ml" 1096 64894 64923
+)
+"records.ml" 1096 64894 64927 "records.ml" 1096 64894 64974
+type(
+  unit
+)
+"records.ml" 1096 64894 64915 "records.ml" 1096 64894 64975
+type(
+  string -> unit
+)
+"records.ml" 1096 64894 64976 "records.ml" 1096 64894 64978
+type(
+  unit
+)
+"records.ml" 1092 64686 64689 "records.ml" 1096 64894 64978
+type(
+  field
+)
+"records.ml" 1034 58595 58607 "records.ml" 1097 64980 64983
+type(
+  field list
+)
+"records.ml" 1030 58440 58441 "records.ml" 1097 64980 64984
+type(
+  ([ `host ], API.host_t) record
+)
+"records.ml" 1024 58127 58128 "records.ml" 1097 64980 64984
+type(
+  ([ `host ], API.host_t) record
+)
+"records.ml" 1023 58095 58096 "records.ml" 1097 64980 64984
+type(
+  ([ `host ], API.host_t) record
+)
+"records.ml" 1022 57957 57958 "records.ml" 1097 64980 64984
+type(
+  ([ `host ], API.host_t) record
+)
+"records.ml" 1021 57927 57928 "records.ml" 1097 64980 64984
+type(
+  ([ `host ], API.host_t) record
+)
+"records.ml" 1020 57893 57894 "records.ml" 1097 64980 64984
+type(
+  ([ `host ], API.host_t) record
+)
+"records.ml" 1019 57808 57809 "records.ml" 1097 64980 64984
+type(
+  ([ `host ], API.host_t) record
+)
+"records.ml" 1018 57784 57785 "records.ml" 1097 64980 64984
+type(
+  ([ `host ], API.host_t) record
+)
+"records.ml" 1099 64986 64990 "records.ml" 1099 64986 65000
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_VDI -> ([ `VDI ], API.vDI_t) record
+)
+ident(
+  def vdi_record "records.ml" 1175 70189 70189 --
+)
+"records.ml" 1099 64986 65001 "records.ml" 1099 64986 65004
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 1099 64986 65005 "records.ml" 1173 70183 70187
+)
+"records.ml" 1099 64986 65005 "records.ml" 1099 64986 65015
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 1099 64986 65016 "records.ml" 1173 70183 70187
+)
+"records.ml" 1099 64986 65016 "records.ml" 1099 64986 65019
+type(
+  API.ref_VDI
+)
+ident(
+  def vdi "records.ml" 1100 65022 65023 "records.ml" 1173 70183 70187
+)
+"records.ml" 1100 65022 65027 "records.ml" 1100 65022 65031
+type(
+  API.ref_VDI ref
+)
+"records.ml" 1100 65022 65034 "records.ml" 1100 65022 65037
+type(
+  API.ref_VDI -> API.ref_VDI ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1100 65022 65038 "records.ml" 1100 65022 65041
+type(
+  API.ref_VDI
+)
+ident(
+  int_ref vdi "records.ml" 1099 64986 65016 "records.ml" 1099 64986 65019
+)
+"records.ml" 1100 65022 65034 "records.ml" 1100 65022 65041
+type(
+  API.ref_VDI ref
+)
+"records.ml" 1101 65045 65050 "records.ml" 1101 65045 65062
+type(
+  API.vDI_t lzy
+)
+"records.ml" 1101 65045 65076 "records.ml" 1101 65045 65078
+type(
+  unit
+)
+"records.ml" 1101 65045 65082 "records.ml" 1101 65045 65103
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VDI -> API.vDI_t
+)
+ident(
+  ext_ref Client.( Client ).( VDI ).get_record
+)
+"records.ml" 1101 65045 65104 "records.ml" 1101 65045 65107
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1099 64986 65001 "records.ml" 1099 64986 65004
+)
+"records.ml" 1101 65045 65108 "records.ml" 1101 65045 65118
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1099 64986 65005 "records.ml" 1099 64986 65015
+)
+"records.ml" 1101 65045 65119 "records.ml" 1101 65045 65120
+type(
+  API.ref_VDI ref -> API.ref_VDI
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1101 65045 65120 "records.ml" 1101 65045 65124
+type(
+  API.ref_VDI ref
+)
+ident(
+  int_ref _ref "records.ml" 1100 65022 65027 "records.ml" 1100 65022 65031
+)
+"records.ml" 1101 65045 65119 "records.ml" 1101 65045 65124
+type(
+  API.ref_VDI
+)
+"records.ml" 1101 65045 65082 "records.ml" 1101 65045 65124
+type(
+  API.vDI_t
+)
+"records.ml" 1101 65045 65071 "records.ml" 1101 65045 65125
+type(
+  unit -> API.vDI_t
+)
+"records.ml" 1101 65045 65065 "records.ml" 1101 65045 65125
+type(
+  API.vDI_t lzy
+)
+"records.ml" 1102 65129 65134 "records.ml" 1102 65129 65140
+type(
+  API.vDI_t lzy ref
+)
+"records.ml" 1102 65129 65143 "records.ml" 1102 65129 65146
+type(
+  API.vDI_t lzy -> API.vDI_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1102 65129 65147 "records.ml" 1102 65129 65159
+type(
+  API.vDI_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1101 65045 65050 "records.ml" 1101 65045 65062
+)
+"records.ml" 1102 65129 65143 "records.ml" 1102 65129 65159
+type(
+  API.vDI_t lzy ref
+)
+"records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+type(
+  unit -> API.vDI_t
+)
+"records.ml" 1103 65163 65170 "records.ml" 1103 65163 65172
+type(
+  unit
+)
+"records.ml" 1103 65163 65175 "records.ml" 1103 65163 65182
+type(
+  API.vDI_t lzy ref -> API.vDI_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 1103 65163 65183 "records.ml" 1103 65163 65189
+type(
+  API.vDI_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1102 65129 65134 "records.ml" 1102 65129 65140
+)
+"records.ml" 1103 65163 65175 "records.ml" 1103 65163 65189
+type(
+  API.vDI_t
+)
+"records.ml" 1104 65193 65208 "records.ml" 1104 65193 65209
+type(
+  API.ref_VDI
+)
+ident(
+  def r "records.ml" 1104 65193 65213 "records.ml" 1104 65193 65246
+)
+"records.ml" 1104 65193 65213 "records.ml" 1104 65193 65217
+type(
+  API.ref_VDI ref
+)
+ident(
+  int_ref _ref "records.ml" 1100 65022 65027 "records.ml" 1100 65022 65031
+)
+"records.ml" 1104 65193 65218 "records.ml" 1104 65193 65220
+type(
+  API.ref_VDI ref -> API.ref_VDI -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1104 65193 65221 "records.ml" 1104 65193 65222
+type(
+  API.ref_VDI
+)
+ident(
+  int_ref r "records.ml" 1104 65193 65208 "records.ml" 1104 65193 65209
+)
+"records.ml" 1104 65193 65213 "records.ml" 1104 65193 65222
+type(
+  unit
+)
+"records.ml" 1104 65193 65224 "records.ml" 1104 65193 65230
+type(
+  API.vDI_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1102 65129 65134 "records.ml" 1102 65129 65140
+)
+"records.ml" 1104 65193 65231 "records.ml" 1104 65193 65233
+type(
+  API.vDI_t lzy ref -> API.vDI_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1104 65193 65234 "records.ml" 1104 65193 65246
+type(
+  API.vDI_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1101 65045 65050 "records.ml" 1101 65045 65062
+)
+"records.ml" 1104 65193 65224 "records.ml" 1104 65193 65246
+type(
+  unit
+)
+"records.ml" 1104 65193 65213 "records.ml" 1104 65193 65246
+type(
+  unit
+)
+"records.ml" 1104 65193 65203 "records.ml" 1104 65193 65248
+type(
+  API.ref_VDI -> unit
+)
+"records.ml" 1105 65250 65269 "records.ml" 1105 65250 65270
+type(
+  API.ref_VDI
+)
+ident(
+  def a "records.ml" 1105 65250 65277 "records.ml" 1105 65250 65303
+)
+"records.ml" 1105 65250 65271 "records.ml" 1105 65250 65272
+type(
+  API.vDI_t
+)
+ident(
+  def b "records.ml" 1105 65250 65277 "records.ml" 1105 65250 65303
+)
+"records.ml" 1105 65250 65268 "records.ml" 1105 65250 65273
+type(
+  API.ref_VDI * API.vDI_t
+)
+"records.ml" 1105 65250 65277 "records.ml" 1105 65250 65281
+type(
+  API.ref_VDI ref
+)
+ident(
+  int_ref _ref "records.ml" 1100 65022 65027 "records.ml" 1100 65022 65031
+)
+"records.ml" 1105 65250 65282 "records.ml" 1105 65250 65284
+type(
+  API.ref_VDI ref -> API.ref_VDI -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1105 65250 65285 "records.ml" 1105 65250 65286
+type(
+  API.ref_VDI
+)
+ident(
+  int_ref a "records.ml" 1105 65250 65269 "records.ml" 1105 65250 65270
+)
+"records.ml" 1105 65250 65277 "records.ml" 1105 65250 65286
+type(
+  unit
+)
+"records.ml" 1105 65250 65288 "records.ml" 1105 65250 65294
+type(
+  API.vDI_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1102 65129 65134 "records.ml" 1102 65129 65140
+)
+"records.ml" 1105 65250 65295 "records.ml" 1105 65250 65297
+type(
+  API.vDI_t lzy ref -> API.vDI_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1105 65250 65302 "records.ml" 1105 65250 65303
+type(
+  API.vDI_t
+)
+ident(
+  int_ref b "records.ml" 1105 65250 65271 "records.ml" 1105 65250 65272
+)
+"records.ml" 1105 65250 65298 "records.ml" 1105 65250 65303
+type(
+  API.vDI_t lzy
+)
+"records.ml" 1105 65250 65288 "records.ml" 1105 65250 65303
+type(
+  unit
+)
+"records.ml" 1105 65250 65277 "records.ml" 1105 65250 65303
+type(
+  unit
+)
+"records.ml" 1105 65250 65263 "records.ml" 1105 65250 65304
+type(
+  API.ref_VDI * API.vDI_t -> unit
+)
+"records.ml" 1106 65306 65316 "records.ml" 1106 65306 65317
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1107 65319 65334 "records.ml" 1107 65319 65336
+type(
+  unit
+)
+"records.ml" 1107 65319 65340 "records.ml" 1107 65319 65341
+type(
+  API.ref_VDI ref -> API.ref_VDI
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1107 65319 65341 "records.ml" 1107 65319 65345
+type(
+  API.ref_VDI ref
+)
+ident(
+  int_ref _ref "records.ml" 1100 65022 65027 "records.ml" 1100 65022 65031
+)
+"records.ml" 1107 65319 65340 "records.ml" 1107 65319 65345
+type(
+  API.ref_VDI
+)
+"records.ml" 1107 65319 65329 "records.ml" 1107 65319 65346
+type(
+  unit -> API.ref_VDI
+)
+"records.ml" 1109 65362 65365 "records.ml" 1109 65362 65375
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1109 65362 65382 "records.ml" 1109 65362 65388
+type(
+  string
+)
+"records.ml" 1109 65362 65399 "records.ml" 1109 65362 65401
+type(
+  unit
+)
+"records.ml" 1109 65362 65406 "records.ml" 1109 65362 65407
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1109 65362 65408 "records.ml" 1109 65362 65410
+type(
+  unit
+)
+"records.ml" 1109 65362 65405 "records.ml" 1109 65362 65411
+type(
+  API.vDI_t
+)
+"records.ml" 1109 65362 65405 "records.ml" 1109 65362 65424
+type(
+  string
+)
+"records.ml" 1109 65362 65394 "records.ml" 1109 65362 65425
+type(
+  unit -> string
+)
+"records.ml" 1109 65362 65426 "records.ml" 1109 65362 65428
+type(
+  unit
+)
+"records.ml" 1109 65362 65365 "records.ml" 1109 65362 65428
+type(
+  field
+)
+"records.ml" 1110 65430 65433 "records.ml" 1110 65430 65443
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1110 65430 65450 "records.ml" 1110 65430 65462
+type(
+  string
+)
+"records.ml" 1110 65430 65473 "records.ml" 1110 65430 65475
+type(
+  unit
+)
+"records.ml" 1110 65430 65480 "records.ml" 1110 65430 65481
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1110 65430 65482 "records.ml" 1110 65430 65484
+type(
+  unit
+)
+"records.ml" 1110 65430 65479 "records.ml" 1110 65430 65485
+type(
+  API.vDI_t
+)
+"records.ml" 1110 65430 65479 "records.ml" 1110 65430 65504
+type(
+  string
+)
+"records.ml" 1110 65430 65468 "records.ml" 1110 65430 65505
+type(
+  unit -> string
+)
+"records.ml" 1111 65506 65520 "records.ml" 1111 65506 65525
+type(
+  string
+)
+ident(
+  def label "records.ml" 1111 65506 65529 "records.ml" 1111 65506 65579
+)
+"records.ml" 1111 65506 65529 "records.ml" 1111 65506 65554
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VDI -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VDI ).set_name_label
+)
+"records.ml" 1111 65506 65555 "records.ml" 1111 65506 65558
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1099 64986 65001 "records.ml" 1099 64986 65004
+)
+"records.ml" 1111 65506 65559 "records.ml" 1111 65506 65569
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1099 64986 65005 "records.ml" 1099 64986 65015
+)
+"records.ml" 1111 65506 65570 "records.ml" 1111 65506 65573
+type(
+  API.ref_VDI
+)
+ident(
+  int_ref vdi "records.ml" 1099 64986 65016 "records.ml" 1099 64986 65019
+)
+"records.ml" 1111 65506 65574 "records.ml" 1111 65506 65579
+type(
+  string
+)
+ident(
+  int_ref label "records.ml" 1111 65506 65520 "records.ml" 1111 65506 65525
+)
+"records.ml" 1111 65506 65529 "records.ml" 1111 65506 65579
+type(
+  unit
+)
+"records.ml" 1111 65506 65515 "records.ml" 1111 65506 65580
+type(
+  string -> unit
+)
+"records.ml" 1111 65506 65581 "records.ml" 1111 65506 65583
+type(
+  unit
+)
+"records.ml" 1110 65430 65433 "records.ml" 1111 65506 65583
+type(
+  field
+)
+"records.ml" 1112 65585 65588 "records.ml" 1112 65585 65598
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1112 65585 65605 "records.ml" 1112 65585 65623
+type(
+  string
+)
+"records.ml" 1112 65585 65634 "records.ml" 1112 65585 65636
+type(
+  unit
+)
+"records.ml" 1112 65585 65641 "records.ml" 1112 65585 65642
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1112 65585 65643 "records.ml" 1112 65585 65645
+type(
+  unit
+)
+"records.ml" 1112 65585 65640 "records.ml" 1112 65585 65646
+type(
+  API.vDI_t
+)
+"records.ml" 1112 65585 65640 "records.ml" 1112 65585 65671
+type(
+  string
+)
+"records.ml" 1112 65585 65629 "records.ml" 1112 65585 65672
+type(
+  unit -> string
+)
+"records.ml" 1113 65673 65687 "records.ml" 1113 65673 65691
+type(
+  string
+)
+ident(
+  def desc "records.ml" 1113 65673 65695 "records.ml" 1113 65673 65750
+)
+"records.ml" 1113 65673 65695 "records.ml" 1113 65673 65726
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VDI -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VDI ).set_name_description
+)
+"records.ml" 1113 65673 65727 "records.ml" 1113 65673 65730
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1099 64986 65001 "records.ml" 1099 64986 65004
+)
+"records.ml" 1113 65673 65731 "records.ml" 1113 65673 65741
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1099 64986 65005 "records.ml" 1099 64986 65015
+)
+"records.ml" 1113 65673 65742 "records.ml" 1113 65673 65745
+type(
+  API.ref_VDI
+)
+ident(
+  int_ref vdi "records.ml" 1099 64986 65016 "records.ml" 1099 64986 65019
+)
+"records.ml" 1113 65673 65746 "records.ml" 1113 65673 65750
+type(
+  string
+)
+ident(
+  int_ref desc "records.ml" 1113 65673 65687 "records.ml" 1113 65673 65691
+)
+"records.ml" 1113 65673 65695 "records.ml" 1113 65673 65750
+type(
+  unit
+)
+"records.ml" 1113 65673 65682 "records.ml" 1113 65673 65751
+type(
+  string -> unit
+)
+"records.ml" 1113 65673 65752 "records.ml" 1113 65673 65754
+type(
+  unit
+)
+"records.ml" 1112 65585 65588 "records.ml" 1113 65673 65754
+type(
+  field
+)
+"records.ml" 1114 65756 65759 "records.ml" 1114 65756 65769
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1114 65756 65776 "records.ml" 1114 65756 65791
+type(
+  string
+)
+"records.ml" 1114 65756 65802 "records.ml" 1114 65756 65804
+type(
+  unit
+)
+"records.ml" 1114 65756 65808 "records.ml" 1114 65756 65822
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 1114 65756 65824 "records.ml" 1114 65756 65825
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1114 65756 65826 "records.ml" 1114 65756 65828
+type(
+  unit
+)
+"records.ml" 1114 65756 65823 "records.ml" 1114 65756 65829
+type(
+  API.vDI_t
+)
+"records.ml" 1114 65756 65823 "records.ml" 1114 65756 65851
+type(
+  bool
+)
+"records.ml" 1114 65756 65808 "records.ml" 1114 65756 65851
+type(
+  string
+)
+"records.ml" 1114 65756 65797 "records.ml" 1114 65756 65852
+type(
+  unit -> string
+)
+"records.ml" 1114 65756 65853 "records.ml" 1114 65756 65855
+type(
+  unit
+)
+"records.ml" 1114 65756 65759 "records.ml" 1114 65756 65855
+type(
+  field
+)
+"records.ml" 1115 65857 65860 "records.ml" 1115 65857 65870
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1115 65857 65877 "records.ml" 1115 65857 65890
+type(
+  string
+)
+"records.ml" 1115 65857 65901 "records.ml" 1115 65857 65903
+type(
+  unit
+)
+"records.ml" 1115 65857 65907 "records.ml" 1115 65857 65924
+type(
+  API.ref_VDI -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1115 65857 65926 "records.ml" 1115 65857 65927
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1115 65857 65928 "records.ml" 1115 65857 65930
+type(
+  unit
+)
+"records.ml" 1115 65857 65925 "records.ml" 1115 65857 65931
+type(
+  API.vDI_t
+)
+"records.ml" 1115 65857 65925 "records.ml" 1115 65857 65951
+type(
+  API.ref_VDI
+)
+"records.ml" 1115 65857 65907 "records.ml" 1115 65857 65951
+type(
+  string
+)
+"records.ml" 1115 65857 65896 "records.ml" 1115 65857 65952
+type(
+  unit -> string
+)
+"records.ml" 1115 65857 65953 "records.ml" 1115 65857 65955
+type(
+  unit
+)
+"records.ml" 1115 65857 65860 "records.ml" 1115 65857 65955
+type(
+  field
+)
+"records.ml" 1116 65957 65960 "records.ml" 1116 65957 65970
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1116 65957 65977 "records.ml" 1116 65957 65988
+type(
+  string
+)
+"records.ml" 1116 65957 65999 "records.ml" 1116 65957 66001
+type(
+  unit
+)
+"records.ml" 1116 65957 66005 "records.ml" 1116 65957 66018
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1116 65957 66019 "records.ml" 1116 65957 66023
+type(
+  string
+)
+"records.ml" 1116 65957 66025 "records.ml" 1116 65957 66033
+type(
+  ([ `VDI ] Ref.t -> string) -> API.ref_VDI_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1116 65957 66034 "records.ml" 1116 65957 66051
+type(
+  [ `VDI ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1116 65957 66053 "records.ml" 1116 65957 66054
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1116 65957 66055 "records.ml" 1116 65957 66057
+type(
+  unit
+)
+"records.ml" 1116 65957 66052 "records.ml" 1116 65957 66058
+type(
+  API.vDI_t
+)
+"records.ml" 1116 65957 66052 "records.ml" 1116 65957 66076
+type(
+  API.ref_VDI_set
+)
+"records.ml" 1116 65957 66024 "records.ml" 1116 65957 66077
+type(
+  string list
+)
+"records.ml" 1116 65957 66005 "records.ml" 1116 65957 66077
+type(
+  string
+)
+"records.ml" 1116 65957 65994 "records.ml" 1116 65957 66078
+type(
+  unit -> string
+)
+"records.ml" 1116 65957 66079 "records.ml" 1116 65957 66081
+type(
+  unit
+)
+"records.ml" 1116 65957 65960 "records.ml" 1116 65957 66081
+type(
+  field
+)
+"records.ml" 1117 66083 66086 "records.ml" 1117 66083 66096
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1117 66083 66103 "records.ml" 1117 66083 66118
+type(
+  string
+)
+"records.ml" 1117 66083 66129 "records.ml" 1117 66083 66131
+type(
+  unit
+)
+"records.ml" 1117 66083 66135 "records.ml" 1117 66083 66149
+type(
+  API.datetime -> string
+)
+ident(
+  ext_ref Date.to_string
+)
+"records.ml" 1117 66083 66151 "records.ml" 1117 66083 66152
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1117 66083 66153 "records.ml" 1117 66083 66155
+type(
+  unit
+)
+"records.ml" 1117 66083 66150 "records.ml" 1117 66083 66156
+type(
+  API.vDI_t
+)
+"records.ml" 1117 66083 66150 "records.ml" 1117 66083 66178
+type(
+  API.datetime
+)
+"records.ml" 1117 66083 66135 "records.ml" 1117 66083 66178
+type(
+  string
+)
+"records.ml" 1117 66083 66124 "records.ml" 1117 66083 66179
+type(
+  unit -> string
+)
+"records.ml" 1117 66083 66180 "records.ml" 1117 66083 66182
+type(
+  unit
+)
+"records.ml" 1117 66083 66086 "records.ml" 1117 66083 66182
+type(
+  field
+)
+"records.ml" 1118 66184 66187 "records.ml" 1118 66184 66197
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1118 66184 66204 "records.ml" 1118 66184 66224
+type(
+  string
+)
+"records.ml" 1119 66225 66239 "records.ml" 1119 66225 66241
+type(
+  unit
+)
+"records.ml" 1119 66225 66245 "records.ml" 1119 66225 66258
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1119 66225 66259 "records.ml" 1119 66225 66263
+type(
+  string
+)
+"records.ml" 1119 66225 66265 "records.ml" 1119 66225 66273
+type(
+  ([ `blocked
+   | `clone
+   | `copy
+   | `destroy
+   | `force_unlock
+   | `forget
+   | `generate_config
+   | `resize
+   | `resize_online
+   | `scan
+   | `snapshot
+   | `update ] -> string) ->
+  API.vdi_operations_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1119 66225 66274 "records.ml" 1119 66225 66309
+type(
+  [ `blocked
+  | `clone
+  | `copy
+  | `destroy
+  | `force_unlock
+  | `forget
+  | `generate_config
+  | `resize
+  | `resize_online
+  | `scan
+  | `snapshot
+  | `update ] -> string
+)
+ident(
+  ext_ref Record_util.vdi_operation_to_string
+)
+"records.ml" 1119 66225 66311 "records.ml" 1119 66225 66312
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1119 66225 66313 "records.ml" 1119 66225 66315
+type(
+  unit
+)
+"records.ml" 1119 66225 66310 "records.ml" 1119 66225 66316
+type(
+  API.vDI_t
+)
+"records.ml" 1119 66225 66310 "records.ml" 1119 66225 66343
+type(
+  API.vdi_operations_set
+)
+"records.ml" 1119 66225 66264 "records.ml" 1119 66225 66344
+type(
+  string list
+)
+"records.ml" 1119 66225 66245 "records.ml" 1119 66225 66344
+type(
+  string
+)
+"records.ml" 1119 66225 66234 "records.ml" 1119 66225 66345
+type(
+  unit -> string
+)
+"records.ml" 1120 66346 66364 "records.ml" 1120 66346 66366
+type(
+  unit
+)
+"records.ml" 1120 66346 66370 "records.ml" 1120 66346 66378
+type(
+  ([ `blocked
+   | `clone
+   | `copy
+   | `destroy
+   | `force_unlock
+   | `forget
+   | `generate_config
+   | `resize
+   | `resize_online
+   | `scan
+   | `snapshot
+   | `update ] -> string) ->
+  API.vdi_operations_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1120 66346 66379 "records.ml" 1120 66346 66414
+type(
+  [ `blocked
+  | `clone
+  | `copy
+  | `destroy
+  | `force_unlock
+  | `forget
+  | `generate_config
+  | `resize
+  | `resize_online
+  | `scan
+  | `snapshot
+  | `update ] -> string
+)
+ident(
+  ext_ref Record_util.vdi_operation_to_string
+)
+"records.ml" 1120 66346 66416 "records.ml" 1120 66346 66417
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1120 66346 66418 "records.ml" 1120 66346 66420
+type(
+  unit
+)
+"records.ml" 1120 66346 66415 "records.ml" 1120 66346 66421
+type(
+  API.vDI_t
+)
+"records.ml" 1120 66346 66415 "records.ml" 1120 66346 66448
+type(
+  API.vdi_operations_set
+)
+"records.ml" 1120 66346 66370 "records.ml" 1120 66346 66448
+type(
+  string list
+)
+"records.ml" 1120 66346 66359 "records.ml" 1120 66346 66449
+type(
+  unit -> string list
+)
+"records.ml" 1120 66346 66450 "records.ml" 1120 66346 66452
+type(
+  unit
+)
+"records.ml" 1118 66184 66187 "records.ml" 1120 66346 66452
+type(
+  field
+)
+"records.ml" 1121 66454 66457 "records.ml" 1121 66454 66467
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1121 66454 66474 "records.ml" 1121 66454 66494
+type(
+  string
+)
+"records.ml" 1122 66495 66509 "records.ml" 1122 66495 66511
+type(
+  unit
+)
+"records.ml" 1122 66495 66515 "records.ml" 1122 66495 66528
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1122 66495 66529 "records.ml" 1122 66495 66533
+type(
+  string
+)
+"records.ml" 1122 66495 66535 "records.ml" 1122 66495 66543
+type(
+  (string * API.vdi_operations -> string) ->
+  API.string_to_vdi_operations_map -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1122 66495 66550 "records.ml" 1122 66495 66551
+type(
+  string
+)
+ident(
+  def a "records.ml" 1122 66495 66558 "records.ml" 1122 66495 66595
+)
+"records.ml" 1122 66495 66552 "records.ml" 1122 66495 66553
+type(
+  API.vdi_operations
+)
+ident(
+  def b "records.ml" 1122 66495 66558 "records.ml" 1122 66495 66595
+)
+"records.ml" 1122 66495 66549 "records.ml" 1122 66495 66554
+type(
+  string * API.vdi_operations
+)
+"records.ml" 1122 66495 66558 "records.ml" 1122 66495 66593
+type(
+  API.vdi_operations -> string
+)
+ident(
+  ext_ref Record_util.vdi_operation_to_string
+)
+"records.ml" 1122 66495 66594 "records.ml" 1122 66495 66595
+type(
+  API.vdi_operations
+)
+ident(
+  int_ref b "records.ml" 1122 66495 66552 "records.ml" 1122 66495 66553
+)
+"records.ml" 1122 66495 66558 "records.ml" 1122 66495 66595
+type(
+  string
+)
+"records.ml" 1122 66495 66544 "records.ml" 1122 66495 66596
+type(
+  string * API.vdi_operations -> string
+)
+"records.ml" 1122 66495 66598 "records.ml" 1122 66495 66599
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1122 66495 66600 "records.ml" 1122 66495 66602
+type(
+  unit
+)
+"records.ml" 1122 66495 66597 "records.ml" 1122 66495 66603
+type(
+  API.vDI_t
+)
+"records.ml" 1122 66495 66597 "records.ml" 1122 66495 66630
+type(
+  API.string_to_vdi_operations_map
+)
+"records.ml" 1122 66495 66534 "records.ml" 1122 66495 66631
+type(
+  string list
+)
+"records.ml" 1122 66495 66515 "records.ml" 1122 66495 66631
+type(
+  string
+)
+"records.ml" 1122 66495 66504 "records.ml" 1122 66495 66632
+type(
+  unit -> string
+)
+"records.ml" 1123 66633 66651 "records.ml" 1123 66633 66653
+type(
+  unit
+)
+"records.ml" 1123 66633 66657 "records.ml" 1123 66633 66665
+type(
+  (string * API.vdi_operations -> string) ->
+  API.string_to_vdi_operations_map -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1123 66633 66672 "records.ml" 1123 66633 66673
+type(
+  string
+)
+ident(
+  def a "records.ml" 1123 66633 66680 "records.ml" 1123 66633 66717
+)
+"records.ml" 1123 66633 66674 "records.ml" 1123 66633 66675
+type(
+  API.vdi_operations
+)
+ident(
+  def b "records.ml" 1123 66633 66680 "records.ml" 1123 66633 66717
+)
+"records.ml" 1123 66633 66671 "records.ml" 1123 66633 66676
+type(
+  string * API.vdi_operations
+)
+"records.ml" 1123 66633 66680 "records.ml" 1123 66633 66715
+type(
+  API.vdi_operations -> string
+)
+ident(
+  ext_ref Record_util.vdi_operation_to_string
+)
+"records.ml" 1123 66633 66716 "records.ml" 1123 66633 66717
+type(
+  API.vdi_operations
+)
+ident(
+  int_ref b "records.ml" 1123 66633 66674 "records.ml" 1123 66633 66675
+)
+"records.ml" 1123 66633 66680 "records.ml" 1123 66633 66717
+type(
+  string
+)
+"records.ml" 1123 66633 66666 "records.ml" 1123 66633 66718
+type(
+  string * API.vdi_operations -> string
+)
+"records.ml" 1123 66633 66720 "records.ml" 1123 66633 66721
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1123 66633 66722 "records.ml" 1123 66633 66724
+type(
+  unit
+)
+"records.ml" 1123 66633 66719 "records.ml" 1123 66633 66725
+type(
+  API.vDI_t
+)
+"records.ml" 1123 66633 66719 "records.ml" 1123 66633 66752
+type(
+  API.string_to_vdi_operations_map
+)
+"records.ml" 1123 66633 66657 "records.ml" 1123 66633 66752
+type(
+  string list
+)
+"records.ml" 1123 66633 66646 "records.ml" 1123 66633 66753
+type(
+  unit -> string list
+)
+"records.ml" 1123 66633 66754 "records.ml" 1123 66633 66756
+type(
+  unit
+)
+"records.ml" 1121 66454 66457 "records.ml" 1123 66633 66756
+type(
+  field
+)
+"records.ml" 1124 66758 66761 "records.ml" 1124 66758 66771
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1124 66758 66778 "records.ml" 1124 66758 66787
+type(
+  string
+)
+"records.ml" 1125 66788 66802 "records.ml" 1125 66788 66804
+type(
+  unit
+)
+"records.ml" 1125 66788 66808 "records.ml" 1125 66788 66825
+type(
+  API.ref_SR -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1125 66788 66827 "records.ml" 1125 66788 66828
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1125 66788 66829 "records.ml" 1125 66788 66831
+type(
+  unit
+)
+"records.ml" 1125 66788 66826 "records.ml" 1125 66788 66832
+type(
+  API.vDI_t
+)
+"records.ml" 1125 66788 66826 "records.ml" 1125 66788 66843
+type(
+  API.ref_SR
+)
+"records.ml" 1125 66788 66808 "records.ml" 1125 66788 66843
+type(
+  string
+)
+"records.ml" 1125 66788 66797 "records.ml" 1125 66788 66844
+type(
+  unit -> string
+)
+"records.ml" 1125 66788 66845 "records.ml" 1125 66788 66847
+type(
+  unit
+)
+"records.ml" 1124 66758 66761 "records.ml" 1125 66788 66847
+type(
+  field
+)
+"records.ml" 1126 66849 66852 "records.ml" 1126 66849 66862
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1126 66849 66869 "records.ml" 1126 66849 66884
+type(
+  string
+)
+"records.ml" 1127 66885 66899 "records.ml" 1127 66885 66901
+type(
+  unit
+)
+"records.ml" 1127 66885 66905 "records.ml" 1127 66885 66922
+type(
+  API.ref_SR -> string
+)
+ident(
+  int_ref get_name_from_ref "records.ml" 103 3658 3662 "records.ml" 103 3658 3679
+)
+"records.ml" 1127 66885 66924 "records.ml" 1127 66885 66925
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1127 66885 66926 "records.ml" 1127 66885 66928
+type(
+  unit
+)
+"records.ml" 1127 66885 66923 "records.ml" 1127 66885 66929
+type(
+  API.vDI_t
+)
+"records.ml" 1127 66885 66923 "records.ml" 1127 66885 66940
+type(
+  API.ref_SR
+)
+"records.ml" 1127 66885 66905 "records.ml" 1127 66885 66940
+type(
+  string
+)
+"records.ml" 1127 66885 66894 "records.ml" 1127 66885 66941
+type(
+  unit -> string
+)
+"records.ml" 1127 66885 66942 "records.ml" 1127 66885 66944
+type(
+  unit
+)
+"records.ml" 1126 66849 66852 "records.ml" 1127 66885 66944
+type(
+  field
+)
+"records.ml" 1128 66946 66949 "records.ml" 1128 66946 66959
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1128 66946 66966 "records.ml" 1128 66946 66977
+type(
+  string
+)
+"records.ml" 1129 66978 66992 "records.ml" 1129 66978 66994
+type(
+  unit
+)
+"records.ml" 1129 66978 66998 "records.ml" 1129 66978 67011
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1129 66978 67012 "records.ml" 1129 66978 67016
+type(
+  string
+)
+"records.ml" 1129 66978 67018 "records.ml" 1129 66978 67026
+type(
+  ([ `VBD ] Ref.t -> string) -> API.ref_VBD_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1129 66978 67027 "records.ml" 1129 66978 67044
+type(
+  [ `VBD ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1129 66978 67046 "records.ml" 1129 66978 67047
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1129 66978 67048 "records.ml" 1129 66978 67050
+type(
+  unit
+)
+"records.ml" 1129 66978 67045 "records.ml" 1129 66978 67051
+type(
+  API.vDI_t
+)
+"records.ml" 1129 66978 67045 "records.ml" 1129 66978 67064
+type(
+  API.ref_VBD_set
+)
+"records.ml" 1129 66978 67017 "records.ml" 1129 66978 67065
+type(
+  string list
+)
+"records.ml" 1129 66978 66998 "records.ml" 1129 66978 67065
+type(
+  string
+)
+"records.ml" 1129 66978 66987 "records.ml" 1129 66978 67066
+type(
+  unit -> string
+)
+"records.ml" 1130 67067 67085 "records.ml" 1130 67067 67087
+type(
+  unit
+)
+"records.ml" 1130 67067 67091 "records.ml" 1130 67067 67099
+type(
+  ([ `VBD ] Ref.t -> string) -> API.ref_VBD_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1130 67067 67100 "records.ml" 1130 67067 67117
+type(
+  [ `VBD ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1130 67067 67119 "records.ml" 1130 67067 67120
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1130 67067 67121 "records.ml" 1130 67067 67123
+type(
+  unit
+)
+"records.ml" 1130 67067 67118 "records.ml" 1130 67067 67124
+type(
+  API.vDI_t
+)
+"records.ml" 1130 67067 67118 "records.ml" 1130 67067 67137
+type(
+  API.ref_VBD_set
+)
+"records.ml" 1130 67067 67091 "records.ml" 1130 67067 67137
+type(
+  string list
+)
+"records.ml" 1130 67067 67080 "records.ml" 1130 67067 67138
+type(
+  unit -> string list
+)
+"records.ml" 1130 67067 67139 "records.ml" 1130 67067 67141
+type(
+  unit
+)
+"records.ml" 1128 66946 66949 "records.ml" 1130 67067 67141
+type(
+  field
+)
+"records.ml" 1131 67143 67146 "records.ml" 1131 67143 67156
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1131 67143 67163 "records.ml" 1131 67143 67180
+type(
+  string
+)
+"records.ml" 1132 67181 67195 "records.ml" 1132 67181 67197
+type(
+  unit
+)
+"records.ml" 1132 67181 67201 "records.ml" 1132 67181 67214
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1132 67181 67215 "records.ml" 1132 67181 67219
+type(
+  string
+)
+"records.ml" 1132 67181 67221 "records.ml" 1132 67181 67229
+type(
+  ([ `crashdump ] Ref.t -> string) -> API.ref_crashdump_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1132 67181 67230 "records.ml" 1132 67181 67247
+type(
+  [ `crashdump ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1132 67181 67249 "records.ml" 1132 67181 67250
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1132 67181 67251 "records.ml" 1132 67181 67253
+type(
+  unit
+)
+"records.ml" 1132 67181 67248 "records.ml" 1132 67181 67254
+type(
+  API.vDI_t
+)
+"records.ml" 1132 67181 67248 "records.ml" 1132 67181 67274
+type(
+  API.ref_crashdump_set
+)
+"records.ml" 1132 67181 67220 "records.ml" 1132 67181 67275
+type(
+  string list
+)
+"records.ml" 1132 67181 67201 "records.ml" 1132 67181 67275
+type(
+  string
+)
+"records.ml" 1132 67181 67190 "records.ml" 1132 67181 67276
+type(
+  unit -> string
+)
+"records.ml" 1133 67277 67295 "records.ml" 1133 67277 67297
+type(
+  unit
+)
+"records.ml" 1133 67277 67301 "records.ml" 1133 67277 67309
+type(
+  ([ `crashdump ] Ref.t -> string) -> API.ref_crashdump_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1133 67277 67310 "records.ml" 1133 67277 67327
+type(
+  [ `crashdump ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1133 67277 67329 "records.ml" 1133 67277 67330
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1133 67277 67331 "records.ml" 1133 67277 67333
+type(
+  unit
+)
+"records.ml" 1133 67277 67328 "records.ml" 1133 67277 67334
+type(
+  API.vDI_t
+)
+"records.ml" 1133 67277 67328 "records.ml" 1133 67277 67354
+type(
+  API.ref_crashdump_set
+)
+"records.ml" 1133 67277 67301 "records.ml" 1133 67277 67354
+type(
+  string list
+)
+"records.ml" 1133 67277 67290 "records.ml" 1133 67277 67355
+type(
+  unit -> string list
+)
+"records.ml" 1133 67277 67356 "records.ml" 1133 67277 67358
+type(
+  unit
+)
+"records.ml" 1131 67143 67146 "records.ml" 1133 67277 67358
+type(
+  field
+)
+"records.ml" 1134 67360 67363 "records.ml" 1134 67360 67373
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1134 67360 67380 "records.ml" 1134 67360 67394
+type(
+  string
+)
+"records.ml" 1134 67360 67405 "records.ml" 1134 67360 67407
+type(
+  unit
+)
+"records.ml" 1134 67360 67411 "records.ml" 1134 67360 67426
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 1134 67360 67428 "records.ml" 1134 67360 67429
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1134 67360 67430 "records.ml" 1134 67360 67432
+type(
+  unit
+)
+"records.ml" 1134 67360 67427 "records.ml" 1134 67360 67433
+type(
+  API.vDI_t
+)
+"records.ml" 1134 67360 67427 "records.ml" 1134 67360 67454
+type(
+  int64
+)
+"records.ml" 1134 67360 67411 "records.ml" 1134 67360 67454
+type(
+  string
+)
+"records.ml" 1134 67360 67400 "records.ml" 1134 67360 67455
+type(
+  unit -> string
+)
+"records.ml" 1134 67360 67456 "records.ml" 1134 67360 67458
+type(
+  unit
+)
+"records.ml" 1134 67360 67363 "records.ml" 1134 67360 67458
+type(
+  field
+)
+"records.ml" 1135 67460 67463 "records.ml" 1135 67460 67473
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1135 67460 67480 "records.ml" 1135 67460 67502
+type(
+  string
+)
+"records.ml" 1135 67460 67513 "records.ml" 1135 67460 67515
+type(
+  unit
+)
+"records.ml" 1135 67460 67519 "records.ml" 1135 67460 67534
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 1135 67460 67536 "records.ml" 1135 67460 67537
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1135 67460 67538 "records.ml" 1135 67460 67540
+type(
+  unit
+)
+"records.ml" 1135 67460 67535 "records.ml" 1135 67460 67541
+type(
+  API.vDI_t
+)
+"records.ml" 1135 67460 67535 "records.ml" 1135 67460 67570
+type(
+  int64
+)
+"records.ml" 1135 67460 67519 "records.ml" 1135 67460 67570
+type(
+  string
+)
+"records.ml" 1135 67460 67508 "records.ml" 1135 67460 67571
+type(
+  unit -> string
+)
+"records.ml" 1135 67460 67572 "records.ml" 1135 67460 67574
+type(
+  unit
+)
+"records.ml" 1135 67460 67463 "records.ml" 1135 67460 67574
+type(
+  field
+)
+"records.ml" 1136 67576 67579 "records.ml" 1136 67576 67589
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1136 67576 67596 "records.ml" 1136 67576 67606
+type(
+  string
+)
+"records.ml" 1136 67576 67617 "records.ml" 1136 67576 67619
+type(
+  unit
+)
+"records.ml" 1136 67576 67624 "records.ml" 1136 67576 67625
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1136 67576 67626 "records.ml" 1136 67576 67628
+type(
+  unit
+)
+"records.ml" 1136 67576 67623 "records.ml" 1136 67576 67629
+type(
+  API.vDI_t
+)
+"records.ml" 1136 67576 67623 "records.ml" 1136 67576 67646
+type(
+  string
+)
+"records.ml" 1136 67576 67612 "records.ml" 1136 67576 67647
+type(
+  unit -> string
+)
+"records.ml" 1136 67576 67648 "records.ml" 1136 67576 67650
+type(
+  unit
+)
+"records.ml" 1136 67576 67579 "records.ml" 1136 67576 67650
+type(
+  field
+)
+"records.ml" 1137 67652 67655 "records.ml" 1137 67652 67665
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1137 67652 67672 "records.ml" 1137 67652 67678
+type(
+  string
+)
+"records.ml" 1137 67652 67689 "records.ml" 1137 67652 67691
+type(
+  unit
+)
+"records.ml" 1137 67652 67695 "records.ml" 1137 67652 67725
+type(
+  API.vdi_type -> string
+)
+ident(
+  ext_ref Record_util.vdi_type_to_string
+)
+"records.ml" 1137 67652 67727 "records.ml" 1137 67652 67728
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1137 67652 67729 "records.ml" 1137 67652 67731
+type(
+  unit
+)
+"records.ml" 1137 67652 67726 "records.ml" 1137 67652 67732
+type(
+  API.vDI_t
+)
+"records.ml" 1137 67652 67726 "records.ml" 1137 67652 67745
+type(
+  API.vdi_type
+)
+"records.ml" 1137 67652 67695 "records.ml" 1137 67652 67745
+type(
+  string
+)
+"records.ml" 1137 67652 67684 "records.ml" 1137 67652 67746
+type(
+  unit -> string
+)
+"records.ml" 1137 67652 67747 "records.ml" 1137 67652 67749
+type(
+  unit
+)
+"records.ml" 1137 67652 67655 "records.ml" 1137 67652 67749
+type(
+  field
+)
+"records.ml" 1138 67751 67754 "records.ml" 1138 67751 67764
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1138 67751 67771 "records.ml" 1138 67751 67781
+type(
+  string
+)
+"records.ml" 1138 67751 67792 "records.ml" 1138 67751 67794
+type(
+  unit
+)
+"records.ml" 1138 67751 67798 "records.ml" 1138 67751 67812
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 1138 67751 67814 "records.ml" 1138 67751 67815
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1138 67751 67816 "records.ml" 1138 67751 67818
+type(
+  unit
+)
+"records.ml" 1138 67751 67813 "records.ml" 1138 67751 67819
+type(
+  API.vDI_t
+)
+"records.ml" 1138 67751 67813 "records.ml" 1138 67751 67836
+type(
+  bool
+)
+"records.ml" 1138 67751 67798 "records.ml" 1138 67751 67836
+type(
+  string
+)
+"records.ml" 1138 67751 67787 "records.ml" 1138 67751 67837
+type(
+  unit -> string
+)
+"records.ml" 1138 67751 67838 "records.ml" 1138 67751 67840
+type(
+  unit
+)
+"records.ml" 1138 67751 67754 "records.ml" 1138 67751 67840
+type(
+  field
+)
+"records.ml" 1139 67842 67845 "records.ml" 1139 67842 67855
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1139 67842 67862 "records.ml" 1139 67842 67873
+type(
+  string
+)
+"records.ml" 1139 67842 67884 "records.ml" 1139 67842 67886
+type(
+  unit
+)
+"records.ml" 1139 67842 67890 "records.ml" 1139 67842 67904
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 1139 67842 67906 "records.ml" 1139 67842 67907
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1139 67842 67908 "records.ml" 1139 67842 67910
+type(
+  unit
+)
+"records.ml" 1139 67842 67905 "records.ml" 1139 67842 67911
+type(
+  API.vDI_t
+)
+"records.ml" 1139 67842 67905 "records.ml" 1139 67842 67929
+type(
+  bool
+)
+"records.ml" 1139 67842 67890 "records.ml" 1139 67842 67929
+type(
+  string
+)
+"records.ml" 1139 67842 67879 "records.ml" 1139 67842 67930
+type(
+  unit -> string
+)
+"records.ml" 1139 67842 67931 "records.ml" 1139 67842 67933
+type(
+  unit
+)
+"records.ml" 1139 67842 67845 "records.ml" 1139 67842 67933
+type(
+  field
+)
+"records.ml" 1140 67935 67938 "records.ml" 1140 67935 67948
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1140 67935 67955 "records.ml" 1140 67935 67969
+type(
+  string
+)
+"records.ml" 1140 67935 67980 "records.ml" 1140 67935 67982
+type(
+  unit
+)
+"records.ml" 1140 67935 67986 "records.ml" 1140 67935 68000
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 1140 67935 68002 "records.ml" 1140 67935 68003
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1140 67935 68004 "records.ml" 1140 67935 68006
+type(
+  unit
+)
+"records.ml" 1140 67935 68001 "records.ml" 1140 67935 68007
+type(
+  API.vDI_t
+)
+"records.ml" 1140 67935 68001 "records.ml" 1140 67935 68028
+type(
+  bool
+)
+"records.ml" 1140 67935 67986 "records.ml" 1140 67935 68028
+type(
+  string
+)
+"records.ml" 1140 67935 67975 "records.ml" 1140 67935 68029
+type(
+  unit -> string
+)
+"records.ml" 1140 67935 68030 "records.ml" 1140 67935 68032
+type(
+  unit
+)
+"records.ml" 1140 67935 67938 "records.ml" 1140 67935 68032
+type(
+  field
+)
+"records.ml" 1141 68034 68037 "records.ml" 1141 68034 68047
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1141 68034 68054 "records.ml" 1141 68034 68063
+type(
+  string
+)
+"records.ml" 1141 68034 68074 "records.ml" 1141 68034 68076
+type(
+  unit
+)
+"records.ml" 1141 68034 68080 "records.ml" 1141 68034 68094
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 1141 68034 68096 "records.ml" 1141 68034 68097
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1141 68034 68098 "records.ml" 1141 68034 68100
+type(
+  unit
+)
+"records.ml" 1141 68034 68095 "records.ml" 1141 68034 68101
+type(
+  API.vDI_t
+)
+"records.ml" 1141 68034 68095 "records.ml" 1141 68034 68117
+type(
+  bool
+)
+"records.ml" 1141 68034 68080 "records.ml" 1141 68034 68117
+type(
+  string
+)
+"records.ml" 1141 68034 68069 "records.ml" 1141 68034 68118
+type(
+  unit -> string
+)
+"records.ml" 1141 68034 68119 "records.ml" 1141 68034 68121
+type(
+  unit
+)
+"records.ml" 1141 68034 68037 "records.ml" 1141 68034 68121
+type(
+  field
+)
+"records.ml" 1142 68123 68126 "records.ml" 1142 68123 68136
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1142 68123 68143 "records.ml" 1142 68123 68151
+type(
+  string
+)
+"records.ml" 1142 68123 68162 "records.ml" 1142 68123 68164
+type(
+  unit
+)
+"records.ml" 1142 68123 68168 "records.ml" 1142 68123 68185
+type(
+  API.ref_VDI -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1142 68123 68187 "records.ml" 1142 68123 68188
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1142 68123 68189 "records.ml" 1142 68123 68191
+type(
+  unit
+)
+"records.ml" 1142 68123 68186 "records.ml" 1142 68123 68192
+type(
+  API.vDI_t
+)
+"records.ml" 1142 68123 68186 "records.ml" 1142 68123 68207
+type(
+  API.ref_VDI
+)
+"records.ml" 1142 68123 68168 "records.ml" 1142 68123 68207
+type(
+  string
+)
+"records.ml" 1142 68123 68157 "records.ml" 1142 68123 68208
+type(
+  unit -> string
+)
+"records.ml" 1142 68123 68209 "records.ml" 1142 68123 68211
+type(
+  unit
+)
+"records.ml" 1142 68123 68126 "records.ml" 1142 68123 68211
+type(
+  field
+)
+"records.ml" 1143 68213 68216 "records.ml" 1143 68213 68226
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1143 68213 68233 "records.ml" 1143 68213 68242
+type(
+  string
+)
+"records.ml" 1143 68213 68253 "records.ml" 1143 68213 68255
+type(
+  unit
+)
+"records.ml" 1143 68213 68259 "records.ml" 1143 68213 68273
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 1143 68213 68275 "records.ml" 1143 68213 68276
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1143 68213 68277 "records.ml" 1143 68213 68279
+type(
+  unit
+)
+"records.ml" 1143 68213 68274 "records.ml" 1143 68213 68280
+type(
+  API.vDI_t
+)
+"records.ml" 1143 68213 68274 "records.ml" 1143 68213 68296
+type(
+  bool
+)
+"records.ml" 1143 68213 68259 "records.ml" 1143 68213 68296
+type(
+  string
+)
+"records.ml" 1143 68213 68248 "records.ml" 1143 68213 68297
+type(
+  unit -> string
+)
+"records.ml" 1143 68213 68298 "records.ml" 1143 68213 68300
+type(
+  unit
+)
+"records.ml" 1143 68213 68216 "records.ml" 1143 68213 68300
+type(
+  field
+)
+"records.ml" 1144 68302 68305 "records.ml" 1144 68302 68315
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1144 68302 68322 "records.ml" 1144 68302 68336
+type(
+  string
+)
+"records.ml" 1144 68302 68347 "records.ml" 1144 68302 68349
+type(
+  unit
+)
+"records.ml" 1144 68302 68353 "records.ml" 1144 68302 68379
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 1144 68302 68380 "records.ml" 1144 68302 68384
+type(
+  string
+)
+"records.ml" 1144 68302 68386 "records.ml" 1144 68302 68387
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1144 68302 68388 "records.ml" 1144 68302 68390
+type(
+  unit
+)
+"records.ml" 1144 68302 68385 "records.ml" 1144 68302 68391
+type(
+  API.vDI_t
+)
+"records.ml" 1144 68302 68385 "records.ml" 1144 68302 68412
+type(
+  API.string_to_string_map
+)
+"records.ml" 1144 68302 68353 "records.ml" 1144 68302 68412
+type(
+  string
+)
+"records.ml" 1144 68302 68342 "records.ml" 1144 68302 68413
+type(
+  unit -> string
+)
+"records.ml" 1145 68414 68435 "records.ml" 1145 68414 68436
+type(
+  string
+)
+ident(
+  def k "records.ml" 1145 68414 68437 "records.ml" 1145 68414 68495
+)
+"records.ml" 1145 68414 68437 "records.ml" 1145 68414 68438
+type(
+  string
+)
+ident(
+  def v "records.ml" 1145 68414 68442 "records.ml" 1145 68414 68495
+)
+"records.ml" 1145 68414 68442 "records.ml" 1145 68414 68472
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VDI -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VDI ).add_to_other_config
+)
+"records.ml" 1145 68414 68473 "records.ml" 1145 68414 68476
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1099 64986 65001 "records.ml" 1099 64986 65004
+)
+"records.ml" 1145 68414 68477 "records.ml" 1145 68414 68487
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1099 64986 65005 "records.ml" 1099 64986 65015
+)
+"records.ml" 1145 68414 68488 "records.ml" 1145 68414 68491
+type(
+  API.ref_VDI
+)
+ident(
+  int_ref vdi "records.ml" 1099 64986 65016 "records.ml" 1099 64986 65019
+)
+"records.ml" 1145 68414 68492 "records.ml" 1145 68414 68493
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 1145 68414 68435 "records.ml" 1145 68414 68436
+)
+"records.ml" 1145 68414 68494 "records.ml" 1145 68414 68495
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 1145 68414 68437 "records.ml" 1145 68414 68438
+)
+"records.ml" 1145 68414 68442 "records.ml" 1145 68414 68495
+type(
+  unit
+)
+"records.ml" 1145 68414 68430 "records.ml" 1145 68414 68496
+type(
+  string -> string -> unit
+)
+"records.ml" 1146 68497 68523 "records.ml" 1146 68497 68524
+type(
+  string
+)
+ident(
+  def k "records.ml" 1146 68497 68528 "records.ml" 1146 68497 68584
+)
+"records.ml" 1146 68497 68528 "records.ml" 1146 68497 68563
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VDI -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VDI ).remove_from_other_config
+)
+"records.ml" 1146 68497 68564 "records.ml" 1146 68497 68567
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1099 64986 65001 "records.ml" 1099 64986 65004
+)
+"records.ml" 1146 68497 68568 "records.ml" 1146 68497 68578
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1099 64986 65005 "records.ml" 1099 64986 65015
+)
+"records.ml" 1146 68497 68579 "records.ml" 1146 68497 68582
+type(
+  API.ref_VDI
+)
+ident(
+  int_ref vdi "records.ml" 1099 64986 65016 "records.ml" 1099 64986 65019
+)
+"records.ml" 1146 68497 68583 "records.ml" 1146 68497 68584
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 1146 68497 68523 "records.ml" 1146 68497 68524
+)
+"records.ml" 1146 68497 68528 "records.ml" 1146 68497 68584
+type(
+  unit
+)
+"records.ml" 1146 68497 68518 "records.ml" 1146 68497 68585
+type(
+  string -> unit
+)
+"records.ml" 1147 68586 68604 "records.ml" 1147 68586 68606
+type(
+  unit
+)
+"records.ml" 1147 68586 68611 "records.ml" 1147 68586 68612
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1147 68586 68613 "records.ml" 1147 68586 68615
+type(
+  unit
+)
+"records.ml" 1147 68586 68610 "records.ml" 1147 68586 68616
+type(
+  API.vDI_t
+)
+"records.ml" 1147 68586 68610 "records.ml" 1147 68586 68637
+type(
+  API.string_to_string_map
+)
+"records.ml" 1147 68586 68599 "records.ml" 1147 68586 68638
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 1147 68586 68639 "records.ml" 1147 68586 68641
+type(
+  unit
+)
+"records.ml" 1144 68302 68305 "records.ml" 1147 68586 68641
+type(
+  field
+)
+"records.ml" 1148 68643 68646 "records.ml" 1148 68643 68656
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1148 68643 68663 "records.ml" 1148 68643 68678
+type(
+  string
+)
+"records.ml" 1148 68643 68689 "records.ml" 1148 68643 68691
+type(
+  unit
+)
+"records.ml" 1148 68643 68695 "records.ml" 1148 68643 68721
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 1148 68643 68722 "records.ml" 1148 68643 68726
+type(
+  string
+)
+"records.ml" 1148 68643 68728 "records.ml" 1148 68643 68729
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1148 68643 68730 "records.ml" 1148 68643 68732
+type(
+  unit
+)
+"records.ml" 1148 68643 68727 "records.ml" 1148 68643 68733
+type(
+  API.vDI_t
+)
+"records.ml" 1148 68643 68727 "records.ml" 1148 68643 68755
+type(
+  API.string_to_string_map
+)
+"records.ml" 1148 68643 68695 "records.ml" 1148 68643 68755
+type(
+  string
+)
+"records.ml" 1148 68643 68684 "records.ml" 1148 68643 68756
+type(
+  unit -> string
+)
+"records.ml" 1149 68757 68775 "records.ml" 1149 68757 68777
+type(
+  unit
+)
+"records.ml" 1149 68757 68782 "records.ml" 1149 68757 68783
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1149 68757 68784 "records.ml" 1149 68757 68786
+type(
+  unit
+)
+"records.ml" 1149 68757 68781 "records.ml" 1149 68757 68787
+type(
+  API.vDI_t
+)
+"records.ml" 1149 68757 68781 "records.ml" 1149 68757 68809
+type(
+  API.string_to_string_map
+)
+"records.ml" 1149 68757 68770 "records.ml" 1149 68757 68810
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 1149 68757 68811 "records.ml" 1149 68757 68813
+type(
+  unit
+)
+"records.ml" 1148 68643 68646 "records.ml" 1149 68757 68813
+type(
+  field
+)
+"records.ml" 1150 68815 68818 "records.ml" 1150 68815 68828
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1150 68815 68835 "records.ml" 1150 68815 68846
+type(
+  string
+)
+"records.ml" 1150 68815 68857 "records.ml" 1150 68815 68859
+type(
+  unit
+)
+"records.ml" 1150 68815 68863 "records.ml" 1150 68815 68889
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 1150 68815 68890 "records.ml" 1150 68815 68894
+type(
+  string
+)
+"records.ml" 1150 68815 68896 "records.ml" 1150 68815 68897
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1150 68815 68898 "records.ml" 1150 68815 68900
+type(
+  unit
+)
+"records.ml" 1150 68815 68895 "records.ml" 1150 68815 68901
+type(
+  API.vDI_t
+)
+"records.ml" 1150 68815 68895 "records.ml" 1150 68815 68919
+type(
+  API.string_to_string_map
+)
+"records.ml" 1150 68815 68863 "records.ml" 1150 68815 68919
+type(
+  string
+)
+"records.ml" 1150 68815 68852 "records.ml" 1150 68815 68920
+type(
+  unit -> string
+)
+"records.ml" 1151 68921 68939 "records.ml" 1151 68921 68941
+type(
+  unit
+)
+"records.ml" 1151 68921 68946 "records.ml" 1151 68921 68947
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1151 68921 68948 "records.ml" 1151 68921 68950
+type(
+  unit
+)
+"records.ml" 1151 68921 68945 "records.ml" 1151 68921 68951
+type(
+  API.vDI_t
+)
+"records.ml" 1151 68921 68945 "records.ml" 1151 68921 68969
+type(
+  API.string_to_string_map
+)
+"records.ml" 1151 68921 68934 "records.ml" 1151 68921 68970
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 1151 68921 68971 "records.ml" 1151 68921 68973
+type(
+  unit
+)
+"records.ml" 1150 68815 68818 "records.ml" 1151 68921 68973
+type(
+  field
+)
+"records.ml" 1152 68975 68978 "records.ml" 1152 68975 68988
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1152 68975 68995 "records.ml" 1152 68975 69004
+type(
+  string
+)
+"records.ml" 1152 68975 69015 "records.ml" 1152 68975 69017
+type(
+  unit
+)
+"records.ml" 1152 68975 69021 "records.ml" 1152 68975 69050
+type(
+  API.on_boot -> string
+)
+ident(
+  ext_ref Record_util.on_boot_to_string
+)
+"records.ml" 1152 68975 69052 "records.ml" 1152 68975 69053
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1152 68975 69054 "records.ml" 1152 68975 69056
+type(
+  unit
+)
+"records.ml" 1152 68975 69051 "records.ml" 1152 68975 69057
+type(
+  API.vDI_t
+)
+"records.ml" 1152 68975 69051 "records.ml" 1152 68975 69073
+type(
+  API.on_boot
+)
+"records.ml" 1152 68975 69021 "records.ml" 1152 68975 69073
+type(
+  string
+)
+"records.ml" 1152 68975 69010 "records.ml" 1152 68975 69074
+type(
+  unit -> string
+)
+"records.ml" 1153 69075 69089 "records.ml" 1153 69075 69095
+type(
+  string
+)
+ident(
+  def onboot "records.ml" 1153 69075 69099 "records.ml" 1153 69075 69182
+)
+"records.ml" 1153 69075 69099 "records.ml" 1153 69075 69121
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VDI -> value:API.on_boot -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VDI ).set_on_boot
+)
+"records.ml" 1153 69075 69122 "records.ml" 1153 69075 69125
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1099 64986 65001 "records.ml" 1099 64986 65004
+)
+"records.ml" 1153 69075 69126 "records.ml" 1153 69075 69136
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1099 64986 65005 "records.ml" 1099 64986 65015
+)
+"records.ml" 1153 69075 69137 "records.ml" 1153 69075 69140
+type(
+  API.ref_VDI
+)
+ident(
+  int_ref vdi "records.ml" 1099 64986 65016 "records.ml" 1099 64986 65019
+)
+"records.ml" 1153 69075 69142 "records.ml" 1153 69075 69174
+type(
+  string -> API.on_boot
+)
+ident(
+  ext_ref Record_util.string_to_vdi_onboot
+)
+"records.ml" 1153 69075 69175 "records.ml" 1153 69075 69181
+type(
+  string
+)
+ident(
+  int_ref onboot "records.ml" 1153 69075 69089 "records.ml" 1153 69075 69095
+)
+"records.ml" 1153 69075 69141 "records.ml" 1153 69075 69182
+type(
+  API.on_boot
+)
+"records.ml" 1153 69075 69099 "records.ml" 1153 69075 69182
+type(
+  unit
+)
+"records.ml" 1153 69075 69084 "records.ml" 1153 69075 69183
+type(
+  string -> unit
+)
+"records.ml" 1153 69075 69184 "records.ml" 1153 69075 69186
+type(
+  unit
+)
+"records.ml" 1152 68975 68978 "records.ml" 1153 69075 69186
+type(
+  field
+)
+"records.ml" 1154 69188 69191 "records.ml" 1154 69188 69201
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1154 69188 69208 "records.ml" 1154 69188 69223
+type(
+  string
+)
+"records.ml" 1154 69188 69234 "records.ml" 1154 69188 69236
+type(
+  unit
+)
+"records.ml" 1154 69188 69240 "records.ml" 1154 69188 69254
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 1154 69188 69256 "records.ml" 1154 69188 69257
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1154 69188 69258 "records.ml" 1154 69188 69260
+type(
+  unit
+)
+"records.ml" 1154 69188 69255 "records.ml" 1154 69188 69261
+type(
+  API.vDI_t
+)
+"records.ml" 1154 69188 69255 "records.ml" 1154 69188 69283
+type(
+  bool
+)
+"records.ml" 1154 69188 69240 "records.ml" 1154 69188 69283
+type(
+  string
+)
+"records.ml" 1154 69188 69229 "records.ml" 1154 69188 69284
+type(
+  unit -> string
+)
+"records.ml" 1155 69285 69299 "records.ml" 1155 69285 69300
+type(
+  string
+)
+ident(
+  def b "records.ml" 1155 69285 69304 "records.ml" 1155 69285 69370
+)
+"records.ml" 1155 69285 69304 "records.ml" 1155 69285 69332
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VDI -> value:bool -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VDI ).set_allow_caching
+)
+"records.ml" 1155 69285 69333 "records.ml" 1155 69285 69336
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1099 64986 65001 "records.ml" 1099 64986 65004
+)
+"records.ml" 1155 69285 69337 "records.ml" 1155 69285 69347
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1099 64986 65005 "records.ml" 1099 64986 65015
+)
+"records.ml" 1155 69285 69348 "records.ml" 1155 69285 69351
+type(
+  API.ref_VDI
+)
+ident(
+  int_ref vdi "records.ml" 1099 64986 65016 "records.ml" 1099 64986 65019
+)
+"records.ml" 1155 69285 69353 "records.ml" 1155 69285 69367
+type(
+  string -> bool
+)
+ident(
+  ext_ref Pervasives.bool_of_string
+)
+"records.ml" 1155 69285 69368 "records.ml" 1155 69285 69369
+type(
+  string
+)
+ident(
+  int_ref b "records.ml" 1155 69285 69299 "records.ml" 1155 69285 69300
+)
+"records.ml" 1155 69285 69352 "records.ml" 1155 69285 69370
+type(
+  bool
+)
+"records.ml" 1155 69285 69304 "records.ml" 1155 69285 69370
+type(
+  unit
+)
+"records.ml" 1155 69285 69294 "records.ml" 1155 69285 69371
+type(
+  string -> unit
+)
+"records.ml" 1155 69285 69372 "records.ml" 1155 69285 69374
+type(
+  unit
+)
+"records.ml" 1154 69188 69191 "records.ml" 1155 69285 69374
+type(
+  field
+)
+"records.ml" 1156 69376 69379 "records.ml" 1156 69376 69389
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1156 69376 69396 "records.ml" 1156 69376 69413
+type(
+  string
+)
+"records.ml" 1156 69376 69424 "records.ml" 1156 69376 69426
+type(
+  unit
+)
+"records.ml" 1156 69376 69430 "records.ml" 1156 69376 69444
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 1156 69376 69446 "records.ml" 1156 69376 69447
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1156 69376 69448 "records.ml" 1156 69376 69450
+type(
+  unit
+)
+"records.ml" 1156 69376 69445 "records.ml" 1156 69376 69451
+type(
+  API.vDI_t
+)
+"records.ml" 1156 69376 69445 "records.ml" 1156 69376 69475
+type(
+  bool
+)
+"records.ml" 1156 69376 69430 "records.ml" 1156 69376 69475
+type(
+  string
+)
+"records.ml" 1156 69376 69419 "records.ml" 1156 69376 69476
+type(
+  unit -> string
+)
+"records.ml" 1156 69376 69477 "records.ml" 1156 69376 69479
+type(
+  unit
+)
+"records.ml" 1156 69376 69379 "records.ml" 1156 69376 69479
+type(
+  field
+)
+"records.ml" 1157 69481 69484 "records.ml" 1157 69481 69494
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1157 69481 69501 "records.ml" 1157 69481 69519
+type(
+  string
+)
+"records.ml" 1158 69520 69534 "records.ml" 1158 69520 69536
+type(
+  unit
+)
+"records.ml" 1159 69540 69549 "records.ml" 1159 69540 69559
+type(
+  [ `pool ] Ref.t
+)
+"records.ml" 1159 69540 69562 "records.ml" 1159 69540 69569
+type(
+  API.ref_pool_set -> [ `pool ] Ref.t
+)
+ident(
+  ext_ref List.hd
+)
+"records.ml" 1159 69540 69571 "records.ml" 1159 69540 69590
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> API.ref_pool_set
+)
+ident(
+  ext_ref Client.( Client ).( Pool ).get_all
+)
+"records.ml" 1159 69540 69592 "records.ml" 1159 69540 69595
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1099 64986 65001 "records.ml" 1099 64986 65004
+)
+"records.ml" 1159 69540 69597 "records.ml" 1159 69540 69607
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1099 64986 65005 "records.ml" 1099 64986 65015
+)
+"records.ml" 1159 69540 69570 "records.ml" 1159 69540 69608
+type(
+  API.ref_pool_set
+)
+"records.ml" 1159 69540 69562 "records.ml" 1159 69540 69608
+type(
+  [ `pool ] Ref.t
+)
+"records.ml" 1160 69612 69621 "records.ml" 1160 69612 69629
+type(
+  API.ref_pool
+)
+"records.ml" 1160 69612 69633 "records.ml" 1160 69612 69634
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1160 69612 69635 "records.ml" 1160 69612 69637
+type(
+  unit
+)
+"records.ml" 1160 69612 69632 "records.ml" 1160 69612 69638
+type(
+  API.vDI_t
+)
+"records.ml" 1160 69612 69632 "records.ml" 1160 69612 69663
+type(
+  API.ref_pool
+)
+"records.ml" 1161 69667 69675 "records.ml" 1161 69667 69685
+type(
+  API.ref_pool
+)
+ident(
+  int_ref local_pool "records.ml" 1159 69540 69549 "records.ml" 1159 69540 69559
+)
+"records.ml" 1161 69667 69686 "records.ml" 1161 69667 69687
+type(
+  API.ref_pool -> API.ref_pool -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"records.ml" 1161 69667 69688 "records.ml" 1161 69667 69696
+type(
+  API.ref_pool
+)
+ident(
+  int_ref vdi_pool "records.ml" 1160 69612 69621 "records.ml" 1160 69612 69629
+)
+"records.ml" 1161 69667 69675 "records.ml" 1161 69667 69696
+type(
+  bool
+)
+"records.ml" 1162 69702 69708 "records.ml" 1162 69702 69725
+type(
+  [ `pool ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1162 69702 69726 "records.ml" 1162 69702 69736
+type(
+  [ `pool ] Ref.t
+)
+ident(
+  int_ref local_pool "records.ml" 1159 69540 69549 "records.ml" 1159 69540 69559
+)
+"records.ml" 1162 69702 69708 "records.ml" 1162 69702 69736
+type(
+  string
+)
+"records.ml" 1164 69753 69765 "records.ml" 1164 69753 69799
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VDI -> string
+)
+ident(
+  ext_ref Client.( Client ).( VDI ).read_database_pool_uuid
+)
+"records.ml" 1164 69753 69801 "records.ml" 1164 69753 69804
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1099 64986 65001 "records.ml" 1099 64986 65004
+)
+"records.ml" 1164 69753 69806 "records.ml" 1164 69753 69816
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1099 64986 65005 "records.ml" 1099 64986 65015
+)
+"records.ml" 1164 69753 69823 "records.ml" 1164 69753 69826
+type(
+  API.ref_VDI
+)
+ident(
+  int_ref vdi "records.ml" 1099 64986 65016 "records.ml" 1099 64986 65019
+)
+"records.ml" 1164 69753 69765 "records.ml" 1164 69753 69826
+type(
+  string
+)
+"records.ml" 1165 69832 69840 "records.ml" 1165 69832 69842
+type(
+  string
+)
+"records.ml" 1165 69832 69846 "records.ml" 1165 69832 69849
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 1166 69850 69858 "records.ml" 1166 69850 69867
+type(
+  string
+)
+ident(
+  def pool_uuid "records.ml" 1166 69850 69871 "records.ml" 1166 69850 69880
+)
+"records.ml" 1166 69850 69871 "records.ml" 1166 69850 69880
+type(
+  string
+)
+ident(
+  int_ref pool_uuid "records.ml" 1166 69850 69858 "records.ml" 1166 69850 69867
+)
+"records.ml" 1163 69737 69747 "records.ml" 1167 69881 69889
+type(
+  string
+)
+"records.ml" 1161 69667 69672 "records.ml" 1167 69881 69889
+type(
+  string
+)
+"records.ml" 1160 69612 69617 "records.ml" 1167 69881 69889
+type(
+  string
+)
+"records.ml" 1159 69540 69545 "records.ml" 1167 69881 69889
+type(
+  string
+)
+"records.ml" 1158 69520 69529 "records.ml" 1167 69881 69890
+type(
+  unit -> string
+)
+"records.ml" 1167 69881 69891 "records.ml" 1167 69881 69893
+type(
+  unit
+)
+"records.ml" 1157 69481 69484 "records.ml" 1167 69881 69893
+type(
+  field
+)
+"records.ml" 1168 69895 69898 "records.ml" 1168 69895 69908
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> API.string_set) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1168 69895 69915 "records.ml" 1168 69895 69921
+type(
+  string
+)
+"records.ml" 1169 69922 69936 "records.ml" 1169 69922 69938
+type(
+  unit
+)
+"records.ml" 1169 69922 69942 "records.ml" 1169 69922 69955
+type(
+  string -> API.string_set -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1169 69922 69956 "records.ml" 1169 69922 69960
+type(
+  string
+)
+"records.ml" 1169 69922 69962 "records.ml" 1169 69922 69963
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1169 69922 69964 "records.ml" 1169 69922 69966
+type(
+  unit
+)
+"records.ml" 1169 69922 69961 "records.ml" 1169 69922 69967
+type(
+  API.vDI_t
+)
+"records.ml" 1169 69922 69961 "records.ml" 1169 69922 69980
+type(
+  API.string_set
+)
+"records.ml" 1169 69922 69942 "records.ml" 1169 69922 69980
+type(
+  string
+)
+"records.ml" 1169 69922 69931 "records.ml" 1169 69922 69981
+type(
+  unit -> string
+)
+"records.ml" 1170 69982 70000 "records.ml" 1170 69982 70002
+type(
+  unit
+)
+"records.ml" 1170 69982 70007 "records.ml" 1170 69982 70008
+type(
+  unit -> API.vDI_t
+)
+ident(
+  int_ref x "records.ml" 1103 65163 65168 "records.ml" 1103 65163 65169
+)
+"records.ml" 1170 69982 70009 "records.ml" 1170 69982 70011
+type(
+  unit
+)
+"records.ml" 1170 69982 70006 "records.ml" 1170 69982 70012
+type(
+  API.vDI_t
+)
+"records.ml" 1170 69982 70006 "records.ml" 1170 69982 70025
+type(
+  API.string_set
+)
+"records.ml" 1170 69982 69995 "records.ml" 1170 69982 70026
+type(
+  unit -> API.string_set
+)
+"records.ml" 1171 70027 70048 "records.ml" 1171 70027 70051
+type(
+  string
+)
+ident(
+  def tag "records.ml" 1171 70027 70055 "records.ml" 1171 70027 70097
+)
+"records.ml" 1171 70027 70055 "records.ml" 1171 70027 70074
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VDI -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VDI ).add_tags
+)
+"records.ml" 1171 70027 70075 "records.ml" 1171 70027 70078
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1099 64986 65001 "records.ml" 1099 64986 65004
+)
+"records.ml" 1171 70027 70079 "records.ml" 1171 70027 70089
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1099 64986 65005 "records.ml" 1099 64986 65015
+)
+"records.ml" 1171 70027 70090 "records.ml" 1171 70027 70093
+type(
+  API.ref_VDI
+)
+ident(
+  int_ref vdi "records.ml" 1099 64986 65016 "records.ml" 1099 64986 65019
+)
+"records.ml" 1171 70027 70094 "records.ml" 1171 70027 70097
+type(
+  string
+)
+ident(
+  int_ref tag "records.ml" 1171 70027 70048 "records.ml" 1171 70027 70051
+)
+"records.ml" 1171 70027 70055 "records.ml" 1171 70027 70097
+type(
+  unit
+)
+"records.ml" 1171 70027 70043 "records.ml" 1171 70027 70098
+type(
+  string -> unit
+)
+"records.ml" 1172 70099 70125 "records.ml" 1172 70099 70128
+type(
+  string
+)
+ident(
+  def tag "records.ml" 1172 70099 70132 "records.ml" 1172 70099 70177
+)
+"records.ml" 1172 70099 70132 "records.ml" 1172 70099 70154
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VDI -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VDI ).remove_tags
+)
+"records.ml" 1172 70099 70155 "records.ml" 1172 70099 70158
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1099 64986 65001 "records.ml" 1099 64986 65004
+)
+"records.ml" 1172 70099 70159 "records.ml" 1172 70099 70169
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1099 64986 65005 "records.ml" 1099 64986 65015
+)
+"records.ml" 1172 70099 70170 "records.ml" 1172 70099 70173
+type(
+  API.ref_VDI
+)
+ident(
+  int_ref vdi "records.ml" 1099 64986 65016 "records.ml" 1099 64986 65019
+)
+"records.ml" 1172 70099 70174 "records.ml" 1172 70099 70177
+type(
+  string
+)
+ident(
+  int_ref tag "records.ml" 1172 70099 70125 "records.ml" 1172 70099 70128
+)
+"records.ml" 1172 70099 70132 "records.ml" 1172 70099 70177
+type(
+  unit
+)
+"records.ml" 1172 70099 70120 "records.ml" 1172 70099 70178
+type(
+  string -> unit
+)
+"records.ml" 1172 70099 70179 "records.ml" 1172 70099 70181
+type(
+  unit
+)
+"records.ml" 1168 69895 69898 "records.ml" 1172 70099 70181
+type(
+  field
+)
+"records.ml" 1108 65348 65360 "records.ml" 1173 70183 70186
+type(
+  field list
+)
+"records.ml" 1104 65193 65194 "records.ml" 1173 70183 70187
+type(
+  ([ `VDI ], API.vDI_t) record
+)
+"records.ml" 1103 65163 65164 "records.ml" 1173 70183 70187
+type(
+  ([ `VDI ], API.vDI_t) record
+)
+"records.ml" 1102 65129 65130 "records.ml" 1173 70183 70187
+type(
+  ([ `VDI ], API.vDI_t) record
+)
+"records.ml" 1101 65045 65046 "records.ml" 1173 70183 70187
+type(
+  ([ `VDI ], API.vDI_t) record
+)
+"records.ml" 1100 65022 65023 "records.ml" 1173 70183 70187
+type(
+  ([ `VDI ], API.vDI_t) record
+)
+"records.ml" 1175 70189 70193 "records.ml" 1175 70189 70203
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_VBD -> ([ `VBD ], API.vBD_t) record
+)
+ident(
+  def vbd_record "records.ml" 1240 75071 75071 --
+)
+"records.ml" 1175 70189 70204 "records.ml" 1175 70189 70207
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 1175 70189 70208 "records.ml" 1238 75065 75069
+)
+"records.ml" 1175 70189 70208 "records.ml" 1175 70189 70218
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 1175 70189 70219 "records.ml" 1238 75065 75069
+)
+"records.ml" 1175 70189 70219 "records.ml" 1175 70189 70222
+type(
+  API.ref_VBD
+)
+ident(
+  def vbd "records.ml" 1176 70225 70227 "records.ml" 1238 75065 75069
+)
+"records.ml" 1176 70225 70231 "records.ml" 1176 70225 70235
+type(
+  API.ref_VBD ref
+)
+"records.ml" 1176 70225 70238 "records.ml" 1176 70225 70241
+type(
+  API.ref_VBD -> API.ref_VBD ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1176 70225 70242 "records.ml" 1176 70225 70245
+type(
+  API.ref_VBD
+)
+ident(
+  int_ref vbd "records.ml" 1175 70189 70219 "records.ml" 1175 70189 70222
+)
+"records.ml" 1176 70225 70238 "records.ml" 1176 70225 70245
+type(
+  API.ref_VBD ref
+)
+"records.ml" 1177 70249 70255 "records.ml" 1177 70249 70267
+type(
+  API.vBD_t lzy
+)
+"records.ml" 1177 70249 70281 "records.ml" 1177 70249 70283
+type(
+  unit
+)
+"records.ml" 1177 70249 70287 "records.ml" 1177 70249 70308
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VBD -> API.vBD_t
+)
+ident(
+  ext_ref Client.( Client ).( VBD ).get_record
+)
+"records.ml" 1177 70249 70309 "records.ml" 1177 70249 70312
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1175 70189 70204 "records.ml" 1175 70189 70207
+)
+"records.ml" 1177 70249 70313 "records.ml" 1177 70249 70323
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1175 70189 70208 "records.ml" 1175 70189 70218
+)
+"records.ml" 1177 70249 70324 "records.ml" 1177 70249 70325
+type(
+  API.ref_VBD ref -> API.ref_VBD
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1177 70249 70325 "records.ml" 1177 70249 70329
+type(
+  API.ref_VBD ref
+)
+ident(
+  int_ref _ref "records.ml" 1176 70225 70231 "records.ml" 1176 70225 70235
+)
+"records.ml" 1177 70249 70324 "records.ml" 1177 70249 70329
+type(
+  API.ref_VBD
+)
+"records.ml" 1177 70249 70287 "records.ml" 1177 70249 70329
+type(
+  API.vBD_t
+)
+"records.ml" 1177 70249 70276 "records.ml" 1177 70249 70330
+type(
+  unit -> API.vBD_t
+)
+"records.ml" 1177 70249 70270 "records.ml" 1177 70249 70330
+type(
+  API.vBD_t lzy
+)
+"records.ml" 1178 70334 70340 "records.ml" 1178 70334 70346
+type(
+  API.vBD_t lzy ref
+)
+"records.ml" 1178 70334 70349 "records.ml" 1178 70334 70352
+type(
+  API.vBD_t lzy -> API.vBD_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1178 70334 70353 "records.ml" 1178 70334 70365
+type(
+  API.vBD_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1177 70249 70255 "records.ml" 1177 70249 70267
+)
+"records.ml" 1178 70334 70349 "records.ml" 1178 70334 70365
+type(
+  API.vBD_t lzy ref
+)
+"records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+type(
+  unit -> API.vBD_t
+)
+"records.ml" 1179 70369 70377 "records.ml" 1179 70369 70379
+type(
+  unit
+)
+"records.ml" 1179 70369 70382 "records.ml" 1179 70369 70389
+type(
+  API.vBD_t lzy ref -> API.vBD_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 1179 70369 70390 "records.ml" 1179 70369 70396
+type(
+  API.vBD_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1178 70334 70340 "records.ml" 1178 70334 70346
+)
+"records.ml" 1179 70369 70382 "records.ml" 1179 70369 70396
+type(
+  API.vBD_t
+)
+"records.ml" 1180 70400 70416 "records.ml" 1180 70400 70417
+type(
+  API.ref_VBD
+)
+ident(
+  def r "records.ml" 1180 70400 70421 "records.ml" 1180 70400 70454
+)
+"records.ml" 1180 70400 70421 "records.ml" 1180 70400 70425
+type(
+  API.ref_VBD ref
+)
+ident(
+  int_ref _ref "records.ml" 1176 70225 70231 "records.ml" 1176 70225 70235
+)
+"records.ml" 1180 70400 70426 "records.ml" 1180 70400 70428
+type(
+  API.ref_VBD ref -> API.ref_VBD -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1180 70400 70429 "records.ml" 1180 70400 70430
+type(
+  API.ref_VBD
+)
+ident(
+  int_ref r "records.ml" 1180 70400 70416 "records.ml" 1180 70400 70417
+)
+"records.ml" 1180 70400 70421 "records.ml" 1180 70400 70430
+type(
+  unit
+)
+"records.ml" 1180 70400 70432 "records.ml" 1180 70400 70438
+type(
+  API.vBD_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1178 70334 70340 "records.ml" 1178 70334 70346
+)
+"records.ml" 1180 70400 70439 "records.ml" 1180 70400 70441
+type(
+  API.vBD_t lzy ref -> API.vBD_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1180 70400 70442 "records.ml" 1180 70400 70454
+type(
+  API.vBD_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1177 70249 70255 "records.ml" 1177 70249 70267
+)
+"records.ml" 1180 70400 70432 "records.ml" 1180 70400 70454
+type(
+  unit
+)
+"records.ml" 1180 70400 70421 "records.ml" 1180 70400 70454
+type(
+  unit
+)
+"records.ml" 1180 70400 70411 "records.ml" 1180 70400 70456
+type(
+  API.ref_VBD -> unit
+)
+"records.ml" 1181 70458 70478 "records.ml" 1181 70458 70479
+type(
+  API.ref_VBD
+)
+ident(
+  def a "records.ml" 1181 70458 70486 "records.ml" 1181 70458 70512
+)
+"records.ml" 1181 70458 70480 "records.ml" 1181 70458 70481
+type(
+  API.vBD_t
+)
+ident(
+  def b "records.ml" 1181 70458 70486 "records.ml" 1181 70458 70512
+)
+"records.ml" 1181 70458 70477 "records.ml" 1181 70458 70482
+type(
+  API.ref_VBD * API.vBD_t
+)
+"records.ml" 1181 70458 70486 "records.ml" 1181 70458 70490
+type(
+  API.ref_VBD ref
+)
+ident(
+  int_ref _ref "records.ml" 1176 70225 70231 "records.ml" 1176 70225 70235
+)
+"records.ml" 1181 70458 70491 "records.ml" 1181 70458 70493
+type(
+  API.ref_VBD ref -> API.ref_VBD -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1181 70458 70494 "records.ml" 1181 70458 70495
+type(
+  API.ref_VBD
+)
+ident(
+  int_ref a "records.ml" 1181 70458 70478 "records.ml" 1181 70458 70479
+)
+"records.ml" 1181 70458 70486 "records.ml" 1181 70458 70495
+type(
+  unit
+)
+"records.ml" 1181 70458 70497 "records.ml" 1181 70458 70503
+type(
+  API.vBD_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1178 70334 70340 "records.ml" 1178 70334 70346
+)
+"records.ml" 1181 70458 70504 "records.ml" 1181 70458 70506
+type(
+  API.vBD_t lzy ref -> API.vBD_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1181 70458 70511 "records.ml" 1181 70458 70512
+type(
+  API.vBD_t
+)
+ident(
+  int_ref b "records.ml" 1181 70458 70480 "records.ml" 1181 70458 70481
+)
+"records.ml" 1181 70458 70507 "records.ml" 1181 70458 70512
+type(
+  API.vBD_t lzy
+)
+"records.ml" 1181 70458 70497 "records.ml" 1181 70458 70512
+type(
+  unit
+)
+"records.ml" 1181 70458 70486 "records.ml" 1181 70458 70512
+type(
+  unit
+)
+"records.ml" 1181 70458 70472 "records.ml" 1181 70458 70513
+type(
+  API.ref_VBD * API.vBD_t -> unit
+)
+"records.ml" 1182 70515 70526 "records.ml" 1182 70515 70527
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1183 70529 70545 "records.ml" 1183 70529 70547
+type(
+  unit
+)
+"records.ml" 1183 70529 70551 "records.ml" 1183 70529 70552
+type(
+  API.ref_VBD ref -> API.ref_VBD
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1183 70529 70552 "records.ml" 1183 70529 70556
+type(
+  API.ref_VBD ref
+)
+ident(
+  int_ref _ref "records.ml" 1176 70225 70231 "records.ml" 1176 70225 70235
+)
+"records.ml" 1183 70529 70551 "records.ml" 1183 70529 70556
+type(
+  API.ref_VBD
+)
+"records.ml" 1183 70529 70540 "records.ml" 1183 70529 70557
+type(
+  unit -> API.ref_VBD
+)
+"records.ml" 1186 70576 70580 "records.ml" 1186 70576 70590
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1186 70576 70597 "records.ml" 1186 70576 70603
+type(
+  string
+)
+"records.ml" 1186 70576 70614 "records.ml" 1186 70576 70616
+type(
+  unit
+)
+"records.ml" 1186 70576 70621 "records.ml" 1186 70576 70622
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1186 70576 70623 "records.ml" 1186 70576 70625
+type(
+  unit
+)
+"records.ml" 1186 70576 70620 "records.ml" 1186 70576 70626
+type(
+  API.vBD_t
+)
+"records.ml" 1186 70576 70620 "records.ml" 1186 70576 70639
+type(
+  string
+)
+"records.ml" 1186 70576 70609 "records.ml" 1186 70576 70640
+type(
+  unit -> string
+)
+"records.ml" 1186 70576 70641 "records.ml" 1186 70576 70643
+type(
+  unit
+)
+"records.ml" 1186 70576 70580 "records.ml" 1186 70576 70643
+type(
+  field
+)
+"records.ml" 1187 70645 70649 "records.ml" 1187 70645 70659
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1187 70645 70666 "records.ml" 1187 70645 70675
+type(
+  string
+)
+"records.ml" 1188 70676 70692 "records.ml" 1188 70676 70694
+type(
+  unit
+)
+"records.ml" 1188 70676 70698 "records.ml" 1188 70676 70715
+type(
+  API.ref_VM -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1188 70676 70717 "records.ml" 1188 70676 70718
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1188 70676 70719 "records.ml" 1188 70676 70721
+type(
+  unit
+)
+"records.ml" 1188 70676 70716 "records.ml" 1188 70676 70722
+type(
+  API.vBD_t
+)
+"records.ml" 1188 70676 70716 "records.ml" 1188 70676 70733
+type(
+  API.ref_VM
+)
+"records.ml" 1188 70676 70698 "records.ml" 1188 70676 70733
+type(
+  string
+)
+"records.ml" 1188 70676 70687 "records.ml" 1188 70676 70734
+type(
+  unit -> string
+)
+"records.ml" 1188 70676 70735 "records.ml" 1188 70676 70737
+type(
+  unit
+)
+"records.ml" 1187 70645 70649 "records.ml" 1188 70676 70737
+type(
+  field
+)
+"records.ml" 1189 70739 70743 "records.ml" 1189 70739 70753
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1189 70739 70760 "records.ml" 1189 70739 70775
+type(
+  string
+)
+"records.ml" 1190 70776 70792 "records.ml" 1190 70776 70794
+type(
+  unit
+)
+"records.ml" 1190 70776 70798 "records.ml" 1190 70776 70815
+type(
+  API.ref_VM -> string
+)
+ident(
+  int_ref get_name_from_ref "records.ml" 103 3658 3662 "records.ml" 103 3658 3679
+)
+"records.ml" 1190 70776 70817 "records.ml" 1190 70776 70818
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1190 70776 70819 "records.ml" 1190 70776 70821
+type(
+  unit
+)
+"records.ml" 1190 70776 70816 "records.ml" 1190 70776 70822
+type(
+  API.vBD_t
+)
+"records.ml" 1190 70776 70816 "records.ml" 1190 70776 70833
+type(
+  API.ref_VM
+)
+"records.ml" 1190 70776 70798 "records.ml" 1190 70776 70833
+type(
+  string
+)
+"records.ml" 1190 70776 70787 "records.ml" 1190 70776 70834
+type(
+  unit -> string
+)
+"records.ml" 1190 70776 70835 "records.ml" 1190 70776 70837
+type(
+  unit
+)
+"records.ml" 1189 70739 70743 "records.ml" 1190 70776 70837
+type(
+  field
+)
+"records.ml" 1191 70839 70843 "records.ml" 1191 70839 70853
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1191 70839 70860 "records.ml" 1191 70839 70870
+type(
+  string
+)
+"records.ml" 1191 70839 70881 "records.ml" 1191 70839 70883
+type(
+  unit
+)
+"records.ml" 1191 70839 70887 "records.ml" 1191 70839 70904
+type(
+  API.ref_VDI -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1191 70839 70906 "records.ml" 1191 70839 70907
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1191 70839 70908 "records.ml" 1191 70839 70910
+type(
+  unit
+)
+"records.ml" 1191 70839 70905 "records.ml" 1191 70839 70911
+type(
+  API.vBD_t
+)
+"records.ml" 1191 70839 70905 "records.ml" 1191 70839 70923
+type(
+  API.ref_VDI
+)
+"records.ml" 1191 70839 70887 "records.ml" 1191 70839 70923
+type(
+  string
+)
+"records.ml" 1191 70839 70876 "records.ml" 1191 70839 70924
+type(
+  unit -> string
+)
+"records.ml" 1191 70839 70925 "records.ml" 1191 70839 70927
+type(
+  unit
+)
+"records.ml" 1191 70839 70843 "records.ml" 1191 70839 70927
+type(
+  field
+)
+"records.ml" 1192 70929 70933 "records.ml" 1192 70929 70943
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1192 70929 70950 "records.ml" 1192 70929 70966
+type(
+  string
+)
+"records.ml" 1192 70929 70977 "records.ml" 1192 70929 70979
+type(
+  unit
+)
+"records.ml" 1192 70929 70987 "records.ml" 1192 70929 70988
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1192 70929 70989 "records.ml" 1192 70929 70991
+type(
+  unit
+)
+"records.ml" 1192 70929 70986 "records.ml" 1192 70929 70992
+type(
+  API.vBD_t
+)
+"records.ml" 1192 70929 70986 "records.ml" 1192 70929 71006
+type(
+  bool
+)
+"records.ml" 1192 70929 71012 "records.ml" 1192 70929 71021
+type(
+  string
+)
+"records.ml" 1192 70929 71027 "records.ml" 1192 70929 71044
+type(
+  API.ref_VDI -> string
+)
+ident(
+  int_ref get_name_from_ref "records.ml" 103 3658 3662 "records.ml" 103 3658 3679
+)
+"records.ml" 1192 70929 71046 "records.ml" 1192 70929 71047
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1192 70929 71048 "records.ml" 1192 70929 71050
+type(
+  unit
+)
+"records.ml" 1192 70929 71045 "records.ml" 1192 70929 71051
+type(
+  API.vBD_t
+)
+"records.ml" 1192 70929 71045 "records.ml" 1192 70929 71063
+type(
+  API.ref_VDI
+)
+"records.ml" 1192 70929 71027 "records.ml" 1192 70929 71063
+type(
+  string
+)
+"records.ml" 1192 70929 70983 "records.ml" 1192 70929 71063
+type(
+  string
+)
+"records.ml" 1192 70929 70972 "records.ml" 1192 70929 71064
+type(
+  unit -> string
+)
+"records.ml" 1192 70929 71065 "records.ml" 1192 70929 71067
+type(
+  unit
+)
+"records.ml" 1192 70929 70933 "records.ml" 1192 70929 71067
+type(
+  field
+)
+"records.ml" 1193 71069 71073 "records.ml" 1193 71069 71083
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1193 71069 71090 "records.ml" 1193 71069 71110
+type(
+  string
+)
+"records.ml" 1194 71111 71127 "records.ml" 1194 71111 71129
+type(
+  unit
+)
+"records.ml" 1194 71111 71133 "records.ml" 1194 71111 71146
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1194 71111 71147 "records.ml" 1194 71111 71151
+type(
+  string
+)
+"records.ml" 1194 71111 71153 "records.ml" 1194 71111 71161
+type(
+  ([ `attach
+   | `eject
+   | `insert
+   | `pause
+   | `plug
+   | `unpause
+   | `unplug
+   | `unplug_force ] -> string) ->
+  API.vbd_operations_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1194 71111 71162 "records.ml" 1194 71111 71197
+type(
+  [ `attach
+  | `eject
+  | `insert
+  | `pause
+  | `plug
+  | `unpause
+  | `unplug
+  | `unplug_force ] -> string
+)
+ident(
+  ext_ref Record_util.vbd_operation_to_string
+)
+"records.ml" 1194 71111 71199 "records.ml" 1194 71111 71200
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1194 71111 71201 "records.ml" 1194 71111 71203
+type(
+  unit
+)
+"records.ml" 1194 71111 71198 "records.ml" 1194 71111 71204
+type(
+  API.vBD_t
+)
+"records.ml" 1194 71111 71198 "records.ml" 1194 71111 71231
+type(
+  API.vbd_operations_set
+)
+"records.ml" 1194 71111 71152 "records.ml" 1194 71111 71232
+type(
+  string list
+)
+"records.ml" 1194 71111 71133 "records.ml" 1194 71111 71232
+type(
+  string
+)
+"records.ml" 1194 71111 71122 "records.ml" 1194 71111 71233
+type(
+  unit -> string
+)
+"records.ml" 1195 71235 71255 "records.ml" 1195 71235 71257
+type(
+  unit
+)
+"records.ml" 1195 71235 71261 "records.ml" 1195 71235 71269
+type(
+  ([ `attach
+   | `eject
+   | `insert
+   | `pause
+   | `plug
+   | `unpause
+   | `unplug
+   | `unplug_force ] -> string) ->
+  API.vbd_operations_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1195 71235 71270 "records.ml" 1195 71235 71305
+type(
+  [ `attach
+  | `eject
+  | `insert
+  | `pause
+  | `plug
+  | `unpause
+  | `unplug
+  | `unplug_force ] -> string
+)
+ident(
+  ext_ref Record_util.vbd_operation_to_string
+)
+"records.ml" 1195 71235 71307 "records.ml" 1195 71235 71308
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1195 71235 71309 "records.ml" 1195 71235 71311
+type(
+  unit
+)
+"records.ml" 1195 71235 71306 "records.ml" 1195 71235 71312
+type(
+  API.vBD_t
+)
+"records.ml" 1195 71235 71306 "records.ml" 1195 71235 71339
+type(
+  API.vbd_operations_set
+)
+"records.ml" 1195 71235 71261 "records.ml" 1195 71235 71339
+type(
+  string list
+)
+"records.ml" 1195 71235 71250 "records.ml" 1195 71235 71340
+type(
+  unit -> string list
+)
+"records.ml" 1195 71235 71341 "records.ml" 1195 71235 71343
+type(
+  unit
+)
+"records.ml" 1193 71069 71073 "records.ml" 1195 71235 71343
+type(
+  field
+)
+"records.ml" 1196 71345 71349 "records.ml" 1196 71345 71359
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1196 71345 71366 "records.ml" 1196 71345 71386
+type(
+  string
+)
+"records.ml" 1197 71387 71403 "records.ml" 1197 71387 71405
+type(
+  unit
+)
+"records.ml" 1197 71387 71409 "records.ml" 1197 71387 71422
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1197 71387 71423 "records.ml" 1197 71387 71427
+type(
+  string
+)
+"records.ml" 1197 71387 71429 "records.ml" 1197 71387 71437
+type(
+  (string * API.vbd_operations -> string) ->
+  API.string_to_vbd_operations_map -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1197 71387 71444 "records.ml" 1197 71387 71445
+type(
+  string
+)
+ident(
+  def a "records.ml" 1197 71387 71452 "records.ml" 1197 71387 71489
+)
+"records.ml" 1197 71387 71446 "records.ml" 1197 71387 71447
+type(
+  API.vbd_operations
+)
+ident(
+  def b "records.ml" 1197 71387 71452 "records.ml" 1197 71387 71489
+)
+"records.ml" 1197 71387 71443 "records.ml" 1197 71387 71448
+type(
+  string * API.vbd_operations
+)
+"records.ml" 1197 71387 71452 "records.ml" 1197 71387 71487
+type(
+  API.vbd_operations -> string
+)
+ident(
+  ext_ref Record_util.vbd_operation_to_string
+)
+"records.ml" 1197 71387 71488 "records.ml" 1197 71387 71489
+type(
+  API.vbd_operations
+)
+ident(
+  int_ref b "records.ml" 1197 71387 71446 "records.ml" 1197 71387 71447
+)
+"records.ml" 1197 71387 71452 "records.ml" 1197 71387 71489
+type(
+  string
+)
+"records.ml" 1197 71387 71438 "records.ml" 1197 71387 71490
+type(
+  string * API.vbd_operations -> string
+)
+"records.ml" 1197 71387 71492 "records.ml" 1197 71387 71493
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1197 71387 71494 "records.ml" 1197 71387 71496
+type(
+  unit
+)
+"records.ml" 1197 71387 71491 "records.ml" 1197 71387 71497
+type(
+  API.vBD_t
+)
+"records.ml" 1197 71387 71491 "records.ml" 1197 71387 71524
+type(
+  API.string_to_vbd_operations_map
+)
+"records.ml" 1197 71387 71428 "records.ml" 1197 71387 71525
+type(
+  string list
+)
+"records.ml" 1197 71387 71409 "records.ml" 1197 71387 71525
+type(
+  string
+)
+"records.ml" 1197 71387 71398 "records.ml" 1197 71387 71526
+type(
+  unit -> string
+)
+"records.ml" 1198 71528 71548 "records.ml" 1198 71528 71550
+type(
+  unit
+)
+"records.ml" 1198 71528 71554 "records.ml" 1198 71528 71562
+type(
+  (string * API.vbd_operations -> string) ->
+  API.string_to_vbd_operations_map -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1198 71528 71569 "records.ml" 1198 71528 71570
+type(
+  string
+)
+ident(
+  def a "records.ml" 1198 71528 71577 "records.ml" 1198 71528 71614
+)
+"records.ml" 1198 71528 71571 "records.ml" 1198 71528 71572
+type(
+  API.vbd_operations
+)
+ident(
+  def b "records.ml" 1198 71528 71577 "records.ml" 1198 71528 71614
+)
+"records.ml" 1198 71528 71568 "records.ml" 1198 71528 71573
+type(
+  string * API.vbd_operations
+)
+"records.ml" 1198 71528 71577 "records.ml" 1198 71528 71612
+type(
+  API.vbd_operations -> string
+)
+ident(
+  ext_ref Record_util.vbd_operation_to_string
+)
+"records.ml" 1198 71528 71613 "records.ml" 1198 71528 71614
+type(
+  API.vbd_operations
+)
+ident(
+  int_ref b "records.ml" 1198 71528 71571 "records.ml" 1198 71528 71572
+)
+"records.ml" 1198 71528 71577 "records.ml" 1198 71528 71614
+type(
+  string
+)
+"records.ml" 1198 71528 71563 "records.ml" 1198 71528 71615
+type(
+  string * API.vbd_operations -> string
+)
+"records.ml" 1198 71528 71617 "records.ml" 1198 71528 71618
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1198 71528 71619 "records.ml" 1198 71528 71621
+type(
+  unit
+)
+"records.ml" 1198 71528 71616 "records.ml" 1198 71528 71622
+type(
+  API.vBD_t
+)
+"records.ml" 1198 71528 71616 "records.ml" 1198 71528 71649
+type(
+  API.string_to_vbd_operations_map
+)
+"records.ml" 1198 71528 71554 "records.ml" 1198 71528 71649
+type(
+  string list
+)
+"records.ml" 1198 71528 71543 "records.ml" 1198 71528 71650
+type(
+  unit -> string list
+)
+"records.ml" 1198 71528 71651 "records.ml" 1198 71528 71653
+type(
+  unit
+)
+"records.ml" 1196 71345 71349 "records.ml" 1198 71528 71653
+type(
+  field
+)
+"records.ml" 1199 71655 71659 "records.ml" 1199 71655 71669
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1199 71655 71676 "records.ml" 1199 71655 71683
+type(
+  string
+)
+"records.ml" 1199 71655 71694 "records.ml" 1199 71655 71696
+type(
+  unit
+)
+"records.ml" 1199 71655 71700 "records.ml" 1199 71655 71714
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 1199 71655 71716 "records.ml" 1199 71655 71717
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1199 71655 71718 "records.ml" 1199 71655 71720
+type(
+  unit
+)
+"records.ml" 1199 71655 71715 "records.ml" 1199 71655 71721
+type(
+  API.vBD_t
+)
+"records.ml" 1199 71655 71715 "records.ml" 1199 71655 71735
+type(
+  bool
+)
+"records.ml" 1199 71655 71700 "records.ml" 1199 71655 71735
+type(
+  string
+)
+"records.ml" 1199 71655 71689 "records.ml" 1199 71655 71736
+type(
+  unit -> string
+)
+"records.ml" 1199 71655 71737 "records.ml" 1199 71655 71739
+type(
+  unit
+)
+"records.ml" 1199 71655 71659 "records.ml" 1199 71655 71739
+type(
+  field
+)
+"records.ml" 1200 71741 71745 "records.ml" 1200 71741 71755
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1200 71741 71762 "records.ml" 1200 71741 71770
+type(
+  string
+)
+"records.ml" 1200 71741 71781 "records.ml" 1200 71741 71783
+type(
+  unit
+)
+"records.ml" 1200 71741 71788 "records.ml" 1200 71741 71789
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1200 71741 71790 "records.ml" 1200 71741 71792
+type(
+  unit
+)
+"records.ml" 1200 71741 71787 "records.ml" 1200 71741 71793
+type(
+  API.vBD_t
+)
+"records.ml" 1200 71741 71787 "records.ml" 1200 71741 71808
+type(
+  string
+)
+"records.ml" 1200 71741 71776 "records.ml" 1200 71741 71809
+type(
+  unit -> string
+)
+"records.ml" 1200 71741 71810 "records.ml" 1200 71741 71812
+type(
+  unit
+)
+"records.ml" 1200 71741 71745 "records.ml" 1200 71741 71812
+type(
+  field
+)
+"records.ml" 1201 71814 71818 "records.ml" 1201 71814 71828
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1201 71814 71835 "records.ml" 1201 71814 71847
+type(
+  string
+)
+"records.ml" 1201 71814 71858 "records.ml" 1201 71814 71860
+type(
+  unit
+)
+"records.ml" 1201 71814 71865 "records.ml" 1201 71814 71866
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1201 71814 71867 "records.ml" 1201 71814 71869
+type(
+  unit
+)
+"records.ml" 1201 71814 71864 "records.ml" 1201 71814 71870
+type(
+  API.vBD_t
+)
+"records.ml" 1201 71814 71864 "records.ml" 1201 71814 71889
+type(
+  string
+)
+"records.ml" 1201 71814 71853 "records.ml" 1201 71814 71890
+type(
+  unit -> string
+)
+"records.ml" 1202 71891 71907 "records.ml" 1202 71891 71910
+type(
+  string
+)
+ident(
+  def dev "records.ml" 1202 71891 71914 "records.ml" 1202 71891 71962
+)
+"records.ml" 1202 71891 71914 "records.ml" 1202 71891 71939
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VBD -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VBD ).set_userdevice
+)
+"records.ml" 1202 71891 71940 "records.ml" 1202 71891 71943
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1175 70189 70204 "records.ml" 1175 70189 70207
+)
+"records.ml" 1202 71891 71944 "records.ml" 1202 71891 71954
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1175 70189 70208 "records.ml" 1175 70189 70218
+)
+"records.ml" 1202 71891 71955 "records.ml" 1202 71891 71958
+type(
+  API.ref_VBD
+)
+ident(
+  int_ref vbd "records.ml" 1175 70189 70219 "records.ml" 1175 70189 70222
+)
+"records.ml" 1202 71891 71959 "records.ml" 1202 71891 71962
+type(
+  string
+)
+ident(
+  int_ref dev "records.ml" 1202 71891 71907 "records.ml" 1202 71891 71910
+)
+"records.ml" 1202 71891 71914 "records.ml" 1202 71891 71962
+type(
+  unit
+)
+"records.ml" 1202 71891 71902 "records.ml" 1202 71891 71963
+type(
+  string -> unit
+)
+"records.ml" 1202 71891 71964 "records.ml" 1202 71891 71966
+type(
+  unit
+)
+"records.ml" 1201 71814 71818 "records.ml" 1202 71891 71966
+type(
+  field
+)
+"records.ml" 1203 71968 71972 "records.ml" 1203 71968 71982
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1203 71968 71989 "records.ml" 1203 71968 71999
+type(
+  string
+)
+"records.ml" 1203 71968 72010 "records.ml" 1203 71968 72012
+type(
+  unit
+)
+"records.ml" 1203 71968 72016 "records.ml" 1203 71968 72030
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 1203 71968 72032 "records.ml" 1203 71968 72033
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1203 71968 72034 "records.ml" 1203 71968 72036
+type(
+  unit
+)
+"records.ml" 1203 71968 72031 "records.ml" 1203 71968 72037
+type(
+  API.vBD_t
+)
+"records.ml" 1203 71968 72031 "records.ml" 1203 71968 72054
+type(
+  bool
+)
+"records.ml" 1203 71968 72016 "records.ml" 1203 71968 72054
+type(
+  string
+)
+"records.ml" 1203 71968 72005 "records.ml" 1203 71968 72055
+type(
+  unit -> string
+)
+"records.ml" 1204 72056 72072 "records.ml" 1204 72056 72076
+type(
+  string
+)
+ident(
+  def boot "records.ml" 1204 72056 72080 "records.ml" 1204 72056 72160
+)
+"records.ml" 1204 72056 72080 "records.ml" 1204 72056 72103
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VBD -> value:bool -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VBD ).set_bootable
+)
+"records.ml" 1204 72056 72104 "records.ml" 1204 72056 72107
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1175 70189 70204 "records.ml" 1175 70189 70207
+)
+"records.ml" 1204 72056 72108 "records.ml" 1204 72056 72118
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1175 70189 70208 "records.ml" 1175 70189 70218
+)
+"records.ml" 1204 72056 72119 "records.ml" 1204 72056 72122
+type(
+  API.ref_VBD
+)
+ident(
+  int_ref vbd "records.ml" 1175 70189 70219 "records.ml" 1175 70189 70222
+)
+"records.ml" 1204 72056 72124 "records.ml" 1204 72056 72143
+type(
+  string -> string -> bool
+)
+ident(
+  int_ref safe_bool_of_string "records.ml" 72 2718 2722 "records.ml" 72 2718 2741
+)
+"records.ml" 1204 72056 72144 "records.ml" 1204 72056 72154
+type(
+  string
+)
+"records.ml" 1204 72056 72155 "records.ml" 1204 72056 72159
+type(
+  string
+)
+ident(
+  int_ref boot "records.ml" 1204 72056 72072 "records.ml" 1204 72056 72076
+)
+"records.ml" 1204 72056 72123 "records.ml" 1204 72056 72160
+type(
+  bool
+)
+"records.ml" 1204 72056 72080 "records.ml" 1204 72056 72160
+type(
+  unit
+)
+"records.ml" 1204 72056 72067 "records.ml" 1204 72056 72161
+type(
+  string -> unit
+)
+"records.ml" 1204 72056 72162 "records.ml" 1204 72056 72164
+type(
+  unit
+)
+"records.ml" 1203 71968 71972 "records.ml" 1204 72056 72164
+type(
+  field
+)
+"records.ml" 1205 72166 72170 "records.ml" 1205 72166 72180
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1205 72166 72187 "records.ml" 1205 72166 72193
+type(
+  string
+)
+"records.ml" 1205 72166 72204 "records.ml" 1205 72166 72206
+type(
+  unit
+)
+"records.ml" 1205 72166 72217 "records.ml" 1205 72166 72218
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1205 72166 72219 "records.ml" 1205 72166 72221
+type(
+  unit
+)
+"records.ml" 1205 72166 72216 "records.ml" 1205 72166 72222
+type(
+  API.vBD_t
+)
+"records.ml" 1205 72166 72216 "records.ml" 1205 72166 72235
+type(
+  API.vbd_mode
+)
+"records.ml" 1205 72166 72241 "records.ml" 1205 72166 72244
+type(
+  API.vbd_mode
+)
+"records.ml" 1205 72166 72248 "records.ml" 1205 72166 72252
+type(
+  string
+)
+"records.ml" 1205 72166 72255 "records.ml" 1205 72166 72258
+type(
+  API.vbd_mode
+)
+"records.ml" 1205 72166 72262 "records.ml" 1205 72166 72266
+type(
+  string
+)
+"records.ml" 1205 72166 72210 "records.ml" 1205 72166 72266
+type(
+  string
+)
+"records.ml" 1205 72166 72199 "records.ml" 1205 72166 72267
+type(
+  unit -> string
+)
+"records.ml" 1206 72269 72285 "records.ml" 1206 72269 72289
+type(
+  string
+)
+ident(
+  def mode "records.ml" 1206 72269 72293 "records.ml" 1206 72269 72369
+)
+"records.ml" 1206 72269 72293 "records.ml" 1206 72269 72312
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VBD -> value:API.vbd_mode -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VBD ).set_mode
+)
+"records.ml" 1206 72269 72313 "records.ml" 1206 72269 72316
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1175 70189 70204 "records.ml" 1175 70189 70207
+)
+"records.ml" 1206 72269 72317 "records.ml" 1206 72269 72327
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1175 70189 70208 "records.ml" 1175 70189 70218
+)
+"records.ml" 1206 72269 72328 "records.ml" 1206 72269 72331
+type(
+  API.ref_VBD
+)
+ident(
+  int_ref vbd "records.ml" 1175 70189 70219 "records.ml" 1175 70189 70222
+)
+"records.ml" 1206 72269 72333 "records.ml" 1206 72269 72363
+type(
+  string -> API.vbd_mode
+)
+ident(
+  ext_ref Record_util.string_to_vbd_mode
+)
+"records.ml" 1206 72269 72364 "records.ml" 1206 72269 72368
+type(
+  string
+)
+ident(
+  int_ref mode "records.ml" 1206 72269 72285 "records.ml" 1206 72269 72289
+)
+"records.ml" 1206 72269 72332 "records.ml" 1206 72269 72369
+type(
+  API.vbd_mode
+)
+"records.ml" 1206 72269 72293 "records.ml" 1206 72269 72369
+type(
+  unit
+)
+"records.ml" 1206 72269 72280 "records.ml" 1206 72269 72370
+type(
+  string -> unit
+)
+"records.ml" 1206 72269 72371 "records.ml" 1206 72269 72373
+type(
+  unit
+)
+"records.ml" 1205 72166 72170 "records.ml" 1206 72269 72373
+type(
+  field
+)
+"records.ml" 1207 72375 72379 "records.ml" 1207 72375 72389
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1207 72375 72396 "records.ml" 1207 72375 72402
+type(
+  string
+)
+"records.ml" 1207 72375 72413 "records.ml" 1207 72375 72415
+type(
+  unit
+)
+"records.ml" 1207 72375 72426 "records.ml" 1207 72375 72427
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1207 72375 72428 "records.ml" 1207 72375 72430
+type(
+  unit
+)
+"records.ml" 1207 72375 72425 "records.ml" 1207 72375 72431
+type(
+  API.vBD_t
+)
+"records.ml" 1207 72375 72425 "records.ml" 1207 72375 72444
+type(
+  API.vbd_type
+)
+"records.ml" 1207 72375 72450 "records.ml" 1207 72375 72453
+type(
+  API.vbd_type
+)
+"records.ml" 1207 72375 72457 "records.ml" 1207 72375 72461
+type(
+  string
+)
+"records.ml" 1207 72375 72464 "records.ml" 1207 72375 72469
+type(
+  API.vbd_type
+)
+"records.ml" 1207 72375 72473 "records.ml" 1207 72375 72479
+type(
+  string
+)
+"records.ml" 1207 72375 72419 "records.ml" 1207 72375 72479
+type(
+  string
+)
+"records.ml" 1207 72375 72408 "records.ml" 1207 72375 72480
+type(
+  unit -> string
+)
+"records.ml" 1208 72481 72497 "records.ml" 1208 72481 72499
+type(
+  string
+)
+ident(
+  def ty "records.ml" 1208 72481 72503 "records.ml" 1208 72481 72577
+)
+"records.ml" 1208 72481 72503 "records.ml" 1208 72481 72522
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VBD -> value:API.vbd_type -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VBD ).set_type
+)
+"records.ml" 1208 72481 72523 "records.ml" 1208 72481 72526
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1175 70189 70204 "records.ml" 1175 70189 70207
+)
+"records.ml" 1208 72481 72527 "records.ml" 1208 72481 72537
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1175 70189 70208 "records.ml" 1175 70189 70218
+)
+"records.ml" 1208 72481 72538 "records.ml" 1208 72481 72541
+type(
+  API.ref_VBD
+)
+ident(
+  int_ref vbd "records.ml" 1175 70189 70219 "records.ml" 1175 70189 70222
+)
+"records.ml" 1208 72481 72543 "records.ml" 1208 72481 72573
+type(
+  string -> API.vbd_type
+)
+ident(
+  ext_ref Record_util.string_to_vbd_type
+)
+"records.ml" 1208 72481 72574 "records.ml" 1208 72481 72576
+type(
+  string
+)
+ident(
+  int_ref ty "records.ml" 1208 72481 72497 "records.ml" 1208 72481 72499
+)
+"records.ml" 1208 72481 72542 "records.ml" 1208 72481 72577
+type(
+  API.vbd_type
+)
+"records.ml" 1208 72481 72503 "records.ml" 1208 72481 72577
+type(
+  unit
+)
+"records.ml" 1208 72481 72492 "records.ml" 1208 72481 72578
+type(
+  string -> unit
+)
+"records.ml" 1208 72481 72579 "records.ml" 1208 72481 72581
+type(
+  unit
+)
+"records.ml" 1207 72375 72379 "records.ml" 1208 72481 72581
+type(
+  field
+)
+"records.ml" 1209 72583 72587 "records.ml" 1209 72583 72597
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1209 72583 72604 "records.ml" 1209 72583 72617
+type(
+  string
+)
+"records.ml" 1209 72583 72628 "records.ml" 1209 72583 72630
+type(
+  unit
+)
+"records.ml" 1209 72583 72634 "records.ml" 1209 72583 72648
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 1209 72583 72650 "records.ml" 1209 72583 72651
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1209 72583 72652 "records.ml" 1209 72583 72654
+type(
+  unit
+)
+"records.ml" 1209 72583 72649 "records.ml" 1209 72583 72655
+type(
+  API.vBD_t
+)
+"records.ml" 1209 72583 72649 "records.ml" 1209 72583 72675
+type(
+  bool
+)
+"records.ml" 1209 72583 72634 "records.ml" 1209 72583 72675
+type(
+  string
+)
+"records.ml" 1209 72583 72623 "records.ml" 1209 72583 72676
+type(
+  unit -> string
+)
+"records.ml" 1210 72677 72693 "records.ml" 1210 72677 72704
+type(
+  string
+)
+ident(
+  def unpluggable "records.ml" 1210 72677 72708 "records.ml" 1210 72677 72801
+)
+"records.ml" 1210 72677 72708 "records.ml" 1210 72677 72734
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VBD -> value:bool -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VBD ).set_unpluggable
+)
+"records.ml" 1210 72677 72735 "records.ml" 1210 72677 72738
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1175 70189 70204 "records.ml" 1175 70189 70207
+)
+"records.ml" 1210 72677 72739 "records.ml" 1210 72677 72749
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1175 70189 70208 "records.ml" 1175 70189 70218
+)
+"records.ml" 1210 72677 72750 "records.ml" 1210 72677 72753
+type(
+  API.ref_VBD
+)
+ident(
+  int_ref vbd "records.ml" 1175 70189 70219 "records.ml" 1175 70189 70222
+)
+"records.ml" 1210 72677 72755 "records.ml" 1210 72677 72774
+type(
+  string -> string -> bool
+)
+ident(
+  int_ref safe_bool_of_string "records.ml" 72 2718 2722 "records.ml" 72 2718 2741
+)
+"records.ml" 1210 72677 72775 "records.ml" 1210 72677 72788
+type(
+  string
+)
+"records.ml" 1210 72677 72789 "records.ml" 1210 72677 72800
+type(
+  string
+)
+ident(
+  int_ref unpluggable "records.ml" 1210 72677 72693 "records.ml" 1210 72677 72704
+)
+"records.ml" 1210 72677 72754 "records.ml" 1210 72677 72801
+type(
+  bool
+)
+"records.ml" 1210 72677 72708 "records.ml" 1210 72677 72801
+type(
+  unit
+)
+"records.ml" 1210 72677 72688 "records.ml" 1210 72677 72802
+type(
+  string -> unit
+)
+"records.ml" 1210 72677 72803 "records.ml" 1210 72677 72805
+type(
+  unit
+)
+"records.ml" 1209 72583 72587 "records.ml" 1210 72677 72805
+type(
+  field
+)
+"records.ml" 1211 72807 72811 "records.ml" 1211 72807 72821
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1211 72807 72828 "records.ml" 1211 72807 72848
+type(
+  string
+)
+"records.ml" 1211 72807 72859 "records.ml" 1211 72807 72861
+type(
+  unit
+)
+"records.ml" 1211 72807 72865 "records.ml" 1211 72807 72879
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 1211 72807 72881 "records.ml" 1211 72807 72882
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1211 72807 72883 "records.ml" 1211 72807 72885
+type(
+  unit
+)
+"records.ml" 1211 72807 72880 "records.ml" 1211 72807 72886
+type(
+  API.vBD_t
+)
+"records.ml" 1211 72807 72880 "records.ml" 1211 72807 72913
+type(
+  bool
+)
+"records.ml" 1211 72807 72865 "records.ml" 1211 72807 72913
+type(
+  string
+)
+"records.ml" 1211 72807 72854 "records.ml" 1211 72807 72914
+type(
+  unit -> string
+)
+"records.ml" 1211 72807 72915 "records.ml" 1211 72807 72917
+type(
+  unit
+)
+"records.ml" 1211 72807 72811 "records.ml" 1211 72807 72917
+type(
+  field
+)
+"records.ml" 1212 72919 72923 "records.ml" 1212 72919 72933
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1212 72919 72940 "records.ml" 1212 72919 72952
+type(
+  string
+)
+"records.ml" 1212 72919 72963 "records.ml" 1212 72919 72965
+type(
+  unit
+)
+"records.ml" 1212 72919 72973 "records.ml" 1212 72919 73001
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VBD -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VBD ).assert_attachable
+)
+"records.ml" 1212 72919 73002 "records.ml" 1212 72919 73005
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1175 70189 70204 "records.ml" 1175 70189 70207
+)
+"records.ml" 1212 72919 73006 "records.ml" 1212 72919 73016
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1175 70189 70208 "records.ml" 1175 70189 70218
+)
+"records.ml" 1212 72919 73017 "records.ml" 1212 72919 73020
+type(
+  API.ref_VBD
+)
+ident(
+  int_ref vbd "records.ml" 1175 70189 70219 "records.ml" 1175 70189 70222
+)
+"records.ml" 1212 72919 72973 "records.ml" 1212 72919 73020
+type(
+  unit
+)
+"records.ml" 1212 72919 73022 "records.ml" 1212 72919 73028
+type(
+  string
+)
+"records.ml" 1212 72919 72973 "records.ml" 1212 72919 73028
+type(
+  string
+)
+"records.ml" 1212 72919 73034 "records.ml" 1212 72919 73035
+type(
+  exn
+)
+ident(
+  def e "records.ml" 1212 72919 73039 "records.ml" 1212 72919 73096
+)
+"records.ml" 1212 72919 73039 "records.ml" 1212 72919 73053
+type(
+  (string -> string, unit, string) format -> string -> string
+)
+ident(
+  ext_ref Printf.sprintf
+)
+"records.ml" 1212 72919 73054 "records.ml" 1212 72919 73073
+type(
+  (string -> string, unit, string) format
+)
+"records.ml" 1212 72919 73075 "records.ml" 1212 72919 73093
+type(
+  exn -> string
+)
+ident(
+  ext_ref Printexc.to_string
+)
+"records.ml" 1212 72919 73094 "records.ml" 1212 72919 73095
+type(
+  exn
+)
+ident(
+  int_ref e "records.ml" 1212 72919 73034 "records.ml" 1212 72919 73035
+)
+"records.ml" 1212 72919 73074 "records.ml" 1212 72919 73096
+type(
+  string
+)
+"records.ml" 1212 72919 73039 "records.ml" 1212 72919 73096
+type(
+  string
+)
+"records.ml" 1212 72919 72969 "records.ml" 1212 72919 73096
+type(
+  string
+)
+"records.ml" 1212 72919 72958 "records.ml" 1212 72919 73097
+type(
+  unit -> string
+)
+"records.ml" 1212 72919 73109 "records.ml" 1212 72919 73113
+type(
+  bool
+)
+"records.ml" 1212 72919 73114 "records.ml" 1212 72919 73116
+type(
+  unit
+)
+"records.ml" 1212 72919 72923 "records.ml" 1212 72919 73116
+type(
+  field
+)
+"records.ml" 1213 73118 73122 "records.ml" 1213 73118 73132
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1213 73118 73139 "records.ml" 1213 73118 73153
+type(
+  string
+)
+"records.ml" 1213 73118 73164 "records.ml" 1213 73118 73166
+type(
+  unit
+)
+"records.ml" 1213 73118 73170 "records.ml" 1213 73118 73184
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 1213 73118 73186 "records.ml" 1213 73118 73187
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1213 73118 73188 "records.ml" 1213 73118 73190
+type(
+  unit
+)
+"records.ml" 1213 73118 73185 "records.ml" 1213 73118 73191
+type(
+  API.vBD_t
+)
+"records.ml" 1213 73118 73185 "records.ml" 1213 73118 73212
+type(
+  bool
+)
+"records.ml" 1213 73118 73170 "records.ml" 1213 73118 73212
+type(
+  string
+)
+"records.ml" 1213 73118 73159 "records.ml" 1213 73118 73213
+type(
+  unit -> string
+)
+"records.ml" 1213 73118 73214 "records.ml" 1213 73118 73216
+type(
+  unit
+)
+"records.ml" 1213 73118 73122 "records.ml" 1213 73118 73216
+type(
+  field
+)
+"records.ml" 1214 73218 73222 "records.ml" 1214 73218 73232
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1214 73218 73239 "records.ml" 1214 73218 73252
+type(
+  string
+)
+"records.ml" 1214 73218 73263 "records.ml" 1214 73218 73265
+type(
+  unit
+)
+"records.ml" 1214 73218 73269 "records.ml" 1214 73218 73284
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 1214 73218 73286 "records.ml" 1214 73218 73287
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1214 73218 73288 "records.ml" 1214 73218 73290
+type(
+  unit
+)
+"records.ml" 1214 73218 73285 "records.ml" 1214 73218 73291
+type(
+  API.vBD_t
+)
+"records.ml" 1214 73218 73285 "records.ml" 1214 73218 73311
+type(
+  int64
+)
+"records.ml" 1214 73218 73269 "records.ml" 1214 73218 73311
+type(
+  string
+)
+"records.ml" 1214 73218 73258 "records.ml" 1214 73218 73312
+type(
+  unit -> string
+)
+"records.ml" 1214 73218 73313 "records.ml" 1214 73218 73315
+type(
+  unit
+)
+"records.ml" 1214 73218 73222 "records.ml" 1214 73218 73315
+type(
+  field
+)
+"records.ml" 1215 73317 73321 "records.ml" 1215 73317 73331
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1215 73317 73338 "records.ml" 1215 73317 73353
+type(
+  string
+)
+"records.ml" 1215 73317 73364 "records.ml" 1215 73317 73366
+type(
+  unit
+)
+"records.ml" 1215 73317 73371 "records.ml" 1215 73317 73372
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1215 73317 73373 "records.ml" 1215 73317 73375
+type(
+  unit
+)
+"records.ml" 1215 73317 73370 "records.ml" 1215 73317 73376
+type(
+  API.vBD_t
+)
+"records.ml" 1215 73317 73370 "records.ml" 1215 73317 73398
+type(
+  string
+)
+"records.ml" 1215 73317 73359 "records.ml" 1215 73317 73399
+type(
+  unit -> string
+)
+"records.ml" 1215 73317 73400 "records.ml" 1215 73317 73402
+type(
+  unit
+)
+"records.ml" 1215 73317 73321 "records.ml" 1215 73317 73402
+type(
+  field
+)
+"records.ml" 1216 73404 73408 "records.ml" 1216 73404 73418
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1216 73404 73425 "records.ml" 1216 73404 73445
+type(
+  string
+)
+"records.ml" 1216 73404 73456 "records.ml" 1216 73404 73458
+type(
+  unit
+)
+"records.ml" 1216 73404 73463 "records.ml" 1216 73404 73464
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1216 73404 73465 "records.ml" 1216 73404 73467
+type(
+  unit
+)
+"records.ml" 1216 73404 73462 "records.ml" 1216 73404 73468
+type(
+  API.vBD_t
+)
+"records.ml" 1216 73404 73462 "records.ml" 1216 73404 73495
+type(
+  string
+)
+"records.ml" 1216 73404 73451 "records.ml" 1216 73404 73496
+type(
+  unit -> string
+)
+"records.ml" 1217 73497 73513 "records.ml" 1217 73497 73516
+type(
+  string
+)
+ident(
+  def qat "records.ml" 1217 73497 73520 "records.ml" 1217 73497 73576
+)
+"records.ml" 1217 73497 73520 "records.ml" 1217 73497 73553
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VBD -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VBD ).set_qos_algorithm_type
+)
+"records.ml" 1217 73497 73554 "records.ml" 1217 73497 73557
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1175 70189 70204 "records.ml" 1175 70189 70207
+)
+"records.ml" 1217 73497 73558 "records.ml" 1217 73497 73568
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1175 70189 70208 "records.ml" 1175 70189 70218
+)
+"records.ml" 1217 73497 73569 "records.ml" 1217 73497 73572
+type(
+  API.ref_VBD
+)
+ident(
+  int_ref vbd "records.ml" 1175 70189 70219 "records.ml" 1175 70189 70222
+)
+"records.ml" 1217 73497 73573 "records.ml" 1217 73497 73576
+type(
+  string
+)
+ident(
+  int_ref qat "records.ml" 1217 73497 73513 "records.ml" 1217 73497 73516
+)
+"records.ml" 1217 73497 73520 "records.ml" 1217 73497 73576
+type(
+  unit
+)
+"records.ml" 1217 73497 73508 "records.ml" 1217 73497 73577
+type(
+  string -> unit
+)
+"records.ml" 1217 73497 73578 "records.ml" 1217 73497 73580
+type(
+  unit
+)
+"records.ml" 1216 73404 73408 "records.ml" 1217 73497 73580
+type(
+  field
+)
+"records.ml" 1218 73582 73586 "records.ml" 1218 73582 73596
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1218 73582 73603 "records.ml" 1218 73582 73625
+type(
+  string
+)
+"records.ml" 1218 73582 73636 "records.ml" 1218 73582 73638
+type(
+  unit
+)
+"records.ml" 1218 73582 73642 "records.ml" 1218 73582 73668
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 1218 73582 73669 "records.ml" 1218 73582 73673
+type(
+  string
+)
+"records.ml" 1218 73582 73675 "records.ml" 1218 73582 73676
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1218 73582 73677 "records.ml" 1218 73582 73679
+type(
+  unit
+)
+"records.ml" 1218 73582 73674 "records.ml" 1218 73582 73680
+type(
+  API.vBD_t
+)
+"records.ml" 1218 73582 73674 "records.ml" 1218 73582 73709
+type(
+  API.string_to_string_map
+)
+"records.ml" 1218 73582 73642 "records.ml" 1218 73582 73709
+type(
+  string
+)
+"records.ml" 1218 73582 73631 "records.ml" 1218 73582 73710
+type(
+  unit -> string
+)
+"records.ml" 1219 73712 73732 "records.ml" 1219 73712 73734
+type(
+  unit
+)
+"records.ml" 1219 73712 73739 "records.ml" 1219 73712 73740
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1219 73712 73741 "records.ml" 1219 73712 73743
+type(
+  unit
+)
+"records.ml" 1219 73712 73738 "records.ml" 1219 73712 73744
+type(
+  API.vBD_t
+)
+"records.ml" 1219 73712 73738 "records.ml" 1219 73712 73773
+type(
+  API.string_to_string_map
+)
+"records.ml" 1219 73712 73727 "records.ml" 1219 73712 73774
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 1220 73775 73798 "records.ml" 1220 73775 73799
+type(
+  string
+)
+ident(
+  def k "records.ml" 1220 73775 73800 "records.ml" 1220 73775 73866
+)
+"records.ml" 1220 73775 73800 "records.ml" 1220 73775 73801
+type(
+  string
+)
+ident(
+  def v "records.ml" 1220 73775 73805 "records.ml" 1220 73775 73866
+)
+"records.ml" 1220 73775 73805 "records.ml" 1220 73775 73843
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VBD -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VBD ).add_to_qos_algorithm_params
+)
+"records.ml" 1220 73775 73844 "records.ml" 1220 73775 73847
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1175 70189 70204 "records.ml" 1175 70189 70207
+)
+"records.ml" 1220 73775 73848 "records.ml" 1220 73775 73858
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1175 70189 70208 "records.ml" 1175 70189 70218
+)
+"records.ml" 1220 73775 73859 "records.ml" 1220 73775 73862
+type(
+  API.ref_VBD
+)
+ident(
+  int_ref vbd "records.ml" 1175 70189 70219 "records.ml" 1175 70189 70222
+)
+"records.ml" 1220 73775 73863 "records.ml" 1220 73775 73864
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 1220 73775 73798 "records.ml" 1220 73775 73799
+)
+"records.ml" 1220 73775 73865 "records.ml" 1220 73775 73866
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 1220 73775 73800 "records.ml" 1220 73775 73801
+)
+"records.ml" 1220 73775 73805 "records.ml" 1220 73775 73866
+type(
+  unit
+)
+"records.ml" 1220 73775 73793 "records.ml" 1220 73775 73867
+type(
+  string -> string -> unit
+)
+"records.ml" 1221 73868 73896 "records.ml" 1221 73868 73897
+type(
+  string
+)
+ident(
+  def k "records.ml" 1221 73868 73901 "records.ml" 1221 73868 73965
+)
+"records.ml" 1221 73868 73901 "records.ml" 1221 73868 73944
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VBD -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VBD ).remove_from_qos_algorithm_params
+)
+"records.ml" 1221 73868 73945 "records.ml" 1221 73868 73948
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1175 70189 70204 "records.ml" 1175 70189 70207
+)
+"records.ml" 1221 73868 73949 "records.ml" 1221 73868 73959
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1175 70189 70208 "records.ml" 1175 70189 70218
+)
+"records.ml" 1221 73868 73960 "records.ml" 1221 73868 73963
+type(
+  API.ref_VBD
+)
+ident(
+  int_ref vbd "records.ml" 1175 70189 70219 "records.ml" 1175 70189 70222
+)
+"records.ml" 1221 73868 73964 "records.ml" 1221 73868 73965
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 1221 73868 73896 "records.ml" 1221 73868 73897
+)
+"records.ml" 1221 73868 73901 "records.ml" 1221 73868 73965
+type(
+  unit
+)
+"records.ml" 1221 73868 73891 "records.ml" 1221 73868 73966
+type(
+  string -> unit
+)
+"records.ml" 1221 73868 73967 "records.ml" 1221 73868 73969
+type(
+  unit
+)
+"records.ml" 1218 73582 73586 "records.ml" 1221 73868 73969
+type(
+  field
+)
+"records.ml" 1222 73971 73975 "records.ml" 1222 73971 73985
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> API.string_set) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1222 73971 73992 "records.ml" 1222 73971 74018
+type(
+  string
+)
+"records.ml" 1222 73971 74029 "records.ml" 1222 73971 74031
+type(
+  unit
+)
+"records.ml" 1222 73971 74035 "records.ml" 1222 73971 74048
+type(
+  string -> API.string_set -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1222 73971 74049 "records.ml" 1222 73971 74053
+type(
+  string
+)
+"records.ml" 1222 73971 74055 "records.ml" 1222 73971 74056
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1222 73971 74057 "records.ml" 1222 73971 74059
+type(
+  unit
+)
+"records.ml" 1222 73971 74054 "records.ml" 1222 73971 74060
+type(
+  API.vBD_t
+)
+"records.ml" 1222 73971 74054 "records.ml" 1222 73971 74093
+type(
+  API.string_set
+)
+"records.ml" 1222 73971 74035 "records.ml" 1222 73971 74093
+type(
+  string
+)
+"records.ml" 1222 73971 74024 "records.ml" 1222 73971 74094
+type(
+  unit -> string
+)
+"records.ml" 1223 74096 74116 "records.ml" 1223 74096 74118
+type(
+  unit
+)
+"records.ml" 1223 74096 74123 "records.ml" 1223 74096 74124
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1223 74096 74125 "records.ml" 1223 74096 74127
+type(
+  unit
+)
+"records.ml" 1223 74096 74122 "records.ml" 1223 74096 74128
+type(
+  API.vBD_t
+)
+"records.ml" 1223 74096 74122 "records.ml" 1223 74096 74161
+type(
+  API.string_set
+)
+"records.ml" 1223 74096 74111 "records.ml" 1223 74096 74162
+type(
+  unit -> API.string_set
+)
+"records.ml" 1223 74096 74163 "records.ml" 1223 74096 74165
+type(
+  unit
+)
+"records.ml" 1222 73971 73975 "records.ml" 1223 74096 74165
+type(
+  field
+)
+"records.ml" 1224 74167 74171 "records.ml" 1224 74167 74181
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1224 74167 74188 "records.ml" 1224 74167 74202
+type(
+  string
+)
+"records.ml" 1224 74167 74213 "records.ml" 1224 74167 74215
+type(
+  unit
+)
+"records.ml" 1224 74167 74219 "records.ml" 1224 74167 74245
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 1224 74167 74246 "records.ml" 1224 74167 74250
+type(
+  string
+)
+"records.ml" 1224 74167 74252 "records.ml" 1224 74167 74253
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1224 74167 74254 "records.ml" 1224 74167 74256
+type(
+  unit
+)
+"records.ml" 1224 74167 74251 "records.ml" 1224 74167 74257
+type(
+  API.vBD_t
+)
+"records.ml" 1224 74167 74251 "records.ml" 1224 74167 74278
+type(
+  API.string_to_string_map
+)
+"records.ml" 1224 74167 74219 "records.ml" 1224 74167 74278
+type(
+  string
+)
+"records.ml" 1224 74167 74208 "records.ml" 1224 74167 74279
+type(
+  unit -> string
+)
+"records.ml" 1225 74281 74304 "records.ml" 1225 74281 74305
+type(
+  string
+)
+ident(
+  def k "records.ml" 1225 74281 74306 "records.ml" 1225 74281 74364
+)
+"records.ml" 1225 74281 74306 "records.ml" 1225 74281 74307
+type(
+  string
+)
+ident(
+  def v "records.ml" 1225 74281 74311 "records.ml" 1225 74281 74364
+)
+"records.ml" 1225 74281 74311 "records.ml" 1225 74281 74341
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VBD -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VBD ).add_to_other_config
+)
+"records.ml" 1225 74281 74342 "records.ml" 1225 74281 74345
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1175 70189 70204 "records.ml" 1175 70189 70207
+)
+"records.ml" 1225 74281 74346 "records.ml" 1225 74281 74356
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1175 70189 70208 "records.ml" 1175 70189 70218
+)
+"records.ml" 1225 74281 74357 "records.ml" 1225 74281 74360
+type(
+  API.ref_VBD
+)
+ident(
+  int_ref vbd "records.ml" 1175 70189 70219 "records.ml" 1175 70189 70222
+)
+"records.ml" 1225 74281 74361 "records.ml" 1225 74281 74362
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 1225 74281 74304 "records.ml" 1225 74281 74305
+)
+"records.ml" 1225 74281 74363 "records.ml" 1225 74281 74364
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 1225 74281 74306 "records.ml" 1225 74281 74307
+)
+"records.ml" 1225 74281 74311 "records.ml" 1225 74281 74364
+type(
+  unit
+)
+"records.ml" 1225 74281 74299 "records.ml" 1225 74281 74365
+type(
+  string -> string -> unit
+)
+"records.ml" 1226 74366 74394 "records.ml" 1226 74366 74395
+type(
+  string
+)
+ident(
+  def k "records.ml" 1226 74366 74399 "records.ml" 1226 74366 74455
+)
+"records.ml" 1226 74366 74399 "records.ml" 1226 74366 74434
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VBD -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VBD ).remove_from_other_config
+)
+"records.ml" 1226 74366 74435 "records.ml" 1226 74366 74438
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1175 70189 70204 "records.ml" 1175 70189 70207
+)
+"records.ml" 1226 74366 74439 "records.ml" 1226 74366 74449
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1175 70189 70208 "records.ml" 1175 70189 70218
+)
+"records.ml" 1226 74366 74450 "records.ml" 1226 74366 74453
+type(
+  API.ref_VBD
+)
+ident(
+  int_ref vbd "records.ml" 1175 70189 70219 "records.ml" 1175 70189 70222
+)
+"records.ml" 1226 74366 74454 "records.ml" 1226 74366 74455
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 1226 74366 74394 "records.ml" 1226 74366 74395
+)
+"records.ml" 1226 74366 74399 "records.ml" 1226 74366 74455
+type(
+  unit
+)
+"records.ml" 1226 74366 74389 "records.ml" 1226 74366 74456
+type(
+  string -> unit
+)
+"records.ml" 1227 74458 74478 "records.ml" 1227 74458 74480
+type(
+  unit
+)
+"records.ml" 1227 74458 74485 "records.ml" 1227 74458 74486
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1227 74458 74487 "records.ml" 1227 74458 74489
+type(
+  unit
+)
+"records.ml" 1227 74458 74484 "records.ml" 1227 74458 74490
+type(
+  API.vBD_t
+)
+"records.ml" 1227 74458 74484 "records.ml" 1227 74458 74511
+type(
+  API.string_to_string_map
+)
+"records.ml" 1227 74458 74473 "records.ml" 1227 74458 74512
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 1227 74458 74513 "records.ml" 1227 74458 74515
+type(
+  unit
+)
+"records.ml" 1224 74167 74171 "records.ml" 1227 74458 74515
+type(
+  field
+)
+"records.ml" 1228 74517 74521 "records.ml" 1228 74517 74531
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1228 74517 74538 "records.ml" 1228 74517 74551
+type(
+  string
+)
+"records.ml" 1228 74517 74562 "records.ml" 1228 74517 74564
+type(
+  unit
+)
+"records.ml" 1230 74578 74583 "records.ml" 1230 74578 74587
+type(
+  string
+)
+ident(
+  def name "records.ml" 1231 74644 74645 "records.ml" 1231 74644 74740
+)
+"records.ml" 1230 74578 74590 "records.ml" 1230 74578 74604
+type(
+  (string -> string, unit, string) format -> string -> string
+)
+ident(
+  ext_ref Printf.sprintf
+)
+"records.ml" 1230 74578 74605 "records.ml" 1230 74578 74618
+type(
+  (string -> string, unit, string) format
+)
+"records.ml" 1230 74578 74620 "records.ml" 1230 74578 74621
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1230 74578 74622 "records.ml" 1230 74578 74624
+type(
+  unit
+)
+"records.ml" 1230 74578 74619 "records.ml" 1230 74578 74625
+type(
+  API.vBD_t
+)
+"records.ml" 1230 74578 74619 "records.ml" 1230 74578 74640
+type(
+  string
+)
+"records.ml" 1230 74578 74590 "records.ml" 1230 74578 74640
+type(
+  string
+)
+"records.ml" 1231 74644 74645 "records.ml" 1231 74644 74660
+type(
+  float -> string
+)
+ident(
+  int_ref string_of_float "records.ml" 34 990 994 "records.ml" 34 990 1009
+)
+"records.ml" 1231 74644 74663 "records.ml" 1231 74644 74690
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VM -> data_source:string -> float
+)
+ident(
+  ext_ref Client.( Client ).( VM ).query_data_source
+)
+"records.ml" 1231 74644 74691 "records.ml" 1231 74644 74694
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1175 70189 70204 "records.ml" 1175 70189 70207
+)
+"records.ml" 1231 74644 74695 "records.ml" 1231 74644 74705
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1175 70189 70208 "records.ml" 1175 70189 70218
+)
+"records.ml" 1231 74644 74707 "records.ml" 1231 74644 74708
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1231 74644 74709 "records.ml" 1231 74644 74711
+type(
+  unit
+)
+"records.ml" 1231 74644 74706 "records.ml" 1231 74644 74712
+type(
+  API.vBD_t
+)
+"records.ml" 1231 74644 74706 "records.ml" 1231 74644 74723
+type(
+  API.ref_VM
+)
+"records.ml" 1231 74644 74724 "records.ml" 1231 74644 74728
+type(
+  string
+)
+ident(
+  int_ref name "records.ml" 1230 74578 74583 "records.ml" 1230 74578 74587
+)
+"records.ml" 1231 74644 74662 "records.ml" 1231 74644 74729
+type(
+  float
+)
+"records.ml" 1231 74644 74730 "records.ml" 1231 74644 74732
+type(
+  float -> float -> float
+)
+ident(
+  ext_ref Pervasives.( /. )
+)
+"records.ml" 1231 74644 74733 "records.ml" 1231 74644 74739
+type(
+  float
+)
+"records.ml" 1231 74644 74661 "records.ml" 1231 74644 74740
+type(
+  float
+)
+"records.ml" 1231 74644 74645 "records.ml" 1231 74644 74740
+type(
+  string
+)
+"records.ml" 1230 74578 74579 "records.ml" 1231 74644 74740
+type(
+  string
+)
+"records.ml" 1232 74741 74752 "records.ml" 1232 74741 74753
+type(
+  exn
+)
+"records.ml" 1232 74741 74757 "records.ml" 1232 74741 74768
+type(
+  string
+)
+"records.ml" 1229 74568 74574 "records.ml" 1232 74741 74768
+type(
+  string
+)
+"records.ml" 1228 74517 74557 "records.ml" 1232 74741 74769
+type(
+  unit -> string
+)
+"records.ml" 1232 74741 74781 "records.ml" 1232 74741 74785
+type(
+  bool
+)
+"records.ml" 1232 74741 74786 "records.ml" 1232 74741 74788
+type(
+  unit
+)
+"records.ml" 1228 74517 74521 "records.ml" 1232 74741 74788
+type(
+  field
+)
+"records.ml" 1233 74790 74794 "records.ml" 1233 74790 74804
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1233 74790 74811 "records.ml" 1233 74790 74825
+type(
+  string
+)
+"records.ml" 1233 74790 74836 "records.ml" 1233 74790 74838
+type(
+  unit
+)
+"records.ml" 1235 74852 74857 "records.ml" 1235 74852 74861
+type(
+  string
+)
+ident(
+  def name "records.ml" 1236 74919 74920 "records.ml" 1236 74919 75015
+)
+"records.ml" 1235 74852 74864 "records.ml" 1235 74852 74878
+type(
+  (string -> string, unit, string) format -> string -> string
+)
+ident(
+  ext_ref Printf.sprintf
+)
+"records.ml" 1235 74852 74879 "records.ml" 1235 74852 74893
+type(
+  (string -> string, unit, string) format
+)
+"records.ml" 1235 74852 74895 "records.ml" 1235 74852 74896
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1235 74852 74897 "records.ml" 1235 74852 74899
+type(
+  unit
+)
+"records.ml" 1235 74852 74894 "records.ml" 1235 74852 74900
+type(
+  API.vBD_t
+)
+"records.ml" 1235 74852 74894 "records.ml" 1235 74852 74915
+type(
+  string
+)
+"records.ml" 1235 74852 74864 "records.ml" 1235 74852 74915
+type(
+  string
+)
+"records.ml" 1236 74919 74920 "records.ml" 1236 74919 74935
+type(
+  float -> string
+)
+ident(
+  int_ref string_of_float "records.ml" 34 990 994 "records.ml" 34 990 1009
+)
+"records.ml" 1236 74919 74938 "records.ml" 1236 74919 74965
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VM -> data_source:string -> float
+)
+ident(
+  ext_ref Client.( Client ).( VM ).query_data_source
+)
+"records.ml" 1236 74919 74966 "records.ml" 1236 74919 74969
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1175 70189 70204 "records.ml" 1175 70189 70207
+)
+"records.ml" 1236 74919 74970 "records.ml" 1236 74919 74980
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1175 70189 70208 "records.ml" 1175 70189 70218
+)
+"records.ml" 1236 74919 74982 "records.ml" 1236 74919 74983
+type(
+  unit -> API.vBD_t
+)
+ident(
+  int_ref x "records.ml" 1179 70369 70375 "records.ml" 1179 70369 70376
+)
+"records.ml" 1236 74919 74984 "records.ml" 1236 74919 74986
+type(
+  unit
+)
+"records.ml" 1236 74919 74981 "records.ml" 1236 74919 74987
+type(
+  API.vBD_t
+)
+"records.ml" 1236 74919 74981 "records.ml" 1236 74919 74998
+type(
+  API.ref_VM
+)
+"records.ml" 1236 74919 74999 "records.ml" 1236 74919 75003
+type(
+  string
+)
+ident(
+  int_ref name "records.ml" 1235 74852 74857 "records.ml" 1235 74852 74861
+)
+"records.ml" 1236 74919 74937 "records.ml" 1236 74919 75004
+type(
+  float
+)
+"records.ml" 1236 74919 75005 "records.ml" 1236 74919 75007
+type(
+  float -> float -> float
+)
+ident(
+  ext_ref Pervasives.( /. )
+)
+"records.ml" 1236 74919 75008 "records.ml" 1236 74919 75014
+type(
+  float
+)
+"records.ml" 1236 74919 74936 "records.ml" 1236 74919 75015
+type(
+  float
+)
+"records.ml" 1236 74919 74920 "records.ml" 1236 74919 75015
+type(
+  string
+)
+"records.ml" 1235 74852 74853 "records.ml" 1236 74919 75015
+type(
+  string
+)
+"records.ml" 1237 75016 75027 "records.ml" 1237 75016 75028
+type(
+  exn
+)
+"records.ml" 1237 75016 75032 "records.ml" 1237 75016 75043
+type(
+  string
+)
+"records.ml" 1234 74842 74848 "records.ml" 1237 75016 75043
+type(
+  string
+)
+"records.ml" 1233 74790 74831 "records.ml" 1237 75016 75044
+type(
+  unit -> string
+)
+"records.ml" 1237 75016 75056 "records.ml" 1237 75016 75060
+type(
+  bool
+)
+"records.ml" 1237 75016 75061 "records.ml" 1237 75016 75063
+type(
+  unit
+)
+"records.ml" 1233 74790 74794 "records.ml" 1237 75016 75063
+type(
+  field
+)
+"records.ml" 1185 70572 70574 "records.ml" 1238 75065 75068
+type(
+  field list
+)
+"records.ml" 1180 70400 70402 "records.ml" 1238 75065 75069
+type(
+  ([ `VBD ], API.vBD_t) record
+)
+"records.ml" 1179 70369 70371 "records.ml" 1238 75065 75069
+type(
+  ([ `VBD ], API.vBD_t) record
+)
+"records.ml" 1178 70334 70336 "records.ml" 1238 75065 75069
+type(
+  ([ `VBD ], API.vBD_t) record
+)
+"records.ml" 1177 70249 70251 "records.ml" 1238 75065 75069
+type(
+  ([ `VBD ], API.vBD_t) record
+)
+"records.ml" 1176 70225 70227 "records.ml" 1238 75065 75069
+type(
+  ([ `VBD ], API.vBD_t) record
+)
+"records.ml" 1240 75071 75075 "records.ml" 1240 75071 75091
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session ->
+  API.ref_crashdump -> ([ `crashdump ], API.crashdump_t) record
+)
+ident(
+  def crashdump_record "records.ml" 1259 75865 75865 --
+)
+"records.ml" 1240 75071 75092 "records.ml" 1240 75071 75095
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 1240 75071 75096 "records.ml" 1257 75859 75863
+)
+"records.ml" 1240 75071 75096 "records.ml" 1240 75071 75106
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 1240 75071 75107 "records.ml" 1257 75859 75863
+)
+"records.ml" 1240 75071 75107 "records.ml" 1240 75071 75116
+type(
+  API.ref_crashdump
+)
+ident(
+  def crashdump "records.ml" 1241 75119 75121 "records.ml" 1257 75859 75863
+)
+"records.ml" 1241 75119 75125 "records.ml" 1241 75119 75129
+type(
+  API.ref_crashdump ref
+)
+"records.ml" 1241 75119 75132 "records.ml" 1241 75119 75135
+type(
+  API.ref_crashdump -> API.ref_crashdump ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1241 75119 75136 "records.ml" 1241 75119 75145
+type(
+  API.ref_crashdump
+)
+ident(
+  int_ref crashdump "records.ml" 1240 75071 75107 "records.ml" 1240 75071 75116
+)
+"records.ml" 1241 75119 75132 "records.ml" 1241 75119 75145
+type(
+  API.ref_crashdump ref
+)
+"records.ml" 1242 75149 75155 "records.ml" 1242 75149 75167
+type(
+  API.crashdump_t lzy
+)
+"records.ml" 1242 75149 75181 "records.ml" 1242 75149 75183
+type(
+  unit
+)
+"records.ml" 1242 75149 75187 "records.ml" 1242 75149 75214
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_crashdump -> API.crashdump_t
+)
+ident(
+  ext_ref Client.( Client ).( Crashdump ).get_record
+)
+"records.ml" 1242 75149 75215 "records.ml" 1242 75149 75218
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1240 75071 75092 "records.ml" 1240 75071 75095
+)
+"records.ml" 1242 75149 75219 "records.ml" 1242 75149 75229
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1240 75071 75096 "records.ml" 1240 75071 75106
+)
+"records.ml" 1242 75149 75230 "records.ml" 1242 75149 75231
+type(
+  API.ref_crashdump ref -> API.ref_crashdump
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1242 75149 75231 "records.ml" 1242 75149 75235
+type(
+  API.ref_crashdump ref
+)
+ident(
+  int_ref _ref "records.ml" 1241 75119 75125 "records.ml" 1241 75119 75129
+)
+"records.ml" 1242 75149 75230 "records.ml" 1242 75149 75235
+type(
+  API.ref_crashdump
+)
+"records.ml" 1242 75149 75187 "records.ml" 1242 75149 75235
+type(
+  API.crashdump_t
+)
+"records.ml" 1242 75149 75176 "records.ml" 1242 75149 75236
+type(
+  unit -> API.crashdump_t
+)
+"records.ml" 1242 75149 75170 "records.ml" 1242 75149 75236
+type(
+  API.crashdump_t lzy
+)
+"records.ml" 1243 75240 75246 "records.ml" 1243 75240 75252
+type(
+  API.crashdump_t lzy ref
+)
+"records.ml" 1243 75240 75255 "records.ml" 1243 75240 75258
+type(
+  API.crashdump_t lzy -> API.crashdump_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1243 75240 75259 "records.ml" 1243 75240 75271
+type(
+  API.crashdump_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1242 75149 75155 "records.ml" 1242 75149 75167
+)
+"records.ml" 1243 75240 75255 "records.ml" 1243 75240 75271
+type(
+  API.crashdump_t lzy ref
+)
+"records.ml" 1244 75275 75281 "records.ml" 1244 75275 75282
+type(
+  unit -> API.crashdump_t
+)
+"records.ml" 1244 75275 75283 "records.ml" 1244 75275 75285
+type(
+  unit
+)
+"records.ml" 1244 75275 75288 "records.ml" 1244 75275 75295
+type(
+  API.crashdump_t lzy ref -> API.crashdump_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 1244 75275 75296 "records.ml" 1244 75275 75302
+type(
+  API.crashdump_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1243 75240 75246 "records.ml" 1243 75240 75252
+)
+"records.ml" 1244 75275 75288 "records.ml" 1244 75275 75302
+type(
+  API.crashdump_t
+)
+"records.ml" 1245 75306 75322 "records.ml" 1245 75306 75323
+type(
+  API.ref_crashdump
+)
+ident(
+  def r "records.ml" 1245 75306 75327 "records.ml" 1245 75306 75360
+)
+"records.ml" 1245 75306 75327 "records.ml" 1245 75306 75331
+type(
+  API.ref_crashdump ref
+)
+ident(
+  int_ref _ref "records.ml" 1241 75119 75125 "records.ml" 1241 75119 75129
+)
+"records.ml" 1245 75306 75332 "records.ml" 1245 75306 75334
+type(
+  API.ref_crashdump ref -> API.ref_crashdump -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1245 75306 75335 "records.ml" 1245 75306 75336
+type(
+  API.ref_crashdump
+)
+ident(
+  int_ref r "records.ml" 1245 75306 75322 "records.ml" 1245 75306 75323
+)
+"records.ml" 1245 75306 75327 "records.ml" 1245 75306 75336
+type(
+  unit
+)
+"records.ml" 1245 75306 75338 "records.ml" 1245 75306 75344
+type(
+  API.crashdump_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1243 75240 75246 "records.ml" 1243 75240 75252
+)
+"records.ml" 1245 75306 75345 "records.ml" 1245 75306 75347
+type(
+  API.crashdump_t lzy ref -> API.crashdump_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1245 75306 75348 "records.ml" 1245 75306 75360
+type(
+  API.crashdump_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1242 75149 75155 "records.ml" 1242 75149 75167
+)
+"records.ml" 1245 75306 75338 "records.ml" 1245 75306 75360
+type(
+  unit
+)
+"records.ml" 1245 75306 75327 "records.ml" 1245 75306 75360
+type(
+  unit
+)
+"records.ml" 1245 75306 75317 "records.ml" 1245 75306 75362
+type(
+  API.ref_crashdump -> unit
+)
+"records.ml" 1246 75364 75384 "records.ml" 1246 75364 75385
+type(
+  API.ref_crashdump
+)
+ident(
+  def a "records.ml" 1246 75364 75392 "records.ml" 1246 75364 75418
+)
+"records.ml" 1246 75364 75386 "records.ml" 1246 75364 75387
+type(
+  API.crashdump_t
+)
+ident(
+  def b "records.ml" 1246 75364 75392 "records.ml" 1246 75364 75418
+)
+"records.ml" 1246 75364 75383 "records.ml" 1246 75364 75388
+type(
+  API.ref_crashdump * API.crashdump_t
+)
+"records.ml" 1246 75364 75392 "records.ml" 1246 75364 75396
+type(
+  API.ref_crashdump ref
+)
+ident(
+  int_ref _ref "records.ml" 1241 75119 75125 "records.ml" 1241 75119 75129
+)
+"records.ml" 1246 75364 75397 "records.ml" 1246 75364 75399
+type(
+  API.ref_crashdump ref -> API.ref_crashdump -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1246 75364 75400 "records.ml" 1246 75364 75401
+type(
+  API.ref_crashdump
+)
+ident(
+  int_ref a "records.ml" 1246 75364 75384 "records.ml" 1246 75364 75385
+)
+"records.ml" 1246 75364 75392 "records.ml" 1246 75364 75401
+type(
+  unit
+)
+"records.ml" 1246 75364 75403 "records.ml" 1246 75364 75409
+type(
+  API.crashdump_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1243 75240 75246 "records.ml" 1243 75240 75252
+)
+"records.ml" 1246 75364 75410 "records.ml" 1246 75364 75412
+type(
+  API.crashdump_t lzy ref -> API.crashdump_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1246 75364 75417 "records.ml" 1246 75364 75418
+type(
+  API.crashdump_t
+)
+ident(
+  int_ref b "records.ml" 1246 75364 75386 "records.ml" 1246 75364 75387
+)
+"records.ml" 1246 75364 75413 "records.ml" 1246 75364 75418
+type(
+  API.crashdump_t lzy
+)
+"records.ml" 1246 75364 75403 "records.ml" 1246 75364 75418
+type(
+  unit
+)
+"records.ml" 1246 75364 75392 "records.ml" 1246 75364 75418
+type(
+  unit
+)
+"records.ml" 1246 75364 75378 "records.ml" 1246 75364 75419
+type(
+  API.ref_crashdump * API.crashdump_t -> unit
+)
+"records.ml" 1247 75421 75432 "records.ml" 1247 75421 75433
+type(
+  unit -> API.crashdump_t
+)
+ident(
+  int_ref x "records.ml" 1244 75275 75281 "records.ml" 1244 75275 75282
+)
+"records.ml" 1248 75435 75451 "records.ml" 1248 75435 75453
+type(
+  unit
+)
+"records.ml" 1248 75435 75457 "records.ml" 1248 75435 75458
+type(
+  API.ref_crashdump ref -> API.ref_crashdump
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1248 75435 75458 "records.ml" 1248 75435 75462
+type(
+  API.ref_crashdump ref
+)
+ident(
+  int_ref _ref "records.ml" 1241 75119 75125 "records.ml" 1241 75119 75129
+)
+"records.ml" 1248 75435 75457 "records.ml" 1248 75435 75462
+type(
+  API.ref_crashdump
+)
+"records.ml" 1248 75435 75446 "records.ml" 1248 75435 75463
+type(
+  unit -> API.ref_crashdump
+)
+"records.ml" 1251 75482 75486 "records.ml" 1251 75482 75496
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1251 75482 75503 "records.ml" 1251 75482 75509
+type(
+  string
+)
+"records.ml" 1251 75482 75520 "records.ml" 1251 75482 75522
+type(
+  unit
+)
+"records.ml" 1251 75482 75527 "records.ml" 1251 75482 75528
+type(
+  unit -> API.crashdump_t
+)
+ident(
+  int_ref x "records.ml" 1244 75275 75281 "records.ml" 1244 75275 75282
+)
+"records.ml" 1251 75482 75529 "records.ml" 1251 75482 75531
+type(
+  unit
+)
+"records.ml" 1251 75482 75526 "records.ml" 1251 75482 75532
+type(
+  API.crashdump_t
+)
+"records.ml" 1251 75482 75526 "records.ml" 1251 75482 75551
+type(
+  string
+)
+"records.ml" 1251 75482 75515 "records.ml" 1251 75482 75552
+type(
+  unit -> string
+)
+"records.ml" 1251 75482 75553 "records.ml" 1251 75482 75555
+type(
+  unit
+)
+"records.ml" 1251 75482 75486 "records.ml" 1251 75482 75555
+type(
+  field
+)
+"records.ml" 1252 75557 75561 "records.ml" 1252 75557 75571
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1252 75557 75578 "records.ml" 1252 75557 75587
+type(
+  string
+)
+"records.ml" 1253 75588 75604 "records.ml" 1253 75588 75606
+type(
+  unit
+)
+"records.ml" 1253 75588 75610 "records.ml" 1253 75588 75627
+type(
+  API.ref_VM -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1253 75588 75629 "records.ml" 1253 75588 75630
+type(
+  unit -> API.crashdump_t
+)
+ident(
+  int_ref x "records.ml" 1244 75275 75281 "records.ml" 1244 75275 75282
+)
+"records.ml" 1253 75588 75631 "records.ml" 1253 75588 75633
+type(
+  unit
+)
+"records.ml" 1253 75588 75628 "records.ml" 1253 75588 75634
+type(
+  API.crashdump_t
+)
+"records.ml" 1253 75588 75628 "records.ml" 1253 75588 75651
+type(
+  API.ref_VM
+)
+"records.ml" 1253 75588 75610 "records.ml" 1253 75588 75651
+type(
+  string
+)
+"records.ml" 1253 75588 75599 "records.ml" 1253 75588 75652
+type(
+  unit -> string
+)
+"records.ml" 1253 75588 75653 "records.ml" 1253 75588 75655
+type(
+  unit
+)
+"records.ml" 1252 75557 75561 "records.ml" 1253 75588 75655
+type(
+  field
+)
+"records.ml" 1254 75657 75661 "records.ml" 1254 75657 75671
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1254 75657 75678 "records.ml" 1254 75657 75693
+type(
+  string
+)
+"records.ml" 1255 75694 75710 "records.ml" 1255 75694 75712
+type(
+  unit
+)
+"records.ml" 1255 75694 75716 "records.ml" 1255 75694 75733
+type(
+  API.ref_VM -> string
+)
+ident(
+  int_ref get_name_from_ref "records.ml" 103 3658 3662 "records.ml" 103 3658 3679
+)
+"records.ml" 1255 75694 75735 "records.ml" 1255 75694 75736
+type(
+  unit -> API.crashdump_t
+)
+ident(
+  int_ref x "records.ml" 1244 75275 75281 "records.ml" 1244 75275 75282
+)
+"records.ml" 1255 75694 75737 "records.ml" 1255 75694 75739
+type(
+  unit
+)
+"records.ml" 1255 75694 75734 "records.ml" 1255 75694 75740
+type(
+  API.crashdump_t
+)
+"records.ml" 1255 75694 75734 "records.ml" 1255 75694 75757
+type(
+  API.ref_VM
+)
+"records.ml" 1255 75694 75716 "records.ml" 1255 75694 75757
+type(
+  string
+)
+"records.ml" 1255 75694 75705 "records.ml" 1255 75694 75758
+type(
+  unit -> string
+)
+"records.ml" 1255 75694 75759 "records.ml" 1255 75694 75761
+type(
+  unit
+)
+"records.ml" 1254 75657 75661 "records.ml" 1255 75694 75761
+type(
+  field
+)
+"records.ml" 1256 75763 75767 "records.ml" 1256 75763 75777
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1256 75763 75784 "records.ml" 1256 75763 75794
+type(
+  string
+)
+"records.ml" 1256 75763 75805 "records.ml" 1256 75763 75807
+type(
+  unit
+)
+"records.ml" 1256 75763 75811 "records.ml" 1256 75763 75828
+type(
+  API.ref_VDI -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1256 75763 75830 "records.ml" 1256 75763 75831
+type(
+  unit -> API.crashdump_t
+)
+ident(
+  int_ref x "records.ml" 1244 75275 75281 "records.ml" 1244 75275 75282
+)
+"records.ml" 1256 75763 75832 "records.ml" 1256 75763 75834
+type(
+  unit
+)
+"records.ml" 1256 75763 75829 "records.ml" 1256 75763 75835
+type(
+  API.crashdump_t
+)
+"records.ml" 1256 75763 75829 "records.ml" 1256 75763 75853
+type(
+  API.ref_VDI
+)
+"records.ml" 1256 75763 75811 "records.ml" 1256 75763 75853
+type(
+  string
+)
+"records.ml" 1256 75763 75800 "records.ml" 1256 75763 75854
+type(
+  unit -> string
+)
+"records.ml" 1256 75763 75855 "records.ml" 1256 75763 75857
+type(
+  unit
+)
+"records.ml" 1256 75763 75767 "records.ml" 1256 75763 75857
+type(
+  field
+)
+"records.ml" 1250 75478 75480 "records.ml" 1257 75859 75862
+type(
+  field list
+)
+"records.ml" 1245 75306 75308 "records.ml" 1257 75859 75863
+type(
+  ([ `crashdump ], API.crashdump_t) record
+)
+"records.ml" 1244 75275 75277 "records.ml" 1257 75859 75863
+type(
+  ([ `crashdump ], API.crashdump_t) record
+)
+"records.ml" 1243 75240 75242 "records.ml" 1257 75859 75863
+type(
+  ([ `crashdump ], API.crashdump_t) record
+)
+"records.ml" 1242 75149 75151 "records.ml" 1257 75859 75863
+type(
+  ([ `crashdump ], API.crashdump_t) record
+)
+"records.ml" 1241 75119 75121 "records.ml" 1257 75859 75863
+type(
+  ([ `crashdump ], API.crashdump_t) record
+)
+"records.ml" 1259 75865 75869 "records.ml" 1259 75865 75878
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_SM -> ([ `SM ], API.sM_t) record
+)
+ident(
+  def sm_record "records.ml" 1283 77126 77126 --
+)
+"records.ml" 1259 75865 75879 "records.ml" 1259 75865 75882
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 1259 75865 75883 "records.ml" 1280 77119 77123
+)
+"records.ml" 1259 75865 75883 "records.ml" 1259 75865 75893
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 1259 75865 75894 "records.ml" 1280 77119 77123
+)
+"records.ml" 1259 75865 75894 "records.ml" 1259 75865 75896
+type(
+  API.ref_SM
+)
+ident(
+  def sm "records.ml" 1260 75900 75902 "records.ml" 1280 77119 77123
+)
+"records.ml" 1260 75900 75906 "records.ml" 1260 75900 75910
+type(
+  API.ref_SM ref
+)
+"records.ml" 1260 75900 75913 "records.ml" 1260 75900 75916
+type(
+  API.ref_SM -> API.ref_SM ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1260 75900 75917 "records.ml" 1260 75900 75919
+type(
+  API.ref_SM
+)
+ident(
+  int_ref sm "records.ml" 1259 75865 75894 "records.ml" 1259 75865 75896
+)
+"records.ml" 1260 75900 75913 "records.ml" 1260 75900 75919
+type(
+  API.ref_SM ref
+)
+"records.ml" 1261 75923 75929 "records.ml" 1261 75923 75941
+type(
+  API.sM_t lzy
+)
+"records.ml" 1261 75923 75955 "records.ml" 1261 75923 75957
+type(
+  unit
+)
+"records.ml" 1261 75923 75961 "records.ml" 1261 75923 75981
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_SM -> API.sM_t
+)
+ident(
+  ext_ref Client.( Client ).( SM ).get_record
+)
+"records.ml" 1261 75923 75982 "records.ml" 1261 75923 75985
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1259 75865 75879 "records.ml" 1259 75865 75882
+)
+"records.ml" 1261 75923 75986 "records.ml" 1261 75923 75996
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1259 75865 75883 "records.ml" 1259 75865 75893
+)
+"records.ml" 1261 75923 75997 "records.ml" 1261 75923 75998
+type(
+  API.ref_SM ref -> API.ref_SM
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1261 75923 75998 "records.ml" 1261 75923 76002
+type(
+  API.ref_SM ref
+)
+ident(
+  int_ref _ref "records.ml" 1260 75900 75906 "records.ml" 1260 75900 75910
+)
+"records.ml" 1261 75923 75997 "records.ml" 1261 75923 76002
+type(
+  API.ref_SM
+)
+"records.ml" 1261 75923 75961 "records.ml" 1261 75923 76002
+type(
+  API.sM_t
+)
+"records.ml" 1261 75923 75950 "records.ml" 1261 75923 76003
+type(
+  unit -> API.sM_t
+)
+"records.ml" 1261 75923 75944 "records.ml" 1261 75923 76003
+type(
+  API.sM_t lzy
+)
+"records.ml" 1262 76007 76013 "records.ml" 1262 76007 76019
+type(
+  API.sM_t lzy ref
+)
+"records.ml" 1262 76007 76022 "records.ml" 1262 76007 76025
+type(
+  API.sM_t lzy -> API.sM_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1262 76007 76026 "records.ml" 1262 76007 76038
+type(
+  API.sM_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1261 75923 75929 "records.ml" 1261 75923 75941
+)
+"records.ml" 1262 76007 76022 "records.ml" 1262 76007 76038
+type(
+  API.sM_t lzy ref
+)
+"records.ml" 1263 76042 76048 "records.ml" 1263 76042 76049
+type(
+  unit -> API.sM_t
+)
+"records.ml" 1263 76042 76050 "records.ml" 1263 76042 76052
+type(
+  unit
+)
+"records.ml" 1263 76042 76055 "records.ml" 1263 76042 76062
+type(
+  API.sM_t lzy ref -> API.sM_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 1263 76042 76063 "records.ml" 1263 76042 76069
+type(
+  API.sM_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1262 76007 76013 "records.ml" 1262 76007 76019
+)
+"records.ml" 1263 76042 76055 "records.ml" 1263 76042 76069
+type(
+  API.sM_t
+)
+"records.ml" 1264 76073 76089 "records.ml" 1264 76073 76090
+type(
+  API.ref_SM
+)
+ident(
+  def r "records.ml" 1264 76073 76094 "records.ml" 1264 76073 76127
+)
+"records.ml" 1264 76073 76094 "records.ml" 1264 76073 76098
+type(
+  API.ref_SM ref
+)
+ident(
+  int_ref _ref "records.ml" 1260 75900 75906 "records.ml" 1260 75900 75910
+)
+"records.ml" 1264 76073 76099 "records.ml" 1264 76073 76101
+type(
+  API.ref_SM ref -> API.ref_SM -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1264 76073 76102 "records.ml" 1264 76073 76103
+type(
+  API.ref_SM
+)
+ident(
+  int_ref r "records.ml" 1264 76073 76089 "records.ml" 1264 76073 76090
+)
+"records.ml" 1264 76073 76094 "records.ml" 1264 76073 76103
+type(
+  unit
+)
+"records.ml" 1264 76073 76105 "records.ml" 1264 76073 76111
+type(
+  API.sM_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1262 76007 76013 "records.ml" 1262 76007 76019
+)
+"records.ml" 1264 76073 76112 "records.ml" 1264 76073 76114
+type(
+  API.sM_t lzy ref -> API.sM_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1264 76073 76115 "records.ml" 1264 76073 76127
+type(
+  API.sM_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1261 75923 75929 "records.ml" 1261 75923 75941
+)
+"records.ml" 1264 76073 76105 "records.ml" 1264 76073 76127
+type(
+  unit
+)
+"records.ml" 1264 76073 76094 "records.ml" 1264 76073 76127
+type(
+  unit
+)
+"records.ml" 1264 76073 76084 "records.ml" 1264 76073 76129
+type(
+  API.ref_SM -> unit
+)
+"records.ml" 1265 76131 76151 "records.ml" 1265 76131 76152
+type(
+  API.ref_SM
+)
+ident(
+  def a "records.ml" 1265 76131 76159 "records.ml" 1265 76131 76185
+)
+"records.ml" 1265 76131 76153 "records.ml" 1265 76131 76154
+type(
+  API.sM_t
+)
+ident(
+  def b "records.ml" 1265 76131 76159 "records.ml" 1265 76131 76185
+)
+"records.ml" 1265 76131 76150 "records.ml" 1265 76131 76155
+type(
+  API.ref_SM * API.sM_t
+)
+"records.ml" 1265 76131 76159 "records.ml" 1265 76131 76163
+type(
+  API.ref_SM ref
+)
+ident(
+  int_ref _ref "records.ml" 1260 75900 75906 "records.ml" 1260 75900 75910
+)
+"records.ml" 1265 76131 76164 "records.ml" 1265 76131 76166
+type(
+  API.ref_SM ref -> API.ref_SM -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1265 76131 76167 "records.ml" 1265 76131 76168
+type(
+  API.ref_SM
+)
+ident(
+  int_ref a "records.ml" 1265 76131 76151 "records.ml" 1265 76131 76152
+)
+"records.ml" 1265 76131 76159 "records.ml" 1265 76131 76168
+type(
+  unit
+)
+"records.ml" 1265 76131 76170 "records.ml" 1265 76131 76176
+type(
+  API.sM_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1262 76007 76013 "records.ml" 1262 76007 76019
+)
+"records.ml" 1265 76131 76177 "records.ml" 1265 76131 76179
+type(
+  API.sM_t lzy ref -> API.sM_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1265 76131 76184 "records.ml" 1265 76131 76185
+type(
+  API.sM_t
+)
+ident(
+  int_ref b "records.ml" 1265 76131 76153 "records.ml" 1265 76131 76154
+)
+"records.ml" 1265 76131 76180 "records.ml" 1265 76131 76185
+type(
+  API.sM_t lzy
+)
+"records.ml" 1265 76131 76170 "records.ml" 1265 76131 76185
+type(
+  unit
+)
+"records.ml" 1265 76131 76159 "records.ml" 1265 76131 76185
+type(
+  unit
+)
+"records.ml" 1265 76131 76145 "records.ml" 1265 76131 76186
+type(
+  API.ref_SM * API.sM_t -> unit
+)
+"records.ml" 1266 76188 76199 "records.ml" 1266 76188 76200
+type(
+  unit -> API.sM_t
+)
+ident(
+  int_ref x "records.ml" 1263 76042 76048 "records.ml" 1263 76042 76049
+)
+"records.ml" 1267 76202 76218 "records.ml" 1267 76202 76220
+type(
+  unit
+)
+"records.ml" 1267 76202 76224 "records.ml" 1267 76202 76225
+type(
+  API.ref_SM ref -> API.ref_SM
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1267 76202 76225 "records.ml" 1267 76202 76229
+type(
+  API.ref_SM ref
+)
+ident(
+  int_ref _ref "records.ml" 1260 75900 75906 "records.ml" 1260 75900 75910
+)
+"records.ml" 1267 76202 76224 "records.ml" 1267 76202 76229
+type(
+  API.ref_SM
+)
+"records.ml" 1267 76202 76213 "records.ml" 1267 76202 76230
+type(
+  unit -> API.ref_SM
+)
+"records.ml" 1270 76250 76254 "records.ml" 1270 76250 76264
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1270 76250 76271 "records.ml" 1270 76250 76277
+type(
+  string
+)
+"records.ml" 1270 76250 76288 "records.ml" 1270 76250 76290
+type(
+  unit
+)
+"records.ml" 1270 76250 76295 "records.ml" 1270 76250 76296
+type(
+  unit -> API.sM_t
+)
+ident(
+  int_ref x "records.ml" 1263 76042 76048 "records.ml" 1263 76042 76049
+)
+"records.ml" 1270 76250 76297 "records.ml" 1270 76250 76299
+type(
+  unit
+)
+"records.ml" 1270 76250 76294 "records.ml" 1270 76250 76300
+type(
+  API.sM_t
+)
+"records.ml" 1270 76250 76294 "records.ml" 1270 76250 76312
+type(
+  string
+)
+"records.ml" 1270 76250 76283 "records.ml" 1270 76250 76313
+type(
+  unit -> string
+)
+"records.ml" 1270 76250 76314 "records.ml" 1270 76250 76316
+type(
+  unit
+)
+"records.ml" 1270 76250 76254 "records.ml" 1270 76250 76316
+type(
+  field
+)
+"records.ml" 1271 76318 76322 "records.ml" 1271 76318 76332
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1271 76318 76339 "records.ml" 1271 76318 76351
+type(
+  string
+)
+"records.ml" 1271 76318 76362 "records.ml" 1271 76318 76364
+type(
+  unit
+)
+"records.ml" 1271 76318 76369 "records.ml" 1271 76318 76370
+type(
+  unit -> API.sM_t
+)
+ident(
+  int_ref x "records.ml" 1263 76042 76048 "records.ml" 1263 76042 76049
+)
+"records.ml" 1271 76318 76371 "records.ml" 1271 76318 76373
+type(
+  unit
+)
+"records.ml" 1271 76318 76368 "records.ml" 1271 76318 76374
+type(
+  API.sM_t
+)
+"records.ml" 1271 76318 76368 "records.ml" 1271 76318 76392
+type(
+  string
+)
+"records.ml" 1271 76318 76357 "records.ml" 1271 76318 76393
+type(
+  unit -> string
+)
+"records.ml" 1271 76318 76394 "records.ml" 1271 76318 76396
+type(
+  unit
+)
+"records.ml" 1271 76318 76322 "records.ml" 1271 76318 76396
+type(
+  field
+)
+"records.ml" 1272 76398 76402 "records.ml" 1272 76398 76412
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1272 76398 76419 "records.ml" 1272 76398 76437
+type(
+  string
+)
+"records.ml" 1272 76398 76448 "records.ml" 1272 76398 76450
+type(
+  unit
+)
+"records.ml" 1272 76398 76455 "records.ml" 1272 76398 76456
+type(
+  unit -> API.sM_t
+)
+ident(
+  int_ref x "records.ml" 1263 76042 76048 "records.ml" 1263 76042 76049
+)
+"records.ml" 1272 76398 76457 "records.ml" 1272 76398 76459
+type(
+  unit
+)
+"records.ml" 1272 76398 76454 "records.ml" 1272 76398 76460
+type(
+  API.sM_t
+)
+"records.ml" 1272 76398 76454 "records.ml" 1272 76398 76484
+type(
+  string
+)
+"records.ml" 1272 76398 76443 "records.ml" 1272 76398 76485
+type(
+  unit -> string
+)
+"records.ml" 1272 76398 76486 "records.ml" 1272 76398 76488
+type(
+  unit
+)
+"records.ml" 1272 76398 76402 "records.ml" 1272 76398 76488
+type(
+  field
+)
+"records.ml" 1273 76490 76494 "records.ml" 1273 76490 76504
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1273 76490 76511 "records.ml" 1273 76490 76517
+type(
+  string
+)
+"records.ml" 1273 76490 76528 "records.ml" 1273 76490 76530
+type(
+  unit
+)
+"records.ml" 1273 76490 76535 "records.ml" 1273 76490 76536
+type(
+  unit -> API.sM_t
+)
+ident(
+  int_ref x "records.ml" 1263 76042 76048 "records.ml" 1263 76042 76049
+)
+"records.ml" 1273 76490 76537 "records.ml" 1273 76490 76539
+type(
+  unit
+)
+"records.ml" 1273 76490 76534 "records.ml" 1273 76490 76540
+type(
+  API.sM_t
+)
+"records.ml" 1273 76490 76534 "records.ml" 1273 76490 76552
+type(
+  string
+)
+"records.ml" 1273 76490 76523 "records.ml" 1273 76490 76553
+type(
+  unit -> string
+)
+"records.ml" 1273 76490 76554 "records.ml" 1273 76490 76556
+type(
+  unit
+)
+"records.ml" 1273 76490 76494 "records.ml" 1273 76490 76556
+type(
+  field
+)
+"records.ml" 1274 76558 76562 "records.ml" 1274 76558 76572
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1274 76558 76579 "records.ml" 1274 76558 76587
+type(
+  string
+)
+"records.ml" 1274 76558 76598 "records.ml" 1274 76558 76600
+type(
+  unit
+)
+"records.ml" 1274 76558 76605 "records.ml" 1274 76558 76606
+type(
+  unit -> API.sM_t
+)
+ident(
+  int_ref x "records.ml" 1263 76042 76048 "records.ml" 1263 76042 76049
+)
+"records.ml" 1274 76558 76607 "records.ml" 1274 76558 76609
+type(
+  unit
+)
+"records.ml" 1274 76558 76604 "records.ml" 1274 76558 76610
+type(
+  API.sM_t
+)
+"records.ml" 1274 76558 76604 "records.ml" 1274 76558 76624
+type(
+  string
+)
+"records.ml" 1274 76558 76593 "records.ml" 1274 76558 76625
+type(
+  unit -> string
+)
+"records.ml" 1274 76558 76626 "records.ml" 1274 76558 76628
+type(
+  unit
+)
+"records.ml" 1274 76558 76562 "records.ml" 1274 76558 76628
+type(
+  field
+)
+"records.ml" 1275 76630 76634 "records.ml" 1275 76630 76644
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1275 76630 76651 "records.ml" 1275 76630 76662
+type(
+  string
+)
+"records.ml" 1275 76630 76673 "records.ml" 1275 76630 76675
+type(
+  unit
+)
+"records.ml" 1275 76630 76680 "records.ml" 1275 76630 76681
+type(
+  unit -> API.sM_t
+)
+ident(
+  int_ref x "records.ml" 1263 76042 76048 "records.ml" 1263 76042 76049
+)
+"records.ml" 1275 76630 76682 "records.ml" 1275 76630 76684
+type(
+  unit
+)
+"records.ml" 1275 76630 76679 "records.ml" 1275 76630 76685
+type(
+  API.sM_t
+)
+"records.ml" 1275 76630 76679 "records.ml" 1275 76630 76702
+type(
+  string
+)
+"records.ml" 1275 76630 76668 "records.ml" 1275 76630 76703
+type(
+  unit -> string
+)
+"records.ml" 1275 76630 76704 "records.ml" 1275 76630 76706
+type(
+  unit
+)
+"records.ml" 1275 76630 76634 "records.ml" 1275 76630 76706
+type(
+  field
+)
+"records.ml" 1276 76708 76712 "records.ml" 1276 76708 76722
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1276 76708 76729 "records.ml" 1276 76708 76751
+type(
+  string
+)
+"records.ml" 1276 76708 76762 "records.ml" 1276 76708 76764
+type(
+  unit
+)
+"records.ml" 1276 76708 76769 "records.ml" 1276 76708 76770
+type(
+  unit -> API.sM_t
+)
+ident(
+  int_ref x "records.ml" 1263 76042 76048 "records.ml" 1263 76042 76049
+)
+"records.ml" 1276 76708 76771 "records.ml" 1276 76708 76773
+type(
+  unit
+)
+"records.ml" 1276 76708 76768 "records.ml" 1276 76708 76774
+type(
+  API.sM_t
+)
+"records.ml" 1276 76708 76768 "records.ml" 1276 76708 76802
+type(
+  string
+)
+"records.ml" 1276 76708 76757 "records.ml" 1276 76708 76803
+type(
+  unit -> string
+)
+"records.ml" 1276 76708 76804 "records.ml" 1276 76708 76806
+type(
+  unit
+)
+"records.ml" 1276 76708 76712 "records.ml" 1276 76708 76806
+type(
+  field
+)
+"records.ml" 1277 76808 76812 "records.ml" 1277 76808 76822
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1277 76808 76829 "records.ml" 1277 76808 76843
+type(
+  string
+)
+"records.ml" 1277 76808 76854 "records.ml" 1277 76808 76856
+type(
+  unit
+)
+"records.ml" 1277 76808 76860 "records.ml" 1277 76808 76873
+type(
+  string -> API.string_set -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1277 76808 76874 "records.ml" 1277 76808 76878
+type(
+  string
+)
+"records.ml" 1277 76808 76880 "records.ml" 1277 76808 76881
+type(
+  unit -> API.sM_t
+)
+ident(
+  int_ref x "records.ml" 1263 76042 76048 "records.ml" 1263 76042 76049
+)
+"records.ml" 1277 76808 76882 "records.ml" 1277 76808 76884
+type(
+  unit
+)
+"records.ml" 1277 76808 76879 "records.ml" 1277 76808 76885
+type(
+  API.sM_t
+)
+"records.ml" 1277 76808 76879 "records.ml" 1277 76808 76905
+type(
+  API.string_set
+)
+"records.ml" 1277 76808 76860 "records.ml" 1277 76808 76905
+type(
+  string
+)
+"records.ml" 1277 76808 76849 "records.ml" 1277 76808 76906
+type(
+  unit -> string
+)
+"records.ml" 1277 76808 76907 "records.ml" 1277 76808 76909
+type(
+  unit
+)
+"records.ml" 1277 76808 76812 "records.ml" 1277 76808 76909
+type(
+  field
+)
+"records.ml" 1278 76911 76915 "records.ml" 1278 76911 76925
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1278 76911 76932 "records.ml" 1278 76911 76947
+type(
+  string
+)
+"records.ml" 1278 76911 76958 "records.ml" 1278 76911 76960
+type(
+  unit
+)
+"records.ml" 1278 76911 76964 "records.ml" 1278 76911 76990
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 1278 76911 76991 "records.ml" 1278 76911 76995
+type(
+  string
+)
+"records.ml" 1278 76911 76997 "records.ml" 1278 76911 76998
+type(
+  unit -> API.sM_t
+)
+ident(
+  int_ref x "records.ml" 1263 76042 76048 "records.ml" 1263 76042 76049
+)
+"records.ml" 1278 76911 76999 "records.ml" 1278 76911 77001
+type(
+  unit
+)
+"records.ml" 1278 76911 76996 "records.ml" 1278 76911 77002
+type(
+  API.sM_t
+)
+"records.ml" 1278 76911 76996 "records.ml" 1278 76911 77023
+type(
+  API.string_to_string_map
+)
+"records.ml" 1278 76911 76964 "records.ml" 1278 76911 77023
+type(
+  string
+)
+"records.ml" 1278 76911 76953 "records.ml" 1278 76911 77024
+type(
+  unit -> string
+)
+"records.ml" 1278 76911 77025 "records.ml" 1278 76911 77027
+type(
+  unit
+)
+"records.ml" 1278 76911 76915 "records.ml" 1278 76911 77027
+type(
+  field
+)
+"records.ml" 1279 77029 77033 "records.ml" 1279 77029 77043
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1279 77029 77050 "records.ml" 1279 77029 77067
+type(
+  string
+)
+"records.ml" 1279 77029 77078 "records.ml" 1279 77029 77080
+type(
+  unit
+)
+"records.ml" 1279 77029 77085 "records.ml" 1279 77029 77086
+type(
+  unit -> API.sM_t
+)
+ident(
+  int_ref x "records.ml" 1263 76042 76048 "records.ml" 1263 76042 76049
+)
+"records.ml" 1279 77029 77087 "records.ml" 1279 77029 77089
+type(
+  unit
+)
+"records.ml" 1279 77029 77084 "records.ml" 1279 77029 77090
+type(
+  API.sM_t
+)
+"records.ml" 1279 77029 77084 "records.ml" 1279 77029 77113
+type(
+  string
+)
+"records.ml" 1279 77029 77073 "records.ml" 1279 77029 77114
+type(
+  unit -> string
+)
+"records.ml" 1279 77029 77115 "records.ml" 1279 77029 77117
+type(
+  unit
+)
+"records.ml" 1279 77029 77033 "records.ml" 1279 77029 77117
+type(
+  field
+)
+"records.ml" 1269 76246 76248 "records.ml" 1280 77119 77122
+type(
+  field list
+)
+"records.ml" 1264 76073 76075 "records.ml" 1280 77119 77123
+type(
+  ([ `SM ], API.sM_t) record
+)
+"records.ml" 1263 76042 76044 "records.ml" 1280 77119 77123
+type(
+  ([ `SM ], API.sM_t) record
+)
+"records.ml" 1262 76007 76009 "records.ml" 1280 77119 77123
+type(
+  ([ `SM ], API.sM_t) record
+)
+"records.ml" 1261 75923 75925 "records.ml" 1280 77119 77123
+type(
+  ([ `SM ], API.sM_t) record
+)
+"records.ml" 1260 75900 75902 "records.ml" 1280 77119 77123
+type(
+  ([ `SM ], API.sM_t) record
+)
+"records.ml" 1283 77126 77130 "records.ml" 1283 77126 77139
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_SR -> ([ `SR ], API.sR_t) record
+)
+ident(
+  def sr_record "records.ml" 1339 80814 80814 --
+)
+"records.ml" 1283 77126 77140 "records.ml" 1283 77126 77143
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 1283 77126 77144 "records.ml" 1337 80808 80812
+)
+"records.ml" 1283 77126 77144 "records.ml" 1283 77126 77154
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 1283 77126 77155 "records.ml" 1337 80808 80812
+)
+"records.ml" 1283 77126 77155 "records.ml" 1283 77126 77157
+type(
+  API.ref_SR
+)
+ident(
+  def sr "records.ml" 1284 77160 77161 "records.ml" 1337 80808 80812
+)
+"records.ml" 1284 77160 77165 "records.ml" 1284 77160 77169
+type(
+  API.ref_SR ref
+)
+"records.ml" 1284 77160 77172 "records.ml" 1284 77160 77175
+type(
+  API.ref_SR -> API.ref_SR ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1284 77160 77176 "records.ml" 1284 77160 77178
+type(
+  API.ref_SR
+)
+ident(
+  int_ref sr "records.ml" 1283 77126 77155 "records.ml" 1283 77126 77157
+)
+"records.ml" 1284 77160 77172 "records.ml" 1284 77160 77178
+type(
+  API.ref_SR ref
+)
+"records.ml" 1285 77182 77187 "records.ml" 1285 77182 77199
+type(
+  API.sR_t lzy
+)
+"records.ml" 1285 77182 77213 "records.ml" 1285 77182 77215
+type(
+  unit
+)
+"records.ml" 1285 77182 77219 "records.ml" 1285 77182 77239
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_SR -> API.sR_t
+)
+ident(
+  ext_ref Client.( Client ).( SR ).get_record
+)
+"records.ml" 1285 77182 77240 "records.ml" 1285 77182 77243
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1283 77126 77140 "records.ml" 1283 77126 77143
+)
+"records.ml" 1285 77182 77244 "records.ml" 1285 77182 77254
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1283 77126 77144 "records.ml" 1283 77126 77154
+)
+"records.ml" 1285 77182 77255 "records.ml" 1285 77182 77256
+type(
+  API.ref_SR ref -> API.ref_SR
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1285 77182 77256 "records.ml" 1285 77182 77260
+type(
+  API.ref_SR ref
+)
+ident(
+  int_ref _ref "records.ml" 1284 77160 77165 "records.ml" 1284 77160 77169
+)
+"records.ml" 1285 77182 77255 "records.ml" 1285 77182 77260
+type(
+  API.ref_SR
+)
+"records.ml" 1285 77182 77219 "records.ml" 1285 77182 77260
+type(
+  API.sR_t
+)
+"records.ml" 1285 77182 77208 "records.ml" 1285 77182 77261
+type(
+  unit -> API.sR_t
+)
+"records.ml" 1285 77182 77202 "records.ml" 1285 77182 77261
+type(
+  API.sR_t lzy
+)
+"records.ml" 1286 77265 77270 "records.ml" 1286 77265 77276
+type(
+  API.sR_t lzy ref
+)
+"records.ml" 1286 77265 77279 "records.ml" 1286 77265 77282
+type(
+  API.sR_t lzy -> API.sR_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1286 77265 77283 "records.ml" 1286 77265 77295
+type(
+  API.sR_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1285 77182 77187 "records.ml" 1285 77182 77199
+)
+"records.ml" 1286 77265 77279 "records.ml" 1286 77265 77295
+type(
+  API.sR_t lzy ref
+)
+"records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+type(
+  unit -> API.sR_t
+)
+"records.ml" 1287 77299 77306 "records.ml" 1287 77299 77308
+type(
+  unit
+)
+"records.ml" 1287 77299 77311 "records.ml" 1287 77299 77318
+type(
+  API.sR_t lzy ref -> API.sR_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 1287 77299 77319 "records.ml" 1287 77299 77325
+type(
+  API.sR_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1286 77265 77270 "records.ml" 1286 77265 77276
+)
+"records.ml" 1287 77299 77311 "records.ml" 1287 77299 77325
+type(
+  API.sR_t
+)
+"records.ml" 1288 77329 77344 "records.ml" 1288 77329 77345
+type(
+  API.ref_SR
+)
+ident(
+  def r "records.ml" 1288 77329 77349 "records.ml" 1288 77329 77382
+)
+"records.ml" 1288 77329 77349 "records.ml" 1288 77329 77353
+type(
+  API.ref_SR ref
+)
+ident(
+  int_ref _ref "records.ml" 1284 77160 77165 "records.ml" 1284 77160 77169
+)
+"records.ml" 1288 77329 77354 "records.ml" 1288 77329 77356
+type(
+  API.ref_SR ref -> API.ref_SR -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1288 77329 77357 "records.ml" 1288 77329 77358
+type(
+  API.ref_SR
+)
+ident(
+  int_ref r "records.ml" 1288 77329 77344 "records.ml" 1288 77329 77345
+)
+"records.ml" 1288 77329 77349 "records.ml" 1288 77329 77358
+type(
+  unit
+)
+"records.ml" 1288 77329 77360 "records.ml" 1288 77329 77366
+type(
+  API.sR_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1286 77265 77270 "records.ml" 1286 77265 77276
+)
+"records.ml" 1288 77329 77367 "records.ml" 1288 77329 77369
+type(
+  API.sR_t lzy ref -> API.sR_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1288 77329 77370 "records.ml" 1288 77329 77382
+type(
+  API.sR_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1285 77182 77187 "records.ml" 1285 77182 77199
+)
+"records.ml" 1288 77329 77360 "records.ml" 1288 77329 77382
+type(
+  unit
+)
+"records.ml" 1288 77329 77349 "records.ml" 1288 77329 77382
+type(
+  unit
+)
+"records.ml" 1288 77329 77339 "records.ml" 1288 77329 77384
+type(
+  API.ref_SR -> unit
+)
+"records.ml" 1289 77386 77405 "records.ml" 1289 77386 77406
+type(
+  API.ref_SR
+)
+ident(
+  def a "records.ml" 1289 77386 77413 "records.ml" 1289 77386 77439
+)
+"records.ml" 1289 77386 77407 "records.ml" 1289 77386 77408
+type(
+  API.sR_t
+)
+ident(
+  def b "records.ml" 1289 77386 77413 "records.ml" 1289 77386 77439
+)
+"records.ml" 1289 77386 77404 "records.ml" 1289 77386 77409
+type(
+  API.ref_SR * API.sR_t
+)
+"records.ml" 1289 77386 77413 "records.ml" 1289 77386 77417
+type(
+  API.ref_SR ref
+)
+ident(
+  int_ref _ref "records.ml" 1284 77160 77165 "records.ml" 1284 77160 77169
+)
+"records.ml" 1289 77386 77418 "records.ml" 1289 77386 77420
+type(
+  API.ref_SR ref -> API.ref_SR -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1289 77386 77421 "records.ml" 1289 77386 77422
+type(
+  API.ref_SR
+)
+ident(
+  int_ref a "records.ml" 1289 77386 77405 "records.ml" 1289 77386 77406
+)
+"records.ml" 1289 77386 77413 "records.ml" 1289 77386 77422
+type(
+  unit
+)
+"records.ml" 1289 77386 77424 "records.ml" 1289 77386 77430
+type(
+  API.sR_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1286 77265 77270 "records.ml" 1286 77265 77276
+)
+"records.ml" 1289 77386 77431 "records.ml" 1289 77386 77433
+type(
+  API.sR_t lzy ref -> API.sR_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1289 77386 77438 "records.ml" 1289 77386 77439
+type(
+  API.sR_t
+)
+ident(
+  int_ref b "records.ml" 1289 77386 77407 "records.ml" 1289 77386 77408
+)
+"records.ml" 1289 77386 77434 "records.ml" 1289 77386 77439
+type(
+  API.sR_t lzy
+)
+"records.ml" 1289 77386 77424 "records.ml" 1289 77386 77439
+type(
+  unit
+)
+"records.ml" 1289 77386 77413 "records.ml" 1289 77386 77439
+type(
+  unit
+)
+"records.ml" 1289 77386 77399 "records.ml" 1289 77386 77440
+type(
+  API.ref_SR * API.sR_t -> unit
+)
+"records.ml" 1290 77442 77452 "records.ml" 1290 77442 77453
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1291 77455 77470 "records.ml" 1291 77455 77472
+type(
+  unit
+)
+"records.ml" 1291 77455 77476 "records.ml" 1291 77455 77477
+type(
+  API.ref_SR ref -> API.ref_SR
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1291 77455 77477 "records.ml" 1291 77455 77481
+type(
+  API.ref_SR ref
+)
+ident(
+  int_ref _ref "records.ml" 1284 77160 77165 "records.ml" 1284 77160 77169
+)
+"records.ml" 1291 77455 77476 "records.ml" 1291 77455 77481
+type(
+  API.ref_SR
+)
+"records.ml" 1291 77455 77465 "records.ml" 1291 77455 77482
+type(
+  unit -> API.ref_SR
+)
+"records.ml" 1293 77498 77501 "records.ml" 1293 77498 77511
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1293 77498 77518 "records.ml" 1293 77498 77524
+type(
+  string
+)
+"records.ml" 1293 77498 77535 "records.ml" 1293 77498 77537
+type(
+  unit
+)
+"records.ml" 1293 77498 77542 "records.ml" 1293 77498 77543
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1293 77498 77544 "records.ml" 1293 77498 77546
+type(
+  unit
+)
+"records.ml" 1293 77498 77541 "records.ml" 1293 77498 77547
+type(
+  API.sR_t
+)
+"records.ml" 1293 77498 77541 "records.ml" 1293 77498 77559
+type(
+  string
+)
+"records.ml" 1293 77498 77530 "records.ml" 1293 77498 77560
+type(
+  unit -> string
+)
+"records.ml" 1293 77498 77561 "records.ml" 1293 77498 77563
+type(
+  unit
+)
+"records.ml" 1293 77498 77501 "records.ml" 1293 77498 77563
+type(
+  field
+)
+"records.ml" 1294 77565 77568 "records.ml" 1294 77565 77578
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1294 77565 77585 "records.ml" 1294 77565 77597
+type(
+  string
+)
+"records.ml" 1294 77565 77608 "records.ml" 1294 77565 77610
+type(
+  unit
+)
+"records.ml" 1294 77565 77615 "records.ml" 1294 77565 77616
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1294 77565 77617 "records.ml" 1294 77565 77619
+type(
+  unit
+)
+"records.ml" 1294 77565 77614 "records.ml" 1294 77565 77620
+type(
+  API.sR_t
+)
+"records.ml" 1294 77565 77614 "records.ml" 1294 77565 77638
+type(
+  string
+)
+"records.ml" 1294 77565 77603 "records.ml" 1294 77565 77639
+type(
+  unit -> string
+)
+"records.ml" 1295 77640 77654 "records.ml" 1295 77640 77655
+type(
+  string
+)
+ident(
+  def x "records.ml" 1295 77640 77659 "records.ml" 1295 77640 77703
+)
+"records.ml" 1295 77640 77659 "records.ml" 1295 77640 77683
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> sr:API.ref_SR -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( SR ).set_name_label
+)
+"records.ml" 1295 77640 77684 "records.ml" 1295 77640 77687
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1283 77126 77140 "records.ml" 1283 77126 77143
+)
+"records.ml" 1295 77640 77688 "records.ml" 1295 77640 77698
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1283 77126 77144 "records.ml" 1283 77126 77154
+)
+"records.ml" 1295 77640 77699 "records.ml" 1295 77640 77701
+type(
+  API.ref_SR
+)
+ident(
+  int_ref sr "records.ml" 1283 77126 77155 "records.ml" 1283 77126 77157
+)
+"records.ml" 1295 77640 77702 "records.ml" 1295 77640 77703
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 1295 77640 77654 "records.ml" 1295 77640 77655
+)
+"records.ml" 1295 77640 77659 "records.ml" 1295 77640 77703
+type(
+  unit
+)
+"records.ml" 1295 77640 77649 "records.ml" 1295 77640 77704
+type(
+  string -> unit
+)
+"records.ml" 1295 77640 77705 "records.ml" 1295 77640 77707
+type(
+  unit
+)
+"records.ml" 1294 77565 77568 "records.ml" 1295 77640 77707
+type(
+  field
+)
+"records.ml" 1296 77709 77712 "records.ml" 1296 77709 77722
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1296 77709 77729 "records.ml" 1296 77709 77747
+type(
+  string
+)
+"records.ml" 1296 77709 77758 "records.ml" 1296 77709 77760
+type(
+  unit
+)
+"records.ml" 1296 77709 77765 "records.ml" 1296 77709 77766
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1296 77709 77767 "records.ml" 1296 77709 77769
+type(
+  unit
+)
+"records.ml" 1296 77709 77764 "records.ml" 1296 77709 77770
+type(
+  API.sR_t
+)
+"records.ml" 1296 77709 77764 "records.ml" 1296 77709 77794
+type(
+  string
+)
+"records.ml" 1296 77709 77753 "records.ml" 1296 77709 77795
+type(
+  unit -> string
+)
+"records.ml" 1297 77796 77810 "records.ml" 1297 77796 77811
+type(
+  string
+)
+ident(
+  def x "records.ml" 1297 77796 77815 "records.ml" 1297 77796 77865
+)
+"records.ml" 1297 77796 77815 "records.ml" 1297 77796 77845
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> sr:API.ref_SR -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( SR ).set_name_description
+)
+"records.ml" 1297 77796 77846 "records.ml" 1297 77796 77849
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1283 77126 77140 "records.ml" 1283 77126 77143
+)
+"records.ml" 1297 77796 77850 "records.ml" 1297 77796 77860
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1283 77126 77144 "records.ml" 1283 77126 77154
+)
+"records.ml" 1297 77796 77861 "records.ml" 1297 77796 77863
+type(
+  API.ref_SR
+)
+ident(
+  int_ref sr "records.ml" 1283 77126 77155 "records.ml" 1283 77126 77157
+)
+"records.ml" 1297 77796 77864 "records.ml" 1297 77796 77865
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 1297 77796 77810 "records.ml" 1297 77796 77811
+)
+"records.ml" 1297 77796 77815 "records.ml" 1297 77796 77865
+type(
+  unit
+)
+"records.ml" 1297 77796 77805 "records.ml" 1297 77796 77866
+type(
+  string -> unit
+)
+"records.ml" 1297 77796 77867 "records.ml" 1297 77796 77869
+type(
+  unit
+)
+"records.ml" 1296 77709 77712 "records.ml" 1297 77796 77869
+type(
+  field
+)
+"records.ml" 1298 77871 77874 "records.ml" 1298 77871 77884
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1298 77871 77891 "records.ml" 1298 77871 77897
+type(
+  string
+)
+"records.ml" 1299 77898 77912 "records.ml" 1299 77898 77914
+type(
+  unit
+)
+"records.ml" 1300 77918 77927 "records.ml" 1300 77918 77933
+type(
+  API.sR_t
+)
+"records.ml" 1300 77918 77936 "records.ml" 1300 77918 77937
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1300 77918 77937 "records.ml" 1300 77918 77939
+type(
+  unit
+)
+"records.ml" 1300 77918 77936 "records.ml" 1300 77918 77939
+type(
+  API.sR_t
+)
+"records.ml" 1301 77943 77952 "records.ml" 1301 77943 77956
+type(
+  API.ref_PBD_set
+)
+"records.ml" 1301 77943 77959 "records.ml" 1301 77943 77965
+type(
+  API.sR_t
+)
+ident(
+  int_ref sr_rec "records.ml" 1300 77918 77927 "records.ml" 1300 77918 77933
+)
+"records.ml" 1301 77943 77959 "records.ml" 1301 77943 77977
+type(
+  API.ref_PBD_set
+)
+"records.ml" 1302 77981 77989 "records.ml" 1302 77981 78000
+type(
+  API.ref_PBD_set -> int
+)
+ident(
+  ext_ref List.length
+)
+"records.ml" 1302 77981 78001 "records.ml" 1302 77981 78005
+type(
+  API.ref_PBD_set
+)
+ident(
+  int_ref pbds "records.ml" 1301 77943 77952 "records.ml" 1301 77943 77956
+)
+"records.ml" 1302 77981 77989 "records.ml" 1302 77981 78005
+type(
+  int
+)
+"records.ml" 1302 77981 78005 "records.ml" 1302 77981 78006
+type(
+  int -> int -> bool
+)
+ident(
+  ext_ref Pervasives.( > )
+)
+"records.ml" 1302 77981 78006 "records.ml" 1302 77981 78007
+type(
+  int
+)
+"records.ml" 1302 77981 77989 "records.ml" 1302 77981 78007
+type(
+  bool
+)
+"records.ml" 1302 77981 78013 "records.ml" 1302 77981 78023
+type(
+  string
+)
+"records.ml" 1303 78024 78034 "records.ml" 1303 78024 78051
+type(
+  API.ref_host -> string
+)
+ident(
+  int_ref get_name_from_ref "records.ml" 103 3658 3662 "records.ml" 103 3658 3679
+)
+"records.ml" 1303 78024 78053 "records.ml" 1303 78024 78064
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.sR_t -> API.ref_host
+)
+ident(
+  int_ref get_sr_host "records.ml" 127 4326 4330 "records.ml" 127 4326 4341
+)
+"records.ml" 1303 78024 78065 "records.ml" 1303 78024 78068
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1283 77126 77140 "records.ml" 1283 77126 77143
+)
+"records.ml" 1303 78024 78069 "records.ml" 1303 78024 78079
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1283 77126 77144 "records.ml" 1283 77126 77154
+)
+"records.ml" 1303 78024 78080 "records.ml" 1303 78024 78086
+type(
+  API.sR_t
+)
+ident(
+  int_ref sr_rec "records.ml" 1300 77918 77927 "records.ml" 1300 77918 77933
+)
+"records.ml" 1303 78024 78052 "records.ml" 1303 78024 78087
+type(
+  API.ref_host
+)
+"records.ml" 1303 78024 78034 "records.ml" 1303 78024 78087
+type(
+  string
+)
+"records.ml" 1302 77981 77986 "records.ml" 1303 78024 78087
+type(
+  string
+)
+"records.ml" 1301 77943 77948 "records.ml" 1303 78024 78087
+type(
+  string
+)
+"records.ml" 1300 77918 77923 "records.ml" 1303 78024 78087
+type(
+  string
+)
+"records.ml" 1299 77898 77907 "records.ml" 1303 78024 78088
+type(
+  unit -> string
+)
+"records.ml" 1303 78024 78089 "records.ml" 1303 78024 78091
+type(
+  unit
+)
+"records.ml" 1298 77871 77874 "records.ml" 1303 78024 78091
+type(
+  field
+)
+"records.ml" 1304 78093 78096 "records.ml" 1304 78093 78106
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1304 78093 78113 "records.ml" 1304 78093 78133
+type(
+  string
+)
+"records.ml" 1305 78134 78148 "records.ml" 1305 78134 78150
+type(
+  unit
+)
+"records.ml" 1305 78134 78154 "records.ml" 1305 78134 78167
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1305 78134 78168 "records.ml" 1305 78134 78172
+type(
+  string
+)
+"records.ml" 1305 78134 78174 "records.ml" 1305 78134 78182
+type(
+  ([ `destroy
+   | `forget
+   | `plug
+   | `scan
+   | `unplug
+   | `update
+   | `vdi_clone
+   | `vdi_create
+   | `vdi_destroy
+   | `vdi_introduce
+   | `vdi_resize
+   | `vdi_snapshot ] -> string) ->
+  API.storage_operations_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1305 78134 78183 "records.ml" 1305 78134 78217
+type(
+  [ `destroy
+  | `forget
+  | `plug
+  | `scan
+  | `unplug
+  | `update
+  | `vdi_clone
+  | `vdi_create
+  | `vdi_destroy
+  | `vdi_introduce
+  | `vdi_resize
+  | `vdi_snapshot ] -> string
+)
+ident(
+  ext_ref Record_util.sr_operation_to_string
+)
+"records.ml" 1305 78134 78219 "records.ml" 1305 78134 78220
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1305 78134 78221 "records.ml" 1305 78134 78223
+type(
+  unit
+)
+"records.ml" 1305 78134 78218 "records.ml" 1305 78134 78224
+type(
+  API.sR_t
+)
+"records.ml" 1305 78134 78218 "records.ml" 1305 78134 78250
+type(
+  API.storage_operations_set
+)
+"records.ml" 1305 78134 78173 "records.ml" 1305 78134 78251
+type(
+  string list
+)
+"records.ml" 1305 78134 78154 "records.ml" 1305 78134 78251
+type(
+  string
+)
+"records.ml" 1305 78134 78143 "records.ml" 1305 78134 78252
+type(
+  unit -> string
+)
+"records.ml" 1306 78253 78271 "records.ml" 1306 78253 78273
+type(
+  unit
+)
+"records.ml" 1306 78253 78277 "records.ml" 1306 78253 78285
+type(
+  ([ `destroy
+   | `forget
+   | `plug
+   | `scan
+   | `unplug
+   | `update
+   | `vdi_clone
+   | `vdi_create
+   | `vdi_destroy
+   | `vdi_introduce
+   | `vdi_resize
+   | `vdi_snapshot ] -> string) ->
+  API.storage_operations_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1306 78253 78286 "records.ml" 1306 78253 78320
+type(
+  [ `destroy
+  | `forget
+  | `plug
+  | `scan
+  | `unplug
+  | `update
+  | `vdi_clone
+  | `vdi_create
+  | `vdi_destroy
+  | `vdi_introduce
+  | `vdi_resize
+  | `vdi_snapshot ] -> string
+)
+ident(
+  ext_ref Record_util.sr_operation_to_string
+)
+"records.ml" 1306 78253 78322 "records.ml" 1306 78253 78323
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1306 78253 78324 "records.ml" 1306 78253 78326
+type(
+  unit
+)
+"records.ml" 1306 78253 78321 "records.ml" 1306 78253 78327
+type(
+  API.sR_t
+)
+"records.ml" 1306 78253 78321 "records.ml" 1306 78253 78353
+type(
+  API.storage_operations_set
+)
+"records.ml" 1306 78253 78277 "records.ml" 1306 78253 78353
+type(
+  string list
+)
+"records.ml" 1306 78253 78266 "records.ml" 1306 78253 78354
+type(
+  unit -> string list
+)
+"records.ml" 1306 78253 78355 "records.ml" 1306 78253 78357
+type(
+  unit
+)
+"records.ml" 1304 78093 78096 "records.ml" 1306 78253 78357
+type(
+  field
+)
+"records.ml" 1307 78359 78362 "records.ml" 1307 78359 78372
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1307 78359 78379 "records.ml" 1307 78359 78399
+type(
+  string
+)
+"records.ml" 1308 78400 78414 "records.ml" 1308 78400 78416
+type(
+  unit
+)
+"records.ml" 1308 78400 78420 "records.ml" 1308 78400 78433
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1308 78400 78434 "records.ml" 1308 78400 78438
+type(
+  string
+)
+"records.ml" 1308 78400 78440 "records.ml" 1308 78400 78448
+type(
+  (string * API.storage_operations -> string) ->
+  API.string_to_storage_operations_map -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1308 78400 78455 "records.ml" 1308 78400 78456
+type(
+  string
+)
+ident(
+  def a "records.ml" 1308 78400 78463 "records.ml" 1308 78400 78499
+)
+"records.ml" 1308 78400 78457 "records.ml" 1308 78400 78458
+type(
+  API.storage_operations
+)
+ident(
+  def b "records.ml" 1308 78400 78463 "records.ml" 1308 78400 78499
+)
+"records.ml" 1308 78400 78454 "records.ml" 1308 78400 78459
+type(
+  string * API.storage_operations
+)
+"records.ml" 1308 78400 78463 "records.ml" 1308 78400 78497
+type(
+  API.storage_operations -> string
+)
+ident(
+  ext_ref Record_util.sr_operation_to_string
+)
+"records.ml" 1308 78400 78498 "records.ml" 1308 78400 78499
+type(
+  API.storage_operations
+)
+ident(
+  int_ref b "records.ml" 1308 78400 78457 "records.ml" 1308 78400 78458
+)
+"records.ml" 1308 78400 78463 "records.ml" 1308 78400 78499
+type(
+  string
+)
+"records.ml" 1308 78400 78449 "records.ml" 1308 78400 78500
+type(
+  string * API.storage_operations -> string
+)
+"records.ml" 1308 78400 78502 "records.ml" 1308 78400 78503
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1308 78400 78504 "records.ml" 1308 78400 78506
+type(
+  unit
+)
+"records.ml" 1308 78400 78501 "records.ml" 1308 78400 78507
+type(
+  API.sR_t
+)
+"records.ml" 1308 78400 78501 "records.ml" 1308 78400 78533
+type(
+  API.string_to_storage_operations_map
+)
+"records.ml" 1308 78400 78439 "records.ml" 1308 78400 78534
+type(
+  string list
+)
+"records.ml" 1308 78400 78420 "records.ml" 1308 78400 78534
+type(
+  string
+)
+"records.ml" 1308 78400 78409 "records.ml" 1308 78400 78535
+type(
+  unit -> string
+)
+"records.ml" 1309 78536 78554 "records.ml" 1309 78536 78556
+type(
+  unit
+)
+"records.ml" 1309 78536 78560 "records.ml" 1309 78536 78568
+type(
+  (string * API.storage_operations -> string) ->
+  API.string_to_storage_operations_map -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1309 78536 78575 "records.ml" 1309 78536 78576
+type(
+  string
+)
+ident(
+  def a "records.ml" 1309 78536 78583 "records.ml" 1309 78536 78619
+)
+"records.ml" 1309 78536 78577 "records.ml" 1309 78536 78578
+type(
+  API.storage_operations
+)
+ident(
+  def b "records.ml" 1309 78536 78583 "records.ml" 1309 78536 78619
+)
+"records.ml" 1309 78536 78574 "records.ml" 1309 78536 78579
+type(
+  string * API.storage_operations
+)
+"records.ml" 1309 78536 78583 "records.ml" 1309 78536 78617
+type(
+  API.storage_operations -> string
+)
+ident(
+  ext_ref Record_util.sr_operation_to_string
+)
+"records.ml" 1309 78536 78618 "records.ml" 1309 78536 78619
+type(
+  API.storage_operations
+)
+ident(
+  int_ref b "records.ml" 1309 78536 78577 "records.ml" 1309 78536 78578
+)
+"records.ml" 1309 78536 78583 "records.ml" 1309 78536 78619
+type(
+  string
+)
+"records.ml" 1309 78536 78569 "records.ml" 1309 78536 78620
+type(
+  string * API.storage_operations -> string
+)
+"records.ml" 1309 78536 78622 "records.ml" 1309 78536 78623
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1309 78536 78624 "records.ml" 1309 78536 78626
+type(
+  unit
+)
+"records.ml" 1309 78536 78621 "records.ml" 1309 78536 78627
+type(
+  API.sR_t
+)
+"records.ml" 1309 78536 78621 "records.ml" 1309 78536 78653
+type(
+  API.string_to_storage_operations_map
+)
+"records.ml" 1309 78536 78560 "records.ml" 1309 78536 78653
+type(
+  string list
+)
+"records.ml" 1309 78536 78549 "records.ml" 1309 78536 78654
+type(
+  unit -> string list
+)
+"records.ml" 1309 78536 78655 "records.ml" 1309 78536 78657
+type(
+  unit
+)
+"records.ml" 1307 78359 78362 "records.ml" 1309 78536 78657
+type(
+  field
+)
+"records.ml" 1310 78659 78662 "records.ml" 1310 78659 78672
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1310 78659 78679 "records.ml" 1310 78659 78685
+type(
+  string
+)
+"records.ml" 1310 78659 78696 "records.ml" 1310 78659 78698
+type(
+  unit
+)
+"records.ml" 1310 78659 78702 "records.ml" 1310 78659 78715
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1310 78659 78716 "records.ml" 1310 78659 78720
+type(
+  string
+)
+"records.ml" 1310 78659 78722 "records.ml" 1310 78659 78730
+type(
+  ([ `VDI ] Ref.t -> string) -> API.ref_VDI_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1310 78659 78731 "records.ml" 1310 78659 78748
+type(
+  [ `VDI ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1310 78659 78750 "records.ml" 1310 78659 78751
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1310 78659 78752 "records.ml" 1310 78659 78754
+type(
+  unit
+)
+"records.ml" 1310 78659 78749 "records.ml" 1310 78659 78755
+type(
+  API.sR_t
+)
+"records.ml" 1310 78659 78749 "records.ml" 1310 78659 78767
+type(
+  API.ref_VDI_set
+)
+"records.ml" 1310 78659 78721 "records.ml" 1310 78659 78768
+type(
+  string list
+)
+"records.ml" 1310 78659 78702 "records.ml" 1310 78659 78768
+type(
+  string
+)
+"records.ml" 1310 78659 78691 "records.ml" 1310 78659 78769
+type(
+  unit -> string
+)
+"records.ml" 1311 78770 78788 "records.ml" 1311 78770 78790
+type(
+  unit
+)
+"records.ml" 1311 78770 78794 "records.ml" 1311 78770 78802
+type(
+  ([ `VDI ] Ref.t -> string) -> API.ref_VDI_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1311 78770 78803 "records.ml" 1311 78770 78820
+type(
+  [ `VDI ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1311 78770 78822 "records.ml" 1311 78770 78823
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1311 78770 78824 "records.ml" 1311 78770 78826
+type(
+  unit
+)
+"records.ml" 1311 78770 78821 "records.ml" 1311 78770 78827
+type(
+  API.sR_t
+)
+"records.ml" 1311 78770 78821 "records.ml" 1311 78770 78839
+type(
+  API.ref_VDI_set
+)
+"records.ml" 1311 78770 78794 "records.ml" 1311 78770 78839
+type(
+  string list
+)
+"records.ml" 1311 78770 78783 "records.ml" 1311 78770 78840
+type(
+  unit -> string list
+)
+"records.ml" 1311 78770 78841 "records.ml" 1311 78770 78843
+type(
+  unit
+)
+"records.ml" 1310 78659 78662 "records.ml" 1311 78770 78843
+type(
+  field
+)
+"records.ml" 1312 78845 78848 "records.ml" 1312 78845 78858
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1312 78845 78865 "records.ml" 1312 78845 78871
+type(
+  string
+)
+"records.ml" 1312 78845 78882 "records.ml" 1312 78845 78884
+type(
+  unit
+)
+"records.ml" 1312 78845 78888 "records.ml" 1312 78845 78901
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1312 78845 78902 "records.ml" 1312 78845 78906
+type(
+  string
+)
+"records.ml" 1312 78845 78908 "records.ml" 1312 78845 78916
+type(
+  ([ `PBD ] Ref.t -> string) -> API.ref_PBD_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1312 78845 78917 "records.ml" 1312 78845 78934
+type(
+  [ `PBD ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1312 78845 78936 "records.ml" 1312 78845 78937
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1312 78845 78938 "records.ml" 1312 78845 78940
+type(
+  unit
+)
+"records.ml" 1312 78845 78935 "records.ml" 1312 78845 78941
+type(
+  API.sR_t
+)
+"records.ml" 1312 78845 78935 "records.ml" 1312 78845 78953
+type(
+  API.ref_PBD_set
+)
+"records.ml" 1312 78845 78907 "records.ml" 1312 78845 78954
+type(
+  string list
+)
+"records.ml" 1312 78845 78888 "records.ml" 1312 78845 78954
+type(
+  string
+)
+"records.ml" 1312 78845 78877 "records.ml" 1312 78845 78955
+type(
+  unit -> string
+)
+"records.ml" 1313 78956 78974 "records.ml" 1313 78956 78976
+type(
+  unit
+)
+"records.ml" 1313 78956 78980 "records.ml" 1313 78956 78988
+type(
+  ([ `PBD ] Ref.t -> string) -> API.ref_PBD_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1313 78956 78989 "records.ml" 1313 78956 79006
+type(
+  [ `PBD ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1313 78956 79008 "records.ml" 1313 78956 79009
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1313 78956 79010 "records.ml" 1313 78956 79012
+type(
+  unit
+)
+"records.ml" 1313 78956 79007 "records.ml" 1313 78956 79013
+type(
+  API.sR_t
+)
+"records.ml" 1313 78956 79007 "records.ml" 1313 78956 79025
+type(
+  API.ref_PBD_set
+)
+"records.ml" 1313 78956 78980 "records.ml" 1313 78956 79025
+type(
+  string list
+)
+"records.ml" 1313 78956 78969 "records.ml" 1313 78956 79026
+type(
+  unit -> string list
+)
+"records.ml" 1313 78956 79027 "records.ml" 1313 78956 79029
+type(
+  unit
+)
+"records.ml" 1312 78845 78848 "records.ml" 1313 78956 79029
+type(
+  field
+)
+"records.ml" 1314 79031 79034 "records.ml" 1314 79031 79044
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1314 79031 79051 "records.ml" 1314 79031 79071
+type(
+  string
+)
+"records.ml" 1314 79031 79082 "records.ml" 1314 79031 79084
+type(
+  unit
+)
+"records.ml" 1314 79031 79088 "records.ml" 1314 79031 79103
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 1314 79031 79105 "records.ml" 1314 79031 79106
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1314 79031 79107 "records.ml" 1314 79031 79109
+type(
+  unit
+)
+"records.ml" 1314 79031 79104 "records.ml" 1314 79031 79110
+type(
+  API.sR_t
+)
+"records.ml" 1314 79031 79104 "records.ml" 1314 79031 79136
+type(
+  int64
+)
+"records.ml" 1314 79031 79088 "records.ml" 1314 79031 79136
+type(
+  string
+)
+"records.ml" 1314 79031 79077 "records.ml" 1314 79031 79137
+type(
+  unit -> string
+)
+"records.ml" 1314 79031 79138 "records.ml" 1314 79031 79140
+type(
+  unit
+)
+"records.ml" 1314 79031 79034 "records.ml" 1314 79031 79140
+type(
+  field
+)
+"records.ml" 1315 79142 79145 "records.ml" 1315 79142 79155
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1315 79142 79162 "records.ml" 1315 79142 79184
+type(
+  string
+)
+"records.ml" 1315 79142 79195 "records.ml" 1315 79142 79197
+type(
+  unit
+)
+"records.ml" 1315 79142 79201 "records.ml" 1315 79142 79216
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 1315 79142 79218 "records.ml" 1315 79142 79219
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1315 79142 79220 "records.ml" 1315 79142 79222
+type(
+  unit
+)
+"records.ml" 1315 79142 79217 "records.ml" 1315 79142 79223
+type(
+  API.sR_t
+)
+"records.ml" 1315 79142 79217 "records.ml" 1315 79142 79251
+type(
+  int64
+)
+"records.ml" 1315 79142 79201 "records.ml" 1315 79142 79251
+type(
+  string
+)
+"records.ml" 1315 79142 79190 "records.ml" 1315 79142 79252
+type(
+  unit -> string
+)
+"records.ml" 1315 79142 79253 "records.ml" 1315 79142 79255
+type(
+  unit
+)
+"records.ml" 1315 79142 79145 "records.ml" 1315 79142 79255
+type(
+  field
+)
+"records.ml" 1316 79257 79260 "records.ml" 1316 79257 79270
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1316 79257 79277 "records.ml" 1316 79257 79292
+type(
+  string
+)
+"records.ml" 1316 79257 79303 "records.ml" 1316 79257 79305
+type(
+  unit
+)
+"records.ml" 1316 79257 79309 "records.ml" 1316 79257 79324
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 1316 79257 79326 "records.ml" 1316 79257 79327
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1316 79257 79328 "records.ml" 1316 79257 79330
+type(
+  unit
+)
+"records.ml" 1316 79257 79325 "records.ml" 1316 79257 79331
+type(
+  API.sR_t
+)
+"records.ml" 1316 79257 79325 "records.ml" 1316 79257 79352
+type(
+  int64
+)
+"records.ml" 1316 79257 79309 "records.ml" 1316 79257 79352
+type(
+  string
+)
+"records.ml" 1316 79257 79298 "records.ml" 1316 79257 79353
+type(
+  unit -> string
+)
+"records.ml" 1316 79257 79354 "records.ml" 1316 79257 79356
+type(
+  unit
+)
+"records.ml" 1316 79257 79260 "records.ml" 1316 79257 79356
+type(
+  field
+)
+"records.ml" 1317 79358 79361 "records.ml" 1317 79358 79371
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1317 79358 79378 "records.ml" 1317 79358 79384
+type(
+  string
+)
+"records.ml" 1317 79358 79395 "records.ml" 1317 79358 79397
+type(
+  unit
+)
+"records.ml" 1317 79358 79402 "records.ml" 1317 79358 79403
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1317 79358 79404 "records.ml" 1317 79358 79406
+type(
+  unit
+)
+"records.ml" 1317 79358 79401 "records.ml" 1317 79358 79407
+type(
+  API.sR_t
+)
+"records.ml" 1317 79358 79401 "records.ml" 1317 79358 79419
+type(
+  string
+)
+"records.ml" 1317 79358 79390 "records.ml" 1317 79358 79420
+type(
+  unit -> string
+)
+"records.ml" 1317 79358 79421 "records.ml" 1317 79358 79423
+type(
+  unit
+)
+"records.ml" 1317 79358 79361 "records.ml" 1317 79358 79423
+type(
+  field
+)
+"records.ml" 1318 79425 79428 "records.ml" 1318 79425 79438
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1318 79425 79445 "records.ml" 1318 79425 79459
+type(
+  string
+)
+"records.ml" 1318 79425 79470 "records.ml" 1318 79425 79472
+type(
+  unit
+)
+"records.ml" 1318 79425 79477 "records.ml" 1318 79425 79478
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1318 79425 79479 "records.ml" 1318 79425 79481
+type(
+  unit
+)
+"records.ml" 1318 79425 79476 "records.ml" 1318 79425 79482
+type(
+  API.sR_t
+)
+"records.ml" 1318 79425 79476 "records.ml" 1318 79425 79502
+type(
+  string
+)
+"records.ml" 1318 79425 79465 "records.ml" 1318 79425 79503
+type(
+  unit -> string
+)
+"records.ml" 1318 79425 79504 "records.ml" 1318 79425 79506
+type(
+  unit
+)
+"records.ml" 1318 79425 79428 "records.ml" 1318 79425 79506
+type(
+  field
+)
+"records.ml" 1319 79508 79511 "records.ml" 1319 79508 79521
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1319 79508 79528 "records.ml" 1319 79508 79536
+type(
+  string
+)
+"records.ml" 1320 79537 79551 "records.ml" 1320 79537 79553
+type(
+  unit
+)
+"records.ml" 1320 79537 79557 "records.ml" 1320 79537 79571
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 1320 79537 79574 "records.ml" 1320 79537 79575
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1320 79537 79576 "records.ml" 1320 79537 79578
+type(
+  unit
+)
+"records.ml" 1320 79537 79573 "records.ml" 1320 79537 79579
+type(
+  API.sR_t
+)
+"records.ml" 1320 79537 79572 "records.ml" 1320 79537 79594
+type(
+  bool
+)
+"records.ml" 1320 79537 79557 "records.ml" 1320 79537 79594
+type(
+  string
+)
+"records.ml" 1320 79537 79546 "records.ml" 1320 79537 79595
+type(
+  unit -> string
+)
+"records.ml" 1321 79596 79610 "records.ml" 1321 79596 79611
+type(
+  string
+)
+ident(
+  def x "records.ml" 1321 79596 79615 "records.ml" 1321 79596 79686
+)
+"records.ml" 1321 79596 79615 "records.ml" 1321 79596 79635
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> sr:API.ref_SR -> value:bool -> unit
+)
+ident(
+  ext_ref Client.( Client ).( SR ).set_shared
+)
+"records.ml" 1321 79596 79636 "records.ml" 1321 79596 79639
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1283 77126 77140 "records.ml" 1283 77126 77143
+)
+"records.ml" 1321 79596 79640 "records.ml" 1321 79596 79650
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1283 77126 77144 "records.ml" 1283 77126 77154
+)
+"records.ml" 1321 79596 79651 "records.ml" 1321 79596 79653
+type(
+  API.ref_SR
+)
+ident(
+  int_ref sr "records.ml" 1283 77126 77155 "records.ml" 1283 77126 77157
+)
+"records.ml" 1321 79596 79655 "records.ml" 1321 79596 79674
+type(
+  string -> string -> bool
+)
+ident(
+  int_ref safe_bool_of_string "records.ml" 72 2718 2722 "records.ml" 72 2718 2741
+)
+"records.ml" 1321 79596 79675 "records.ml" 1321 79596 79683
+type(
+  string
+)
+"records.ml" 1321 79596 79684 "records.ml" 1321 79596 79685
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 1321 79596 79610 "records.ml" 1321 79596 79611
+)
+"records.ml" 1321 79596 79654 "records.ml" 1321 79596 79686
+type(
+  bool
+)
+"records.ml" 1321 79596 79615 "records.ml" 1321 79596 79686
+type(
+  unit
+)
+"records.ml" 1321 79596 79605 "records.ml" 1321 79596 79687
+type(
+  string -> unit
+)
+"records.ml" 1321 79596 79688 "records.ml" 1321 79596 79690
+type(
+  unit
+)
+"records.ml" 1319 79508 79511 "records.ml" 1321 79596 79690
+type(
+  field
+)
+"records.ml" 1322 79692 79695 "records.ml" 1322 79692 79705
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1322 79692 79712 "records.ml" 1322 79692 79727
+type(
+  string
+)
+"records.ml" 1323 79728 79742 "records.ml" 1323 79728 79744
+type(
+  unit
+)
+"records.ml" 1323 79728 79749 "records.ml" 1323 79728 79766
+type(
+  API.ref_DR_task -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1323 79728 79768 "records.ml" 1323 79728 79769
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1323 79728 79770 "records.ml" 1323 79728 79772
+type(
+  unit
+)
+"records.ml" 1323 79728 79767 "records.ml" 1323 79728 79773
+type(
+  API.sR_t
+)
+"records.ml" 1323 79728 79767 "records.ml" 1323 79728 79794
+type(
+  API.ref_DR_task
+)
+"records.ml" 1323 79728 79748 "records.ml" 1323 79728 79795
+type(
+  string
+)
+"records.ml" 1323 79728 79737 "records.ml" 1323 79728 79796
+type(
+  unit -> string
+)
+"records.ml" 1323 79728 79797 "records.ml" 1323 79728 79799
+type(
+  unit
+)
+"records.ml" 1322 79692 79695 "records.ml" 1323 79728 79799
+type(
+  field
+)
+"records.ml" 1324 79801 79804 "records.ml" 1324 79801 79814
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1324 79801 79821 "records.ml" 1324 79801 79835
+type(
+  string
+)
+"records.ml" 1324 79801 79846 "records.ml" 1324 79801 79848
+type(
+  unit
+)
+"records.ml" 1324 79801 79852 "records.ml" 1324 79801 79878
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 1324 79801 79879 "records.ml" 1324 79801 79883
+type(
+  string
+)
+"records.ml" 1324 79801 79885 "records.ml" 1324 79801 79886
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1324 79801 79887 "records.ml" 1324 79801 79889
+type(
+  unit
+)
+"records.ml" 1324 79801 79884 "records.ml" 1324 79801 79890
+type(
+  API.sR_t
+)
+"records.ml" 1324 79801 79884 "records.ml" 1324 79801 79910
+type(
+  API.string_to_string_map
+)
+"records.ml" 1324 79801 79852 "records.ml" 1324 79801 79910
+type(
+  string
+)
+"records.ml" 1324 79801 79841 "records.ml" 1324 79801 79911
+type(
+  unit -> string
+)
+"records.ml" 1325 79912 79933 "records.ml" 1325 79912 79934
+type(
+  string
+)
+ident(
+  def k "records.ml" 1325 79912 79935 "records.ml" 1325 79912 79991
+)
+"records.ml" 1325 79912 79935 "records.ml" 1325 79912 79936
+type(
+  string
+)
+ident(
+  def v "records.ml" 1325 79912 79940 "records.ml" 1325 79912 79991
+)
+"records.ml" 1325 79912 79940 "records.ml" 1325 79912 79969
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_SR -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( SR ).add_to_other_config
+)
+"records.ml" 1325 79912 79970 "records.ml" 1325 79912 79973
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1283 77126 77140 "records.ml" 1283 77126 77143
+)
+"records.ml" 1325 79912 79974 "records.ml" 1325 79912 79984
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1283 77126 77144 "records.ml" 1283 77126 77154
+)
+"records.ml" 1325 79912 79985 "records.ml" 1325 79912 79987
+type(
+  API.ref_SR
+)
+ident(
+  int_ref sr "records.ml" 1283 77126 77155 "records.ml" 1283 77126 77157
+)
+"records.ml" 1325 79912 79988 "records.ml" 1325 79912 79989
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 1325 79912 79933 "records.ml" 1325 79912 79934
+)
+"records.ml" 1325 79912 79990 "records.ml" 1325 79912 79991
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 1325 79912 79935 "records.ml" 1325 79912 79936
+)
+"records.ml" 1325 79912 79940 "records.ml" 1325 79912 79991
+type(
+  unit
+)
+"records.ml" 1325 79912 79928 "records.ml" 1325 79912 79992
+type(
+  string -> string -> unit
+)
+"records.ml" 1326 79993 80019 "records.ml" 1326 79993 80020
+type(
+  string
+)
+ident(
+  def k "records.ml" 1326 79993 80024 "records.ml" 1326 79993 80078
+)
+"records.ml" 1326 79993 80024 "records.ml" 1326 79993 80058
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_SR -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( SR ).remove_from_other_config
+)
+"records.ml" 1326 79993 80059 "records.ml" 1326 79993 80062
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1283 77126 77140 "records.ml" 1283 77126 77143
+)
+"records.ml" 1326 79993 80063 "records.ml" 1326 79993 80073
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1283 77126 77144 "records.ml" 1283 77126 77154
+)
+"records.ml" 1326 79993 80074 "records.ml" 1326 79993 80076
+type(
+  API.ref_SR
+)
+ident(
+  int_ref sr "records.ml" 1283 77126 77155 "records.ml" 1283 77126 77157
+)
+"records.ml" 1326 79993 80077 "records.ml" 1326 79993 80078
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 1326 79993 80019 "records.ml" 1326 79993 80020
+)
+"records.ml" 1326 79993 80024 "records.ml" 1326 79993 80078
+type(
+  unit
+)
+"records.ml" 1326 79993 80014 "records.ml" 1326 79993 80079
+type(
+  string -> unit
+)
+"records.ml" 1327 80080 80098 "records.ml" 1327 80080 80100
+type(
+  unit
+)
+"records.ml" 1327 80080 80105 "records.ml" 1327 80080 80106
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1327 80080 80107 "records.ml" 1327 80080 80109
+type(
+  unit
+)
+"records.ml" 1327 80080 80104 "records.ml" 1327 80080 80110
+type(
+  API.sR_t
+)
+"records.ml" 1327 80080 80104 "records.ml" 1327 80080 80130
+type(
+  API.string_to_string_map
+)
+"records.ml" 1327 80080 80093 "records.ml" 1327 80080 80131
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 1327 80080 80132 "records.ml" 1327 80080 80134
+type(
+  unit
+)
+"records.ml" 1324 79801 79804 "records.ml" 1327 80080 80134
+type(
+  field
+)
+"records.ml" 1328 80136 80139 "records.ml" 1328 80136 80149
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1328 80136 80156 "records.ml" 1328 80136 80167
+type(
+  string
+)
+"records.ml" 1328 80136 80178 "records.ml" 1328 80136 80180
+type(
+  unit
+)
+"records.ml" 1328 80136 80184 "records.ml" 1328 80136 80210
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 1328 80136 80211 "records.ml" 1328 80136 80215
+type(
+  string
+)
+"records.ml" 1328 80136 80217 "records.ml" 1328 80136 80218
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1328 80136 80219 "records.ml" 1328 80136 80221
+type(
+  unit
+)
+"records.ml" 1328 80136 80216 "records.ml" 1328 80136 80222
+type(
+  API.sR_t
+)
+"records.ml" 1328 80136 80216 "records.ml" 1328 80136 80239
+type(
+  API.string_to_string_map
+)
+"records.ml" 1328 80136 80184 "records.ml" 1328 80136 80239
+type(
+  string
+)
+"records.ml" 1328 80136 80173 "records.ml" 1328 80136 80240
+type(
+  unit -> string
+)
+"records.ml" 1329 80241 80259 "records.ml" 1329 80241 80261
+type(
+  unit
+)
+"records.ml" 1329 80241 80266 "records.ml" 1329 80241 80267
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1329 80241 80268 "records.ml" 1329 80241 80270
+type(
+  unit
+)
+"records.ml" 1329 80241 80265 "records.ml" 1329 80241 80271
+type(
+  API.sR_t
+)
+"records.ml" 1329 80241 80265 "records.ml" 1329 80241 80288
+type(
+  API.string_to_string_map
+)
+"records.ml" 1329 80241 80254 "records.ml" 1329 80241 80289
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 1329 80241 80290 "records.ml" 1329 80241 80292
+type(
+  unit
+)
+"records.ml" 1328 80136 80139 "records.ml" 1329 80241 80292
+type(
+  field
+)
+"records.ml" 1330 80294 80297 "records.ml" 1330 80294 80307
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1330 80294 80314 "records.ml" 1330 80294 80321
+type(
+  string
+)
+"records.ml" 1330 80294 80332 "records.ml" 1330 80294 80334
+type(
+  unit
+)
+"records.ml" 1330 80294 80338 "records.ml" 1330 80294 80365
+type(
+  (API.ref_blob -> string) -> string -> API.string_to_ref_blob_map -> string
+)
+ident(
+  ext_ref Record_util.s2brm_to_string
+)
+"records.ml" 1330 80294 80366 "records.ml" 1330 80294 80383
+type(
+  API.ref_blob -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1330 80294 80384 "records.ml" 1330 80294 80388
+type(
+  string
+)
+"records.ml" 1330 80294 80390 "records.ml" 1330 80294 80391
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1330 80294 80392 "records.ml" 1330 80294 80394
+type(
+  unit
+)
+"records.ml" 1330 80294 80389 "records.ml" 1330 80294 80395
+type(
+  API.sR_t
+)
+"records.ml" 1330 80294 80389 "records.ml" 1330 80294 80408
+type(
+  API.string_to_ref_blob_map
+)
+"records.ml" 1330 80294 80338 "records.ml" 1330 80294 80408
+type(
+  string
+)
+"records.ml" 1330 80294 80327 "records.ml" 1330 80294 80409
+type(
+  unit -> string
+)
+"records.ml" 1330 80294 80410 "records.ml" 1330 80294 80412
+type(
+  unit
+)
+"records.ml" 1330 80294 80297 "records.ml" 1330 80294 80412
+type(
+  field
+)
+"records.ml" 1331 80414 80417 "records.ml" 1331 80414 80427
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1331 80414 80434 "records.ml" 1331 80414 80455
+type(
+  string
+)
+"records.ml" 1331 80414 80466 "records.ml" 1331 80414 80468
+type(
+  unit
+)
+"records.ml" 1331 80414 80472 "records.ml" 1331 80414 80486
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 1331 80414 80488 "records.ml" 1331 80414 80489
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1331 80414 80490 "records.ml" 1331 80414 80492
+type(
+  unit
+)
+"records.ml" 1331 80414 80487 "records.ml" 1331 80414 80493
+type(
+  API.sR_t
+)
+"records.ml" 1331 80414 80487 "records.ml" 1331 80414 80520
+type(
+  bool
+)
+"records.ml" 1331 80414 80472 "records.ml" 1331 80414 80520
+type(
+  string
+)
+"records.ml" 1331 80414 80461 "records.ml" 1331 80414 80521
+type(
+  unit -> string
+)
+"records.ml" 1331 80414 80522 "records.ml" 1331 80414 80524
+type(
+  unit
+)
+"records.ml" 1331 80414 80417 "records.ml" 1331 80414 80524
+type(
+  field
+)
+"records.ml" 1332 80526 80529 "records.ml" 1332 80526 80539
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> API.string_set) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1332 80526 80546 "records.ml" 1332 80526 80552
+type(
+  string
+)
+"records.ml" 1333 80553 80567 "records.ml" 1333 80553 80569
+type(
+  unit
+)
+"records.ml" 1333 80553 80573 "records.ml" 1333 80553 80586
+type(
+  string -> API.string_set -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1333 80553 80587 "records.ml" 1333 80553 80591
+type(
+  string
+)
+"records.ml" 1333 80553 80593 "records.ml" 1333 80553 80594
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1333 80553 80595 "records.ml" 1333 80553 80597
+type(
+  unit
+)
+"records.ml" 1333 80553 80592 "records.ml" 1333 80553 80598
+type(
+  API.sR_t
+)
+"records.ml" 1333 80553 80592 "records.ml" 1333 80553 80610
+type(
+  API.string_set
+)
+"records.ml" 1333 80553 80573 "records.ml" 1333 80553 80610
+type(
+  string
+)
+"records.ml" 1333 80553 80562 "records.ml" 1333 80553 80611
+type(
+  unit -> string
+)
+"records.ml" 1334 80612 80630 "records.ml" 1334 80612 80632
+type(
+  unit
+)
+"records.ml" 1334 80612 80637 "records.ml" 1334 80612 80638
+type(
+  unit -> API.sR_t
+)
+ident(
+  int_ref x "records.ml" 1287 77299 77304 "records.ml" 1287 77299 77305
+)
+"records.ml" 1334 80612 80639 "records.ml" 1334 80612 80641
+type(
+  unit
+)
+"records.ml" 1334 80612 80636 "records.ml" 1334 80612 80642
+type(
+  API.sR_t
+)
+"records.ml" 1334 80612 80636 "records.ml" 1334 80612 80654
+type(
+  API.string_set
+)
+"records.ml" 1334 80612 80625 "records.ml" 1334 80612 80655
+type(
+  unit -> API.string_set
+)
+"records.ml" 1335 80656 80677 "records.ml" 1335 80656 80680
+type(
+  string
+)
+ident(
+  def tag "records.ml" 1335 80656 80684 "records.ml" 1335 80656 80724
+)
+"records.ml" 1335 80656 80684 "records.ml" 1335 80656 80702
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_SR -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( SR ).add_tags
+)
+"records.ml" 1335 80656 80703 "records.ml" 1335 80656 80706
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1283 77126 77140 "records.ml" 1283 77126 77143
+)
+"records.ml" 1335 80656 80707 "records.ml" 1335 80656 80717
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1283 77126 77144 "records.ml" 1283 77126 77154
+)
+"records.ml" 1335 80656 80718 "records.ml" 1335 80656 80720
+type(
+  API.ref_SR
+)
+ident(
+  int_ref sr "records.ml" 1283 77126 77155 "records.ml" 1283 77126 77157
+)
+"records.ml" 1335 80656 80721 "records.ml" 1335 80656 80724
+type(
+  string
+)
+ident(
+  int_ref tag "records.ml" 1335 80656 80677 "records.ml" 1335 80656 80680
+)
+"records.ml" 1335 80656 80684 "records.ml" 1335 80656 80724
+type(
+  unit
+)
+"records.ml" 1335 80656 80672 "records.ml" 1335 80656 80725
+type(
+  string -> unit
+)
+"records.ml" 1336 80726 80752 "records.ml" 1336 80726 80755
+type(
+  string
+)
+ident(
+  def tag "records.ml" 1336 80726 80759 "records.ml" 1336 80726 80802
+)
+"records.ml" 1336 80726 80759 "records.ml" 1336 80726 80780
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_SR -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( SR ).remove_tags
+)
+"records.ml" 1336 80726 80781 "records.ml" 1336 80726 80784
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1283 77126 77140 "records.ml" 1283 77126 77143
+)
+"records.ml" 1336 80726 80785 "records.ml" 1336 80726 80795
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1283 77126 77144 "records.ml" 1283 77126 77154
+)
+"records.ml" 1336 80726 80796 "records.ml" 1336 80726 80798
+type(
+  API.ref_SR
+)
+ident(
+  int_ref sr "records.ml" 1283 77126 77155 "records.ml" 1283 77126 77157
+)
+"records.ml" 1336 80726 80799 "records.ml" 1336 80726 80802
+type(
+  string
+)
+ident(
+  int_ref tag "records.ml" 1336 80726 80752 "records.ml" 1336 80726 80755
+)
+"records.ml" 1336 80726 80759 "records.ml" 1336 80726 80802
+type(
+  unit
+)
+"records.ml" 1336 80726 80747 "records.ml" 1336 80726 80803
+type(
+  string -> unit
+)
+"records.ml" 1336 80726 80804 "records.ml" 1336 80726 80806
+type(
+  unit
+)
+"records.ml" 1332 80526 80529 "records.ml" 1336 80726 80806
+type(
+  field
+)
+"records.ml" 1292 77484 77496 "records.ml" 1337 80808 80811
+type(
+  field list
+)
+"records.ml" 1288 77329 77330 "records.ml" 1337 80808 80812
+type(
+  ([ `SR ], API.sR_t) record
+)
+"records.ml" 1287 77299 77300 "records.ml" 1337 80808 80812
+type(
+  ([ `SR ], API.sR_t) record
+)
+"records.ml" 1286 77265 77266 "records.ml" 1337 80808 80812
+type(
+  ([ `SR ], API.sR_t) record
+)
+"records.ml" 1285 77182 77183 "records.ml" 1337 80808 80812
+type(
+  ([ `SR ], API.sR_t) record
+)
+"records.ml" 1284 77160 77161 "records.ml" 1337 80808 80812
+type(
+  ([ `SR ], API.sR_t) record
+)
+"records.ml" 1339 80814 80818 "records.ml" 1339 80814 80828
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_PBD -> ([ `PBD ], API.pBD_t) record
+)
+ident(
+  def pbd_record "records.ml" 1364 82185 82185 --
+)
+"records.ml" 1339 80814 80829 "records.ml" 1339 80814 80832
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 1339 80814 80833 "records.ml" 1362 82180 82183
+)
+"records.ml" 1339 80814 80833 "records.ml" 1339 80814 80843
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 1339 80814 80844 "records.ml" 1362 82180 82183
+)
+"records.ml" 1339 80814 80844 "records.ml" 1339 80814 80847
+type(
+  API.ref_PBD
+)
+ident(
+  def pbd "records.ml" 1340 80850 80851 "records.ml" 1362 82180 82183
+)
+"records.ml" 1340 80850 80855 "records.ml" 1340 80850 80859
+type(
+  API.ref_PBD ref
+)
+"records.ml" 1340 80850 80862 "records.ml" 1340 80850 80865
+type(
+  API.ref_PBD -> API.ref_PBD ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1340 80850 80866 "records.ml" 1340 80850 80869
+type(
+  API.ref_PBD
+)
+ident(
+  int_ref pbd "records.ml" 1339 80814 80844 "records.ml" 1339 80814 80847
+)
+"records.ml" 1340 80850 80862 "records.ml" 1340 80850 80869
+type(
+  API.ref_PBD ref
+)
+"records.ml" 1341 80873 80878 "records.ml" 1341 80873 80890
+type(
+  API.pBD_t lzy
+)
+"records.ml" 1341 80873 80904 "records.ml" 1341 80873 80906
+type(
+  unit
+)
+"records.ml" 1341 80873 80910 "records.ml" 1341 80873 80931
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_PBD -> API.pBD_t
+)
+ident(
+  ext_ref Client.( Client ).( PBD ).get_record
+)
+"records.ml" 1341 80873 80932 "records.ml" 1341 80873 80935
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1339 80814 80829 "records.ml" 1339 80814 80832
+)
+"records.ml" 1341 80873 80936 "records.ml" 1341 80873 80946
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1339 80814 80833 "records.ml" 1339 80814 80843
+)
+"records.ml" 1341 80873 80947 "records.ml" 1341 80873 80948
+type(
+  API.ref_PBD ref -> API.ref_PBD
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1341 80873 80948 "records.ml" 1341 80873 80952
+type(
+  API.ref_PBD ref
+)
+ident(
+  int_ref _ref "records.ml" 1340 80850 80855 "records.ml" 1340 80850 80859
+)
+"records.ml" 1341 80873 80947 "records.ml" 1341 80873 80952
+type(
+  API.ref_PBD
+)
+"records.ml" 1341 80873 80910 "records.ml" 1341 80873 80952
+type(
+  API.pBD_t
+)
+"records.ml" 1341 80873 80899 "records.ml" 1341 80873 80953
+type(
+  unit -> API.pBD_t
+)
+"records.ml" 1341 80873 80893 "records.ml" 1341 80873 80953
+type(
+  API.pBD_t lzy
+)
+"records.ml" 1342 80957 80962 "records.ml" 1342 80957 80968
+type(
+  API.pBD_t lzy ref
+)
+"records.ml" 1342 80957 80971 "records.ml" 1342 80957 80974
+type(
+  API.pBD_t lzy -> API.pBD_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1342 80957 80975 "records.ml" 1342 80957 80987
+type(
+  API.pBD_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1341 80873 80878 "records.ml" 1341 80873 80890
+)
+"records.ml" 1342 80957 80971 "records.ml" 1342 80957 80987
+type(
+  API.pBD_t lzy ref
+)
+"records.ml" 1343 80991 80996 "records.ml" 1343 80991 80997
+type(
+  unit -> API.pBD_t
+)
+"records.ml" 1343 80991 80998 "records.ml" 1343 80991 81000
+type(
+  unit
+)
+"records.ml" 1343 80991 81003 "records.ml" 1343 80991 81010
+type(
+  API.pBD_t lzy ref -> API.pBD_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 1343 80991 81011 "records.ml" 1343 80991 81017
+type(
+  API.pBD_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1342 80957 80962 "records.ml" 1342 80957 80968
+)
+"records.ml" 1343 80991 81003 "records.ml" 1343 80991 81017
+type(
+  API.pBD_t
+)
+"records.ml" 1344 81021 81037 "records.ml" 1344 81021 81038
+type(
+  API.ref_PBD
+)
+ident(
+  def r "records.ml" 1344 81021 81042 "records.ml" 1344 81021 81075
+)
+"records.ml" 1344 81021 81042 "records.ml" 1344 81021 81046
+type(
+  API.ref_PBD ref
+)
+ident(
+  int_ref _ref "records.ml" 1340 80850 80855 "records.ml" 1340 80850 80859
+)
+"records.ml" 1344 81021 81047 "records.ml" 1344 81021 81049
+type(
+  API.ref_PBD ref -> API.ref_PBD -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1344 81021 81050 "records.ml" 1344 81021 81051
+type(
+  API.ref_PBD
+)
+ident(
+  int_ref r "records.ml" 1344 81021 81037 "records.ml" 1344 81021 81038
+)
+"records.ml" 1344 81021 81042 "records.ml" 1344 81021 81051
+type(
+  unit
+)
+"records.ml" 1344 81021 81053 "records.ml" 1344 81021 81059
+type(
+  API.pBD_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1342 80957 80962 "records.ml" 1342 80957 80968
+)
+"records.ml" 1344 81021 81060 "records.ml" 1344 81021 81062
+type(
+  API.pBD_t lzy ref -> API.pBD_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1344 81021 81063 "records.ml" 1344 81021 81075
+type(
+  API.pBD_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1341 80873 80878 "records.ml" 1341 80873 80890
+)
+"records.ml" 1344 81021 81053 "records.ml" 1344 81021 81075
+type(
+  unit
+)
+"records.ml" 1344 81021 81042 "records.ml" 1344 81021 81075
+type(
+  unit
+)
+"records.ml" 1344 81021 81032 "records.ml" 1344 81021 81077
+type(
+  API.ref_PBD -> unit
+)
+"records.ml" 1345 81078 81098 "records.ml" 1345 81078 81099
+type(
+  API.ref_PBD
+)
+ident(
+  def a "records.ml" 1345 81078 81106 "records.ml" 1345 81078 81132
+)
+"records.ml" 1345 81078 81100 "records.ml" 1345 81078 81101
+type(
+  API.pBD_t
+)
+ident(
+  def b "records.ml" 1345 81078 81106 "records.ml" 1345 81078 81132
+)
+"records.ml" 1345 81078 81097 "records.ml" 1345 81078 81102
+type(
+  API.ref_PBD * API.pBD_t
+)
+"records.ml" 1345 81078 81106 "records.ml" 1345 81078 81110
+type(
+  API.ref_PBD ref
+)
+ident(
+  int_ref _ref "records.ml" 1340 80850 80855 "records.ml" 1340 80850 80859
+)
+"records.ml" 1345 81078 81111 "records.ml" 1345 81078 81113
+type(
+  API.ref_PBD ref -> API.ref_PBD -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1345 81078 81114 "records.ml" 1345 81078 81115
+type(
+  API.ref_PBD
+)
+ident(
+  int_ref a "records.ml" 1345 81078 81098 "records.ml" 1345 81078 81099
+)
+"records.ml" 1345 81078 81106 "records.ml" 1345 81078 81115
+type(
+  unit
+)
+"records.ml" 1345 81078 81117 "records.ml" 1345 81078 81123
+type(
+  API.pBD_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1342 80957 80962 "records.ml" 1342 80957 80968
+)
+"records.ml" 1345 81078 81124 "records.ml" 1345 81078 81126
+type(
+  API.pBD_t lzy ref -> API.pBD_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1345 81078 81131 "records.ml" 1345 81078 81132
+type(
+  API.pBD_t
+)
+ident(
+  int_ref b "records.ml" 1345 81078 81100 "records.ml" 1345 81078 81101
+)
+"records.ml" 1345 81078 81127 "records.ml" 1345 81078 81132
+type(
+  API.pBD_t lzy
+)
+"records.ml" 1345 81078 81117 "records.ml" 1345 81078 81132
+type(
+  unit
+)
+"records.ml" 1345 81078 81106 "records.ml" 1345 81078 81132
+type(
+  unit
+)
+"records.ml" 1345 81078 81092 "records.ml" 1345 81078 81133
+type(
+  API.ref_PBD * API.pBD_t -> unit
+)
+"records.ml" 1346 81134 81145 "records.ml" 1346 81134 81146
+type(
+  unit -> API.pBD_t
+)
+ident(
+  int_ref x "records.ml" 1343 80991 80996 "records.ml" 1343 80991 80997
+)
+"records.ml" 1347 81147 81163 "records.ml" 1347 81147 81165
+type(
+  unit
+)
+"records.ml" 1347 81147 81169 "records.ml" 1347 81147 81170
+type(
+  API.ref_PBD ref -> API.ref_PBD
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1347 81147 81170 "records.ml" 1347 81147 81174
+type(
+  API.ref_PBD ref
+)
+ident(
+  int_ref _ref "records.ml" 1340 80850 80855 "records.ml" 1340 80850 80859
+)
+"records.ml" 1347 81147 81169 "records.ml" 1347 81147 81174
+type(
+  API.ref_PBD
+)
+"records.ml" 1347 81147 81158 "records.ml" 1347 81147 81175
+type(
+  unit -> API.ref_PBD
+)
+"records.ml" 1349 81189 81194 "records.ml" 1349 81189 81204
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1349 81189 81211 "records.ml" 1349 81189 81217
+type(
+  string
+)
+"records.ml" 1349 81189 81228 "records.ml" 1349 81189 81230
+type(
+  unit
+)
+"records.ml" 1349 81189 81235 "records.ml" 1349 81189 81236
+type(
+  unit -> API.pBD_t
+)
+ident(
+  int_ref x "records.ml" 1343 80991 80996 "records.ml" 1343 80991 80997
+)
+"records.ml" 1349 81189 81237 "records.ml" 1349 81189 81239
+type(
+  unit
+)
+"records.ml" 1349 81189 81234 "records.ml" 1349 81189 81240
+type(
+  API.pBD_t
+)
+"records.ml" 1349 81189 81234 "records.ml" 1349 81189 81253
+type(
+  string
+)
+"records.ml" 1349 81189 81223 "records.ml" 1349 81189 81254
+type(
+  unit -> string
+)
+"records.ml" 1349 81189 81255 "records.ml" 1349 81189 81257
+type(
+  unit
+)
+"records.ml" 1349 81189 81194 "records.ml" 1349 81189 81257
+type(
+  field
+)
+"records.ml" 1350 81258 81263 "records.ml" 1350 81258 81273
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1350 81258 81280 "records.ml" 1350 81258 81286
+type(
+  string
+)
+"records.ml" 1350 81258 81297 "records.ml" 1350 81258 81299
+type(
+  unit
+)
+"records.ml" 1350 81258 81303 "records.ml" 1350 81258 81320
+type(
+  API.ref_host -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1350 81258 81322 "records.ml" 1350 81258 81323
+type(
+  unit -> API.pBD_t
+)
+ident(
+  int_ref x "records.ml" 1343 80991 80996 "records.ml" 1343 80991 80997
+)
+"records.ml" 1350 81258 81324 "records.ml" 1350 81258 81326
+type(
+  unit
+)
+"records.ml" 1350 81258 81321 "records.ml" 1350 81258 81327
+type(
+  API.pBD_t
+)
+"records.ml" 1350 81258 81321 "records.ml" 1350 81258 81340
+type(
+  API.ref_host
+)
+"records.ml" 1350 81258 81303 "records.ml" 1350 81258 81340
+type(
+  string
+)
+"records.ml" 1350 81258 81292 "records.ml" 1350 81258 81341
+type(
+  unit -> string
+)
+"records.ml" 1350 81258 81354 "records.ml" 1350 81258 81358
+type(
+  bool
+)
+"records.ml" 1350 81258 81359 "records.ml" 1350 81258 81361
+type(
+  unit
+)
+"records.ml" 1350 81258 81263 "records.ml" 1350 81258 81361
+type(
+  field
+)
+"records.ml" 1351 81362 81367 "records.ml" 1351 81362 81377
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1351 81362 81384 "records.ml" 1351 81362 81395
+type(
+  string
+)
+"records.ml" 1351 81362 81406 "records.ml" 1351 81362 81408
+type(
+  unit
+)
+"records.ml" 1351 81362 81412 "records.ml" 1351 81362 81429
+type(
+  API.ref_host -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1351 81362 81431 "records.ml" 1351 81362 81432
+type(
+  unit -> API.pBD_t
+)
+ident(
+  int_ref x "records.ml" 1343 80991 80996 "records.ml" 1343 80991 80997
+)
+"records.ml" 1351 81362 81433 "records.ml" 1351 81362 81435
+type(
+  unit
+)
+"records.ml" 1351 81362 81430 "records.ml" 1351 81362 81436
+type(
+  API.pBD_t
+)
+"records.ml" 1351 81362 81430 "records.ml" 1351 81362 81449
+type(
+  API.ref_host
+)
+"records.ml" 1351 81362 81412 "records.ml" 1351 81362 81449
+type(
+  string
+)
+"records.ml" 1351 81362 81401 "records.ml" 1351 81362 81450
+type(
+  unit -> string
+)
+"records.ml" 1351 81362 81451 "records.ml" 1351 81362 81453
+type(
+  unit
+)
+"records.ml" 1351 81362 81367 "records.ml" 1351 81362 81453
+type(
+  field
+)
+"records.ml" 1352 81454 81459 "records.ml" 1352 81454 81469
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1352 81454 81476 "records.ml" 1352 81454 81485
+type(
+  string
+)
+"records.ml" 1352 81454 81496 "records.ml" 1352 81454 81498
+type(
+  unit
+)
+"records.ml" 1352 81454 81502 "records.ml" 1352 81454 81519
+type(
+  API.ref_SR -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1352 81454 81521 "records.ml" 1352 81454 81522
+type(
+  unit -> API.pBD_t
+)
+ident(
+  int_ref x "records.ml" 1343 80991 80996 "records.ml" 1343 80991 80997
+)
+"records.ml" 1352 81454 81523 "records.ml" 1352 81454 81525
+type(
+  unit
+)
+"records.ml" 1352 81454 81520 "records.ml" 1352 81454 81526
+type(
+  API.pBD_t
+)
+"records.ml" 1352 81454 81520 "records.ml" 1352 81454 81537
+type(
+  API.ref_SR
+)
+"records.ml" 1352 81454 81502 "records.ml" 1352 81454 81537
+type(
+  string
+)
+"records.ml" 1352 81454 81491 "records.ml" 1352 81454 81538
+type(
+  unit -> string
+)
+"records.ml" 1352 81454 81539 "records.ml" 1352 81454 81541
+type(
+  unit
+)
+"records.ml" 1352 81454 81459 "records.ml" 1352 81454 81541
+type(
+  field
+)
+"records.ml" 1353 81542 81547 "records.ml" 1353 81542 81557
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1353 81542 81564 "records.ml" 1353 81542 81579
+type(
+  string
+)
+"records.ml" 1354 81580 81594 "records.ml" 1354 81580 81596
+type(
+  unit
+)
+"records.ml" 1354 81580 81600 "records.ml" 1354 81580 81626
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 1354 81580 81627 "records.ml" 1354 81580 81631
+type(
+  string
+)
+"records.ml" 1354 81580 81633 "records.ml" 1354 81580 81634
+type(
+  unit -> API.pBD_t
+)
+ident(
+  int_ref x "records.ml" 1343 80991 80996 "records.ml" 1343 80991 80997
+)
+"records.ml" 1354 81580 81635 "records.ml" 1354 81580 81637
+type(
+  unit
+)
+"records.ml" 1354 81580 81632 "records.ml" 1354 81580 81638
+type(
+  API.pBD_t
+)
+"records.ml" 1354 81580 81632 "records.ml" 1354 81580 81660
+type(
+  API.string_to_string_map
+)
+"records.ml" 1354 81580 81600 "records.ml" 1354 81580 81660
+type(
+  string
+)
+"records.ml" 1354 81580 81589 "records.ml" 1354 81580 81661
+type(
+  unit -> string
+)
+"records.ml" 1355 81662 81680 "records.ml" 1355 81662 81682
+type(
+  unit
+)
+"records.ml" 1355 81662 81687 "records.ml" 1355 81662 81688
+type(
+  unit -> API.pBD_t
+)
+ident(
+  int_ref x "records.ml" 1343 80991 80996 "records.ml" 1343 80991 80997
+)
+"records.ml" 1355 81662 81689 "records.ml" 1355 81662 81691
+type(
+  unit
+)
+"records.ml" 1355 81662 81686 "records.ml" 1355 81662 81692
+type(
+  API.pBD_t
+)
+"records.ml" 1355 81662 81686 "records.ml" 1355 81662 81714
+type(
+  API.string_to_string_map
+)
+"records.ml" 1355 81662 81675 "records.ml" 1355 81662 81715
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 1355 81662 81716 "records.ml" 1355 81662 81718
+type(
+  unit
+)
+"records.ml" 1353 81542 81547 "records.ml" 1355 81662 81718
+type(
+  field
+)
+"records.ml" 1356 81719 81724 "records.ml" 1356 81719 81734
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1356 81719 81741 "records.ml" 1356 81719 81761
+type(
+  string
+)
+"records.ml" 1356 81719 81772 "records.ml" 1356 81719 81774
+type(
+  unit
+)
+"records.ml" 1356 81719 81778 "records.ml" 1356 81719 81792
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 1356 81719 81794 "records.ml" 1356 81719 81795
+type(
+  unit -> API.pBD_t
+)
+ident(
+  int_ref x "records.ml" 1343 80991 80996 "records.ml" 1343 80991 80997
+)
+"records.ml" 1356 81719 81796 "records.ml" 1356 81719 81798
+type(
+  unit
+)
+"records.ml" 1356 81719 81793 "records.ml" 1356 81719 81799
+type(
+  API.pBD_t
+)
+"records.ml" 1356 81719 81793 "records.ml" 1356 81719 81826
+type(
+  bool
+)
+"records.ml" 1356 81719 81778 "records.ml" 1356 81719 81826
+type(
+  string
+)
+"records.ml" 1356 81719 81767 "records.ml" 1356 81719 81827
+type(
+  unit -> string
+)
+"records.ml" 1356 81719 81828 "records.ml" 1356 81719 81830
+type(
+  unit
+)
+"records.ml" 1356 81719 81724 "records.ml" 1356 81719 81830
+type(
+  field
+)
+"records.ml" 1357 81831 81836 "records.ml" 1357 81831 81846
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1357 81831 81853 "records.ml" 1357 81831 81867
+type(
+  string
+)
+"records.ml" 1357 81831 81878 "records.ml" 1357 81831 81880
+type(
+  unit
+)
+"records.ml" 1357 81831 81884 "records.ml" 1357 81831 81910
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 1357 81831 81911 "records.ml" 1357 81831 81915
+type(
+  string
+)
+"records.ml" 1357 81831 81917 "records.ml" 1357 81831 81918
+type(
+  unit -> API.pBD_t
+)
+ident(
+  int_ref x "records.ml" 1343 80991 80996 "records.ml" 1343 80991 80997
+)
+"records.ml" 1357 81831 81919 "records.ml" 1357 81831 81921
+type(
+  unit
+)
+"records.ml" 1357 81831 81916 "records.ml" 1357 81831 81922
+type(
+  API.pBD_t
+)
+"records.ml" 1357 81831 81916 "records.ml" 1357 81831 81943
+type(
+  API.string_to_string_map
+)
+"records.ml" 1357 81831 81884 "records.ml" 1357 81831 81943
+type(
+  string
+)
+"records.ml" 1357 81831 81873 "records.ml" 1357 81831 81944
+type(
+  unit -> string
+)
+"records.ml" 1358 81946 81967 "records.ml" 1358 81946 81968
+type(
+  string
+)
+ident(
+  def k "records.ml" 1358 81946 81969 "records.ml" 1358 81946 82027
+)
+"records.ml" 1358 81946 81969 "records.ml" 1358 81946 81970
+type(
+  string
+)
+ident(
+  def v "records.ml" 1358 81946 81974 "records.ml" 1358 81946 82027
+)
+"records.ml" 1358 81946 81974 "records.ml" 1358 81946 82004
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_PBD -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( PBD ).add_to_other_config
+)
+"records.ml" 1358 81946 82005 "records.ml" 1358 81946 82008
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1339 80814 80829 "records.ml" 1339 80814 80832
+)
+"records.ml" 1358 81946 82009 "records.ml" 1358 81946 82019
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1339 80814 80833 "records.ml" 1339 80814 80843
+)
+"records.ml" 1358 81946 82020 "records.ml" 1358 81946 82023
+type(
+  API.ref_PBD
+)
+ident(
+  int_ref pbd "records.ml" 1339 80814 80844 "records.ml" 1339 80814 80847
+)
+"records.ml" 1358 81946 82024 "records.ml" 1358 81946 82025
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 1358 81946 81967 "records.ml" 1358 81946 81968
+)
+"records.ml" 1358 81946 82026 "records.ml" 1358 81946 82027
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 1358 81946 81969 "records.ml" 1358 81946 81970
+)
+"records.ml" 1358 81946 81974 "records.ml" 1358 81946 82027
+type(
+  unit
+)
+"records.ml" 1358 81946 81962 "records.ml" 1358 81946 82028
+type(
+  string -> string -> unit
+)
+"records.ml" 1359 82029 82055 "records.ml" 1359 82029 82056
+type(
+  string
+)
+ident(
+  def k "records.ml" 1359 82029 82060 "records.ml" 1359 82029 82116
+)
+"records.ml" 1359 82029 82060 "records.ml" 1359 82029 82095
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_PBD -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( PBD ).remove_from_other_config
+)
+"records.ml" 1359 82029 82096 "records.ml" 1359 82029 82099
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1339 80814 80829 "records.ml" 1339 80814 80832
+)
+"records.ml" 1359 82029 82100 "records.ml" 1359 82029 82110
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1339 80814 80833 "records.ml" 1339 80814 80843
+)
+"records.ml" 1359 82029 82111 "records.ml" 1359 82029 82114
+type(
+  API.ref_PBD
+)
+ident(
+  int_ref pbd "records.ml" 1339 80814 80844 "records.ml" 1339 80814 80847
+)
+"records.ml" 1359 82029 82115 "records.ml" 1359 82029 82116
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 1359 82029 82055 "records.ml" 1359 82029 82056
+)
+"records.ml" 1359 82029 82060 "records.ml" 1359 82029 82116
+type(
+  unit
+)
+"records.ml" 1359 82029 82050 "records.ml" 1359 82029 82117
+type(
+  string -> unit
+)
+"records.ml" 1360 82119 82137 "records.ml" 1360 82119 82139
+type(
+  unit
+)
+"records.ml" 1360 82119 82144 "records.ml" 1360 82119 82145
+type(
+  unit -> API.pBD_t
+)
+ident(
+  int_ref x "records.ml" 1343 80991 80996 "records.ml" 1343 80991 80997
+)
+"records.ml" 1360 82119 82146 "records.ml" 1360 82119 82148
+type(
+  unit
+)
+"records.ml" 1360 82119 82143 "records.ml" 1360 82119 82149
+type(
+  API.pBD_t
+)
+"records.ml" 1360 82119 82143 "records.ml" 1360 82119 82170
+type(
+  API.string_to_string_map
+)
+"records.ml" 1360 82119 82132 "records.ml" 1360 82119 82171
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 1360 82119 82172 "records.ml" 1360 82119 82174
+type(
+  unit
+)
+"records.ml" 1357 81831 81836 "records.ml" 1360 82119 82174
+type(
+  field
+)
+"records.ml" 1349 81189 81192 "records.ml" 1361 82175 82179
+type(
+  field list
+)
+"records.ml" 1344 81021 81023 "records.ml" 1362 82180 82183
+type(
+  ([ `PBD ], API.pBD_t) record
+)
+"records.ml" 1343 80991 80992 "records.ml" 1362 82180 82183
+type(
+  ([ `PBD ], API.pBD_t) record
+)
+"records.ml" 1342 80957 80958 "records.ml" 1362 82180 82183
+type(
+  ([ `PBD ], API.pBD_t) record
+)
+"records.ml" 1341 80873 80874 "records.ml" 1362 82180 82183
+type(
+  ([ `PBD ], API.pBD_t) record
+)
+"records.ml" 1340 80850 80851 "records.ml" 1362 82180 82183
+type(
+  ([ `PBD ], API.pBD_t) record
+)
+"records.ml" 1364 82185 82189 "records.ml" 1364 82185 82203
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_session -> ([ `session ], API.session_t) record
+)
+ident(
+  def session_record "records.ml" 1378 82668 82668 --
+)
+"records.ml" 1364 82185 82204 "records.ml" 1364 82185 82207
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 1364 82185 82208 "records.ml" 1376 82662 82666
+)
+"records.ml" 1364 82185 82208 "records.ml" 1364 82185 82218
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 1364 82185 82219 "records.ml" 1376 82662 82666
+)
+"records.ml" 1364 82185 82219 "records.ml" 1364 82185 82226
+type(
+  API.ref_session
+)
+ident(
+  def session "records.ml" 1365 82229 82231 "records.ml" 1376 82662 82666
+)
+"records.ml" 1365 82229 82235 "records.ml" 1365 82229 82239
+type(
+  API.ref_session ref
+)
+"records.ml" 1365 82229 82242 "records.ml" 1365 82229 82245
+type(
+  API.ref_session -> API.ref_session ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1365 82229 82246 "records.ml" 1365 82229 82253
+type(
+  API.ref_session
+)
+ident(
+  int_ref session "records.ml" 1364 82185 82219 "records.ml" 1364 82185 82226
+)
+"records.ml" 1365 82229 82242 "records.ml" 1365 82229 82253
+type(
+  API.ref_session ref
+)
+"records.ml" 1366 82257 82263 "records.ml" 1366 82257 82275
+type(
+  API.session_t lzy
+)
+"records.ml" 1366 82257 82289 "records.ml" 1366 82257 82291
+type(
+  unit
+)
+"records.ml" 1366 82257 82295 "records.ml" 1366 82257 82320
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_session -> API.session_t
+)
+ident(
+  ext_ref Client.( Client ).( Session ).get_record
+)
+"records.ml" 1366 82257 82321 "records.ml" 1366 82257 82324
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1364 82185 82204 "records.ml" 1364 82185 82207
+)
+"records.ml" 1366 82257 82325 "records.ml" 1366 82257 82335
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1364 82185 82208 "records.ml" 1364 82185 82218
+)
+"records.ml" 1366 82257 82336 "records.ml" 1366 82257 82337
+type(
+  API.ref_session ref -> API.ref_session
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1366 82257 82337 "records.ml" 1366 82257 82341
+type(
+  API.ref_session ref
+)
+ident(
+  int_ref _ref "records.ml" 1365 82229 82235 "records.ml" 1365 82229 82239
+)
+"records.ml" 1366 82257 82336 "records.ml" 1366 82257 82341
+type(
+  API.ref_session
+)
+"records.ml" 1366 82257 82295 "records.ml" 1366 82257 82341
+type(
+  API.session_t
+)
+"records.ml" 1366 82257 82284 "records.ml" 1366 82257 82342
+type(
+  unit -> API.session_t
+)
+"records.ml" 1366 82257 82278 "records.ml" 1366 82257 82342
+type(
+  API.session_t lzy
+)
+"records.ml" 1367 82346 82352 "records.ml" 1367 82346 82358
+type(
+  API.session_t lzy ref
+)
+"records.ml" 1367 82346 82361 "records.ml" 1367 82346 82364
+type(
+  API.session_t lzy -> API.session_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1367 82346 82365 "records.ml" 1367 82346 82377
+type(
+  API.session_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1366 82257 82263 "records.ml" 1366 82257 82275
+)
+"records.ml" 1367 82346 82361 "records.ml" 1367 82346 82377
+type(
+  API.session_t lzy ref
+)
+"records.ml" 1368 82381 82387 "records.ml" 1368 82381 82388
+type(
+  unit -> API.session_t
+)
+"records.ml" 1368 82381 82389 "records.ml" 1368 82381 82391
+type(
+  unit
+)
+"records.ml" 1368 82381 82394 "records.ml" 1368 82381 82401
+type(
+  API.session_t lzy ref -> API.session_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 1368 82381 82402 "records.ml" 1368 82381 82408
+type(
+  API.session_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1367 82346 82352 "records.ml" 1367 82346 82358
+)
+"records.ml" 1368 82381 82394 "records.ml" 1368 82381 82408
+type(
+  API.session_t
+)
+"records.ml" 1369 82412 82428 "records.ml" 1369 82412 82429
+type(
+  API.ref_session
+)
+ident(
+  def r "records.ml" 1369 82412 82433 "records.ml" 1369 82412 82466
+)
+"records.ml" 1369 82412 82433 "records.ml" 1369 82412 82437
+type(
+  API.ref_session ref
+)
+ident(
+  int_ref _ref "records.ml" 1365 82229 82235 "records.ml" 1365 82229 82239
+)
+"records.ml" 1369 82412 82438 "records.ml" 1369 82412 82440
+type(
+  API.ref_session ref -> API.ref_session -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1369 82412 82441 "records.ml" 1369 82412 82442
+type(
+  API.ref_session
+)
+ident(
+  int_ref r "records.ml" 1369 82412 82428 "records.ml" 1369 82412 82429
+)
+"records.ml" 1369 82412 82433 "records.ml" 1369 82412 82442
+type(
+  unit
+)
+"records.ml" 1369 82412 82444 "records.ml" 1369 82412 82450
+type(
+  API.session_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1367 82346 82352 "records.ml" 1367 82346 82358
+)
+"records.ml" 1369 82412 82451 "records.ml" 1369 82412 82453
+type(
+  API.session_t lzy ref -> API.session_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1369 82412 82454 "records.ml" 1369 82412 82466
+type(
+  API.session_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1366 82257 82263 "records.ml" 1366 82257 82275
+)
+"records.ml" 1369 82412 82444 "records.ml" 1369 82412 82466
+type(
+  unit
+)
+"records.ml" 1369 82412 82433 "records.ml" 1369 82412 82466
+type(
+  unit
+)
+"records.ml" 1369 82412 82423 "records.ml" 1369 82412 82468
+type(
+  API.ref_session -> unit
+)
+"records.ml" 1370 82470 82490 "records.ml" 1370 82470 82491
+type(
+  API.ref_session
+)
+ident(
+  def a "records.ml" 1370 82470 82498 "records.ml" 1370 82470 82524
+)
+"records.ml" 1370 82470 82492 "records.ml" 1370 82470 82493
+type(
+  API.session_t
+)
+ident(
+  def b "records.ml" 1370 82470 82498 "records.ml" 1370 82470 82524
+)
+"records.ml" 1370 82470 82489 "records.ml" 1370 82470 82494
+type(
+  API.ref_session * API.session_t
+)
+"records.ml" 1370 82470 82498 "records.ml" 1370 82470 82502
+type(
+  API.ref_session ref
+)
+ident(
+  int_ref _ref "records.ml" 1365 82229 82235 "records.ml" 1365 82229 82239
+)
+"records.ml" 1370 82470 82503 "records.ml" 1370 82470 82505
+type(
+  API.ref_session ref -> API.ref_session -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1370 82470 82506 "records.ml" 1370 82470 82507
+type(
+  API.ref_session
+)
+ident(
+  int_ref a "records.ml" 1370 82470 82490 "records.ml" 1370 82470 82491
+)
+"records.ml" 1370 82470 82498 "records.ml" 1370 82470 82507
+type(
+  unit
+)
+"records.ml" 1370 82470 82509 "records.ml" 1370 82470 82515
+type(
+  API.session_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1367 82346 82352 "records.ml" 1367 82346 82358
+)
+"records.ml" 1370 82470 82516 "records.ml" 1370 82470 82518
+type(
+  API.session_t lzy ref -> API.session_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1370 82470 82523 "records.ml" 1370 82470 82524
+type(
+  API.session_t
+)
+ident(
+  int_ref b "records.ml" 1370 82470 82492 "records.ml" 1370 82470 82493
+)
+"records.ml" 1370 82470 82519 "records.ml" 1370 82470 82524
+type(
+  API.session_t lzy
+)
+"records.ml" 1370 82470 82509 "records.ml" 1370 82470 82524
+type(
+  unit
+)
+"records.ml" 1370 82470 82498 "records.ml" 1370 82470 82524
+type(
+  unit
+)
+"records.ml" 1370 82470 82484 "records.ml" 1370 82470 82525
+type(
+  API.ref_session * API.session_t -> unit
+)
+"records.ml" 1371 82527 82538 "records.ml" 1371 82527 82539
+type(
+  unit -> API.session_t
+)
+ident(
+  int_ref x "records.ml" 1368 82381 82387 "records.ml" 1368 82381 82388
+)
+"records.ml" 1372 82541 82557 "records.ml" 1372 82541 82559
+type(
+  unit
+)
+"records.ml" 1372 82541 82563 "records.ml" 1372 82541 82564
+type(
+  API.ref_session ref -> API.ref_session
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1372 82541 82564 "records.ml" 1372 82541 82568
+type(
+  API.ref_session ref
+)
+ident(
+  int_ref _ref "records.ml" 1365 82229 82235 "records.ml" 1365 82229 82239
+)
+"records.ml" 1372 82541 82563 "records.ml" 1372 82541 82568
+type(
+  API.ref_session
+)
+"records.ml" 1372 82541 82552 "records.ml" 1372 82541 82569
+type(
+  unit -> API.ref_session
+)
+"records.ml" 1375 82589 82593 "records.ml" 1375 82589 82603
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1375 82589 82610 "records.ml" 1375 82589 82616
+type(
+  string
+)
+"records.ml" 1375 82589 82627 "records.ml" 1375 82589 82629
+type(
+  unit
+)
+"records.ml" 1375 82589 82634 "records.ml" 1375 82589 82635
+type(
+  unit -> API.session_t
+)
+ident(
+  int_ref x "records.ml" 1368 82381 82387 "records.ml" 1368 82381 82388
+)
+"records.ml" 1375 82589 82636 "records.ml" 1375 82589 82638
+type(
+  unit
+)
+"records.ml" 1375 82589 82633 "records.ml" 1375 82589 82639
+type(
+  API.session_t
+)
+"records.ml" 1375 82589 82633 "records.ml" 1375 82589 82656
+type(
+  string
+)
+"records.ml" 1375 82589 82622 "records.ml" 1375 82589 82657
+type(
+  unit -> string
+)
+"records.ml" 1375 82589 82658 "records.ml" 1375 82589 82660
+type(
+  unit
+)
+"records.ml" 1375 82589 82593 "records.ml" 1375 82589 82660
+type(
+  field
+)
+"records.ml" 1374 82585 82587 "records.ml" 1376 82662 82665
+type(
+  field list
+)
+"records.ml" 1369 82412 82414 "records.ml" 1376 82662 82666
+type(
+  ([ `session ], API.session_t) record
+)
+"records.ml" 1368 82381 82383 "records.ml" 1376 82662 82666
+type(
+  ([ `session ], API.session_t) record
+)
+"records.ml" 1367 82346 82348 "records.ml" 1376 82662 82666
+type(
+  ([ `session ], API.session_t) record
+)
+"records.ml" 1366 82257 82259 "records.ml" 1376 82662 82666
+type(
+  ([ `session ], API.session_t) record
+)
+"records.ml" 1365 82229 82231 "records.ml" 1376 82662 82666
+type(
+  ([ `session ], API.session_t) record
+)
+"records.ml" 1378 82668 82672 "records.ml" 1378 82668 82683
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_blob -> ([ `blob ], API.blob_t) record
+)
+ident(
+  def blob_record "records.ml" 1399 83729 83729 --
+)
+"records.ml" 1378 82668 82684 "records.ml" 1378 82668 82687
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 1378 82668 82688 "records.ml" 1397 83723 83727
+)
+"records.ml" 1378 82668 82688 "records.ml" 1378 82668 82698
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 1378 82668 82699 "records.ml" 1397 83723 83727
+)
+"records.ml" 1378 82668 82699 "records.ml" 1378 82668 82703
+type(
+  API.ref_blob
+)
+ident(
+  def blob "records.ml" 1379 82706 82708 "records.ml" 1397 83723 83727
+)
+"records.ml" 1379 82706 82712 "records.ml" 1379 82706 82716
+type(
+  API.ref_blob ref
+)
+"records.ml" 1379 82706 82719 "records.ml" 1379 82706 82722
+type(
+  API.ref_blob -> API.ref_blob ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1379 82706 82723 "records.ml" 1379 82706 82727
+type(
+  API.ref_blob
+)
+ident(
+  int_ref blob "records.ml" 1378 82668 82699 "records.ml" 1378 82668 82703
+)
+"records.ml" 1379 82706 82719 "records.ml" 1379 82706 82727
+type(
+  API.ref_blob ref
+)
+"records.ml" 1380 82731 82737 "records.ml" 1380 82731 82749
+type(
+  API.blob_t lzy
+)
+"records.ml" 1380 82731 82763 "records.ml" 1380 82731 82765
+type(
+  unit
+)
+"records.ml" 1380 82731 82769 "records.ml" 1380 82731 82791
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_blob -> API.blob_t
+)
+ident(
+  ext_ref Client.( Client ).( Blob ).get_record
+)
+"records.ml" 1380 82731 82792 "records.ml" 1380 82731 82795
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1378 82668 82684 "records.ml" 1378 82668 82687
+)
+"records.ml" 1380 82731 82796 "records.ml" 1380 82731 82806
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1378 82668 82688 "records.ml" 1378 82668 82698
+)
+"records.ml" 1380 82731 82807 "records.ml" 1380 82731 82808
+type(
+  API.ref_blob ref -> API.ref_blob
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1380 82731 82808 "records.ml" 1380 82731 82812
+type(
+  API.ref_blob ref
+)
+ident(
+  int_ref _ref "records.ml" 1379 82706 82712 "records.ml" 1379 82706 82716
+)
+"records.ml" 1380 82731 82807 "records.ml" 1380 82731 82812
+type(
+  API.ref_blob
+)
+"records.ml" 1380 82731 82769 "records.ml" 1380 82731 82812
+type(
+  API.blob_t
+)
+"records.ml" 1380 82731 82758 "records.ml" 1380 82731 82813
+type(
+  unit -> API.blob_t
+)
+"records.ml" 1380 82731 82752 "records.ml" 1380 82731 82813
+type(
+  API.blob_t lzy
+)
+"records.ml" 1381 82817 82823 "records.ml" 1381 82817 82829
+type(
+  API.blob_t lzy ref
+)
+"records.ml" 1381 82817 82832 "records.ml" 1381 82817 82835
+type(
+  API.blob_t lzy -> API.blob_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1381 82817 82836 "records.ml" 1381 82817 82848
+type(
+  API.blob_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1380 82731 82737 "records.ml" 1380 82731 82749
+)
+"records.ml" 1381 82817 82832 "records.ml" 1381 82817 82848
+type(
+  API.blob_t lzy ref
+)
+"records.ml" 1382 82852 82858 "records.ml" 1382 82852 82859
+type(
+  unit -> API.blob_t
+)
+"records.ml" 1382 82852 82860 "records.ml" 1382 82852 82862
+type(
+  unit
+)
+"records.ml" 1382 82852 82865 "records.ml" 1382 82852 82872
+type(
+  API.blob_t lzy ref -> API.blob_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 1382 82852 82873 "records.ml" 1382 82852 82879
+type(
+  API.blob_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1381 82817 82823 "records.ml" 1381 82817 82829
+)
+"records.ml" 1382 82852 82865 "records.ml" 1382 82852 82879
+type(
+  API.blob_t
+)
+"records.ml" 1383 82883 82899 "records.ml" 1383 82883 82900
+type(
+  API.ref_blob
+)
+ident(
+  def r "records.ml" 1383 82883 82904 "records.ml" 1383 82883 82937
+)
+"records.ml" 1383 82883 82904 "records.ml" 1383 82883 82908
+type(
+  API.ref_blob ref
+)
+ident(
+  int_ref _ref "records.ml" 1379 82706 82712 "records.ml" 1379 82706 82716
+)
+"records.ml" 1383 82883 82909 "records.ml" 1383 82883 82911
+type(
+  API.ref_blob ref -> API.ref_blob -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1383 82883 82912 "records.ml" 1383 82883 82913
+type(
+  API.ref_blob
+)
+ident(
+  int_ref r "records.ml" 1383 82883 82899 "records.ml" 1383 82883 82900
+)
+"records.ml" 1383 82883 82904 "records.ml" 1383 82883 82913
+type(
+  unit
+)
+"records.ml" 1383 82883 82915 "records.ml" 1383 82883 82921
+type(
+  API.blob_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1381 82817 82823 "records.ml" 1381 82817 82829
+)
+"records.ml" 1383 82883 82922 "records.ml" 1383 82883 82924
+type(
+  API.blob_t lzy ref -> API.blob_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1383 82883 82925 "records.ml" 1383 82883 82937
+type(
+  API.blob_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1380 82731 82737 "records.ml" 1380 82731 82749
+)
+"records.ml" 1383 82883 82915 "records.ml" 1383 82883 82937
+type(
+  unit
+)
+"records.ml" 1383 82883 82904 "records.ml" 1383 82883 82937
+type(
+  unit
+)
+"records.ml" 1383 82883 82894 "records.ml" 1383 82883 82939
+type(
+  API.ref_blob -> unit
+)
+"records.ml" 1384 82941 82961 "records.ml" 1384 82941 82962
+type(
+  API.ref_blob
+)
+ident(
+  def a "records.ml" 1384 82941 82969 "records.ml" 1384 82941 82995
+)
+"records.ml" 1384 82941 82963 "records.ml" 1384 82941 82964
+type(
+  API.blob_t
+)
+ident(
+  def b "records.ml" 1384 82941 82969 "records.ml" 1384 82941 82995
+)
+"records.ml" 1384 82941 82960 "records.ml" 1384 82941 82965
+type(
+  API.ref_blob * API.blob_t
+)
+"records.ml" 1384 82941 82969 "records.ml" 1384 82941 82973
+type(
+  API.ref_blob ref
+)
+ident(
+  int_ref _ref "records.ml" 1379 82706 82712 "records.ml" 1379 82706 82716
+)
+"records.ml" 1384 82941 82974 "records.ml" 1384 82941 82976
+type(
+  API.ref_blob ref -> API.ref_blob -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1384 82941 82977 "records.ml" 1384 82941 82978
+type(
+  API.ref_blob
+)
+ident(
+  int_ref a "records.ml" 1384 82941 82961 "records.ml" 1384 82941 82962
+)
+"records.ml" 1384 82941 82969 "records.ml" 1384 82941 82978
+type(
+  unit
+)
+"records.ml" 1384 82941 82980 "records.ml" 1384 82941 82986
+type(
+  API.blob_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1381 82817 82823 "records.ml" 1381 82817 82829
+)
+"records.ml" 1384 82941 82987 "records.ml" 1384 82941 82989
+type(
+  API.blob_t lzy ref -> API.blob_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1384 82941 82994 "records.ml" 1384 82941 82995
+type(
+  API.blob_t
+)
+ident(
+  int_ref b "records.ml" 1384 82941 82963 "records.ml" 1384 82941 82964
+)
+"records.ml" 1384 82941 82990 "records.ml" 1384 82941 82995
+type(
+  API.blob_t lzy
+)
+"records.ml" 1384 82941 82980 "records.ml" 1384 82941 82995
+type(
+  unit
+)
+"records.ml" 1384 82941 82969 "records.ml" 1384 82941 82995
+type(
+  unit
+)
+"records.ml" 1384 82941 82955 "records.ml" 1384 82941 82996
+type(
+  API.ref_blob * API.blob_t -> unit
+)
+"records.ml" 1385 82998 83009 "records.ml" 1385 82998 83010
+type(
+  unit -> API.blob_t
+)
+ident(
+  int_ref x "records.ml" 1382 82852 82858 "records.ml" 1382 82852 82859
+)
+"records.ml" 1386 83012 83028 "records.ml" 1386 83012 83030
+type(
+  unit
+)
+"records.ml" 1386 83012 83034 "records.ml" 1386 83012 83035
+type(
+  API.ref_blob ref -> API.ref_blob
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1386 83012 83035 "records.ml" 1386 83012 83039
+type(
+  API.ref_blob ref
+)
+ident(
+  int_ref _ref "records.ml" 1379 82706 82712 "records.ml" 1379 82706 82716
+)
+"records.ml" 1386 83012 83034 "records.ml" 1386 83012 83039
+type(
+  API.ref_blob
+)
+"records.ml" 1386 83012 83023 "records.ml" 1386 83012 83040
+type(
+  unit -> API.ref_blob
+)
+"records.ml" 1389 83059 83063 "records.ml" 1389 83059 83073
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1389 83059 83080 "records.ml" 1389 83059 83086
+type(
+  string
+)
+"records.ml" 1389 83059 83097 "records.ml" 1389 83059 83099
+type(
+  unit
+)
+"records.ml" 1389 83059 83104 "records.ml" 1389 83059 83105
+type(
+  unit -> API.blob_t
+)
+ident(
+  int_ref x "records.ml" 1382 82852 82858 "records.ml" 1382 82852 82859
+)
+"records.ml" 1389 83059 83106 "records.ml" 1389 83059 83108
+type(
+  unit
+)
+"records.ml" 1389 83059 83103 "records.ml" 1389 83059 83109
+type(
+  API.blob_t
+)
+"records.ml" 1389 83059 83103 "records.ml" 1389 83059 83123
+type(
+  string
+)
+"records.ml" 1389 83059 83092 "records.ml" 1389 83059 83124
+type(
+  unit -> string
+)
+"records.ml" 1389 83059 83125 "records.ml" 1389 83059 83127
+type(
+  unit
+)
+"records.ml" 1389 83059 83063 "records.ml" 1389 83059 83127
+type(
+  field
+)
+"records.ml" 1390 83129 83133 "records.ml" 1390 83129 83143
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1390 83129 83150 "records.ml" 1390 83129 83162
+type(
+  string
+)
+"records.ml" 1390 83129 83173 "records.ml" 1390 83129 83175
+type(
+  unit
+)
+"records.ml" 1390 83129 83180 "records.ml" 1390 83129 83181
+type(
+  unit -> API.blob_t
+)
+ident(
+  int_ref x "records.ml" 1382 82852 82858 "records.ml" 1382 82852 82859
+)
+"records.ml" 1390 83129 83182 "records.ml" 1390 83129 83184
+type(
+  unit
+)
+"records.ml" 1390 83129 83179 "records.ml" 1390 83129 83185
+type(
+  API.blob_t
+)
+"records.ml" 1390 83129 83179 "records.ml" 1390 83129 83205
+type(
+  string
+)
+"records.ml" 1390 83129 83168 "records.ml" 1390 83129 83206
+type(
+  unit -> string
+)
+"records.ml" 1391 83208 83224 "records.ml" 1391 83208 83225
+type(
+  string
+)
+ident(
+  def x "records.ml" 1391 83208 83229 "records.ml" 1391 83208 83278
+)
+"records.ml" 1391 83208 83229 "records.ml" 1391 83208 83255
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_blob -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Blob ).set_name_label
+)
+"records.ml" 1391 83208 83256 "records.ml" 1391 83208 83259
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1378 82668 82684 "records.ml" 1378 82668 82687
+)
+"records.ml" 1391 83208 83260 "records.ml" 1391 83208 83270
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1378 82668 82688 "records.ml" 1378 82668 82698
+)
+"records.ml" 1391 83208 83271 "records.ml" 1391 83208 83272
+type(
+  API.ref_blob ref -> API.ref_blob
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1391 83208 83272 "records.ml" 1391 83208 83276
+type(
+  API.ref_blob ref
+)
+ident(
+  int_ref _ref "records.ml" 1379 82706 82712 "records.ml" 1379 82706 82716
+)
+"records.ml" 1391 83208 83271 "records.ml" 1391 83208 83276
+type(
+  API.ref_blob
+)
+"records.ml" 1391 83208 83277 "records.ml" 1391 83208 83278
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 1391 83208 83224 "records.ml" 1391 83208 83225
+)
+"records.ml" 1391 83208 83229 "records.ml" 1391 83208 83278
+type(
+  unit
+)
+"records.ml" 1391 83208 83219 "records.ml" 1391 83208 83279
+type(
+  string -> unit
+)
+"records.ml" 1391 83208 83280 "records.ml" 1391 83208 83282
+type(
+  unit
+)
+"records.ml" 1390 83129 83133 "records.ml" 1391 83208 83282
+type(
+  field
+)
+"records.ml" 1392 83284 83288 "records.ml" 1392 83284 83298
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1392 83284 83305 "records.ml" 1392 83284 83323
+type(
+  string
+)
+"records.ml" 1392 83284 83334 "records.ml" 1392 83284 83336
+type(
+  unit
+)
+"records.ml" 1392 83284 83341 "records.ml" 1392 83284 83342
+type(
+  unit -> API.blob_t
+)
+ident(
+  int_ref x "records.ml" 1382 82852 82858 "records.ml" 1382 82852 82859
+)
+"records.ml" 1392 83284 83343 "records.ml" 1392 83284 83345
+type(
+  unit
+)
+"records.ml" 1392 83284 83340 "records.ml" 1392 83284 83346
+type(
+  API.blob_t
+)
+"records.ml" 1392 83284 83340 "records.ml" 1392 83284 83372
+type(
+  string
+)
+"records.ml" 1392 83284 83329 "records.ml" 1392 83284 83373
+type(
+  unit -> string
+)
+"records.ml" 1393 83374 83390 "records.ml" 1393 83374 83391
+type(
+  string
+)
+ident(
+  def x "records.ml" 1393 83374 83395 "records.ml" 1393 83374 83450
+)
+"records.ml" 1393 83374 83395 "records.ml" 1393 83374 83427
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_blob -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Blob ).set_name_description
+)
+"records.ml" 1393 83374 83428 "records.ml" 1393 83374 83431
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1378 82668 82684 "records.ml" 1378 82668 82687
+)
+"records.ml" 1393 83374 83432 "records.ml" 1393 83374 83442
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1378 82668 82688 "records.ml" 1378 82668 82698
+)
+"records.ml" 1393 83374 83443 "records.ml" 1393 83374 83444
+type(
+  API.ref_blob ref -> API.ref_blob
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1393 83374 83444 "records.ml" 1393 83374 83448
+type(
+  API.ref_blob ref
+)
+ident(
+  int_ref _ref "records.ml" 1379 82706 82712 "records.ml" 1379 82706 82716
+)
+"records.ml" 1393 83374 83443 "records.ml" 1393 83374 83448
+type(
+  API.ref_blob
+)
+"records.ml" 1393 83374 83449 "records.ml" 1393 83374 83450
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 1393 83374 83390 "records.ml" 1393 83374 83391
+)
+"records.ml" 1393 83374 83395 "records.ml" 1393 83374 83450
+type(
+  unit
+)
+"records.ml" 1393 83374 83385 "records.ml" 1393 83374 83451
+type(
+  string -> unit
+)
+"records.ml" 1393 83374 83452 "records.ml" 1393 83374 83454
+type(
+  unit
+)
+"records.ml" 1392 83284 83288 "records.ml" 1393 83374 83454
+type(
+  field
+)
+"records.ml" 1394 83456 83460 "records.ml" 1394 83456 83470
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1394 83456 83477 "records.ml" 1394 83456 83491
+type(
+  string
+)
+"records.ml" 1394 83456 83502 "records.ml" 1394 83456 83504
+type(
+  unit
+)
+"records.ml" 1394 83456 83508 "records.ml" 1394 83456 83522
+type(
+  API.datetime -> string
+)
+ident(
+  ext_ref Date.to_string
+)
+"records.ml" 1394 83456 83524 "records.ml" 1394 83456 83525
+type(
+  unit -> API.blob_t
+)
+ident(
+  int_ref x "records.ml" 1382 82852 82858 "records.ml" 1382 82852 82859
+)
+"records.ml" 1394 83456 83526 "records.ml" 1394 83456 83528
+type(
+  unit
+)
+"records.ml" 1394 83456 83523 "records.ml" 1394 83456 83529
+type(
+  API.blob_t
+)
+"records.ml" 1394 83456 83523 "records.ml" 1394 83456 83551
+type(
+  API.datetime
+)
+"records.ml" 1394 83456 83508 "records.ml" 1394 83456 83551
+type(
+  string
+)
+"records.ml" 1394 83456 83497 "records.ml" 1394 83456 83552
+type(
+  unit -> string
+)
+"records.ml" 1394 83456 83553 "records.ml" 1394 83456 83555
+type(
+  unit
+)
+"records.ml" 1394 83456 83460 "records.ml" 1394 83456 83555
+type(
+  field
+)
+"records.ml" 1395 83557 83561 "records.ml" 1395 83557 83571
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1395 83557 83578 "records.ml" 1395 83557 83584
+type(
+  string
+)
+"records.ml" 1395 83557 83595 "records.ml" 1395 83557 83597
+type(
+  unit
+)
+"records.ml" 1395 83557 83601 "records.ml" 1395 83557 83616
+type(
+  int64 -> string
+)
+ident(
+  ext_ref Int64.to_string
+)
+"records.ml" 1395 83557 83618 "records.ml" 1395 83557 83619
+type(
+  unit -> API.blob_t
+)
+ident(
+  int_ref x "records.ml" 1382 82852 82858 "records.ml" 1382 82852 82859
+)
+"records.ml" 1395 83557 83620 "records.ml" 1395 83557 83622
+type(
+  unit
+)
+"records.ml" 1395 83557 83617 "records.ml" 1395 83557 83623
+type(
+  API.blob_t
+)
+"records.ml" 1395 83557 83617 "records.ml" 1395 83557 83637
+type(
+  int64
+)
+"records.ml" 1395 83557 83601 "records.ml" 1395 83557 83637
+type(
+  string
+)
+"records.ml" 1395 83557 83590 "records.ml" 1395 83557 83638
+type(
+  unit -> string
+)
+"records.ml" 1395 83557 83639 "records.ml" 1395 83557 83641
+type(
+  unit
+)
+"records.ml" 1395 83557 83561 "records.ml" 1395 83557 83641
+type(
+  field
+)
+"records.ml" 1396 83643 83647 "records.ml" 1396 83643 83657
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1396 83643 83664 "records.ml" 1396 83643 83675
+type(
+  string
+)
+"records.ml" 1396 83643 83686 "records.ml" 1396 83643 83688
+type(
+  unit
+)
+"records.ml" 1396 83643 83693 "records.ml" 1396 83643 83694
+type(
+  unit -> API.blob_t
+)
+ident(
+  int_ref x "records.ml" 1382 82852 82858 "records.ml" 1382 82852 82859
+)
+"records.ml" 1396 83643 83695 "records.ml" 1396 83643 83697
+type(
+  unit
+)
+"records.ml" 1396 83643 83692 "records.ml" 1396 83643 83698
+type(
+  API.blob_t
+)
+"records.ml" 1396 83643 83692 "records.ml" 1396 83643 83717
+type(
+  string
+)
+"records.ml" 1396 83643 83681 "records.ml" 1396 83643 83718
+type(
+  unit -> string
+)
+"records.ml" 1396 83643 83719 "records.ml" 1396 83643 83721
+type(
+  unit
+)
+"records.ml" 1396 83643 83647 "records.ml" 1396 83643 83721
+type(
+  field
+)
+"records.ml" 1388 83055 83057 "records.ml" 1397 83723 83726
+type(
+  field list
+)
+"records.ml" 1383 82883 82885 "records.ml" 1397 83723 83727
+type(
+  ([ `blob ], API.blob_t) record
+)
+"records.ml" 1382 82852 82854 "records.ml" 1397 83723 83727
+type(
+  ([ `blob ], API.blob_t) record
+)
+"records.ml" 1381 82817 82819 "records.ml" 1397 83723 83727
+type(
+  ([ `blob ], API.blob_t) record
+)
+"records.ml" 1380 82731 82733 "records.ml" 1397 83723 83727
+type(
+  ([ `blob ], API.blob_t) record
+)
+"records.ml" 1379 82706 82708 "records.ml" 1397 83723 83727
+type(
+  ([ `blob ], API.blob_t) record
+)
+"records.ml" 1399 83729 83733 "records.ml" 1399 83729 83746
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_secret -> ([ `secret ], API.secret_t) record
+)
+ident(
+  def secret_record "records.ml" 1418 84372 84372 --
+)
+"records.ml" 1399 83729 83747 "records.ml" 1399 83729 83750
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 1399 83729 83751 "records.ml" 1416 84368 84370
+)
+"records.ml" 1399 83729 83751 "records.ml" 1399 83729 83761
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 1399 83729 83762 "records.ml" 1416 84368 84370
+)
+"records.ml" 1399 83729 83762 "records.ml" 1399 83729 83768
+type(
+  API.ref_secret
+)
+ident(
+  def secret "records.ml" 1400 83771 83772 "records.ml" 1416 84368 84370
+)
+"records.ml" 1400 83771 83776 "records.ml" 1400 83771 83780
+type(
+  API.ref_secret ref
+)
+"records.ml" 1400 83771 83783 "records.ml" 1400 83771 83786
+type(
+  API.ref_secret -> API.ref_secret ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1400 83771 83787 "records.ml" 1400 83771 83793
+type(
+  API.ref_secret
+)
+ident(
+  int_ref secret "records.ml" 1399 83729 83762 "records.ml" 1399 83729 83768
+)
+"records.ml" 1400 83771 83783 "records.ml" 1400 83771 83793
+type(
+  API.ref_secret ref
+)
+"records.ml" 1401 83797 83802 "records.ml" 1401 83797 83814
+type(
+  API.secret_t lzy
+)
+"records.ml" 1401 83797 83828 "records.ml" 1401 83797 83830
+type(
+  unit
+)
+"records.ml" 1402 83834 83836 "records.ml" 1402 83834 83860
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_secret -> API.secret_t
+)
+ident(
+  ext_ref Client.( Client ).( Secret ).get_record
+)
+"records.ml" 1402 83834 83862 "records.ml" 1402 83834 83865
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1399 83729 83747 "records.ml" 1399 83729 83750
+)
+"records.ml" 1402 83834 83867 "records.ml" 1402 83834 83877
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1399 83729 83751 "records.ml" 1399 83729 83761
+)
+"records.ml" 1402 83834 83884 "records.ml" 1402 83834 83885
+type(
+  API.ref_secret ref -> API.ref_secret
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1402 83834 83885 "records.ml" 1402 83834 83889
+type(
+  API.ref_secret ref
+)
+ident(
+  int_ref _ref "records.ml" 1400 83771 83776 "records.ml" 1400 83771 83780
+)
+"records.ml" 1402 83834 83884 "records.ml" 1402 83834 83889
+type(
+  API.ref_secret
+)
+"records.ml" 1402 83834 83836 "records.ml" 1402 83834 83889
+type(
+  API.secret_t
+)
+"records.ml" 1401 83797 83823 "records.ml" 1402 83834 83890
+type(
+  unit -> API.secret_t
+)
+"records.ml" 1401 83797 83817 "records.ml" 1402 83834 83890
+type(
+  API.secret_t lzy
+)
+"records.ml" 1403 83894 83899 "records.ml" 1403 83894 83905
+type(
+  API.secret_t lzy ref
+)
+"records.ml" 1403 83894 83908 "records.ml" 1403 83894 83911
+type(
+  API.secret_t lzy -> API.secret_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1403 83894 83912 "records.ml" 1403 83894 83924
+type(
+  API.secret_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1401 83797 83802 "records.ml" 1401 83797 83814
+)
+"records.ml" 1403 83894 83908 "records.ml" 1403 83894 83924
+type(
+  API.secret_t lzy ref
+)
+"records.ml" 1404 83928 83933 "records.ml" 1404 83928 83934
+type(
+  unit -> API.secret_t
+)
+"records.ml" 1404 83928 83935 "records.ml" 1404 83928 83937
+type(
+  unit
+)
+"records.ml" 1404 83928 83940 "records.ml" 1404 83928 83947
+type(
+  API.secret_t lzy ref -> API.secret_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 1404 83928 83948 "records.ml" 1404 83928 83954
+type(
+  API.secret_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1403 83894 83899 "records.ml" 1403 83894 83905
+)
+"records.ml" 1404 83928 83940 "records.ml" 1404 83928 83954
+type(
+  API.secret_t
+)
+"records.ml" 1405 83958 83975 "records.ml" 1405 83958 83976
+type(
+  API.ref_secret
+)
+ident(
+  def r "records.ml" 1405 83958 83980 "records.ml" 1405 83958 84013
+)
+"records.ml" 1405 83958 83980 "records.ml" 1405 83958 83984
+type(
+  API.ref_secret ref
+)
+ident(
+  int_ref _ref "records.ml" 1400 83771 83776 "records.ml" 1400 83771 83780
+)
+"records.ml" 1405 83958 83985 "records.ml" 1405 83958 83987
+type(
+  API.ref_secret ref -> API.ref_secret -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1405 83958 83988 "records.ml" 1405 83958 83989
+type(
+  API.ref_secret
+)
+ident(
+  int_ref r "records.ml" 1405 83958 83975 "records.ml" 1405 83958 83976
+)
+"records.ml" 1405 83958 83980 "records.ml" 1405 83958 83989
+type(
+  unit
+)
+"records.ml" 1405 83958 83991 "records.ml" 1405 83958 83997
+type(
+  API.secret_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1403 83894 83899 "records.ml" 1403 83894 83905
+)
+"records.ml" 1405 83958 83998 "records.ml" 1405 83958 84000
+type(
+  API.secret_t lzy ref -> API.secret_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1405 83958 84001 "records.ml" 1405 83958 84013
+type(
+  API.secret_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1401 83797 83802 "records.ml" 1401 83797 83814
+)
+"records.ml" 1405 83958 83991 "records.ml" 1405 83958 84013
+type(
+  unit
+)
+"records.ml" 1405 83958 83980 "records.ml" 1405 83958 84013
+type(
+  unit
+)
+"records.ml" 1405 83958 83970 "records.ml" 1405 83958 84015
+type(
+  API.ref_secret -> unit
+)
+"records.ml" 1406 84016 84037 "records.ml" 1406 84016 84038
+type(
+  API.ref_secret
+)
+ident(
+  def a "records.ml" 1406 84016 84046 "records.ml" 1406 84016 84072
+)
+"records.ml" 1406 84016 84040 "records.ml" 1406 84016 84041
+type(
+  API.secret_t
+)
+ident(
+  def b "records.ml" 1406 84016 84046 "records.ml" 1406 84016 84072
+)
+"records.ml" 1406 84016 84036 "records.ml" 1406 84016 84042
+type(
+  API.ref_secret * API.secret_t
+)
+"records.ml" 1406 84016 84046 "records.ml" 1406 84016 84050
+type(
+  API.ref_secret ref
+)
+ident(
+  int_ref _ref "records.ml" 1400 83771 83776 "records.ml" 1400 83771 83780
+)
+"records.ml" 1406 84016 84051 "records.ml" 1406 84016 84053
+type(
+  API.ref_secret ref -> API.ref_secret -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1406 84016 84054 "records.ml" 1406 84016 84055
+type(
+  API.ref_secret
+)
+ident(
+  int_ref a "records.ml" 1406 84016 84037 "records.ml" 1406 84016 84038
+)
+"records.ml" 1406 84016 84046 "records.ml" 1406 84016 84055
+type(
+  unit
+)
+"records.ml" 1406 84016 84057 "records.ml" 1406 84016 84063
+type(
+  API.secret_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1403 83894 83899 "records.ml" 1403 83894 83905
+)
+"records.ml" 1406 84016 84064 "records.ml" 1406 84016 84066
+type(
+  API.secret_t lzy ref -> API.secret_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1406 84016 84071 "records.ml" 1406 84016 84072
+type(
+  API.secret_t
+)
+ident(
+  int_ref b "records.ml" 1406 84016 84040 "records.ml" 1406 84016 84041
+)
+"records.ml" 1406 84016 84067 "records.ml" 1406 84016 84072
+type(
+  API.secret_t lzy
+)
+"records.ml" 1406 84016 84057 "records.ml" 1406 84016 84072
+type(
+  unit
+)
+"records.ml" 1406 84016 84046 "records.ml" 1406 84016 84072
+type(
+  unit
+)
+"records.ml" 1406 84016 84031 "records.ml" 1406 84016 84074
+type(
+  API.ref_secret * API.secret_t -> unit
+)
+"records.ml" 1407 84075 84087 "records.ml" 1407 84075 84088
+type(
+  unit -> API.secret_t
+)
+ident(
+  int_ref x "records.ml" 1404 83928 83933 "records.ml" 1404 83928 83934
+)
+"records.ml" 1408 84089 84106 "records.ml" 1408 84089 84108
+type(
+  unit
+)
+"records.ml" 1408 84089 84112 "records.ml" 1408 84089 84113
+type(
+  API.ref_secret ref -> API.ref_secret
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1408 84089 84113 "records.ml" 1408 84089 84117
+type(
+  API.ref_secret ref
+)
+ident(
+  int_ref _ref "records.ml" 1400 83771 83776 "records.ml" 1400 83771 83780
+)
+"records.ml" 1408 84089 84112 "records.ml" 1408 84089 84117
+type(
+  API.ref_secret
+)
+"records.ml" 1408 84089 84101 "records.ml" 1408 84089 84119
+type(
+  unit -> API.ref_secret
+)
+"records.ml" 1410 84132 84136 "records.ml" 1410 84132 84146
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1410 84132 84153 "records.ml" 1410 84132 84159
+type(
+  string
+)
+"records.ml" 1410 84132 84170 "records.ml" 1410 84132 84172
+type(
+  unit
+)
+"records.ml" 1410 84132 84177 "records.ml" 1410 84132 84178
+type(
+  unit -> API.secret_t
+)
+ident(
+  int_ref x "records.ml" 1404 83928 83933 "records.ml" 1404 83928 83934
+)
+"records.ml" 1410 84132 84179 "records.ml" 1410 84132 84181
+type(
+  unit
+)
+"records.ml" 1410 84132 84176 "records.ml" 1410 84132 84182
+type(
+  API.secret_t
+)
+"records.ml" 1410 84132 84176 "records.ml" 1410 84132 84198
+type(
+  string
+)
+"records.ml" 1410 84132 84165 "records.ml" 1410 84132 84199
+type(
+  unit -> string
+)
+"records.ml" 1410 84132 84200 "records.ml" 1410 84132 84202
+type(
+  unit
+)
+"records.ml" 1410 84132 84136 "records.ml" 1410 84132 84202
+type(
+  field
+)
+"records.ml" 1411 84203 84207 "records.ml" 1411 84203 84217
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1411 84203 84224 "records.ml" 1411 84203 84231
+type(
+  string
+)
+"records.ml" 1411 84203 84242 "records.ml" 1411 84203 84244
+type(
+  unit
+)
+"records.ml" 1411 84203 84249 "records.ml" 1411 84203 84250
+type(
+  unit -> API.secret_t
+)
+ident(
+  int_ref x "records.ml" 1404 83928 83933 "records.ml" 1404 83928 83934
+)
+"records.ml" 1411 84203 84251 "records.ml" 1411 84203 84253
+type(
+  unit
+)
+"records.ml" 1411 84203 84248 "records.ml" 1411 84203 84254
+type(
+  API.secret_t
+)
+"records.ml" 1411 84203 84248 "records.ml" 1411 84203 84271
+type(
+  string
+)
+"records.ml" 1411 84203 84237 "records.ml" 1411 84203 84272
+type(
+  unit -> string
+)
+"records.ml" 1412 84273 84286 "records.ml" 1412 84273 84287
+type(
+  string
+)
+ident(
+  def x "records.ml" 1413 84291 84295 "records.ml" 1413 84291 84356
+)
+"records.ml" 1413 84291 84295 "records.ml" 1413 84291 84318
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_secret -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( Secret ).set_value
+)
+"records.ml" 1413 84291 84320 "records.ml" 1413 84291 84323
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1399 83729 83747 "records.ml" 1399 83729 83750
+)
+"records.ml" 1413 84291 84325 "records.ml" 1413 84291 84335
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1399 83729 83751 "records.ml" 1399 83729 83761
+)
+"records.ml" 1413 84291 84342 "records.ml" 1413 84291 84343
+type(
+  API.ref_secret ref -> API.ref_secret
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1413 84291 84343 "records.ml" 1413 84291 84347
+type(
+  API.ref_secret ref
+)
+ident(
+  int_ref _ref "records.ml" 1400 83771 83776 "records.ml" 1400 83771 83780
+)
+"records.ml" 1413 84291 84342 "records.ml" 1413 84291 84347
+type(
+  API.ref_secret
+)
+"records.ml" 1413 84291 84355 "records.ml" 1413 84291 84356
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 1412 84273 84286 "records.ml" 1412 84273 84287
+)
+"records.ml" 1413 84291 84295 "records.ml" 1413 84291 84356
+type(
+  unit
+)
+"records.ml" 1412 84273 84281 "records.ml" 1413 84291 84357
+type(
+  string -> unit
+)
+"records.ml" 1414 84358 84361 "records.ml" 1414 84358 84363
+type(
+  unit
+)
+"records.ml" 1411 84203 84207 "records.ml" 1414 84358 84363
+type(
+  field
+)
+"records.ml" 1410 84132 84134 "records.ml" 1415 84364 84367
+type(
+  field list
+)
+"records.ml" 1405 83958 83959 "records.ml" 1416 84368 84370
+type(
+  ([ `secret ], API.secret_t) record
+)
+"records.ml" 1404 83928 83929 "records.ml" 1416 84368 84370
+type(
+  ([ `secret ], API.secret_t) record
+)
+"records.ml" 1403 83894 83895 "records.ml" 1416 84368 84370
+type(
+  ([ `secret ], API.secret_t) record
+)
+"records.ml" 1401 83797 83798 "records.ml" 1416 84368 84370
+type(
+  ([ `secret ], API.secret_t) record
+)
+"records.ml" 1400 83771 83772 "records.ml" 1416 84368 84370
+type(
+  ([ `secret ], API.secret_t) record
+)
+"records.ml" 1418 84372 84376 "records.ml" 1418 84372 84395
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session ->
+  API.ref_VM_appliance -> ([ `VM_appliance ], API.vM_appliance_t) record
+)
+ident(
+  def vm_appliance_record "records.ml" 1447 86105 86105 --
+)
+"records.ml" 1418 84372 84396 "records.ml" 1418 84372 84399
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 1418 84372 84400 "records.ml" 1445 86101 86103
+)
+"records.ml" 1418 84372 84400 "records.ml" 1418 84372 84410
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 1418 84372 84411 "records.ml" 1445 86101 86103
+)
+"records.ml" 1418 84372 84411 "records.ml" 1418 84372 84423
+type(
+  API.ref_VM_appliance
+)
+ident(
+  def vm_appliance "records.ml" 1419 84426 84427 "records.ml" 1445 86101 86103
+)
+"records.ml" 1419 84426 84431 "records.ml" 1419 84426 84435
+type(
+  API.ref_VM_appliance ref
+)
+"records.ml" 1419 84426 84438 "records.ml" 1419 84426 84441
+type(
+  API.ref_VM_appliance -> API.ref_VM_appliance ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1419 84426 84442 "records.ml" 1419 84426 84454
+type(
+  API.ref_VM_appliance
+)
+ident(
+  int_ref vm_appliance "records.ml" 1418 84372 84411 "records.ml" 1418 84372 84423
+)
+"records.ml" 1419 84426 84438 "records.ml" 1419 84426 84454
+type(
+  API.ref_VM_appliance ref
+)
+"records.ml" 1420 84458 84463 "records.ml" 1420 84458 84475
+type(
+  API.vM_appliance_t lzy
+)
+"records.ml" 1420 84458 84489 "records.ml" 1420 84458 84491
+type(
+  unit
+)
+"records.ml" 1421 84495 84497 "records.ml" 1421 84495 84527
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VM_appliance -> API.vM_appliance_t
+)
+ident(
+  ext_ref Client.( Client ).( VM_appliance ).get_record
+)
+"records.ml" 1421 84495 84529 "records.ml" 1421 84495 84532
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1418 84372 84396 "records.ml" 1418 84372 84399
+)
+"records.ml" 1421 84495 84534 "records.ml" 1421 84495 84544
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1418 84372 84400 "records.ml" 1418 84372 84410
+)
+"records.ml" 1421 84495 84551 "records.ml" 1421 84495 84552
+type(
+  API.ref_VM_appliance ref -> API.ref_VM_appliance
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1421 84495 84552 "records.ml" 1421 84495 84556
+type(
+  API.ref_VM_appliance ref
+)
+ident(
+  int_ref _ref "records.ml" 1419 84426 84431 "records.ml" 1419 84426 84435
+)
+"records.ml" 1421 84495 84551 "records.ml" 1421 84495 84556
+type(
+  API.ref_VM_appliance
+)
+"records.ml" 1421 84495 84497 "records.ml" 1421 84495 84556
+type(
+  API.vM_appliance_t
+)
+"records.ml" 1420 84458 84484 "records.ml" 1421 84495 84557
+type(
+  unit -> API.vM_appliance_t
+)
+"records.ml" 1420 84458 84478 "records.ml" 1421 84495 84557
+type(
+  API.vM_appliance_t lzy
+)
+"records.ml" 1422 84561 84566 "records.ml" 1422 84561 84572
+type(
+  API.vM_appliance_t lzy ref
+)
+"records.ml" 1422 84561 84575 "records.ml" 1422 84561 84578
+type(
+  API.vM_appliance_t lzy -> API.vM_appliance_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1422 84561 84579 "records.ml" 1422 84561 84591
+type(
+  API.vM_appliance_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1420 84458 84463 "records.ml" 1420 84458 84475
+)
+"records.ml" 1422 84561 84575 "records.ml" 1422 84561 84591
+type(
+  API.vM_appliance_t lzy ref
+)
+"records.ml" 1423 84595 84600 "records.ml" 1423 84595 84601
+type(
+  unit -> API.vM_appliance_t
+)
+"records.ml" 1423 84595 84602 "records.ml" 1423 84595 84604
+type(
+  unit
+)
+"records.ml" 1423 84595 84607 "records.ml" 1423 84595 84614
+type(
+  API.vM_appliance_t lzy ref -> API.vM_appliance_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 1423 84595 84615 "records.ml" 1423 84595 84621
+type(
+  API.vM_appliance_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1422 84561 84566 "records.ml" 1422 84561 84572
+)
+"records.ml" 1423 84595 84607 "records.ml" 1423 84595 84621
+type(
+  API.vM_appliance_t
+)
+"records.ml" 1425 84628 84644 "records.ml" 1425 84628 84645
+type(
+  API.ref_VM_appliance
+)
+ident(
+  def r "records.ml" 1425 84628 84649 "records.ml" 1425 84628 84682
+)
+"records.ml" 1425 84628 84649 "records.ml" 1425 84628 84653
+type(
+  API.ref_VM_appliance ref
+)
+ident(
+  int_ref _ref "records.ml" 1419 84426 84431 "records.ml" 1419 84426 84435
+)
+"records.ml" 1425 84628 84654 "records.ml" 1425 84628 84656
+type(
+  API.ref_VM_appliance ref -> API.ref_VM_appliance -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1425 84628 84657 "records.ml" 1425 84628 84658
+type(
+  API.ref_VM_appliance
+)
+ident(
+  int_ref r "records.ml" 1425 84628 84644 "records.ml" 1425 84628 84645
+)
+"records.ml" 1425 84628 84649 "records.ml" 1425 84628 84658
+type(
+  unit
+)
+"records.ml" 1425 84628 84660 "records.ml" 1425 84628 84666
+type(
+  API.vM_appliance_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1422 84561 84566 "records.ml" 1422 84561 84572
+)
+"records.ml" 1425 84628 84667 "records.ml" 1425 84628 84669
+type(
+  API.vM_appliance_t lzy ref -> API.vM_appliance_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1425 84628 84670 "records.ml" 1425 84628 84682
+type(
+  API.vM_appliance_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1420 84458 84463 "records.ml" 1420 84458 84475
+)
+"records.ml" 1425 84628 84660 "records.ml" 1425 84628 84682
+type(
+  unit
+)
+"records.ml" 1425 84628 84649 "records.ml" 1425 84628 84682
+type(
+  unit
+)
+"records.ml" 1425 84628 84639 "records.ml" 1425 84628 84683
+type(
+  API.ref_VM_appliance -> unit
+)
+"records.ml" 1426 84685 84705 "records.ml" 1426 84685 84706
+type(
+  API.ref_VM_appliance
+)
+ident(
+  def a "records.ml" 1426 84685 84714 "records.ml" 1426 84685 84740
+)
+"records.ml" 1426 84685 84708 "records.ml" 1426 84685 84709
+type(
+  API.vM_appliance_t
+)
+ident(
+  def b "records.ml" 1426 84685 84714 "records.ml" 1426 84685 84740
+)
+"records.ml" 1426 84685 84704 "records.ml" 1426 84685 84710
+type(
+  API.ref_VM_appliance * API.vM_appliance_t
+)
+"records.ml" 1426 84685 84714 "records.ml" 1426 84685 84718
+type(
+  API.ref_VM_appliance ref
+)
+ident(
+  int_ref _ref "records.ml" 1419 84426 84431 "records.ml" 1419 84426 84435
+)
+"records.ml" 1426 84685 84719 "records.ml" 1426 84685 84721
+type(
+  API.ref_VM_appliance ref -> API.ref_VM_appliance -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1426 84685 84722 "records.ml" 1426 84685 84723
+type(
+  API.ref_VM_appliance
+)
+ident(
+  int_ref a "records.ml" 1426 84685 84705 "records.ml" 1426 84685 84706
+)
+"records.ml" 1426 84685 84714 "records.ml" 1426 84685 84723
+type(
+  unit
+)
+"records.ml" 1426 84685 84725 "records.ml" 1426 84685 84731
+type(
+  API.vM_appliance_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1422 84561 84566 "records.ml" 1422 84561 84572
+)
+"records.ml" 1426 84685 84732 "records.ml" 1426 84685 84734
+type(
+  API.vM_appliance_t lzy ref -> API.vM_appliance_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1426 84685 84739 "records.ml" 1426 84685 84740
+type(
+  API.vM_appliance_t
+)
+ident(
+  int_ref b "records.ml" 1426 84685 84708 "records.ml" 1426 84685 84709
+)
+"records.ml" 1426 84685 84735 "records.ml" 1426 84685 84740
+type(
+  API.vM_appliance_t lzy
+)
+"records.ml" 1426 84685 84725 "records.ml" 1426 84685 84740
+type(
+  unit
+)
+"records.ml" 1426 84685 84714 "records.ml" 1426 84685 84740
+type(
+  unit
+)
+"records.ml" 1426 84685 84699 "records.ml" 1426 84685 84741
+type(
+  API.ref_VM_appliance * API.vM_appliance_t -> unit
+)
+"records.ml" 1427 84743 84754 "records.ml" 1427 84743 84755
+type(
+  unit -> API.vM_appliance_t
+)
+ident(
+  int_ref x "records.ml" 1423 84595 84600 "records.ml" 1423 84595 84601
+)
+"records.ml" 1428 84757 84773 "records.ml" 1428 84757 84775
+type(
+  unit
+)
+"records.ml" 1428 84757 84779 "records.ml" 1428 84757 84780
+type(
+  API.ref_VM_appliance ref -> API.ref_VM_appliance
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1428 84757 84780 "records.ml" 1428 84757 84784
+type(
+  API.ref_VM_appliance ref
+)
+ident(
+  int_ref _ref "records.ml" 1419 84426 84431 "records.ml" 1419 84426 84435
+)
+"records.ml" 1428 84757 84779 "records.ml" 1428 84757 84784
+type(
+  API.ref_VM_appliance
+)
+"records.ml" 1428 84757 84768 "records.ml" 1428 84757 84785
+type(
+  unit -> API.ref_VM_appliance
+)
+"records.ml" 1431 84803 84807 "records.ml" 1431 84803 84817
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1431 84803 84824 "records.ml" 1431 84803 84830
+type(
+  string
+)
+"records.ml" 1431 84803 84841 "records.ml" 1431 84803 84843
+type(
+  unit
+)
+"records.ml" 1431 84803 84848 "records.ml" 1431 84803 84849
+type(
+  unit -> API.vM_appliance_t
+)
+ident(
+  int_ref x "records.ml" 1423 84595 84600 "records.ml" 1423 84595 84601
+)
+"records.ml" 1431 84803 84850 "records.ml" 1431 84803 84852
+type(
+  unit
+)
+"records.ml" 1431 84803 84847 "records.ml" 1431 84803 84853
+type(
+  API.vM_appliance_t
+)
+"records.ml" 1431 84803 84847 "records.ml" 1431 84803 84875
+type(
+  string
+)
+"records.ml" 1431 84803 84836 "records.ml" 1431 84803 84876
+type(
+  unit -> string
+)
+"records.ml" 1431 84803 84877 "records.ml" 1431 84803 84879
+type(
+  unit
+)
+"records.ml" 1431 84803 84807 "records.ml" 1431 84803 84879
+type(
+  field
+)
+"records.ml" 1432 84881 84885 "records.ml" 1432 84881 84895
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1432 84881 84902 "records.ml" 1432 84881 84914
+type(
+  string
+)
+"records.ml" 1432 84881 84925 "records.ml" 1432 84881 84927
+type(
+  unit
+)
+"records.ml" 1432 84881 84932 "records.ml" 1432 84881 84933
+type(
+  unit -> API.vM_appliance_t
+)
+ident(
+  int_ref x "records.ml" 1423 84595 84600 "records.ml" 1423 84595 84601
+)
+"records.ml" 1432 84881 84934 "records.ml" 1432 84881 84936
+type(
+  unit
+)
+"records.ml" 1432 84881 84931 "records.ml" 1432 84881 84937
+type(
+  API.vM_appliance_t
+)
+"records.ml" 1432 84881 84931 "records.ml" 1432 84881 84965
+type(
+  string
+)
+"records.ml" 1432 84881 84920 "records.ml" 1432 84881 84966
+type(
+  unit -> string
+)
+"records.ml" 1433 84967 84982 "records.ml" 1433 84967 84983
+type(
+  string
+)
+ident(
+  def x "records.ml" 1433 84967 84987 "records.ml" 1433 84967 85044
+)
+"records.ml" 1433 84967 84987 "records.ml" 1433 84967 85021
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VM_appliance -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM_appliance ).set_name_label
+)
+"records.ml" 1433 84967 85022 "records.ml" 1433 84967 85025
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1418 84372 84396 "records.ml" 1418 84372 84399
+)
+"records.ml" 1433 84967 85026 "records.ml" 1433 84967 85036
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1418 84372 84400 "records.ml" 1418 84372 84410
+)
+"records.ml" 1433 84967 85037 "records.ml" 1433 84967 85038
+type(
+  API.ref_VM_appliance ref -> API.ref_VM_appliance
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1433 84967 85038 "records.ml" 1433 84967 85042
+type(
+  API.ref_VM_appliance ref
+)
+ident(
+  int_ref _ref "records.ml" 1419 84426 84431 "records.ml" 1419 84426 84435
+)
+"records.ml" 1433 84967 85037 "records.ml" 1433 84967 85042
+type(
+  API.ref_VM_appliance
+)
+"records.ml" 1433 84967 85043 "records.ml" 1433 84967 85044
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 1433 84967 84982 "records.ml" 1433 84967 84983
+)
+"records.ml" 1433 84967 84987 "records.ml" 1433 84967 85044
+type(
+  unit
+)
+"records.ml" 1433 84967 84977 "records.ml" 1433 84967 85045
+type(
+  string -> unit
+)
+"records.ml" 1433 84967 85046 "records.ml" 1433 84967 85048
+type(
+  unit
+)
+"records.ml" 1432 84881 84885 "records.ml" 1433 84967 85048
+type(
+  field
+)
+"records.ml" 1434 85050 85054 "records.ml" 1434 85050 85064
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1434 85050 85071 "records.ml" 1434 85050 85089
+type(
+  string
+)
+"records.ml" 1434 85050 85100 "records.ml" 1434 85050 85102
+type(
+  unit
+)
+"records.ml" 1434 85050 85107 "records.ml" 1434 85050 85108
+type(
+  unit -> API.vM_appliance_t
+)
+ident(
+  int_ref x "records.ml" 1423 84595 84600 "records.ml" 1423 84595 84601
+)
+"records.ml" 1434 85050 85109 "records.ml" 1434 85050 85111
+type(
+  unit
+)
+"records.ml" 1434 85050 85106 "records.ml" 1434 85050 85112
+type(
+  API.vM_appliance_t
+)
+"records.ml" 1434 85050 85106 "records.ml" 1434 85050 85146
+type(
+  string
+)
+"records.ml" 1434 85050 85095 "records.ml" 1434 85050 85147
+type(
+  unit -> string
+)
+"records.ml" 1435 85148 85163 "records.ml" 1435 85148 85164
+type(
+  string
+)
+ident(
+  def x "records.ml" 1435 85148 85168 "records.ml" 1435 85148 85231
+)
+"records.ml" 1435 85148 85168 "records.ml" 1435 85148 85208
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VM_appliance -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VM_appliance ).set_name_description
+)
+"records.ml" 1435 85148 85209 "records.ml" 1435 85148 85212
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1418 84372 84396 "records.ml" 1418 84372 84399
+)
+"records.ml" 1435 85148 85213 "records.ml" 1435 85148 85223
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1418 84372 84400 "records.ml" 1418 84372 84410
+)
+"records.ml" 1435 85148 85224 "records.ml" 1435 85148 85225
+type(
+  API.ref_VM_appliance ref -> API.ref_VM_appliance
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1435 85148 85225 "records.ml" 1435 85148 85229
+type(
+  API.ref_VM_appliance ref
+)
+ident(
+  int_ref _ref "records.ml" 1419 84426 84431 "records.ml" 1419 84426 84435
+)
+"records.ml" 1435 85148 85224 "records.ml" 1435 85148 85229
+type(
+  API.ref_VM_appliance
+)
+"records.ml" 1435 85148 85230 "records.ml" 1435 85148 85231
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 1435 85148 85163 "records.ml" 1435 85148 85164
+)
+"records.ml" 1435 85148 85168 "records.ml" 1435 85148 85231
+type(
+  unit
+)
+"records.ml" 1435 85148 85158 "records.ml" 1435 85148 85232
+type(
+  string -> unit
+)
+"records.ml" 1435 85148 85233 "records.ml" 1435 85148 85235
+type(
+  unit
+)
+"records.ml" 1434 85050 85054 "records.ml" 1435 85148 85235
+type(
+  field
+)
+"records.ml" 1436 85237 85241 "records.ml" 1436 85237 85251
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1436 85237 85258 "records.ml" 1436 85237 85263
+type(
+  string
+)
+"records.ml" 1436 85237 85274 "records.ml" 1436 85237 85276
+type(
+  unit
+)
+"records.ml" 1436 85237 85280 "records.ml" 1436 85237 85293
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1436 85237 85294 "records.ml" 1436 85237 85298
+type(
+  string
+)
+"records.ml" 1436 85237 85300 "records.ml" 1436 85237 85308
+type(
+  ([ `VM ] Ref.t -> string) -> API.ref_VM_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1436 85237 85309 "records.ml" 1436 85237 85326
+type(
+  [ `VM ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1436 85237 85328 "records.ml" 1436 85237 85329
+type(
+  unit -> API.vM_appliance_t
+)
+ident(
+  int_ref x "records.ml" 1423 84595 84600 "records.ml" 1423 84595 84601
+)
+"records.ml" 1436 85237 85330 "records.ml" 1436 85237 85332
+type(
+  unit
+)
+"records.ml" 1436 85237 85327 "records.ml" 1436 85237 85333
+type(
+  API.vM_appliance_t
+)
+"records.ml" 1436 85237 85327 "records.ml" 1436 85237 85354
+type(
+  API.ref_VM_set
+)
+"records.ml" 1436 85237 85299 "records.ml" 1436 85237 85355
+type(
+  string list
+)
+"records.ml" 1436 85237 85280 "records.ml" 1436 85237 85355
+type(
+  string
+)
+"records.ml" 1436 85237 85269 "records.ml" 1436 85237 85356
+type(
+  unit -> string
+)
+"records.ml" 1437 85357 85376 "records.ml" 1437 85357 85378
+type(
+  unit
+)
+"records.ml" 1437 85357 85382 "records.ml" 1437 85357 85390
+type(
+  ([ `VM ] Ref.t -> string) -> API.ref_VM_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1437 85357 85391 "records.ml" 1437 85357 85408
+type(
+  [ `VM ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1437 85357 85410 "records.ml" 1437 85357 85411
+type(
+  unit -> API.vM_appliance_t
+)
+ident(
+  int_ref x "records.ml" 1423 84595 84600 "records.ml" 1423 84595 84601
+)
+"records.ml" 1437 85357 85412 "records.ml" 1437 85357 85414
+type(
+  unit
+)
+"records.ml" 1437 85357 85409 "records.ml" 1437 85357 85415
+type(
+  API.vM_appliance_t
+)
+"records.ml" 1437 85357 85409 "records.ml" 1437 85357 85436
+type(
+  API.ref_VM_set
+)
+"records.ml" 1437 85357 85382 "records.ml" 1437 85357 85436
+type(
+  string list
+)
+"records.ml" 1437 85357 85371 "records.ml" 1437 85357 85437
+type(
+  unit -> string list
+)
+"records.ml" 1437 85357 85438 "records.ml" 1437 85357 85440
+type(
+  unit
+)
+"records.ml" 1436 85237 85241 "records.ml" 1437 85357 85440
+type(
+  field
+)
+"records.ml" 1438 85442 85446 "records.ml" 1438 85442 85456
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1438 85442 85463 "records.ml" 1438 85442 85483
+type(
+  string
+)
+"records.ml" 1439 85484 85499 "records.ml" 1439 85484 85501
+type(
+  unit
+)
+"records.ml" 1439 85484 85505 "records.ml" 1439 85484 85518
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1439 85484 85519 "records.ml" 1439 85484 85523
+type(
+  string
+)
+"records.ml" 1439 85484 85525 "records.ml" 1439 85484 85533
+type(
+  ([ `clean_shutdown | `hard_shutdown | `shutdown | `start ] -> string) ->
+  API.vm_appliance_operation_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1439 85484 85534 "records.ml" 1439 85484 85578
+type(
+  [ `clean_shutdown | `hard_shutdown | `shutdown | `start ] -> string
+)
+ident(
+  ext_ref Record_util.vm_appliance_operation_to_string
+)
+"records.ml" 1439 85484 85580 "records.ml" 1439 85484 85581
+type(
+  unit -> API.vM_appliance_t
+)
+ident(
+  int_ref x "records.ml" 1423 84595 84600 "records.ml" 1423 84595 84601
+)
+"records.ml" 1439 85484 85582 "records.ml" 1439 85484 85584
+type(
+  unit
+)
+"records.ml" 1439 85484 85579 "records.ml" 1439 85484 85585
+type(
+  API.vM_appliance_t
+)
+"records.ml" 1439 85484 85579 "records.ml" 1439 85484 85621
+type(
+  API.vm_appliance_operation_set
+)
+"records.ml" 1439 85484 85524 "records.ml" 1439 85484 85622
+type(
+  string list
+)
+"records.ml" 1439 85484 85505 "records.ml" 1439 85484 85622
+type(
+  string
+)
+"records.ml" 1439 85484 85494 "records.ml" 1439 85484 85623
+type(
+  unit -> string
+)
+"records.ml" 1440 85625 85644 "records.ml" 1440 85625 85646
+type(
+  unit
+)
+"records.ml" 1440 85625 85650 "records.ml" 1440 85625 85658
+type(
+  ([ `clean_shutdown | `hard_shutdown | `shutdown | `start ] -> string) ->
+  API.vm_appliance_operation_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1440 85625 85659 "records.ml" 1440 85625 85703
+type(
+  [ `clean_shutdown | `hard_shutdown | `shutdown | `start ] -> string
+)
+ident(
+  ext_ref Record_util.vm_appliance_operation_to_string
+)
+"records.ml" 1440 85625 85705 "records.ml" 1440 85625 85706
+type(
+  unit -> API.vM_appliance_t
+)
+ident(
+  int_ref x "records.ml" 1423 84595 84600 "records.ml" 1423 84595 84601
+)
+"records.ml" 1440 85625 85707 "records.ml" 1440 85625 85709
+type(
+  unit
+)
+"records.ml" 1440 85625 85704 "records.ml" 1440 85625 85710
+type(
+  API.vM_appliance_t
+)
+"records.ml" 1440 85625 85704 "records.ml" 1440 85625 85746
+type(
+  API.vm_appliance_operation_set
+)
+"records.ml" 1440 85625 85650 "records.ml" 1440 85625 85746
+type(
+  string list
+)
+"records.ml" 1440 85625 85639 "records.ml" 1440 85625 85747
+type(
+  unit -> string list
+)
+"records.ml" 1440 85625 85748 "records.ml" 1440 85625 85750
+type(
+  unit
+)
+"records.ml" 1438 85442 85446 "records.ml" 1440 85625 85750
+type(
+  field
+)
+"records.ml" 1441 85752 85756 "records.ml" 1441 85752 85766
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1441 85752 85773 "records.ml" 1441 85752 85793
+type(
+  string
+)
+"records.ml" 1442 85794 85809 "records.ml" 1442 85794 85811
+type(
+  unit
+)
+"records.ml" 1442 85794 85815 "records.ml" 1442 85794 85828
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1442 85794 85829 "records.ml" 1442 85794 85833
+type(
+  string
+)
+"records.ml" 1442 85794 85835 "records.ml" 1442 85794 85843
+type(
+  (string * API.vm_appliance_operation -> string) ->
+  API.string_to_vm_appliance_operation_map -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1442 85794 85850 "records.ml" 1442 85794 85851
+type(
+  string
+)
+ident(
+  def a "records.ml" 1442 85794 85858 "records.ml" 1442 85794 85904
+)
+"records.ml" 1442 85794 85852 "records.ml" 1442 85794 85853
+type(
+  API.vm_appliance_operation
+)
+ident(
+  def b "records.ml" 1442 85794 85858 "records.ml" 1442 85794 85904
+)
+"records.ml" 1442 85794 85849 "records.ml" 1442 85794 85854
+type(
+  string * API.vm_appliance_operation
+)
+"records.ml" 1442 85794 85858 "records.ml" 1442 85794 85902
+type(
+  API.vm_appliance_operation -> string
+)
+ident(
+  ext_ref Record_util.vm_appliance_operation_to_string
+)
+"records.ml" 1442 85794 85903 "records.ml" 1442 85794 85904
+type(
+  API.vm_appliance_operation
+)
+ident(
+  int_ref b "records.ml" 1442 85794 85852 "records.ml" 1442 85794 85853
+)
+"records.ml" 1442 85794 85858 "records.ml" 1442 85794 85904
+type(
+  string
+)
+"records.ml" 1442 85794 85844 "records.ml" 1442 85794 85905
+type(
+  string * API.vm_appliance_operation -> string
+)
+"records.ml" 1442 85794 85907 "records.ml" 1442 85794 85908
+type(
+  unit -> API.vM_appliance_t
+)
+ident(
+  int_ref x "records.ml" 1423 84595 84600 "records.ml" 1423 84595 84601
+)
+"records.ml" 1442 85794 85909 "records.ml" 1442 85794 85911
+type(
+  unit
+)
+"records.ml" 1442 85794 85906 "records.ml" 1442 85794 85912
+type(
+  API.vM_appliance_t
+)
+"records.ml" 1442 85794 85906 "records.ml" 1442 85794 85948
+type(
+  API.string_to_vm_appliance_operation_map
+)
+"records.ml" 1442 85794 85834 "records.ml" 1442 85794 85949
+type(
+  string list
+)
+"records.ml" 1442 85794 85815 "records.ml" 1442 85794 85949
+type(
+  string
+)
+"records.ml" 1442 85794 85804 "records.ml" 1442 85794 85950
+type(
+  unit -> string
+)
+"records.ml" 1443 85952 85971 "records.ml" 1443 85952 85973
+type(
+  unit
+)
+"records.ml" 1443 85952 85977 "records.ml" 1443 85952 85985
+type(
+  (string * API.vm_appliance_operation -> string) ->
+  API.string_to_vm_appliance_operation_map -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1443 85952 85992 "records.ml" 1443 85952 85993
+type(
+  string
+)
+ident(
+  def a "records.ml" 1443 85952 86000 "records.ml" 1443 85952 86046
+)
+"records.ml" 1443 85952 85994 "records.ml" 1443 85952 85995
+type(
+  API.vm_appliance_operation
+)
+ident(
+  def b "records.ml" 1443 85952 86000 "records.ml" 1443 85952 86046
+)
+"records.ml" 1443 85952 85991 "records.ml" 1443 85952 85996
+type(
+  string * API.vm_appliance_operation
+)
+"records.ml" 1443 85952 86000 "records.ml" 1443 85952 86044
+type(
+  API.vm_appliance_operation -> string
+)
+ident(
+  ext_ref Record_util.vm_appliance_operation_to_string
+)
+"records.ml" 1443 85952 86045 "records.ml" 1443 85952 86046
+type(
+  API.vm_appliance_operation
+)
+ident(
+  int_ref b "records.ml" 1443 85952 85994 "records.ml" 1443 85952 85995
+)
+"records.ml" 1443 85952 86000 "records.ml" 1443 85952 86046
+type(
+  string
+)
+"records.ml" 1443 85952 85986 "records.ml" 1443 85952 86047
+type(
+  string * API.vm_appliance_operation -> string
+)
+"records.ml" 1443 85952 86049 "records.ml" 1443 85952 86050
+type(
+  unit -> API.vM_appliance_t
+)
+ident(
+  int_ref x "records.ml" 1423 84595 84600 "records.ml" 1423 84595 84601
+)
+"records.ml" 1443 85952 86051 "records.ml" 1443 85952 86053
+type(
+  unit
+)
+"records.ml" 1443 85952 86048 "records.ml" 1443 85952 86054
+type(
+  API.vM_appliance_t
+)
+"records.ml" 1443 85952 86048 "records.ml" 1443 85952 86090
+type(
+  API.string_to_vm_appliance_operation_map
+)
+"records.ml" 1443 85952 85977 "records.ml" 1443 85952 86090
+type(
+  string list
+)
+"records.ml" 1443 85952 85966 "records.ml" 1443 85952 86091
+type(
+  unit -> string list
+)
+"records.ml" 1443 85952 86092 "records.ml" 1443 85952 86094
+type(
+  unit
+)
+"records.ml" 1441 85752 85756 "records.ml" 1443 85952 86094
+type(
+  field
+)
+"records.ml" 1430 84798 84801 "records.ml" 1444 86096 86100
+type(
+  field list
+)
+"records.ml" 1424 84625 84626 "records.ml" 1445 86101 86103
+type(
+  ([ `VM_appliance ], API.vM_appliance_t) record
+)
+"records.ml" 1423 84595 84596 "records.ml" 1445 86101 86103
+type(
+  ([ `VM_appliance ], API.vM_appliance_t) record
+)
+"records.ml" 1422 84561 84562 "records.ml" 1445 86101 86103
+type(
+  ([ `VM_appliance ], API.vM_appliance_t) record
+)
+"records.ml" 1420 84458 84459 "records.ml" 1445 86101 86103
+type(
+  ([ `VM_appliance ], API.vM_appliance_t) record
+)
+"records.ml" 1419 84426 84427 "records.ml" 1445 86101 86103
+type(
+  ([ `VM_appliance ], API.vM_appliance_t) record
+)
+"records.ml" 1447 86105 86109 "records.ml" 1447 86105 86123
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_DR_task -> ([ `DR_task ], API.dR_task_t) record
+)
+ident(
+  def dr_task_record "records.ml" 1490 87816 87816 --
+)
+"records.ml" 1447 86105 86124 "records.ml" 1447 86105 86127
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 1447 86105 86128 "records.ml" 1463 86735 86737
+)
+"records.ml" 1447 86105 86128 "records.ml" 1447 86105 86138
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 1447 86105 86139 "records.ml" 1463 86735 86737
+)
+"records.ml" 1447 86105 86139 "records.ml" 1447 86105 86146
+type(
+  API.ref_DR_task
+)
+ident(
+  def dr_task "records.ml" 1448 86149 86150 "records.ml" 1463 86735 86737
+)
+"records.ml" 1448 86149 86154 "records.ml" 1448 86149 86158
+type(
+  API.ref_DR_task ref
+)
+"records.ml" 1448 86149 86161 "records.ml" 1448 86149 86164
+type(
+  API.ref_DR_task -> API.ref_DR_task ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1448 86149 86165 "records.ml" 1448 86149 86172
+type(
+  API.ref_DR_task
+)
+ident(
+  int_ref dr_task "records.ml" 1447 86105 86139 "records.ml" 1447 86105 86146
+)
+"records.ml" 1448 86149 86161 "records.ml" 1448 86149 86172
+type(
+  API.ref_DR_task ref
+)
+"records.ml" 1449 86176 86181 "records.ml" 1449 86176 86193
+type(
+  API.dR_task_t lzy
+)
+"records.ml" 1449 86176 86207 "records.ml" 1449 86176 86209
+type(
+  unit
+)
+"records.ml" 1450 86213 86215 "records.ml" 1450 86213 86240
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_DR_task -> API.dR_task_t
+)
+ident(
+  ext_ref Client.( Client ).( DR_task ).get_record
+)
+"records.ml" 1450 86213 86242 "records.ml" 1450 86213 86245
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1447 86105 86124 "records.ml" 1447 86105 86127
+)
+"records.ml" 1450 86213 86247 "records.ml" 1450 86213 86257
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1447 86105 86128 "records.ml" 1447 86105 86138
+)
+"records.ml" 1450 86213 86264 "records.ml" 1450 86213 86265
+type(
+  API.ref_DR_task ref -> API.ref_DR_task
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1450 86213 86265 "records.ml" 1450 86213 86269
+type(
+  API.ref_DR_task ref
+)
+ident(
+  int_ref _ref "records.ml" 1448 86149 86154 "records.ml" 1448 86149 86158
+)
+"records.ml" 1450 86213 86264 "records.ml" 1450 86213 86269
+type(
+  API.ref_DR_task
+)
+"records.ml" 1450 86213 86215 "records.ml" 1450 86213 86269
+type(
+  API.dR_task_t
+)
+"records.ml" 1449 86176 86202 "records.ml" 1450 86213 86270
+type(
+  unit -> API.dR_task_t
+)
+"records.ml" 1449 86176 86196 "records.ml" 1450 86213 86270
+type(
+  API.dR_task_t lzy
+)
+"records.ml" 1451 86274 86279 "records.ml" 1451 86274 86285
+type(
+  API.dR_task_t lzy ref
+)
+"records.ml" 1451 86274 86288 "records.ml" 1451 86274 86291
+type(
+  API.dR_task_t lzy -> API.dR_task_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1451 86274 86292 "records.ml" 1451 86274 86304
+type(
+  API.dR_task_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1449 86176 86181 "records.ml" 1449 86176 86193
+)
+"records.ml" 1451 86274 86288 "records.ml" 1451 86274 86304
+type(
+  API.dR_task_t lzy ref
+)
+"records.ml" 1452 86308 86313 "records.ml" 1452 86308 86314
+type(
+  unit -> API.dR_task_t
+)
+"records.ml" 1452 86308 86315 "records.ml" 1452 86308 86317
+type(
+  unit
+)
+"records.ml" 1452 86308 86320 "records.ml" 1452 86308 86327
+type(
+  API.dR_task_t lzy ref -> API.dR_task_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 1452 86308 86328 "records.ml" 1452 86308 86334
+type(
+  API.dR_task_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1451 86274 86279 "records.ml" 1451 86274 86285
+)
+"records.ml" 1452 86308 86320 "records.ml" 1452 86308 86334
+type(
+  API.dR_task_t
+)
+"records.ml" 1454 86341 86357 "records.ml" 1454 86341 86358
+type(
+  API.ref_DR_task
+)
+ident(
+  def r "records.ml" 1454 86341 86362 "records.ml" 1454 86341 86395
+)
+"records.ml" 1454 86341 86362 "records.ml" 1454 86341 86366
+type(
+  API.ref_DR_task ref
+)
+ident(
+  int_ref _ref "records.ml" 1448 86149 86154 "records.ml" 1448 86149 86158
+)
+"records.ml" 1454 86341 86367 "records.ml" 1454 86341 86369
+type(
+  API.ref_DR_task ref -> API.ref_DR_task -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1454 86341 86370 "records.ml" 1454 86341 86371
+type(
+  API.ref_DR_task
+)
+ident(
+  int_ref r "records.ml" 1454 86341 86357 "records.ml" 1454 86341 86358
+)
+"records.ml" 1454 86341 86362 "records.ml" 1454 86341 86371
+type(
+  unit
+)
+"records.ml" 1454 86341 86373 "records.ml" 1454 86341 86379
+type(
+  API.dR_task_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1451 86274 86279 "records.ml" 1451 86274 86285
+)
+"records.ml" 1454 86341 86380 "records.ml" 1454 86341 86382
+type(
+  API.dR_task_t lzy ref -> API.dR_task_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1454 86341 86383 "records.ml" 1454 86341 86395
+type(
+  API.dR_task_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1449 86176 86181 "records.ml" 1449 86176 86193
+)
+"records.ml" 1454 86341 86373 "records.ml" 1454 86341 86395
+type(
+  unit
+)
+"records.ml" 1454 86341 86362 "records.ml" 1454 86341 86395
+type(
+  unit
+)
+"records.ml" 1454 86341 86352 "records.ml" 1454 86341 86396
+type(
+  API.ref_DR_task -> unit
+)
+"records.ml" 1455 86398 86418 "records.ml" 1455 86398 86419
+type(
+  API.ref_DR_task
+)
+ident(
+  def a "records.ml" 1455 86398 86427 "records.ml" 1455 86398 86453
+)
+"records.ml" 1455 86398 86421 "records.ml" 1455 86398 86422
+type(
+  API.dR_task_t
+)
+ident(
+  def b "records.ml" 1455 86398 86427 "records.ml" 1455 86398 86453
+)
+"records.ml" 1455 86398 86417 "records.ml" 1455 86398 86423
+type(
+  API.ref_DR_task * API.dR_task_t
+)
+"records.ml" 1455 86398 86427 "records.ml" 1455 86398 86431
+type(
+  API.ref_DR_task ref
+)
+ident(
+  int_ref _ref "records.ml" 1448 86149 86154 "records.ml" 1448 86149 86158
+)
+"records.ml" 1455 86398 86432 "records.ml" 1455 86398 86434
+type(
+  API.ref_DR_task ref -> API.ref_DR_task -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1455 86398 86435 "records.ml" 1455 86398 86436
+type(
+  API.ref_DR_task
+)
+ident(
+  int_ref a "records.ml" 1455 86398 86418 "records.ml" 1455 86398 86419
+)
+"records.ml" 1455 86398 86427 "records.ml" 1455 86398 86436
+type(
+  unit
+)
+"records.ml" 1455 86398 86438 "records.ml" 1455 86398 86444
+type(
+  API.dR_task_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1451 86274 86279 "records.ml" 1451 86274 86285
+)
+"records.ml" 1455 86398 86445 "records.ml" 1455 86398 86447
+type(
+  API.dR_task_t lzy ref -> API.dR_task_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1455 86398 86452 "records.ml" 1455 86398 86453
+type(
+  API.dR_task_t
+)
+ident(
+  int_ref b "records.ml" 1455 86398 86421 "records.ml" 1455 86398 86422
+)
+"records.ml" 1455 86398 86448 "records.ml" 1455 86398 86453
+type(
+  API.dR_task_t lzy
+)
+"records.ml" 1455 86398 86438 "records.ml" 1455 86398 86453
+type(
+  unit
+)
+"records.ml" 1455 86398 86427 "records.ml" 1455 86398 86453
+type(
+  unit
+)
+"records.ml" 1455 86398 86412 "records.ml" 1455 86398 86454
+type(
+  API.ref_DR_task * API.dR_task_t -> unit
+)
+"records.ml" 1456 86456 86467 "records.ml" 1456 86456 86468
+type(
+  unit -> API.dR_task_t
+)
+ident(
+  int_ref x "records.ml" 1452 86308 86313 "records.ml" 1452 86308 86314
+)
+"records.ml" 1457 86470 86486 "records.ml" 1457 86470 86488
+type(
+  unit
+)
+"records.ml" 1457 86470 86492 "records.ml" 1457 86470 86493
+type(
+  API.ref_DR_task ref -> API.ref_DR_task
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1457 86470 86493 "records.ml" 1457 86470 86497
+type(
+  API.ref_DR_task ref
+)
+ident(
+  int_ref _ref "records.ml" 1448 86149 86154 "records.ml" 1448 86149 86158
+)
+"records.ml" 1457 86470 86492 "records.ml" 1457 86470 86497
+type(
+  API.ref_DR_task
+)
+"records.ml" 1457 86470 86481 "records.ml" 1457 86470 86498
+type(
+  unit -> API.ref_DR_task
+)
+"records.ml" 1460 86516 86520 "records.ml" 1460 86516 86530
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1460 86516 86537 "records.ml" 1460 86516 86543
+type(
+  string
+)
+"records.ml" 1460 86516 86554 "records.ml" 1460 86516 86556
+type(
+  unit
+)
+"records.ml" 1460 86516 86561 "records.ml" 1460 86516 86562
+type(
+  unit -> API.dR_task_t
+)
+ident(
+  int_ref x "records.ml" 1452 86308 86313 "records.ml" 1452 86308 86314
+)
+"records.ml" 1460 86516 86563 "records.ml" 1460 86516 86565
+type(
+  unit
+)
+"records.ml" 1460 86516 86560 "records.ml" 1460 86516 86566
+type(
+  API.dR_task_t
+)
+"records.ml" 1460 86516 86560 "records.ml" 1460 86516 86583
+type(
+  string
+)
+"records.ml" 1460 86516 86549 "records.ml" 1460 86516 86584
+type(
+  unit -> string
+)
+"records.ml" 1460 86516 86585 "records.ml" 1460 86516 86587
+type(
+  unit
+)
+"records.ml" 1460 86516 86520 "records.ml" 1460 86516 86587
+type(
+  field
+)
+"records.ml" 1461 86589 86593 "records.ml" 1461 86589 86603
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1461 86589 86610 "records.ml" 1461 86589 86626
+type(
+  string
+)
+"records.ml" 1461 86589 86637 "records.ml" 1461 86589 86639
+type(
+  unit
+)
+"records.ml" 1461 86589 86643 "records.ml" 1461 86589 86656
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1461 86589 86657 "records.ml" 1461 86589 86661
+type(
+  string
+)
+"records.ml" 1461 86589 86663 "records.ml" 1461 86589 86671
+type(
+  ([ `SR ] Ref.t -> string) -> API.ref_SR_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1461 86589 86672 "records.ml" 1461 86589 86689
+type(
+  [ `SR ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1461 86589 86691 "records.ml" 1461 86589 86692
+type(
+  unit -> API.dR_task_t
+)
+ident(
+  int_ref x "records.ml" 1452 86308 86313 "records.ml" 1452 86308 86314
+)
+"records.ml" 1461 86589 86693 "records.ml" 1461 86589 86695
+type(
+  unit
+)
+"records.ml" 1461 86589 86690 "records.ml" 1461 86589 86696
+type(
+  API.dR_task_t
+)
+"records.ml" 1461 86589 86690 "records.ml" 1461 86589 86723
+type(
+  API.ref_SR_set
+)
+"records.ml" 1461 86589 86662 "records.ml" 1461 86589 86724
+type(
+  string list
+)
+"records.ml" 1461 86589 86643 "records.ml" 1461 86589 86724
+type(
+  string
+)
+"records.ml" 1461 86589 86632 "records.ml" 1461 86589 86725
+type(
+  unit -> string
+)
+"records.ml" 1461 86589 86726 "records.ml" 1461 86589 86728
+type(
+  unit
+)
+"records.ml" 1461 86589 86593 "records.ml" 1461 86589 86728
+type(
+  field
+)
+"records.ml" 1459 86511 86514 "records.ml" 1462 86730 86734
+type(
+  field list
+)
+"records.ml" 1453 86338 86339 "records.ml" 1463 86735 86737
+type(
+  ([ `DR_task ], API.dR_task_t) record
+)
+"records.ml" 1452 86308 86309 "records.ml" 1463 86735 86737
+type(
+  ([ `DR_task ], API.dR_task_t) record
+)
+"records.ml" 1451 86274 86275 "records.ml" 1463 86735 86737
+type(
+  ([ `DR_task ], API.dR_task_t) record
+)
+"records.ml" 1449 86176 86177 "records.ml" 1463 86735 86737
+type(
+  ([ `DR_task ], API.dR_task_t) record
+)
+"records.ml" 1448 86149 86150 "records.ml" 1463 86735 86737
+type(
+  ([ `DR_task ], API.dR_task_t) record
+)
+"records.ml" 1490 87816 87820 "records.ml" 1490 87816 87831
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_PGPU -> ([ `PGPU ], API.pGPU_t) record
+)
+ident(
+  def pgpu_record "records.ml" 1521 89819 89819 --
+)
+"records.ml" 1490 87816 87832 "records.ml" 1490 87816 87835
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 1490 87816 87836 "records.ml" 1519 89815 89817
+)
+"records.ml" 1490 87816 87836 "records.ml" 1490 87816 87846
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 1490 87816 87847 "records.ml" 1519 89815 89817
+)
+"records.ml" 1490 87816 87847 "records.ml" 1490 87816 87851
+type(
+  API.ref_PGPU
+)
+ident(
+  def pgpu "records.ml" 1491 87854 87855 "records.ml" 1519 89815 89817
+)
+"records.ml" 1491 87854 87859 "records.ml" 1491 87854 87863
+type(
+  API.ref_PGPU ref
+)
+"records.ml" 1491 87854 87866 "records.ml" 1491 87854 87869
+type(
+  API.ref_PGPU -> API.ref_PGPU ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1491 87854 87870 "records.ml" 1491 87854 87874
+type(
+  API.ref_PGPU
+)
+ident(
+  int_ref pgpu "records.ml" 1490 87816 87847 "records.ml" 1490 87816 87851
+)
+"records.ml" 1491 87854 87866 "records.ml" 1491 87854 87874
+type(
+  API.ref_PGPU ref
+)
+"records.ml" 1492 87878 87883 "records.ml" 1492 87878 87895
+type(
+  API.pGPU_t lzy
+)
+"records.ml" 1492 87878 87909 "records.ml" 1492 87878 87911
+type(
+  unit
+)
+"records.ml" 1492 87878 87915 "records.ml" 1492 87878 87937
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_PGPU -> API.pGPU_t
+)
+ident(
+  ext_ref Client.( Client ).( PGPU ).get_record
+)
+"records.ml" 1492 87878 87938 "records.ml" 1492 87878 87941
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1490 87816 87832 "records.ml" 1490 87816 87835
+)
+"records.ml" 1492 87878 87942 "records.ml" 1492 87878 87952
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1490 87816 87836 "records.ml" 1490 87816 87846
+)
+"records.ml" 1492 87878 87953 "records.ml" 1492 87878 87954
+type(
+  API.ref_PGPU ref -> API.ref_PGPU
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1492 87878 87954 "records.ml" 1492 87878 87958
+type(
+  API.ref_PGPU ref
+)
+ident(
+  int_ref _ref "records.ml" 1491 87854 87859 "records.ml" 1491 87854 87863
+)
+"records.ml" 1492 87878 87953 "records.ml" 1492 87878 87958
+type(
+  API.ref_PGPU
+)
+"records.ml" 1492 87878 87915 "records.ml" 1492 87878 87958
+type(
+  API.pGPU_t
+)
+"records.ml" 1492 87878 87904 "records.ml" 1492 87878 87959
+type(
+  unit -> API.pGPU_t
+)
+"records.ml" 1492 87878 87898 "records.ml" 1492 87878 87959
+type(
+  API.pGPU_t lzy
+)
+"records.ml" 1493 87963 87968 "records.ml" 1493 87963 87974
+type(
+  API.pGPU_t lzy ref
+)
+"records.ml" 1493 87963 87977 "records.ml" 1493 87963 87980
+type(
+  API.pGPU_t lzy -> API.pGPU_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1493 87963 87981 "records.ml" 1493 87963 87993
+type(
+  API.pGPU_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1492 87878 87883 "records.ml" 1492 87878 87895
+)
+"records.ml" 1493 87963 87977 "records.ml" 1493 87963 87993
+type(
+  API.pGPU_t lzy ref
+)
+"records.ml" 1494 87997 88002 "records.ml" 1494 87997 88003
+type(
+  unit -> API.pGPU_t
+)
+"records.ml" 1494 87997 88004 "records.ml" 1494 87997 88006
+type(
+  unit
+)
+"records.ml" 1494 87997 88009 "records.ml" 1494 87997 88016
+type(
+  API.pGPU_t lzy ref -> API.pGPU_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 1494 87997 88017 "records.ml" 1494 87997 88023
+type(
+  API.pGPU_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1493 87963 87968 "records.ml" 1493 87963 87974
+)
+"records.ml" 1494 87997 88009 "records.ml" 1494 87997 88023
+type(
+  API.pGPU_t
+)
+"records.ml" 1495 88027 88032 "records.ml" 1495 88027 88042
+type(
+  API.ref_PCI -> API.pCI_t lzy ref
+)
+"records.ml" 1495 88027 88043 "records.ml" 1495 88027 88044
+type(
+  API.ref_PCI
+)
+ident(
+  def p "records.ml" 1495 88027 88047 "records.ml" 1495 88027 88109
+)
+"records.ml" 1495 88027 88047 "records.ml" 1495 88027 88050
+type(
+  API.pCI_t lzy -> API.pCI_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1495 88027 88063 "records.ml" 1495 88027 88065
+type(
+  unit
+)
+"records.ml" 1495 88027 88069 "records.ml" 1495 88027 88090
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_PCI -> API.pCI_t
+)
+ident(
+  ext_ref Client.( Client ).( PCI ).get_record
+)
+"records.ml" 1495 88027 88091 "records.ml" 1495 88027 88094
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1490 87816 87832 "records.ml" 1490 87816 87835
+)
+"records.ml" 1495 88027 88095 "records.ml" 1495 88027 88105
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1490 87816 87836 "records.ml" 1490 87816 87846
+)
+"records.ml" 1495 88027 88106 "records.ml" 1495 88027 88107
+type(
+  API.ref_PCI
+)
+ident(
+  int_ref p "records.ml" 1495 88027 88043 "records.ml" 1495 88027 88044
+)
+"records.ml" 1495 88027 88069 "records.ml" 1495 88027 88107
+type(
+  API.pCI_t
+)
+"records.ml" 1495 88027 88058 "records.ml" 1495 88027 88108
+type(
+  unit -> API.pCI_t
+)
+"records.ml" 1495 88027 88051 "records.ml" 1495 88027 88109
+type(
+  API.pCI_t lzy
+)
+"records.ml" 1495 88027 88047 "records.ml" 1495 88027 88109
+type(
+  API.pCI_t lzy ref
+)
+"records.ml" 1496 88113 88118 "records.ml" 1496 88113 88121
+type(
+  API.ref_PCI -> API.pCI_t
+)
+"records.ml" 1496 88113 88122 "records.ml" 1496 88113 88123
+type(
+  API.ref_PCI
+)
+ident(
+  def p "records.ml" 1496 88113 88126 "records.ml" 1496 88113 88148
+)
+"records.ml" 1496 88113 88126 "records.ml" 1496 88113 88133
+type(
+  API.pCI_t lzy ref -> API.pCI_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 1496 88113 88135 "records.ml" 1496 88113 88145
+type(
+  API.ref_PCI -> API.pCI_t lzy ref
+)
+ident(
+  int_ref pci_record "records.ml" 1495 88027 88032 "records.ml" 1495 88027 88042
+)
+"records.ml" 1496 88113 88146 "records.ml" 1496 88113 88147
+type(
+  API.ref_PCI
+)
+ident(
+  int_ref p "records.ml" 1496 88113 88122 "records.ml" 1496 88113 88123
+)
+"records.ml" 1496 88113 88134 "records.ml" 1496 88113 88148
+type(
+  API.pCI_t lzy ref
+)
+"records.ml" 1496 88113 88126 "records.ml" 1496 88113 88148
+type(
+  API.pCI_t
+)
+"records.ml" 1497 88152 88157 "records.ml" 1497 88152 88159
+type(
+  unit -> API.pCI_t
+)
+"records.ml" 1497 88152 88160 "records.ml" 1497 88152 88162
+type(
+  unit
+)
+"records.ml" 1497 88152 88165 "records.ml" 1497 88152 88168
+type(
+  API.ref_PCI -> API.pCI_t
+)
+ident(
+  int_ref xp0 "records.ml" 1496 88113 88118 "records.ml" 1496 88113 88121
+)
+"records.ml" 1497 88152 88170 "records.ml" 1497 88152 88171
+type(
+  unit -> API.pGPU_t
+)
+ident(
+  int_ref x "records.ml" 1494 87997 88002 "records.ml" 1494 87997 88003
+)
+"records.ml" 1497 88152 88172 "records.ml" 1497 88152 88174
+type(
+  unit
+)
+"records.ml" 1497 88152 88169 "records.ml" 1497 88152 88175
+type(
+  API.pGPU_t
+)
+"records.ml" 1497 88152 88169 "records.ml" 1497 88152 88188
+type(
+  API.ref_PCI
+)
+"records.ml" 1497 88152 88165 "records.ml" 1497 88152 88188
+type(
+  API.pCI_t
+)
+"records.ml" 1499 88195 88211 "records.ml" 1499 88195 88212
+type(
+  API.ref_PGPU
+)
+ident(
+  def r "records.ml" 1499 88195 88216 "records.ml" 1499 88195 88249
+)
+"records.ml" 1499 88195 88216 "records.ml" 1499 88195 88220
+type(
+  API.ref_PGPU ref
+)
+ident(
+  int_ref _ref "records.ml" 1491 87854 87859 "records.ml" 1491 87854 87863
+)
+"records.ml" 1499 88195 88221 "records.ml" 1499 88195 88223
+type(
+  API.ref_PGPU ref -> API.ref_PGPU -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1499 88195 88224 "records.ml" 1499 88195 88225
+type(
+  API.ref_PGPU
+)
+ident(
+  int_ref r "records.ml" 1499 88195 88211 "records.ml" 1499 88195 88212
+)
+"records.ml" 1499 88195 88216 "records.ml" 1499 88195 88225
+type(
+  unit
+)
+"records.ml" 1499 88195 88227 "records.ml" 1499 88195 88233
+type(
+  API.pGPU_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1493 87963 87968 "records.ml" 1493 87963 87974
+)
+"records.ml" 1499 88195 88234 "records.ml" 1499 88195 88236
+type(
+  API.pGPU_t lzy ref -> API.pGPU_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1499 88195 88237 "records.ml" 1499 88195 88249
+type(
+  API.pGPU_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1492 87878 87883 "records.ml" 1492 87878 87895
+)
+"records.ml" 1499 88195 88227 "records.ml" 1499 88195 88249
+type(
+  unit
+)
+"records.ml" 1499 88195 88216 "records.ml" 1499 88195 88249
+type(
+  unit
+)
+"records.ml" 1499 88195 88206 "records.ml" 1499 88195 88251
+type(
+  API.ref_PGPU -> unit
+)
+"records.ml" 1500 88253 88273 "records.ml" 1500 88253 88274
+type(
+  API.ref_PGPU
+)
+ident(
+  def a "records.ml" 1500 88253 88281 "records.ml" 1500 88253 88307
+)
+"records.ml" 1500 88253 88275 "records.ml" 1500 88253 88276
+type(
+  API.pGPU_t
+)
+ident(
+  def b "records.ml" 1500 88253 88281 "records.ml" 1500 88253 88307
+)
+"records.ml" 1500 88253 88272 "records.ml" 1500 88253 88277
+type(
+  API.ref_PGPU * API.pGPU_t
+)
+"records.ml" 1500 88253 88281 "records.ml" 1500 88253 88285
+type(
+  API.ref_PGPU ref
+)
+ident(
+  int_ref _ref "records.ml" 1491 87854 87859 "records.ml" 1491 87854 87863
+)
+"records.ml" 1500 88253 88286 "records.ml" 1500 88253 88288
+type(
+  API.ref_PGPU ref -> API.ref_PGPU -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1500 88253 88289 "records.ml" 1500 88253 88290
+type(
+  API.ref_PGPU
+)
+ident(
+  int_ref a "records.ml" 1500 88253 88273 "records.ml" 1500 88253 88274
+)
+"records.ml" 1500 88253 88281 "records.ml" 1500 88253 88290
+type(
+  unit
+)
+"records.ml" 1500 88253 88292 "records.ml" 1500 88253 88298
+type(
+  API.pGPU_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1493 87963 87968 "records.ml" 1493 87963 87974
+)
+"records.ml" 1500 88253 88299 "records.ml" 1500 88253 88301
+type(
+  API.pGPU_t lzy ref -> API.pGPU_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1500 88253 88306 "records.ml" 1500 88253 88307
+type(
+  API.pGPU_t
+)
+ident(
+  int_ref b "records.ml" 1500 88253 88275 "records.ml" 1500 88253 88276
+)
+"records.ml" 1500 88253 88302 "records.ml" 1500 88253 88307
+type(
+  API.pGPU_t lzy
+)
+"records.ml" 1500 88253 88292 "records.ml" 1500 88253 88307
+type(
+  unit
+)
+"records.ml" 1500 88253 88281 "records.ml" 1500 88253 88307
+type(
+  unit
+)
+"records.ml" 1500 88253 88267 "records.ml" 1500 88253 88308
+type(
+  API.ref_PGPU * API.pGPU_t -> unit
+)
+"records.ml" 1501 88310 88321 "records.ml" 1501 88310 88322
+type(
+  unit -> API.pGPU_t
+)
+ident(
+  int_ref x "records.ml" 1494 87997 88002 "records.ml" 1494 87997 88003
+)
+"records.ml" 1502 88324 88340 "records.ml" 1502 88324 88342
+type(
+  unit
+)
+"records.ml" 1502 88324 88346 "records.ml" 1502 88324 88347
+type(
+  API.ref_PGPU ref -> API.ref_PGPU
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1502 88324 88347 "records.ml" 1502 88324 88351
+type(
+  API.ref_PGPU ref
+)
+ident(
+  int_ref _ref "records.ml" 1491 87854 87859 "records.ml" 1491 87854 87863
+)
+"records.ml" 1502 88324 88346 "records.ml" 1502 88324 88351
+type(
+  API.ref_PGPU
+)
+"records.ml" 1502 88324 88335 "records.ml" 1502 88324 88352
+type(
+  unit -> API.ref_PGPU
+)
+"records.ml" 1504 88367 88370 "records.ml" 1504 88367 88380
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1504 88367 88387 "records.ml" 1504 88367 88393
+type(
+  string
+)
+"records.ml" 1504 88367 88404 "records.ml" 1504 88367 88406
+type(
+  unit
+)
+"records.ml" 1504 88367 88411 "records.ml" 1504 88367 88412
+type(
+  unit -> API.pGPU_t
+)
+ident(
+  int_ref x "records.ml" 1494 87997 88002 "records.ml" 1494 87997 88003
+)
+"records.ml" 1504 88367 88413 "records.ml" 1504 88367 88415
+type(
+  unit
+)
+"records.ml" 1504 88367 88410 "records.ml" 1504 88367 88416
+type(
+  API.pGPU_t
+)
+"records.ml" 1504 88367 88410 "records.ml" 1504 88367 88430
+type(
+  string
+)
+"records.ml" 1504 88367 88399 "records.ml" 1504 88367 88431
+type(
+  unit -> string
+)
+"records.ml" 1504 88367 88432 "records.ml" 1504 88367 88434
+type(
+  unit
+)
+"records.ml" 1504 88367 88370 "records.ml" 1504 88367 88434
+type(
+  field
+)
+"records.ml" 1505 88436 88439 "records.ml" 1505 88436 88449
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1505 88436 88456 "records.ml" 1505 88436 88469
+type(
+  string
+)
+"records.ml" 1505 88436 88480 "records.ml" 1505 88436 88482
+type(
+  unit
+)
+"records.ml" 1505 88436 88491 "records.ml" 1505 88436 88493
+type(
+  unit -> API.pCI_t
+)
+ident(
+  int_ref xp "records.ml" 1497 88152 88157 "records.ml" 1497 88152 88159
+)
+"records.ml" 1505 88436 88494 "records.ml" 1505 88436 88496
+type(
+  unit
+)
+"records.ml" 1505 88436 88490 "records.ml" 1505 88436 88497
+type(
+  API.pCI_t
+)
+"records.ml" 1505 88436 88490 "records.ml" 1505 88436 88517
+type(
+  string
+)
+"records.ml" 1505 88436 88523 "records.ml" 1505 88436 88524
+type(
+  exn
+)
+"records.ml" 1505 88436 88528 "records.ml" 1505 88436 88531
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 1505 88436 88486 "records.ml" 1505 88436 88531
+type(
+  string
+)
+"records.ml" 1505 88436 88475 "records.ml" 1505 88436 88532
+type(
+  unit -> string
+)
+"records.ml" 1505 88436 88533 "records.ml" 1505 88436 88535
+type(
+  unit
+)
+"records.ml" 1505 88436 88439 "records.ml" 1505 88436 88535
+type(
+  field
+)
+"records.ml" 1506 88537 88540 "records.ml" 1506 88537 88550
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1506 88537 88557 "records.ml" 1506 88537 88570
+type(
+  string
+)
+"records.ml" 1506 88537 88581 "records.ml" 1506 88537 88583
+type(
+  unit
+)
+"records.ml" 1506 88537 88592 "records.ml" 1506 88537 88594
+type(
+  unit -> API.pCI_t
+)
+ident(
+  int_ref xp "records.ml" 1497 88152 88157 "records.ml" 1497 88152 88159
+)
+"records.ml" 1506 88537 88595 "records.ml" 1506 88537 88597
+type(
+  unit
+)
+"records.ml" 1506 88537 88591 "records.ml" 1506 88537 88598
+type(
+  API.pCI_t
+)
+"records.ml" 1506 88537 88591 "records.ml" 1506 88537 88618
+type(
+  string
+)
+"records.ml" 1506 88537 88624 "records.ml" 1506 88537 88625
+type(
+  exn
+)
+"records.ml" 1506 88537 88629 "records.ml" 1506 88537 88632
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 1506 88537 88587 "records.ml" 1506 88537 88632
+type(
+  string
+)
+"records.ml" 1506 88537 88576 "records.ml" 1506 88537 88633
+type(
+  unit -> string
+)
+"records.ml" 1506 88537 88634 "records.ml" 1506 88537 88636
+type(
+  unit
+)
+"records.ml" 1506 88537 88540 "records.ml" 1506 88537 88636
+type(
+  field
+)
+"records.ml" 1507 88638 88641 "records.ml" 1507 88638 88651
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1507 88638 88658 "records.ml" 1507 88638 88674
+type(
+  string
+)
+"records.ml" 1507 88638 88685 "records.ml" 1507 88638 88687
+type(
+  unit
+)
+"records.ml" 1507 88638 88695 "records.ml" 1507 88638 88712
+type(
+  API.ref_GPU_group -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1507 88638 88714 "records.ml" 1507 88638 88715
+type(
+  unit -> API.pGPU_t
+)
+ident(
+  int_ref x "records.ml" 1494 87997 88002 "records.ml" 1494 87997 88003
+)
+"records.ml" 1507 88638 88716 "records.ml" 1507 88638 88718
+type(
+  unit
+)
+"records.ml" 1507 88638 88713 "records.ml" 1507 88638 88719
+type(
+  API.pGPU_t
+)
+"records.ml" 1507 88638 88713 "records.ml" 1507 88638 88738
+type(
+  API.ref_GPU_group
+)
+"records.ml" 1507 88638 88695 "records.ml" 1507 88638 88738
+type(
+  string
+)
+"records.ml" 1507 88638 88744 "records.ml" 1507 88638 88745
+type(
+  exn
+)
+"records.ml" 1507 88638 88749 "records.ml" 1507 88638 88752
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 1507 88638 88691 "records.ml" 1507 88638 88752
+type(
+  string
+)
+"records.ml" 1507 88638 88680 "records.ml" 1507 88638 88753
+type(
+  unit -> string
+)
+"records.ml" 1507 88638 88754 "records.ml" 1507 88638 88756
+type(
+  unit
+)
+"records.ml" 1507 88638 88641 "records.ml" 1507 88638 88756
+type(
+  field
+)
+"records.ml" 1508 88758 88761 "records.ml" 1508 88758 88771
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1508 88758 88778 "records.ml" 1508 88758 88800
+type(
+  string
+)
+"records.ml" 1508 88758 88811 "records.ml" 1508 88758 88813
+type(
+  unit
+)
+"records.ml" 1508 88758 88821 "records.ml" 1508 88758 88838
+type(
+  API.ref_GPU_group -> string
+)
+ident(
+  int_ref get_name_from_ref "records.ml" 103 3658 3662 "records.ml" 103 3658 3679
+)
+"records.ml" 1508 88758 88840 "records.ml" 1508 88758 88841
+type(
+  unit -> API.pGPU_t
+)
+ident(
+  int_ref x "records.ml" 1494 87997 88002 "records.ml" 1494 87997 88003
+)
+"records.ml" 1508 88758 88842 "records.ml" 1508 88758 88844
+type(
+  unit
+)
+"records.ml" 1508 88758 88839 "records.ml" 1508 88758 88845
+type(
+  API.pGPU_t
+)
+"records.ml" 1508 88758 88839 "records.ml" 1508 88758 88864
+type(
+  API.ref_GPU_group
+)
+"records.ml" 1508 88758 88821 "records.ml" 1508 88758 88864
+type(
+  string
+)
+"records.ml" 1508 88758 88870 "records.ml" 1508 88758 88871
+type(
+  exn
+)
+"records.ml" 1508 88758 88875 "records.ml" 1508 88758 88878
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 1508 88758 88817 "records.ml" 1508 88758 88878
+type(
+  string
+)
+"records.ml" 1508 88758 88806 "records.ml" 1508 88758 88879
+type(
+  unit -> string
+)
+"records.ml" 1508 88758 88880 "records.ml" 1508 88758 88882
+type(
+  unit
+)
+"records.ml" 1508 88758 88761 "records.ml" 1508 88758 88882
+type(
+  field
+)
+"records.ml" 1509 88884 88887 "records.ml" 1509 88884 88897
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1509 88884 88904 "records.ml" 1509 88884 88915
+type(
+  string
+)
+"records.ml" 1509 88884 88929 "records.ml" 1509 88884 88931
+type(
+  unit
+)
+"records.ml" 1509 88884 88939 "records.ml" 1509 88884 88956
+type(
+  API.ref_host -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1509 88884 88958 "records.ml" 1509 88884 88959
+type(
+  unit -> API.pGPU_t
+)
+ident(
+  int_ref x "records.ml" 1494 87997 88002 "records.ml" 1494 87997 88003
+)
+"records.ml" 1509 88884 88960 "records.ml" 1509 88884 88962
+type(
+  unit
+)
+"records.ml" 1509 88884 88957 "records.ml" 1509 88884 88963
+type(
+  API.pGPU_t
+)
+"records.ml" 1509 88884 88957 "records.ml" 1509 88884 88977
+type(
+  API.ref_host
+)
+"records.ml" 1509 88884 88939 "records.ml" 1509 88884 88977
+type(
+  string
+)
+"records.ml" 1509 88884 88983 "records.ml" 1509 88884 88984
+type(
+  exn
+)
+"records.ml" 1509 88884 88988 "records.ml" 1509 88884 88991
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 1509 88884 88935 "records.ml" 1509 88884 88991
+type(
+  string
+)
+"records.ml" 1509 88884 88924 "records.ml" 1509 88884 88992
+type(
+  unit -> string
+)
+"records.ml" 1509 88884 88993 "records.ml" 1509 88884 88995
+type(
+  unit
+)
+"records.ml" 1509 88884 88887 "records.ml" 1509 88884 88995
+type(
+  field
+)
+"records.ml" 1510 88997 89000 "records.ml" 1510 88997 89010
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1510 88997 89017 "records.ml" 1510 88997 89034
+type(
+  string
+)
+"records.ml" 1510 88997 89048 "records.ml" 1510 88997 89050
+type(
+  unit
+)
+"records.ml" 1510 88997 89058 "records.ml" 1510 88997 89075
+type(
+  API.ref_host -> string
+)
+ident(
+  int_ref get_name_from_ref "records.ml" 103 3658 3662 "records.ml" 103 3658 3679
+)
+"records.ml" 1510 88997 89077 "records.ml" 1510 88997 89078
+type(
+  unit -> API.pGPU_t
+)
+ident(
+  int_ref x "records.ml" 1494 87997 88002 "records.ml" 1494 87997 88003
+)
+"records.ml" 1510 88997 89079 "records.ml" 1510 88997 89081
+type(
+  unit
+)
+"records.ml" 1510 88997 89076 "records.ml" 1510 88997 89082
+type(
+  API.pGPU_t
+)
+"records.ml" 1510 88997 89076 "records.ml" 1510 88997 89096
+type(
+  API.ref_host
+)
+"records.ml" 1510 88997 89058 "records.ml" 1510 88997 89096
+type(
+  string
+)
+"records.ml" 1510 88997 89102 "records.ml" 1510 88997 89103
+type(
+  exn
+)
+"records.ml" 1510 88997 89107 "records.ml" 1510 88997 89110
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 1510 88997 89054 "records.ml" 1510 88997 89110
+type(
+  string
+)
+"records.ml" 1510 88997 89043 "records.ml" 1510 88997 89111
+type(
+  unit -> string
+)
+"records.ml" 1510 88997 89112 "records.ml" 1510 88997 89114
+type(
+  unit
+)
+"records.ml" 1510 88997 89000 "records.ml" 1510 88997 89114
+type(
+  field
+)
+"records.ml" 1511 89116 89119 "records.ml" 1511 89116 89129
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1511 89116 89136 "records.ml" 1511 89116 89144
+type(
+  string
+)
+"records.ml" 1511 89116 89155 "records.ml" 1511 89116 89157
+type(
+  unit
+)
+"records.ml" 1511 89116 89166 "records.ml" 1511 89116 89168
+type(
+  unit -> API.pCI_t
+)
+ident(
+  int_ref xp "records.ml" 1497 88152 88157 "records.ml" 1497 88152 88159
+)
+"records.ml" 1511 89116 89169 "records.ml" 1511 89116 89171
+type(
+  unit
+)
+"records.ml" 1511 89116 89165 "records.ml" 1511 89116 89172
+type(
+  API.pCI_t
+)
+"records.ml" 1511 89116 89165 "records.ml" 1511 89116 89187
+type(
+  string
+)
+"records.ml" 1511 89116 89193 "records.ml" 1511 89116 89194
+type(
+  exn
+)
+"records.ml" 1511 89116 89198 "records.ml" 1511 89116 89201
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 1511 89116 89161 "records.ml" 1511 89116 89201
+type(
+  string
+)
+"records.ml" 1511 89116 89150 "records.ml" 1511 89116 89202
+type(
+  unit -> string
+)
+"records.ml" 1511 89116 89203 "records.ml" 1511 89116 89205
+type(
+  unit
+)
+"records.ml" 1511 89116 89119 "records.ml" 1511 89116 89205
+type(
+  field
+)
+"records.ml" 1512 89207 89210 "records.ml" 1512 89207 89220
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1512 89207 89227 "records.ml" 1512 89207 89241
+type(
+  string
+)
+"records.ml" 1512 89207 89252 "records.ml" 1512 89207 89254
+type(
+  unit
+)
+"records.ml" 1512 89207 89258 "records.ml" 1512 89207 89271
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1512 89207 89272 "records.ml" 1512 89207 89276
+type(
+  string
+)
+"records.ml" 1512 89207 89278 "records.ml" 1512 89207 89286
+type(
+  (API.ref_PCI -> string) -> API.ref_PCI_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1512 89207 89292 "records.ml" 1512 89207 89295
+type(
+  API.ref_PCI
+)
+ident(
+  def pci "records.ml" 1512 89207 89299 "records.ml" 1512 89207 89323
+)
+"records.ml" 1512 89207 89300 "records.ml" 1512 89207 89303
+type(
+  API.ref_PCI -> API.pCI_t
+)
+ident(
+  int_ref xp0 "records.ml" 1496 88113 88118 "records.ml" 1496 88113 88121
+)
+"records.ml" 1512 89207 89304 "records.ml" 1512 89207 89307
+type(
+  API.ref_PCI
+)
+ident(
+  int_ref pci "records.ml" 1512 89207 89292 "records.ml" 1512 89207 89295
+)
+"records.ml" 1512 89207 89299 "records.ml" 1512 89207 89308
+type(
+  API.pCI_t
+)
+"records.ml" 1512 89207 89299 "records.ml" 1512 89207 89323
+type(
+  string
+)
+"records.ml" 1512 89207 89287 "records.ml" 1512 89207 89324
+type(
+  API.ref_PCI -> string
+)
+"records.ml" 1512 89207 89326 "records.ml" 1512 89207 89328
+type(
+  unit -> API.pCI_t
+)
+ident(
+  int_ref xp "records.ml" 1497 88152 88157 "records.ml" 1497 88152 88159
+)
+"records.ml" 1512 89207 89329 "records.ml" 1512 89207 89331
+type(
+  unit
+)
+"records.ml" 1512 89207 89325 "records.ml" 1512 89207 89332
+type(
+  API.pCI_t
+)
+"records.ml" 1512 89207 89325 "records.ml" 1512 89207 89353
+type(
+  API.ref_PCI_set
+)
+"records.ml" 1512 89207 89277 "records.ml" 1512 89207 89354
+type(
+  string list
+)
+"records.ml" 1512 89207 89258 "records.ml" 1512 89207 89354
+type(
+  string
+)
+"records.ml" 1512 89207 89247 "records.ml" 1512 89207 89355
+type(
+  unit -> string
+)
+"records.ml" 1513 89356 89374 "records.ml" 1513 89356 89376
+type(
+  unit
+)
+"records.ml" 1513 89356 89381 "records.ml" 1513 89356 89389
+type(
+  (API.ref_PCI -> string) -> API.ref_PCI_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1513 89356 89395 "records.ml" 1513 89356 89398
+type(
+  API.ref_PCI
+)
+ident(
+  def pci "records.ml" 1513 89356 89402 "records.ml" 1513 89356 89426
+)
+"records.ml" 1513 89356 89403 "records.ml" 1513 89356 89406
+type(
+  API.ref_PCI -> API.pCI_t
+)
+ident(
+  int_ref xp0 "records.ml" 1496 88113 88118 "records.ml" 1496 88113 88121
+)
+"records.ml" 1513 89356 89407 "records.ml" 1513 89356 89410
+type(
+  API.ref_PCI
+)
+ident(
+  int_ref pci "records.ml" 1513 89356 89395 "records.ml" 1513 89356 89398
+)
+"records.ml" 1513 89356 89402 "records.ml" 1513 89356 89411
+type(
+  API.pCI_t
+)
+"records.ml" 1513 89356 89402 "records.ml" 1513 89356 89426
+type(
+  string
+)
+"records.ml" 1513 89356 89390 "records.ml" 1513 89356 89427
+type(
+  API.ref_PCI -> string
+)
+"records.ml" 1513 89356 89429 "records.ml" 1513 89356 89431
+type(
+  unit -> API.pCI_t
+)
+ident(
+  int_ref xp "records.ml" 1497 88152 88157 "records.ml" 1497 88152 88159
+)
+"records.ml" 1513 89356 89432 "records.ml" 1513 89356 89434
+type(
+  unit
+)
+"records.ml" 1513 89356 89428 "records.ml" 1513 89356 89435
+type(
+  API.pCI_t
+)
+"records.ml" 1513 89356 89428 "records.ml" 1513 89356 89456
+type(
+  API.ref_PCI_set
+)
+"records.ml" 1513 89356 89380 "records.ml" 1513 89356 89457
+type(
+  string list
+)
+"records.ml" 1513 89356 89369 "records.ml" 1513 89356 89458
+type(
+  unit -> string list
+)
+"records.ml" 1513 89356 89459 "records.ml" 1513 89356 89461
+type(
+  unit
+)
+"records.ml" 1512 89207 89210 "records.ml" 1513 89356 89461
+type(
+  field
+)
+"records.ml" 1514 89463 89466 "records.ml" 1514 89463 89476
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1514 89463 89483 "records.ml" 1514 89463 89497
+type(
+  string
+)
+"records.ml" 1514 89463 89508 "records.ml" 1514 89463 89510
+type(
+  unit
+)
+"records.ml" 1514 89463 89514 "records.ml" 1514 89463 89540
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 1514 89463 89541 "records.ml" 1514 89463 89545
+type(
+  string
+)
+"records.ml" 1514 89463 89547 "records.ml" 1514 89463 89548
+type(
+  unit -> API.pGPU_t
+)
+ident(
+  int_ref x "records.ml" 1494 87997 88002 "records.ml" 1494 87997 88003
+)
+"records.ml" 1514 89463 89549 "records.ml" 1514 89463 89551
+type(
+  unit
+)
+"records.ml" 1514 89463 89546 "records.ml" 1514 89463 89552
+type(
+  API.pGPU_t
+)
+"records.ml" 1514 89463 89546 "records.ml" 1514 89463 89574
+type(
+  API.string_to_string_map
+)
+"records.ml" 1514 89463 89514 "records.ml" 1514 89463 89574
+type(
+  string
+)
+"records.ml" 1514 89463 89503 "records.ml" 1514 89463 89575
+type(
+  unit -> string
+)
+"records.ml" 1515 89576 89597 "records.ml" 1515 89576 89598
+type(
+  string
+)
+ident(
+  def k "records.ml" 1515 89576 89599 "records.ml" 1515 89576 89659
+)
+"records.ml" 1515 89576 89599 "records.ml" 1515 89576 89600
+type(
+  string
+)
+ident(
+  def v "records.ml" 1515 89576 89604 "records.ml" 1515 89576 89659
+)
+"records.ml" 1515 89576 89604 "records.ml" 1515 89576 89635
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_PGPU -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( PGPU ).add_to_other_config
+)
+"records.ml" 1515 89576 89636 "records.ml" 1515 89576 89639
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1490 87816 87832 "records.ml" 1490 87816 87835
+)
+"records.ml" 1515 89576 89640 "records.ml" 1515 89576 89650
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1490 87816 87836 "records.ml" 1490 87816 87846
+)
+"records.ml" 1515 89576 89651 "records.ml" 1515 89576 89655
+type(
+  API.ref_PGPU
+)
+ident(
+  int_ref pgpu "records.ml" 1490 87816 87847 "records.ml" 1490 87816 87851
+)
+"records.ml" 1515 89576 89656 "records.ml" 1515 89576 89657
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 1515 89576 89597 "records.ml" 1515 89576 89598
+)
+"records.ml" 1515 89576 89658 "records.ml" 1515 89576 89659
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 1515 89576 89599 "records.ml" 1515 89576 89600
+)
+"records.ml" 1515 89576 89604 "records.ml" 1515 89576 89659
+type(
+  unit
+)
+"records.ml" 1515 89576 89592 "records.ml" 1515 89576 89660
+type(
+  string -> string -> unit
+)
+"records.ml" 1516 89661 89687 "records.ml" 1516 89661 89688
+type(
+  string
+)
+ident(
+  def k "records.ml" 1516 89661 89692 "records.ml" 1516 89661 89750
+)
+"records.ml" 1516 89661 89692 "records.ml" 1516 89661 89728
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_PGPU -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( PGPU ).remove_from_other_config
+)
+"records.ml" 1516 89661 89729 "records.ml" 1516 89661 89732
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1490 87816 87832 "records.ml" 1490 87816 87835
+)
+"records.ml" 1516 89661 89733 "records.ml" 1516 89661 89743
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1490 87816 87836 "records.ml" 1490 87816 87846
+)
+"records.ml" 1516 89661 89744 "records.ml" 1516 89661 89748
+type(
+  API.ref_PGPU
+)
+ident(
+  int_ref pgpu "records.ml" 1490 87816 87847 "records.ml" 1490 87816 87851
+)
+"records.ml" 1516 89661 89749 "records.ml" 1516 89661 89750
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 1516 89661 89687 "records.ml" 1516 89661 89688
+)
+"records.ml" 1516 89661 89692 "records.ml" 1516 89661 89750
+type(
+  unit
+)
+"records.ml" 1516 89661 89682 "records.ml" 1516 89661 89751
+type(
+  string -> unit
+)
+"records.ml" 1517 89752 89770 "records.ml" 1517 89752 89772
+type(
+  unit
+)
+"records.ml" 1517 89752 89777 "records.ml" 1517 89752 89778
+type(
+  unit -> API.pGPU_t
+)
+ident(
+  int_ref x "records.ml" 1494 87997 88002 "records.ml" 1494 87997 88003
+)
+"records.ml" 1517 89752 89779 "records.ml" 1517 89752 89781
+type(
+  unit
+)
+"records.ml" 1517 89752 89776 "records.ml" 1517 89752 89782
+type(
+  API.pGPU_t
+)
+"records.ml" 1517 89752 89776 "records.ml" 1517 89752 89804
+type(
+  API.string_to_string_map
+)
+"records.ml" 1517 89752 89765 "records.ml" 1517 89752 89805
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 1517 89752 89806 "records.ml" 1517 89752 89808
+type(
+  unit
+)
+"records.ml" 1514 89463 89466 "records.ml" 1517 89752 89808
+type(
+  field
+)
+"records.ml" 1503 88354 88365 "records.ml" 1518 89810 89814
+type(
+  field list
+)
+"records.ml" 1498 88192 88193 "records.ml" 1519 89815 89817
+type(
+  ([ `PGPU ], API.pGPU_t) record
+)
+"records.ml" 1497 88152 88153 "records.ml" 1519 89815 89817
+type(
+  ([ `PGPU ], API.pGPU_t) record
+)
+"records.ml" 1496 88113 88114 "records.ml" 1519 89815 89817
+type(
+  ([ `PGPU ], API.pGPU_t) record
+)
+"records.ml" 1495 88027 88028 "records.ml" 1519 89815 89817
+type(
+  ([ `PGPU ], API.pGPU_t) record
+)
+"records.ml" 1494 87997 87998 "records.ml" 1519 89815 89817
+type(
+  ([ `PGPU ], API.pGPU_t) record
+)
+"records.ml" 1493 87963 87964 "records.ml" 1519 89815 89817
+type(
+  ([ `PGPU ], API.pGPU_t) record
+)
+"records.ml" 1492 87878 87879 "records.ml" 1519 89815 89817
+type(
+  ([ `PGPU ], API.pGPU_t) record
+)
+"records.ml" 1491 87854 87855 "records.ml" 1519 89815 89817
+type(
+  ([ `PGPU ], API.pGPU_t) record
+)
+"records.ml" 1521 89819 89823 "records.ml" 1521 89819 89839
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session ->
+  API.ref_GPU_group -> ([ `GPU_group ], API.gPU_group_t) record
+)
+ident(
+  def gpu_group_record "records.ml" 1548 91529 91529 --
+)
+"records.ml" 1521 89819 89840 "records.ml" 1521 89819 89843
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 1521 89819 89844 "records.ml" 1546 91525 91527
+)
+"records.ml" 1521 89819 89844 "records.ml" 1521 89819 89854
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 1521 89819 89855 "records.ml" 1546 91525 91527
+)
+"records.ml" 1521 89819 89855 "records.ml" 1521 89819 89864
+type(
+  API.ref_GPU_group
+)
+ident(
+  def gpu_group "records.ml" 1522 89867 89868 "records.ml" 1546 91525 91527
+)
+"records.ml" 1522 89867 89872 "records.ml" 1522 89867 89876
+type(
+  API.ref_GPU_group ref
+)
+"records.ml" 1522 89867 89879 "records.ml" 1522 89867 89882
+type(
+  API.ref_GPU_group -> API.ref_GPU_group ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1522 89867 89883 "records.ml" 1522 89867 89892
+type(
+  API.ref_GPU_group
+)
+ident(
+  int_ref gpu_group "records.ml" 1521 89819 89855 "records.ml" 1521 89819 89864
+)
+"records.ml" 1522 89867 89879 "records.ml" 1522 89867 89892
+type(
+  API.ref_GPU_group ref
+)
+"records.ml" 1523 89896 89901 "records.ml" 1523 89896 89913
+type(
+  API.gPU_group_t lzy
+)
+"records.ml" 1523 89896 89927 "records.ml" 1523 89896 89929
+type(
+  unit
+)
+"records.ml" 1523 89896 89933 "records.ml" 1523 89896 89960
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_GPU_group -> API.gPU_group_t
+)
+ident(
+  ext_ref Client.( Client ).( GPU_group ).get_record
+)
+"records.ml" 1523 89896 89961 "records.ml" 1523 89896 89964
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1521 89819 89840 "records.ml" 1521 89819 89843
+)
+"records.ml" 1523 89896 89965 "records.ml" 1523 89896 89975
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1521 89819 89844 "records.ml" 1521 89819 89854
+)
+"records.ml" 1523 89896 89976 "records.ml" 1523 89896 89977
+type(
+  API.ref_GPU_group ref -> API.ref_GPU_group
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1523 89896 89977 "records.ml" 1523 89896 89981
+type(
+  API.ref_GPU_group ref
+)
+ident(
+  int_ref _ref "records.ml" 1522 89867 89872 "records.ml" 1522 89867 89876
+)
+"records.ml" 1523 89896 89976 "records.ml" 1523 89896 89981
+type(
+  API.ref_GPU_group
+)
+"records.ml" 1523 89896 89933 "records.ml" 1523 89896 89981
+type(
+  API.gPU_group_t
+)
+"records.ml" 1523 89896 89922 "records.ml" 1523 89896 89982
+type(
+  unit -> API.gPU_group_t
+)
+"records.ml" 1523 89896 89916 "records.ml" 1523 89896 89982
+type(
+  API.gPU_group_t lzy
+)
+"records.ml" 1524 89986 89991 "records.ml" 1524 89986 89997
+type(
+  API.gPU_group_t lzy ref
+)
+"records.ml" 1524 89986 90000 "records.ml" 1524 89986 90003
+type(
+  API.gPU_group_t lzy -> API.gPU_group_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1524 89986 90004 "records.ml" 1524 89986 90016
+type(
+  API.gPU_group_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1523 89896 89901 "records.ml" 1523 89896 89913
+)
+"records.ml" 1524 89986 90000 "records.ml" 1524 89986 90016
+type(
+  API.gPU_group_t lzy ref
+)
+"records.ml" 1525 90020 90025 "records.ml" 1525 90020 90026
+type(
+  unit -> API.gPU_group_t
+)
+"records.ml" 1525 90020 90027 "records.ml" 1525 90020 90029
+type(
+  unit
+)
+"records.ml" 1525 90020 90032 "records.ml" 1525 90020 90039
+type(
+  API.gPU_group_t lzy ref -> API.gPU_group_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 1525 90020 90040 "records.ml" 1525 90020 90046
+type(
+  API.gPU_group_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1524 89986 89991 "records.ml" 1524 89986 89997
+)
+"records.ml" 1525 90020 90032 "records.ml" 1525 90020 90046
+type(
+  API.gPU_group_t
+)
+"records.ml" 1527 90053 90069 "records.ml" 1527 90053 90070
+type(
+  API.ref_GPU_group
+)
+ident(
+  def r "records.ml" 1527 90053 90074 "records.ml" 1527 90053 90107
+)
+"records.ml" 1527 90053 90074 "records.ml" 1527 90053 90078
+type(
+  API.ref_GPU_group ref
+)
+ident(
+  int_ref _ref "records.ml" 1522 89867 89872 "records.ml" 1522 89867 89876
+)
+"records.ml" 1527 90053 90079 "records.ml" 1527 90053 90081
+type(
+  API.ref_GPU_group ref -> API.ref_GPU_group -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1527 90053 90082 "records.ml" 1527 90053 90083
+type(
+  API.ref_GPU_group
+)
+ident(
+  int_ref r "records.ml" 1527 90053 90069 "records.ml" 1527 90053 90070
+)
+"records.ml" 1527 90053 90074 "records.ml" 1527 90053 90083
+type(
+  unit
+)
+"records.ml" 1527 90053 90085 "records.ml" 1527 90053 90091
+type(
+  API.gPU_group_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1524 89986 89991 "records.ml" 1524 89986 89997
+)
+"records.ml" 1527 90053 90092 "records.ml" 1527 90053 90094
+type(
+  API.gPU_group_t lzy ref -> API.gPU_group_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1527 90053 90095 "records.ml" 1527 90053 90107
+type(
+  API.gPU_group_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1523 89896 89901 "records.ml" 1523 89896 89913
+)
+"records.ml" 1527 90053 90085 "records.ml" 1527 90053 90107
+type(
+  unit
+)
+"records.ml" 1527 90053 90074 "records.ml" 1527 90053 90107
+type(
+  unit
+)
+"records.ml" 1527 90053 90064 "records.ml" 1527 90053 90109
+type(
+  API.ref_GPU_group -> unit
+)
+"records.ml" 1528 90111 90131 "records.ml" 1528 90111 90132
+type(
+  API.ref_GPU_group
+)
+ident(
+  def a "records.ml" 1528 90111 90139 "records.ml" 1528 90111 90165
+)
+"records.ml" 1528 90111 90133 "records.ml" 1528 90111 90134
+type(
+  API.gPU_group_t
+)
+ident(
+  def b "records.ml" 1528 90111 90139 "records.ml" 1528 90111 90165
+)
+"records.ml" 1528 90111 90130 "records.ml" 1528 90111 90135
+type(
+  API.ref_GPU_group * API.gPU_group_t
+)
+"records.ml" 1528 90111 90139 "records.ml" 1528 90111 90143
+type(
+  API.ref_GPU_group ref
+)
+ident(
+  int_ref _ref "records.ml" 1522 89867 89872 "records.ml" 1522 89867 89876
+)
+"records.ml" 1528 90111 90144 "records.ml" 1528 90111 90146
+type(
+  API.ref_GPU_group ref -> API.ref_GPU_group -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1528 90111 90147 "records.ml" 1528 90111 90148
+type(
+  API.ref_GPU_group
+)
+ident(
+  int_ref a "records.ml" 1528 90111 90131 "records.ml" 1528 90111 90132
+)
+"records.ml" 1528 90111 90139 "records.ml" 1528 90111 90148
+type(
+  unit
+)
+"records.ml" 1528 90111 90150 "records.ml" 1528 90111 90156
+type(
+  API.gPU_group_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1524 89986 89991 "records.ml" 1524 89986 89997
+)
+"records.ml" 1528 90111 90157 "records.ml" 1528 90111 90159
+type(
+  API.gPU_group_t lzy ref -> API.gPU_group_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1528 90111 90164 "records.ml" 1528 90111 90165
+type(
+  API.gPU_group_t
+)
+ident(
+  int_ref b "records.ml" 1528 90111 90133 "records.ml" 1528 90111 90134
+)
+"records.ml" 1528 90111 90160 "records.ml" 1528 90111 90165
+type(
+  API.gPU_group_t lzy
+)
+"records.ml" 1528 90111 90150 "records.ml" 1528 90111 90165
+type(
+  unit
+)
+"records.ml" 1528 90111 90139 "records.ml" 1528 90111 90165
+type(
+  unit
+)
+"records.ml" 1528 90111 90125 "records.ml" 1528 90111 90166
+type(
+  API.ref_GPU_group * API.gPU_group_t -> unit
+)
+"records.ml" 1529 90168 90179 "records.ml" 1529 90168 90180
+type(
+  unit -> API.gPU_group_t
+)
+ident(
+  int_ref x "records.ml" 1525 90020 90025 "records.ml" 1525 90020 90026
+)
+"records.ml" 1530 90182 90198 "records.ml" 1530 90182 90200
+type(
+  unit
+)
+"records.ml" 1530 90182 90204 "records.ml" 1530 90182 90205
+type(
+  API.ref_GPU_group ref -> API.ref_GPU_group
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1530 90182 90205 "records.ml" 1530 90182 90209
+type(
+  API.ref_GPU_group ref
+)
+ident(
+  int_ref _ref "records.ml" 1522 89867 89872 "records.ml" 1522 89867 89876
+)
+"records.ml" 1530 90182 90204 "records.ml" 1530 90182 90209
+type(
+  API.ref_GPU_group
+)
+"records.ml" 1530 90182 90193 "records.ml" 1530 90182 90210
+type(
+  unit -> API.ref_GPU_group
+)
+"records.ml" 1532 90225 90228 "records.ml" 1532 90225 90238
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1532 90225 90245 "records.ml" 1532 90225 90251
+type(
+  string
+)
+"records.ml" 1532 90225 90262 "records.ml" 1532 90225 90264
+type(
+  unit
+)
+"records.ml" 1532 90225 90269 "records.ml" 1532 90225 90270
+type(
+  unit -> API.gPU_group_t
+)
+ident(
+  int_ref x "records.ml" 1525 90020 90025 "records.ml" 1525 90020 90026
+)
+"records.ml" 1532 90225 90271 "records.ml" 1532 90225 90273
+type(
+  unit
+)
+"records.ml" 1532 90225 90268 "records.ml" 1532 90225 90274
+type(
+  API.gPU_group_t
+)
+"records.ml" 1532 90225 90268 "records.ml" 1532 90225 90293
+type(
+  string
+)
+"records.ml" 1532 90225 90257 "records.ml" 1532 90225 90294
+type(
+  unit -> string
+)
+"records.ml" 1532 90225 90295 "records.ml" 1532 90225 90297
+type(
+  unit
+)
+"records.ml" 1532 90225 90228 "records.ml" 1532 90225 90297
+type(
+  field
+)
+"records.ml" 1533 90299 90302 "records.ml" 1533 90299 90312
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1533 90299 90319 "records.ml" 1533 90299 90331
+type(
+  string
+)
+"records.ml" 1533 90299 90342 "records.ml" 1533 90299 90344
+type(
+  unit
+)
+"records.ml" 1533 90299 90349 "records.ml" 1533 90299 90350
+type(
+  unit -> API.gPU_group_t
+)
+ident(
+  int_ref x "records.ml" 1525 90020 90025 "records.ml" 1525 90020 90026
+)
+"records.ml" 1533 90299 90351 "records.ml" 1533 90299 90353
+type(
+  unit
+)
+"records.ml" 1533 90299 90348 "records.ml" 1533 90299 90354
+type(
+  API.gPU_group_t
+)
+"records.ml" 1533 90299 90348 "records.ml" 1533 90299 90379
+type(
+  string
+)
+"records.ml" 1533 90299 90337 "records.ml" 1533 90299 90380
+type(
+  unit -> string
+)
+"records.ml" 1534 90381 90395 "records.ml" 1534 90381 90396
+type(
+  string
+)
+ident(
+  def x "records.ml" 1534 90381 90400 "records.ml" 1534 90381 90458
+)
+"records.ml" 1534 90381 90400 "records.ml" 1534 90381 90431
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_GPU_group -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( GPU_group ).set_name_label
+)
+"records.ml" 1534 90381 90432 "records.ml" 1534 90381 90435
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1521 89819 89840 "records.ml" 1521 89819 89843
+)
+"records.ml" 1534 90381 90436 "records.ml" 1534 90381 90446
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1521 89819 89844 "records.ml" 1521 89819 89854
+)
+"records.ml" 1534 90381 90447 "records.ml" 1534 90381 90456
+type(
+  API.ref_GPU_group
+)
+ident(
+  int_ref gpu_group "records.ml" 1521 89819 89855 "records.ml" 1521 89819 89864
+)
+"records.ml" 1534 90381 90457 "records.ml" 1534 90381 90458
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 1534 90381 90395 "records.ml" 1534 90381 90396
+)
+"records.ml" 1534 90381 90400 "records.ml" 1534 90381 90458
+type(
+  unit
+)
+"records.ml" 1534 90381 90390 "records.ml" 1534 90381 90459
+type(
+  string -> unit
+)
+"records.ml" 1534 90381 90460 "records.ml" 1534 90381 90462
+type(
+  unit
+)
+"records.ml" 1533 90299 90302 "records.ml" 1534 90381 90462
+type(
+  field
+)
+"records.ml" 1535 90464 90467 "records.ml" 1535 90464 90477
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1535 90464 90484 "records.ml" 1535 90464 90502
+type(
+  string
+)
+"records.ml" 1535 90464 90513 "records.ml" 1535 90464 90515
+type(
+  unit
+)
+"records.ml" 1535 90464 90520 "records.ml" 1535 90464 90521
+type(
+  unit -> API.gPU_group_t
+)
+ident(
+  int_ref x "records.ml" 1525 90020 90025 "records.ml" 1525 90020 90026
+)
+"records.ml" 1535 90464 90522 "records.ml" 1535 90464 90524
+type(
+  unit
+)
+"records.ml" 1535 90464 90519 "records.ml" 1535 90464 90525
+type(
+  API.gPU_group_t
+)
+"records.ml" 1535 90464 90519 "records.ml" 1535 90464 90556
+type(
+  string
+)
+"records.ml" 1535 90464 90508 "records.ml" 1535 90464 90557
+type(
+  unit -> string
+)
+"records.ml" 1536 90558 90572 "records.ml" 1536 90558 90573
+type(
+  string
+)
+ident(
+  def x "records.ml" 1536 90558 90577 "records.ml" 1536 90558 90641
+)
+"records.ml" 1536 90558 90577 "records.ml" 1536 90558 90614
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_GPU_group -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( GPU_group ).set_name_description
+)
+"records.ml" 1536 90558 90615 "records.ml" 1536 90558 90618
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1521 89819 89840 "records.ml" 1521 89819 89843
+)
+"records.ml" 1536 90558 90619 "records.ml" 1536 90558 90629
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1521 89819 89844 "records.ml" 1521 89819 89854
+)
+"records.ml" 1536 90558 90630 "records.ml" 1536 90558 90639
+type(
+  API.ref_GPU_group
+)
+ident(
+  int_ref gpu_group "records.ml" 1521 89819 89855 "records.ml" 1521 89819 89864
+)
+"records.ml" 1536 90558 90640 "records.ml" 1536 90558 90641
+type(
+  string
+)
+ident(
+  int_ref x "records.ml" 1536 90558 90572 "records.ml" 1536 90558 90573
+)
+"records.ml" 1536 90558 90577 "records.ml" 1536 90558 90641
+type(
+  unit
+)
+"records.ml" 1536 90558 90567 "records.ml" 1536 90558 90642
+type(
+  string -> unit
+)
+"records.ml" 1536 90558 90643 "records.ml" 1536 90558 90645
+type(
+  unit
+)
+"records.ml" 1535 90464 90467 "records.ml" 1536 90558 90645
+type(
+  field
+)
+"records.ml" 1537 90647 90650 "records.ml" 1537 90647 90660
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1537 90647 90667 "records.ml" 1537 90647 90679
+type(
+  string
+)
+"records.ml" 1537 90647 90690 "records.ml" 1537 90647 90692
+type(
+  unit
+)
+"records.ml" 1537 90647 90696 "records.ml" 1537 90647 90709
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1537 90647 90710 "records.ml" 1537 90647 90714
+type(
+  string
+)
+"records.ml" 1537 90647 90716 "records.ml" 1537 90647 90724
+type(
+  ([ `VGPU ] Ref.t -> string) -> API.ref_VGPU_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1537 90647 90730 "records.ml" 1537 90647 90734
+type(
+  [ `VGPU ] Ref.t
+)
+ident(
+  def vgpu "records.ml" 1537 90647 90738 "records.ml" 1537 90647 90760
+)
+"records.ml" 1537 90647 90738 "records.ml" 1537 90647 90755
+type(
+  [ `VGPU ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1537 90647 90756 "records.ml" 1537 90647 90760
+type(
+  [ `VGPU ] Ref.t
+)
+ident(
+  int_ref vgpu "records.ml" 1537 90647 90730 "records.ml" 1537 90647 90734
+)
+"records.ml" 1537 90647 90738 "records.ml" 1537 90647 90760
+type(
+  string
+)
+"records.ml" 1537 90647 90725 "records.ml" 1537 90647 90761
+type(
+  [ `VGPU ] Ref.t -> string
+)
+"records.ml" 1537 90647 90763 "records.ml" 1537 90647 90764
+type(
+  unit -> API.gPU_group_t
+)
+ident(
+  int_ref x "records.ml" 1525 90020 90025 "records.ml" 1525 90020 90026
+)
+"records.ml" 1537 90647 90765 "records.ml" 1537 90647 90767
+type(
+  unit
+)
+"records.ml" 1537 90647 90762 "records.ml" 1537 90647 90768
+type(
+  API.gPU_group_t
+)
+"records.ml" 1537 90647 90762 "records.ml" 1537 90647 90788
+type(
+  API.ref_VGPU_set
+)
+"records.ml" 1537 90647 90715 "records.ml" 1537 90647 90789
+type(
+  string list
+)
+"records.ml" 1537 90647 90696 "records.ml" 1537 90647 90789
+type(
+  string
+)
+"records.ml" 1537 90647 90685 "records.ml" 1537 90647 90790
+type(
+  unit -> string
+)
+"records.ml" 1538 90791 90809 "records.ml" 1538 90791 90811
+type(
+  unit
+)
+"records.ml" 1538 90791 90816 "records.ml" 1538 90791 90824
+type(
+  ([ `VGPU ] Ref.t -> string) -> API.ref_VGPU_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1538 90791 90830 "records.ml" 1538 90791 90834
+type(
+  [ `VGPU ] Ref.t
+)
+ident(
+  def vgpu "records.ml" 1538 90791 90838 "records.ml" 1538 90791 90860
+)
+"records.ml" 1538 90791 90838 "records.ml" 1538 90791 90855
+type(
+  [ `VGPU ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1538 90791 90856 "records.ml" 1538 90791 90860
+type(
+  [ `VGPU ] Ref.t
+)
+ident(
+  int_ref vgpu "records.ml" 1538 90791 90830 "records.ml" 1538 90791 90834
+)
+"records.ml" 1538 90791 90838 "records.ml" 1538 90791 90860
+type(
+  string
+)
+"records.ml" 1538 90791 90825 "records.ml" 1538 90791 90861
+type(
+  [ `VGPU ] Ref.t -> string
+)
+"records.ml" 1538 90791 90863 "records.ml" 1538 90791 90864
+type(
+  unit -> API.gPU_group_t
+)
+ident(
+  int_ref x "records.ml" 1525 90020 90025 "records.ml" 1525 90020 90026
+)
+"records.ml" 1538 90791 90865 "records.ml" 1538 90791 90867
+type(
+  unit
+)
+"records.ml" 1538 90791 90862 "records.ml" 1538 90791 90868
+type(
+  API.gPU_group_t
+)
+"records.ml" 1538 90791 90862 "records.ml" 1538 90791 90888
+type(
+  API.ref_VGPU_set
+)
+"records.ml" 1538 90791 90815 "records.ml" 1538 90791 90889
+type(
+  string list
+)
+"records.ml" 1538 90791 90804 "records.ml" 1538 90791 90890
+type(
+  unit -> string list
+)
+"records.ml" 1538 90791 90891 "records.ml" 1538 90791 90893
+type(
+  unit
+)
+"records.ml" 1537 90647 90650 "records.ml" 1538 90791 90893
+type(
+  field
+)
+"records.ml" 1539 90895 90898 "records.ml" 1539 90895 90908
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1539 90895 90915 "records.ml" 1539 90895 90927
+type(
+  string
+)
+"records.ml" 1539 90895 90938 "records.ml" 1539 90895 90940
+type(
+  unit
+)
+"records.ml" 1539 90895 90944 "records.ml" 1539 90895 90957
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref Stringext.( String ).concat
+)
+"records.ml" 1539 90895 90958 "records.ml" 1539 90895 90962
+type(
+  string
+)
+"records.ml" 1539 90895 90964 "records.ml" 1539 90895 90972
+type(
+  ([ `PGPU ] Ref.t -> string) -> API.ref_PGPU_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1539 90895 90978 "records.ml" 1539 90895 90982
+type(
+  [ `PGPU ] Ref.t
+)
+ident(
+  def pgpu "records.ml" 1539 90895 90986 "records.ml" 1539 90895 91008
+)
+"records.ml" 1539 90895 90986 "records.ml" 1539 90895 91003
+type(
+  [ `PGPU ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1539 90895 91004 "records.ml" 1539 90895 91008
+type(
+  [ `PGPU ] Ref.t
+)
+ident(
+  int_ref pgpu "records.ml" 1539 90895 90978 "records.ml" 1539 90895 90982
+)
+"records.ml" 1539 90895 90986 "records.ml" 1539 90895 91008
+type(
+  string
+)
+"records.ml" 1539 90895 90973 "records.ml" 1539 90895 91009
+type(
+  [ `PGPU ] Ref.t -> string
+)
+"records.ml" 1539 90895 91011 "records.ml" 1539 90895 91012
+type(
+  unit -> API.gPU_group_t
+)
+ident(
+  int_ref x "records.ml" 1525 90020 90025 "records.ml" 1525 90020 90026
+)
+"records.ml" 1539 90895 91013 "records.ml" 1539 90895 91015
+type(
+  unit
+)
+"records.ml" 1539 90895 91010 "records.ml" 1539 90895 91016
+type(
+  API.gPU_group_t
+)
+"records.ml" 1539 90895 91010 "records.ml" 1539 90895 91036
+type(
+  API.ref_PGPU_set
+)
+"records.ml" 1539 90895 90963 "records.ml" 1539 90895 91037
+type(
+  string list
+)
+"records.ml" 1539 90895 90944 "records.ml" 1539 90895 91037
+type(
+  string
+)
+"records.ml" 1539 90895 90933 "records.ml" 1539 90895 91038
+type(
+  unit -> string
+)
+"records.ml" 1540 91039 91057 "records.ml" 1540 91039 91059
+type(
+  unit
+)
+"records.ml" 1540 91039 91064 "records.ml" 1540 91039 91072
+type(
+  ([ `PGPU ] Ref.t -> string) -> API.ref_PGPU_set -> string list
+)
+ident(
+  ext_ref List.map
+)
+"records.ml" 1540 91039 91078 "records.ml" 1540 91039 91082
+type(
+  [ `PGPU ] Ref.t
+)
+ident(
+  def pgpu "records.ml" 1540 91039 91086 "records.ml" 1540 91039 91108
+)
+"records.ml" 1540 91039 91086 "records.ml" 1540 91039 91103
+type(
+  [ `PGPU ] Ref.t -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1540 91039 91104 "records.ml" 1540 91039 91108
+type(
+  [ `PGPU ] Ref.t
+)
+ident(
+  int_ref pgpu "records.ml" 1540 91039 91078 "records.ml" 1540 91039 91082
+)
+"records.ml" 1540 91039 91086 "records.ml" 1540 91039 91108
+type(
+  string
+)
+"records.ml" 1540 91039 91073 "records.ml" 1540 91039 91109
+type(
+  [ `PGPU ] Ref.t -> string
+)
+"records.ml" 1540 91039 91111 "records.ml" 1540 91039 91112
+type(
+  unit -> API.gPU_group_t
+)
+ident(
+  int_ref x "records.ml" 1525 90020 90025 "records.ml" 1525 90020 90026
+)
+"records.ml" 1540 91039 91113 "records.ml" 1540 91039 91115
+type(
+  unit
+)
+"records.ml" 1540 91039 91110 "records.ml" 1540 91039 91116
+type(
+  API.gPU_group_t
+)
+"records.ml" 1540 91039 91110 "records.ml" 1540 91039 91136
+type(
+  API.ref_PGPU_set
+)
+"records.ml" 1540 91039 91063 "records.ml" 1540 91039 91137
+type(
+  string list
+)
+"records.ml" 1540 91039 91052 "records.ml" 1540 91039 91138
+type(
+  unit -> string list
+)
+"records.ml" 1540 91039 91139 "records.ml" 1540 91039 91141
+type(
+  unit
+)
+"records.ml" 1539 90895 90898 "records.ml" 1540 91039 91141
+type(
+  field
+)
+"records.ml" 1541 91143 91146 "records.ml" 1541 91143 91156
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1541 91143 91163 "records.ml" 1541 91143 91177
+type(
+  string
+)
+"records.ml" 1541 91143 91188 "records.ml" 1541 91143 91190
+type(
+  unit
+)
+"records.ml" 1541 91143 91194 "records.ml" 1541 91143 91220
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 1541 91143 91221 "records.ml" 1541 91143 91225
+type(
+  string
+)
+"records.ml" 1541 91143 91227 "records.ml" 1541 91143 91228
+type(
+  unit -> API.gPU_group_t
+)
+ident(
+  int_ref x "records.ml" 1525 90020 90025 "records.ml" 1525 90020 90026
+)
+"records.ml" 1541 91143 91229 "records.ml" 1541 91143 91231
+type(
+  unit
+)
+"records.ml" 1541 91143 91226 "records.ml" 1541 91143 91232
+type(
+  API.gPU_group_t
+)
+"records.ml" 1541 91143 91226 "records.ml" 1541 91143 91259
+type(
+  API.string_to_string_map
+)
+"records.ml" 1541 91143 91194 "records.ml" 1541 91143 91259
+type(
+  string
+)
+"records.ml" 1541 91143 91183 "records.ml" 1541 91143 91260
+type(
+  unit -> string
+)
+"records.ml" 1542 91261 91282 "records.ml" 1542 91261 91283
+type(
+  string
+)
+ident(
+  def k "records.ml" 1542 91261 91284 "records.ml" 1542 91261 91354
+)
+"records.ml" 1542 91261 91284 "records.ml" 1542 91261 91285
+type(
+  string
+)
+ident(
+  def v "records.ml" 1542 91261 91289 "records.ml" 1542 91261 91354
+)
+"records.ml" 1542 91261 91289 "records.ml" 1542 91261 91325
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_GPU_group -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( GPU_group ).add_to_other_config
+)
+"records.ml" 1542 91261 91326 "records.ml" 1542 91261 91329
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1521 89819 89840 "records.ml" 1521 89819 89843
+)
+"records.ml" 1542 91261 91330 "records.ml" 1542 91261 91340
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1521 89819 89844 "records.ml" 1521 89819 89854
+)
+"records.ml" 1542 91261 91341 "records.ml" 1542 91261 91350
+type(
+  API.ref_GPU_group
+)
+ident(
+  int_ref gpu_group "records.ml" 1521 89819 89855 "records.ml" 1521 89819 89864
+)
+"records.ml" 1542 91261 91351 "records.ml" 1542 91261 91352
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 1542 91261 91282 "records.ml" 1542 91261 91283
+)
+"records.ml" 1542 91261 91353 "records.ml" 1542 91261 91354
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 1542 91261 91284 "records.ml" 1542 91261 91285
+)
+"records.ml" 1542 91261 91289 "records.ml" 1542 91261 91354
+type(
+  unit
+)
+"records.ml" 1542 91261 91277 "records.ml" 1542 91261 91355
+type(
+  string -> string -> unit
+)
+"records.ml" 1543 91356 91382 "records.ml" 1543 91356 91383
+type(
+  string
+)
+ident(
+  def k "records.ml" 1543 91356 91387 "records.ml" 1543 91356 91455
+)
+"records.ml" 1543 91356 91387 "records.ml" 1543 91356 91428
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_GPU_group -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( GPU_group ).remove_from_other_config
+)
+"records.ml" 1543 91356 91429 "records.ml" 1543 91356 91432
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1521 89819 89840 "records.ml" 1521 89819 89843
+)
+"records.ml" 1543 91356 91433 "records.ml" 1543 91356 91443
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1521 89819 89844 "records.ml" 1521 89819 89854
+)
+"records.ml" 1543 91356 91444 "records.ml" 1543 91356 91453
+type(
+  API.ref_GPU_group
+)
+ident(
+  int_ref gpu_group "records.ml" 1521 89819 89855 "records.ml" 1521 89819 89864
+)
+"records.ml" 1543 91356 91454 "records.ml" 1543 91356 91455
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 1543 91356 91382 "records.ml" 1543 91356 91383
+)
+"records.ml" 1543 91356 91387 "records.ml" 1543 91356 91455
+type(
+  unit
+)
+"records.ml" 1543 91356 91377 "records.ml" 1543 91356 91456
+type(
+  string -> unit
+)
+"records.ml" 1544 91457 91475 "records.ml" 1544 91457 91477
+type(
+  unit
+)
+"records.ml" 1544 91457 91482 "records.ml" 1544 91457 91483
+type(
+  unit -> API.gPU_group_t
+)
+ident(
+  int_ref x "records.ml" 1525 90020 90025 "records.ml" 1525 90020 90026
+)
+"records.ml" 1544 91457 91484 "records.ml" 1544 91457 91486
+type(
+  unit
+)
+"records.ml" 1544 91457 91481 "records.ml" 1544 91457 91487
+type(
+  API.gPU_group_t
+)
+"records.ml" 1544 91457 91481 "records.ml" 1544 91457 91514
+type(
+  API.string_to_string_map
+)
+"records.ml" 1544 91457 91470 "records.ml" 1544 91457 91515
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 1544 91457 91516 "records.ml" 1544 91457 91518
+type(
+  unit
+)
+"records.ml" 1541 91143 91146 "records.ml" 1544 91457 91518
+type(
+  field
+)
+"records.ml" 1531 90212 90223 "records.ml" 1545 91520 91524
+type(
+  field list
+)
+"records.ml" 1526 90050 90051 "records.ml" 1546 91525 91527
+type(
+  ([ `GPU_group ], API.gPU_group_t) record
+)
+"records.ml" 1525 90020 90021 "records.ml" 1546 91525 91527
+type(
+  ([ `GPU_group ], API.gPU_group_t) record
+)
+"records.ml" 1524 89986 89987 "records.ml" 1546 91525 91527
+type(
+  ([ `GPU_group ], API.gPU_group_t) record
+)
+"records.ml" 1523 89896 89897 "records.ml" 1546 91525 91527
+type(
+  ([ `GPU_group ], API.gPU_group_t) record
+)
+"records.ml" 1522 89867 89868 "records.ml" 1546 91525 91527
+type(
+  ([ `GPU_group ], API.gPU_group_t) record
+)
+"records.ml" 1548 91529 91533 "records.ml" 1548 91529 91544
+type(
+  (XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  API.ref_session -> API.ref_VGPU -> ([ `VGPU ], API.vGPU_t) record
+)
+ident(
+  def vgpu_record "records.ml" 1570 92876 92878 --
+)
+"records.ml" 1548 91529 91545 "records.ml" 1548 91529 91548
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  def rpc "records.ml" 1548 91529 91549 "records.ml" 1570 92876 92878
+)
+"records.ml" 1548 91529 91549 "records.ml" 1548 91529 91559
+type(
+  API.ref_session
+)
+ident(
+  def session_id "records.ml" 1548 91529 91560 "records.ml" 1570 92876 92878
+)
+"records.ml" 1548 91529 91560 "records.ml" 1548 91529 91564
+type(
+  API.ref_VGPU
+)
+ident(
+  def vgpu "records.ml" 1549 91567 91568 "records.ml" 1570 92876 92878
+)
+"records.ml" 1549 91567 91572 "records.ml" 1549 91567 91576
+type(
+  API.ref_VGPU ref
+)
+"records.ml" 1549 91567 91579 "records.ml" 1549 91567 91582
+type(
+  API.ref_VGPU -> API.ref_VGPU ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1549 91567 91583 "records.ml" 1549 91567 91587
+type(
+  API.ref_VGPU
+)
+ident(
+  int_ref vgpu "records.ml" 1548 91529 91560 "records.ml" 1548 91529 91564
+)
+"records.ml" 1549 91567 91579 "records.ml" 1549 91567 91587
+type(
+  API.ref_VGPU ref
+)
+"records.ml" 1550 91591 91596 "records.ml" 1550 91591 91608
+type(
+  API.vGPU_t lzy
+)
+"records.ml" 1550 91591 91622 "records.ml" 1550 91591 91624
+type(
+  unit
+)
+"records.ml" 1550 91591 91628 "records.ml" 1550 91591 91650
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VGPU -> API.vGPU_t
+)
+ident(
+  ext_ref Client.( Client ).( VGPU ).get_record
+)
+"records.ml" 1550 91591 91651 "records.ml" 1550 91591 91654
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1548 91529 91545 "records.ml" 1548 91529 91548
+)
+"records.ml" 1550 91591 91655 "records.ml" 1550 91591 91665
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1548 91529 91549 "records.ml" 1548 91529 91559
+)
+"records.ml" 1550 91591 91666 "records.ml" 1550 91591 91667
+type(
+  API.ref_VGPU ref -> API.ref_VGPU
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1550 91591 91667 "records.ml" 1550 91591 91671
+type(
+  API.ref_VGPU ref
+)
+ident(
+  int_ref _ref "records.ml" 1549 91567 91572 "records.ml" 1549 91567 91576
+)
+"records.ml" 1550 91591 91666 "records.ml" 1550 91591 91671
+type(
+  API.ref_VGPU
+)
+"records.ml" 1550 91591 91628 "records.ml" 1550 91591 91671
+type(
+  API.vGPU_t
+)
+"records.ml" 1550 91591 91617 "records.ml" 1550 91591 91672
+type(
+  unit -> API.vGPU_t
+)
+"records.ml" 1550 91591 91611 "records.ml" 1550 91591 91672
+type(
+  API.vGPU_t lzy
+)
+"records.ml" 1551 91676 91681 "records.ml" 1551 91676 91687
+type(
+  API.vGPU_t lzy ref
+)
+"records.ml" 1551 91676 91690 "records.ml" 1551 91676 91693
+type(
+  API.vGPU_t lzy -> API.vGPU_t lzy ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"records.ml" 1551 91676 91694 "records.ml" 1551 91676 91706
+type(
+  API.vGPU_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1550 91591 91596 "records.ml" 1550 91591 91608
+)
+"records.ml" 1551 91676 91690 "records.ml" 1551 91676 91706
+type(
+  API.vGPU_t lzy ref
+)
+"records.ml" 1552 91710 91715 "records.ml" 1552 91710 91716
+type(
+  unit -> API.vGPU_t
+)
+"records.ml" 1552 91710 91717 "records.ml" 1552 91710 91719
+type(
+  unit
+)
+"records.ml" 1552 91710 91722 "records.ml" 1552 91710 91729
+type(
+  API.vGPU_t lzy ref -> API.vGPU_t
+)
+ident(
+  int_ref lzy_get "records.ml" 78 2988 2992 "records.ml" 78 2988 2999
+)
+"records.ml" 1552 91710 91730 "records.ml" 1552 91710 91736
+type(
+  API.vGPU_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1551 91676 91681 "records.ml" 1551 91676 91687
+)
+"records.ml" 1552 91710 91722 "records.ml" 1552 91710 91736
+type(
+  API.vGPU_t
+)
+"records.ml" 1554 91743 91759 "records.ml" 1554 91743 91760
+type(
+  API.ref_VGPU
+)
+ident(
+  def r "records.ml" 1554 91743 91764 "records.ml" 1554 91743 91797
+)
+"records.ml" 1554 91743 91764 "records.ml" 1554 91743 91768
+type(
+  API.ref_VGPU ref
+)
+ident(
+  int_ref _ref "records.ml" 1549 91567 91572 "records.ml" 1549 91567 91576
+)
+"records.ml" 1554 91743 91769 "records.ml" 1554 91743 91771
+type(
+  API.ref_VGPU ref -> API.ref_VGPU -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1554 91743 91772 "records.ml" 1554 91743 91773
+type(
+  API.ref_VGPU
+)
+ident(
+  int_ref r "records.ml" 1554 91743 91759 "records.ml" 1554 91743 91760
+)
+"records.ml" 1554 91743 91764 "records.ml" 1554 91743 91773
+type(
+  unit
+)
+"records.ml" 1554 91743 91775 "records.ml" 1554 91743 91781
+type(
+  API.vGPU_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1551 91676 91681 "records.ml" 1551 91676 91687
+)
+"records.ml" 1554 91743 91782 "records.ml" 1554 91743 91784
+type(
+  API.vGPU_t lzy ref -> API.vGPU_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1554 91743 91785 "records.ml" 1554 91743 91797
+type(
+  API.vGPU_t lzy
+)
+ident(
+  int_ref empty_record "records.ml" 1550 91591 91596 "records.ml" 1550 91591 91608
+)
+"records.ml" 1554 91743 91775 "records.ml" 1554 91743 91797
+type(
+  unit
+)
+"records.ml" 1554 91743 91764 "records.ml" 1554 91743 91797
+type(
+  unit
+)
+"records.ml" 1554 91743 91754 "records.ml" 1554 91743 91799
+type(
+  API.ref_VGPU -> unit
+)
+"records.ml" 1555 91801 91821 "records.ml" 1555 91801 91822
+type(
+  API.ref_VGPU
+)
+ident(
+  def a "records.ml" 1555 91801 91829 "records.ml" 1555 91801 91855
+)
+"records.ml" 1555 91801 91823 "records.ml" 1555 91801 91824
+type(
+  API.vGPU_t
+)
+ident(
+  def b "records.ml" 1555 91801 91829 "records.ml" 1555 91801 91855
+)
+"records.ml" 1555 91801 91820 "records.ml" 1555 91801 91825
+type(
+  API.ref_VGPU * API.vGPU_t
+)
+"records.ml" 1555 91801 91829 "records.ml" 1555 91801 91833
+type(
+  API.ref_VGPU ref
+)
+ident(
+  int_ref _ref "records.ml" 1549 91567 91572 "records.ml" 1549 91567 91576
+)
+"records.ml" 1555 91801 91834 "records.ml" 1555 91801 91836
+type(
+  API.ref_VGPU ref -> API.ref_VGPU -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1555 91801 91837 "records.ml" 1555 91801 91838
+type(
+  API.ref_VGPU
+)
+ident(
+  int_ref a "records.ml" 1555 91801 91821 "records.ml" 1555 91801 91822
+)
+"records.ml" 1555 91801 91829 "records.ml" 1555 91801 91838
+type(
+  unit
+)
+"records.ml" 1555 91801 91840 "records.ml" 1555 91801 91846
+type(
+  API.vGPU_t lzy ref
+)
+ident(
+  int_ref record "records.ml" 1551 91676 91681 "records.ml" 1551 91676 91687
+)
+"records.ml" 1555 91801 91847 "records.ml" 1555 91801 91849
+type(
+  API.vGPU_t lzy ref -> API.vGPU_t lzy -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"records.ml" 1555 91801 91854 "records.ml" 1555 91801 91855
+type(
+  API.vGPU_t
+)
+ident(
+  int_ref b "records.ml" 1555 91801 91823 "records.ml" 1555 91801 91824
+)
+"records.ml" 1555 91801 91850 "records.ml" 1555 91801 91855
+type(
+  API.vGPU_t lzy
+)
+"records.ml" 1555 91801 91840 "records.ml" 1555 91801 91855
+type(
+  unit
+)
+"records.ml" 1555 91801 91829 "records.ml" 1555 91801 91855
+type(
+  unit
+)
+"records.ml" 1555 91801 91815 "records.ml" 1555 91801 91856
+type(
+  API.ref_VGPU * API.vGPU_t -> unit
+)
+"records.ml" 1556 91858 91869 "records.ml" 1556 91858 91870
+type(
+  unit -> API.vGPU_t
+)
+ident(
+  int_ref x "records.ml" 1552 91710 91715 "records.ml" 1552 91710 91716
+)
+"records.ml" 1557 91872 91888 "records.ml" 1557 91872 91890
+type(
+  unit
+)
+"records.ml" 1557 91872 91894 "records.ml" 1557 91872 91895
+type(
+  API.ref_VGPU ref -> API.ref_VGPU
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"records.ml" 1557 91872 91895 "records.ml" 1557 91872 91899
+type(
+  API.ref_VGPU ref
+)
+ident(
+  int_ref _ref "records.ml" 1549 91567 91572 "records.ml" 1549 91567 91576
+)
+"records.ml" 1557 91872 91894 "records.ml" 1557 91872 91899
+type(
+  API.ref_VGPU
+)
+"records.ml" 1557 91872 91883 "records.ml" 1557 91872 91900
+type(
+  unit -> API.ref_VGPU
+)
+"records.ml" 1559 91915 91918 "records.ml" 1559 91915 91928
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1559 91915 91935 "records.ml" 1559 91915 91941
+type(
+  string
+)
+"records.ml" 1559 91915 91952 "records.ml" 1559 91915 91954
+type(
+  unit
+)
+"records.ml" 1559 91915 91959 "records.ml" 1559 91915 91960
+type(
+  unit -> API.vGPU_t
+)
+ident(
+  int_ref x "records.ml" 1552 91710 91715 "records.ml" 1552 91710 91716
+)
+"records.ml" 1559 91915 91961 "records.ml" 1559 91915 91963
+type(
+  unit
+)
+"records.ml" 1559 91915 91958 "records.ml" 1559 91915 91964
+type(
+  API.vGPU_t
+)
+"records.ml" 1559 91915 91958 "records.ml" 1559 91915 91978
+type(
+  string
+)
+"records.ml" 1559 91915 91947 "records.ml" 1559 91915 91979
+type(
+  unit -> string
+)
+"records.ml" 1559 91915 91980 "records.ml" 1559 91915 91982
+type(
+  unit
+)
+"records.ml" 1559 91915 91918 "records.ml" 1559 91915 91982
+type(
+  field
+)
+"records.ml" 1560 91984 91987 "records.ml" 1560 91984 91997
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1560 91984 92004 "records.ml" 1560 91984 92013
+type(
+  string
+)
+"records.ml" 1560 91984 92024 "records.ml" 1560 91984 92026
+type(
+  unit
+)
+"records.ml" 1560 91984 92030 "records.ml" 1560 91984 92047
+type(
+  API.ref_VM -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1560 91984 92049 "records.ml" 1560 91984 92050
+type(
+  unit -> API.vGPU_t
+)
+ident(
+  int_ref x "records.ml" 1552 91710 91715 "records.ml" 1552 91710 91716
+)
+"records.ml" 1560 91984 92051 "records.ml" 1560 91984 92053
+type(
+  unit
+)
+"records.ml" 1560 91984 92048 "records.ml" 1560 91984 92054
+type(
+  API.vGPU_t
+)
+"records.ml" 1560 91984 92048 "records.ml" 1560 91984 92066
+type(
+  API.ref_VM
+)
+"records.ml" 1560 91984 92030 "records.ml" 1560 91984 92066
+type(
+  string
+)
+"records.ml" 1560 91984 92019 "records.ml" 1560 91984 92067
+type(
+  unit -> string
+)
+"records.ml" 1560 91984 92068 "records.ml" 1560 91984 92070
+type(
+  unit
+)
+"records.ml" 1560 91984 91987 "records.ml" 1560 91984 92070
+type(
+  field
+)
+"records.ml" 1561 92072 92075 "records.ml" 1561 92072 92085
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1561 92072 92092 "records.ml" 1561 92072 92107
+type(
+  string
+)
+"records.ml" 1561 92072 92118 "records.ml" 1561 92072 92120
+type(
+  unit
+)
+"records.ml" 1561 92072 92124 "records.ml" 1561 92072 92141
+type(
+  API.ref_VM -> string
+)
+ident(
+  int_ref get_name_from_ref "records.ml" 103 3658 3662 "records.ml" 103 3658 3679
+)
+"records.ml" 1561 92072 92143 "records.ml" 1561 92072 92144
+type(
+  unit -> API.vGPU_t
+)
+ident(
+  int_ref x "records.ml" 1552 91710 91715 "records.ml" 1552 91710 91716
+)
+"records.ml" 1561 92072 92145 "records.ml" 1561 92072 92147
+type(
+  unit
+)
+"records.ml" 1561 92072 92142 "records.ml" 1561 92072 92148
+type(
+  API.vGPU_t
+)
+"records.ml" 1561 92072 92142 "records.ml" 1561 92072 92160
+type(
+  API.ref_VM
+)
+"records.ml" 1561 92072 92124 "records.ml" 1561 92072 92160
+type(
+  string
+)
+"records.ml" 1561 92072 92113 "records.ml" 1561 92072 92161
+type(
+  unit -> string
+)
+"records.ml" 1561 92072 92162 "records.ml" 1561 92072 92164
+type(
+  unit
+)
+"records.ml" 1561 92072 92075 "records.ml" 1561 92072 92164
+type(
+  field
+)
+"records.ml" 1562 92166 92169 "records.ml" 1562 92166 92179
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1562 92166 92186 "records.ml" 1562 92166 92202
+type(
+  string
+)
+"records.ml" 1562 92166 92213 "records.ml" 1562 92166 92215
+type(
+  unit
+)
+"records.ml" 1562 92166 92223 "records.ml" 1562 92166 92240
+type(
+  API.ref_GPU_group -> string
+)
+ident(
+  int_ref get_uuid_from_ref "records.ml" 96 3478 3482 "records.ml" 96 3478 3499
+)
+"records.ml" 1562 92166 92242 "records.ml" 1562 92166 92243
+type(
+  unit -> API.vGPU_t
+)
+ident(
+  int_ref x "records.ml" 1552 91710 91715 "records.ml" 1552 91710 91716
+)
+"records.ml" 1562 92166 92244 "records.ml" 1562 92166 92246
+type(
+  unit
+)
+"records.ml" 1562 92166 92241 "records.ml" 1562 92166 92247
+type(
+  API.vGPU_t
+)
+"records.ml" 1562 92166 92241 "records.ml" 1562 92166 92266
+type(
+  API.ref_GPU_group
+)
+"records.ml" 1562 92166 92223 "records.ml" 1562 92166 92266
+type(
+  string
+)
+"records.ml" 1562 92166 92272 "records.ml" 1562 92166 92273
+type(
+  exn
+)
+"records.ml" 1562 92166 92277 "records.ml" 1562 92166 92280
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 1562 92166 92219 "records.ml" 1562 92166 92280
+type(
+  string
+)
+"records.ml" 1562 92166 92208 "records.ml" 1562 92166 92281
+type(
+  unit -> string
+)
+"records.ml" 1562 92166 92282 "records.ml" 1562 92166 92284
+type(
+  unit
+)
+"records.ml" 1562 92166 92169 "records.ml" 1562 92166 92284
+type(
+  field
+)
+"records.ml" 1563 92286 92289 "records.ml" 1563 92286 92299
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1563 92286 92306 "records.ml" 1563 92286 92328
+type(
+  string
+)
+"records.ml" 1563 92286 92339 "records.ml" 1563 92286 92341
+type(
+  unit
+)
+"records.ml" 1563 92286 92349 "records.ml" 1563 92286 92366
+type(
+  API.ref_GPU_group -> string
+)
+ident(
+  int_ref get_name_from_ref "records.ml" 103 3658 3662 "records.ml" 103 3658 3679
+)
+"records.ml" 1563 92286 92368 "records.ml" 1563 92286 92369
+type(
+  unit -> API.vGPU_t
+)
+ident(
+  int_ref x "records.ml" 1552 91710 91715 "records.ml" 1552 91710 91716
+)
+"records.ml" 1563 92286 92370 "records.ml" 1563 92286 92372
+type(
+  unit
+)
+"records.ml" 1563 92286 92367 "records.ml" 1563 92286 92373
+type(
+  API.vGPU_t
+)
+"records.ml" 1563 92286 92367 "records.ml" 1563 92286 92392
+type(
+  API.ref_GPU_group
+)
+"records.ml" 1563 92286 92349 "records.ml" 1563 92286 92392
+type(
+  string
+)
+"records.ml" 1563 92286 92398 "records.ml" 1563 92286 92399
+type(
+  exn
+)
+"records.ml" 1563 92286 92403 "records.ml" 1563 92286 92406
+type(
+  string
+)
+ident(
+  int_ref nid "records.ml" 23 749 753 "records.ml" 23 749 756
+)
+"records.ml" 1563 92286 92345 "records.ml" 1563 92286 92406
+type(
+  string
+)
+"records.ml" 1563 92286 92334 "records.ml" 1563 92286 92407
+type(
+  unit -> string
+)
+"records.ml" 1563 92286 92408 "records.ml" 1563 92286 92410
+type(
+  unit
+)
+"records.ml" 1563 92286 92289 "records.ml" 1563 92286 92410
+type(
+  field
+)
+"records.ml" 1564 92412 92415 "records.ml" 1564 92412 92425
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> (string * string) list) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1564 92412 92432 "records.ml" 1564 92412 92452
+type(
+  string
+)
+"records.ml" 1564 92412 92463 "records.ml" 1564 92412 92465
+type(
+  unit
+)
+"records.ml" 1564 92412 92469 "records.ml" 1564 92412 92483
+type(
+  bool -> string
+)
+ident(
+  ext_ref Pervasives.string_of_bool
+)
+"records.ml" 1564 92412 92485 "records.ml" 1564 92412 92486
+type(
+  unit -> API.vGPU_t
+)
+ident(
+  int_ref x "records.ml" 1552 91710 91715 "records.ml" 1552 91710 91716
+)
+"records.ml" 1564 92412 92487 "records.ml" 1564 92412 92489
+type(
+  unit
+)
+"records.ml" 1564 92412 92484 "records.ml" 1564 92412 92490
+type(
+  API.vGPU_t
+)
+"records.ml" 1564 92412 92484 "records.ml" 1564 92412 92518
+type(
+  bool
+)
+"records.ml" 1564 92412 92469 "records.ml" 1564 92412 92518
+type(
+  string
+)
+"records.ml" 1564 92412 92458 "records.ml" 1564 92412 92519
+type(
+  unit -> string
+)
+"records.ml" 1564 92412 92520 "records.ml" 1564 92412 92522
+type(
+  unit
+)
+"records.ml" 1564 92412 92415 "records.ml" 1564 92412 92522
+type(
+  field
+)
+"records.ml" 1565 92524 92527 "records.ml" 1565 92524 92537
+type(
+  ?add_to_set:(string -> unit) ->
+  ?remove_from_set:(string -> unit) ->
+  ?add_to_map:(string -> string -> unit) ->
+  ?remove_from_map:(string -> unit) ->
+  ?set:(string -> unit) ->
+  ?get_set:(unit -> string list) ->
+  ?get_map:(unit -> API.string_to_string_map) ->
+  ?expensive:bool ->
+  ?hidden:bool ->
+  ?deprecated:bool ->
+  ?case_insensitive:bool ->
+  name:string -> get:(unit -> string) -> unit -> field
+)
+ident(
+  int_ref make_field "records.ml" 57 1941 1945 "records.ml" 57 1941 1955
+)
+"records.ml" 1565 92524 92544 "records.ml" 1565 92524 92558
+type(
+  string
+)
+"records.ml" 1565 92524 92569 "records.ml" 1565 92524 92571
+type(
+  unit
+)
+"records.ml" 1565 92524 92575 "records.ml" 1565 92524 92601
+type(
+  string -> API.string_to_string_map -> string
+)
+ident(
+  ext_ref Record_util.s2sm_to_string
+)
+"records.ml" 1565 92524 92602 "records.ml" 1565 92524 92606
+type(
+  string
+)
+"records.ml" 1565 92524 92608 "records.ml" 1565 92524 92609
+type(
+  unit -> API.vGPU_t
+)
+ident(
+  int_ref x "records.ml" 1552 91710 91715 "records.ml" 1552 91710 91716
+)
+"records.ml" 1565 92524 92610 "records.ml" 1565 92524 92612
+type(
+  unit
+)
+"records.ml" 1565 92524 92607 "records.ml" 1565 92524 92613
+type(
+  API.vGPU_t
+)
+"records.ml" 1565 92524 92607 "records.ml" 1565 92524 92635
+type(
+  API.string_to_string_map
+)
+"records.ml" 1565 92524 92575 "records.ml" 1565 92524 92635
+type(
+  string
+)
+"records.ml" 1565 92524 92564 "records.ml" 1565 92524 92636
+type(
+  unit -> string
+)
+"records.ml" 1566 92637 92658 "records.ml" 1566 92637 92659
+type(
+  string
+)
+ident(
+  def k "records.ml" 1566 92637 92660 "records.ml" 1566 92637 92720
+)
+"records.ml" 1566 92637 92660 "records.ml" 1566 92637 92661
+type(
+  string
+)
+ident(
+  def v "records.ml" 1566 92637 92665 "records.ml" 1566 92637 92720
+)
+"records.ml" 1566 92637 92665 "records.ml" 1566 92637 92696
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session ->
+  self:API.ref_VGPU -> key:string -> value:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VGPU ).add_to_other_config
+)
+"records.ml" 1566 92637 92697 "records.ml" 1566 92637 92700
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1548 91529 91545 "records.ml" 1548 91529 91548
+)
+"records.ml" 1566 92637 92701 "records.ml" 1566 92637 92711
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1548 91529 91549 "records.ml" 1548 91529 91559
+)
+"records.ml" 1566 92637 92712 "records.ml" 1566 92637 92716
+type(
+  API.ref_VGPU
+)
+ident(
+  int_ref vgpu "records.ml" 1548 91529 91560 "records.ml" 1548 91529 91564
+)
+"records.ml" 1566 92637 92717 "records.ml" 1566 92637 92718
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 1566 92637 92658 "records.ml" 1566 92637 92659
+)
+"records.ml" 1566 92637 92719 "records.ml" 1566 92637 92720
+type(
+  string
+)
+ident(
+  int_ref v "records.ml" 1566 92637 92660 "records.ml" 1566 92637 92661
+)
+"records.ml" 1566 92637 92665 "records.ml" 1566 92637 92720
+type(
+  unit
+)
+"records.ml" 1566 92637 92653 "records.ml" 1566 92637 92721
+type(
+  string -> string -> unit
+)
+"records.ml" 1567 92722 92748 "records.ml" 1567 92722 92749
+type(
+  string
+)
+ident(
+  def k "records.ml" 1567 92722 92753 "records.ml" 1567 92722 92811
+)
+"records.ml" 1567 92722 92753 "records.ml" 1567 92722 92789
+type(
+  rpc:(XMLRPC.xmlrpc -> XMLRPC.xmlrpc) ->
+  session_id:API.ref_session -> self:API.ref_VGPU -> key:string -> unit
+)
+ident(
+  ext_ref Client.( Client ).( VGPU ).remove_from_other_config
+)
+"records.ml" 1567 92722 92790 "records.ml" 1567 92722 92793
+type(
+  XMLRPC.xmlrpc -> XMLRPC.xmlrpc
+)
+ident(
+  int_ref rpc "records.ml" 1548 91529 91545 "records.ml" 1548 91529 91548
+)
+"records.ml" 1567 92722 92794 "records.ml" 1567 92722 92804
+type(
+  API.ref_session
+)
+ident(
+  int_ref session_id "records.ml" 1548 91529 91549 "records.ml" 1548 91529 91559
+)
+"records.ml" 1567 92722 92805 "records.ml" 1567 92722 92809
+type(
+  API.ref_VGPU
+)
+ident(
+  int_ref vgpu "records.ml" 1548 91529 91560 "records.ml" 1548 91529 91564
+)
+"records.ml" 1567 92722 92810 "records.ml" 1567 92722 92811
+type(
+  string
+)
+ident(
+  int_ref k "records.ml" 1567 92722 92748 "records.ml" 1567 92722 92749
+)
+"records.ml" 1567 92722 92753 "records.ml" 1567 92722 92811
+type(
+  unit
+)
+"records.ml" 1567 92722 92743 "records.ml" 1567 92722 92812
+type(
+  string -> unit
+)
+"records.ml" 1568 92813 92831 "records.ml" 1568 92813 92833
+type(
+  unit
+)
+"records.ml" 1568 92813 92838 "records.ml" 1568 92813 92839
+type(
+  unit -> API.vGPU_t
+)
+ident(
+  int_ref x "records.ml" 1552 91710 91715 "records.ml" 1552 91710 91716
+)
+"records.ml" 1568 92813 92840 "records.ml" 1568 92813 92842
+type(
+  unit
+)
+"records.ml" 1568 92813 92837 "records.ml" 1568 92813 92843
+type(
+  API.vGPU_t
+)
+"records.ml" 1568 92813 92837 "records.ml" 1568 92813 92865
+type(
+  API.string_to_string_map
+)
+"records.ml" 1568 92813 92826 "records.ml" 1568 92813 92866
+type(
+  unit -> API.string_to_string_map
+)
+"records.ml" 1568 92813 92867 "records.ml" 1568 92813 92869
+type(
+  unit
+)
+"records.ml" 1565 92524 92527 "records.ml" 1568 92813 92869
+type(
+  field
+)
+"records.ml" 1558 91902 91913 "records.ml" 1569 92871 92875
+type(
+  field list
+)
+"records.ml" 1553 91740 91741 "records.ml" 1570 92876 92878
+type(
+  ([ `VGPU ], API.vGPU_t) record
+)
+"records.ml" 1552 91710 91711 "records.ml" 1570 92876 92878
+type(
+  ([ `VGPU ], API.vGPU_t) record
+)
+"records.ml" 1551 91676 91677 "records.ml" 1570 92876 92878
+type(
+  ([ `VGPU ], API.vGPU_t) record
+)
+"records.ml" 1550 91591 91592 "records.ml" 1570 92876 92878
+type(
+  ([ `VGPU ], API.vGPU_t) record
+)
+"records.ml" 1549 91567 91568 "records.ml" 1570 92876 92878
+type(
+  ([ `VGPU ], API.vGPU_t) record
+)
--- /dev/null
+++ xen-api-0.1/ocaml/idl/js_backend/api.js
@@ -0,0 +1,2044 @@
+var messages={"session.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given session."},
+"session.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class session"},
+"session.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the sessions known to the system."},
+"session.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the session instance with the specified UUID."},
+"session.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"session"},doc:"All constructor arguments"}],doc:"Create a new session instance, and return its handle."},
+"session.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Destroy the specified session instance."},
+"session.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the uuid field of the given session."},
+"session.get_this_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the this_host field of the given session."},
+"session.get_this_user":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the this_user field of the given session."},
+"session.get_last_active":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the last_active field of the given session."},
+"session.get_pool":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the pool field of the given session."},
+"session.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the other_config field of the given session."},
+"session.get_is_local_superuser":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the is_local_superuser field of the given session."},
+"session.get_subject":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the subject field of the given session."},
+"session.get_validation_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the validation_time field of the given session."},
+"session.get_auth_user_sid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the auth_user_sid field of the given session."},
+"session.get_auth_user_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the auth_user_name field of the given session."},
+"session.get_rbac_permissions":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the rbac_permissions field of the given session."},
+"session.get_tasks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the tasks field of the given session."},
+"session.get_parent":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the parent field of the given session."},
+"session.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given session."},
+"session.set_this_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the this_host field of the given session."},
+"session.set_this_user":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"user"},doc:"New value to set"}],doc:"Set the this_user field of the given session."},
+"session.set_last_active":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the last_active field of the given session."},
+"session.set_pool":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the pool field of the given session."},
+"session.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given session."},
+"session.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given session."},
+"session.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given session.  If the key is not in that Map, then do nothing."},
+"session.set_is_local_superuser":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the is_local_superuser field of the given session."},
+"session.set_subject":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"subject"},doc:"New value to set"}],doc:"Set the subject field of the given session."},
+"session.set_validation_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the validation_time field of the given session."},
+"session.set_auth_user_sid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the auth_user_sid field of the given session."},
+"session.set_auth_user_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the auth_user_name field of the given session."},
+"session.set_rbac_permissions":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the rbac_permissions field of the given session."},
+"session.add_rbac_permissions":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the rbac_permissions field of the given session.  If the value is already in that Set, then do nothing."},
+"session.remove_rbac_permissions":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the rbac_permissions field of the given session.  If the value is not in that Set, then do nothing."},
+"session.set_parent":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"session"},doc:"New value to set"}],doc:"Set the parent field of the given session."},
+"session.login_with_password":{params:[{name:"uname",ty:{ty:"string"},doc:"Username for login."},{name:"pwd",ty:{ty:"string"},doc:"Password for login."},{name:"version",ty:{ty:"string"},doc:"Client API version."}],doc:"Attempt to authenticate the user, returning a session reference if successful"},
+"session.logout":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Log out of a session"},
+"session.change_password":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"old_pwd",ty:{ty:"string"},doc:"Old password for account"},{name:"new_pwd",ty:{ty:"string"},doc:"New password for account"}],doc:"Change the account password; if your session is authenticated with root priviledges then the old_pwd is validated and the new_pwd is set regardless"},
+"session.slave_login":{params:[{name:"host",ty:{ty:"ref",class:"host"},doc:"Host id of slave"},{name:"psecret",ty:{ty:"string"},doc:"Pool secret"}],doc:"Attempt to authenticate to the pool master by presenting the slave's host ref and pool secret"},
+"session.slave_local_login":{params:[{name:"psecret",ty:{ty:"string"},doc:"Pool secret"}],doc:"Authenticate locally against a slave in emergency mode. Note the resulting sessions are only good for use on this host."},
+"session.slave_local_login_with_password":{params:[{name:"uname",ty:{ty:"string"},doc:"Username for login."},{name:"pwd",ty:{ty:"string"},doc:"Password for login."}],doc:"Authenticate locally against a slave in emergency mode. Note the resulting sessions are only good for use on this host."},
+"session.local_logout":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Log out of local session."},
+"session.get_all_subject_identifiers":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the user subject-identifiers of all existing sessions"},
+"session.logout_subject_identifier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"subject_identifier",ty:{ty:"string"},doc:"User subject-identifier of the sessions to be destroyed"}],doc:"Log out all sessions associated to a user subject-identifier, except the session associated with the context calling this function"},
+"auth.get_subject_identifier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"subject_name",ty:{ty:"string"},doc:"The human-readable subject_name, such as a username or a groupname"}],doc:"This call queries the external directory service to obtain the subject_identifier as a string from the human-readable subject_name"},
+"auth.get_subject_information_from_identifier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"subject_identifier",ty:{ty:"string"},doc:"A string containing the subject_identifier, unique in the external directory service"}],doc:"This call queries the external directory service to obtain the user information (e.g. username, organization etc) from the specified subject_identifier"},
+"auth.get_group_membership":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"subject_identifier",ty:{ty:"string"},doc:"A string containing the subject_identifier, unique in the external directory service"}],doc:"This calls queries the external directory service to obtain the transitively-closed set of groups that the the subject_identifier is member of."},
+"subject.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given subject."},
+"subject.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class subject"},
+"subject.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the subjects known to the system."},
+"subject.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the subject instance with the specified UUID."},
+"subject.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"subject"},doc:"All constructor arguments"}],doc:"Create a new subject instance, and return its handle."},
+"subject.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"}],doc:"Destroy the specified subject instance."},
+"subject.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"}],doc:"Get the uuid field of the given subject."},
+"subject.get_subject_identifier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"}],doc:"Get the subject_identifier field of the given subject."},
+"subject.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"}],doc:"Get the other_config field of the given subject."},
+"subject.get_roles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"}],doc:"Get the roles field of the given subject."},
+"subject.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given subject."},
+"subject.set_subject_identifier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the subject_identifier field of the given subject."},
+"subject.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given subject."},
+"subject.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given subject."},
+"subject.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given subject.  If the key is not in that Map, then do nothing."},
+"subject.set_roles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"ref",class:"role"}},doc:"New value to set"}],doc:"Set the roles field of the given subject."},
+"subject.add_roles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"role"},doc:"New value to add"}],doc:"Add the given value to the roles field of the given subject.  If the value is already in that Set, then do nothing."},
+"subject.remove_roles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"role"},doc:"Value to remove"}],doc:"Remove the given value from the roles field of the given subject.  If the value is not in that Set, then do nothing."},
+"subject.add_to_roles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"The subject who we want to add the role to"},{name:"role",ty:{ty:"ref",class:"role"},doc:"The unique role reference"}],doc:"This call adds a new role to a subject"},
+"subject.remove_from_roles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"The subject from whom we want to remove the role"},{name:"role",ty:{ty:"ref",class:"role"},doc:"The unique role reference in the subject's roles field"}],doc:"This call removes a role from a subject"},
+"subject.get_permissions_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"The subject whose permissions will be retrieved"}],doc:"This call returns a list of permission names given a subject"},
+"subject.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the subjects known to the system."},
+"subject.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the subjects known to the system."},
+"subject.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of subject references to subject records for all subjects known to the system."},
+"role.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given role."},
+"role.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class role"},
+"role.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the roles known to the system."},
+"role.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the role instance with the specified UUID."},
+"role.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"role"},doc:"All constructor arguments"}],doc:"Create a new role instance, and return its handle."},
+"role.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"reference to the object"}],doc:"Destroy the specified role instance."},
+"role.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the role instances with the given label."},
+"role.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"reference to the object"}],doc:"Get the uuid field of the given role."},
+"role.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"reference to the object"}],doc:"Get the name/label field of the given role."},
+"role.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"reference to the object"}],doc:"Get the name/description field of the given role."},
+"role.get_subroles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"reference to the object"}],doc:"Get the subroles field of the given role."},
+"role.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given role."},
+"role.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given role."},
+"role.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given role."},
+"role.set_subroles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"ref",class:"role"}},doc:"New value to set"}],doc:"Set the subroles field of the given role."},
+"role.add_subroles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"role"},doc:"New value to add"}],doc:"Add the given value to the subroles field of the given role.  If the value is already in that Set, then do nothing."},
+"role.remove_subroles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"role"},doc:"Value to remove"}],doc:"Remove the given value from the subroles field of the given role.  If the value is not in that Set, then do nothing."},
+"role.get_permissions":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"a reference to a role"}],doc:"This call returns a list of permissions given a role"},
+"role.get_permissions_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"role"},doc:"a reference to a role"}],doc:"This call returns a list of permission names given a role"},
+"role.get_by_permission":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"permission",ty:{ty:"ref",class:"role"},doc:"a reference to a permission"}],doc:"This call returns a list of roles given a permission"},
+"role.get_by_permission_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"The short friendly name of the role"}],doc:"This call returns a list of roles given a permission name"},
+"role.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the roles known to the system."},
+"role.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the roles known to the system."},
+"role.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of role references to role records for all roles known to the system."},
+"task.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given task."},
+"task.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class task"},
+"task.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the tasks known to the system."},
+"task.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the task instance with the specified UUID."},
+"task.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"task"},doc:"All constructor arguments"}],doc:"Create a new task instance, and return its handle."},
+"task.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Destroy the specified task instance."},
+"task.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the task instances with the given label."},
+"task.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the uuid field of the given task."},
+"task.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the name/label field of the given task."},
+"task.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the name/description field of the given task."},
+"task.get_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the allowed_operations field of the given task."},
+"task.get_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the current_operations field of the given task."},
+"task.get_created":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the created field of the given task."},
+"task.get_finished":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the finished field of the given task."},
+"task.get_status":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the status field of the given task."},
+"task.get_session":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the session field of the given task."},
+"task.get_resident_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the resident_on field of the given task."},
+"task.get_progress":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the progress field of the given task."},
+"task.get_externalpid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the externalpid field of the given task."},
+"task.get_stunnelpid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the stunnelpid field of the given task."},
+"task.get_forwarded":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the forwarded field of the given task."},
+"task.get_forwarded_to":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the forwarded_to field of the given task."},
+"task.get_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the type field of the given task."},
+"task.get_result":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the result field of the given task."},
+"task.get_error_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the error_info field of the given task."},
+"task.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the other_config field of the given task."},
+"task.get_subtask_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the subtask_of field of the given task."},
+"task.get_subtasks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the subtasks field of the given task."},
+"task.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given task."},
+"task.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given task."},
+"task.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given task."},
+"task.set_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"task_allowed_operations",values:["cancel"]}},doc:"New value to set"}],doc:"Set the allowed_operations field of the given task."},
+"task.add_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"task_allowed_operations",values:["cancel"]},doc:"New value to add"}],doc:"Add the given value to the allowed_operations field of the given task.  If the value is already in that Set, then do nothing."},
+"task.remove_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"task_allowed_operations",values:["cancel"]},doc:"Value to remove"}],doc:"Remove the given value from the allowed_operations field of the given task.  If the value is not in that Set, then do nothing."},
+"task.set_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"enum",name:"task_allowed_operations",values:["cancel"]}},doc:"New value to set"}],doc:"Set the current_operations field of the given task."},
+"task.add_to_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"enum",name:"task_allowed_operations",values:["cancel"]},doc:"Value to add"}],doc:"Add the given key-value pair to the current_operations field of the given task."},
+"task.remove_from_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the current_operations field of the given task.  If the key is not in that Map, then do nothing."},
+"task.set_created":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the created field of the given task."},
+"task.set_finished":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the finished field of the given task."},
+"task.set_status":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"task_status_type",values:["pending","success","failure","cancelling","cancelled"]},doc:"New value to set"}],doc:"Set the status field of the given task."},
+"task.set_session":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"session"},doc:"New value to set"}],doc:"Set the session field of the given task."},
+"task.set_resident_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the resident_on field of the given task."},
+"task.set_progress":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the progress field of the given task."},
+"task.set_externalpid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the externalpid field of the given task."},
+"task.set_stunnelpid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the stunnelpid field of the given task."},
+"task.set_forwarded":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the forwarded field of the given task."},
+"task.set_forwarded_to":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the forwarded_to field of the given task."},
+"task.set_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the type field of the given task."},
+"task.set_result":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the result field of the given task."},
+"task.set_error_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the error_info field of the given task."},
+"task.add_error_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the error_info field of the given task.  If the value is already in that Set, then do nothing."},
+"task.remove_error_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the error_info field of the given task.  If the value is not in that Set, then do nothing."},
+"task.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given task."},
+"task.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given task."},
+"task.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given task.  If the key is not in that Map, then do nothing."},
+"task.set_subtask_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"task"},doc:"New value to set"}],doc:"Set the subtask_of field of the given task."},
+"task.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"short label for the new task"},{name:"description",ty:{ty:"string"},doc:"longer description for the new task"}],doc:"Create a new task object which must be manually destroyed."},
+"task.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"Reference to the task object"}],doc:"Destroy the task object"},
+"task.cancel":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"task",ty:{ty:"ref",class:"task"},doc:"The task"}],doc:"Request that a task be cancelled. Note that a task may fail to be cancelled and may complete or fail normally and note that, even when a task does cancel, it might take an arbitrary amount of time."},
+"task.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the tasks known to the system."},
+"task.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the tasks known to the system."},
+"task.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of task references to task records for all tasks known to the system."},
+"event.register":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"classes",ty:{ty:"set",contents:{ty:"string"}},doc:"register for events for the indicated classes"}],doc:"Registers this session with the event system.  Specifying the empty list will register for all classes."},
+"event.unregister":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"classes",ty:{ty:"set",contents:{ty:"string"}},doc:"remove this session's registration for the indicated classes"}],doc:"Unregisters this session with the event system"},
+"event.next":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Blocking call which returns a (possibly empty) batch of events"},
+"event.from":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"classes",ty:{ty:"set",contents:{ty:"string"}},doc:"register for events for the indicated classes"},{name:"token",ty:{ty:"string"},doc:"A token representing the point from which to generate database events. The empty string represents the beginning."},{name:"timeout",ty:{ty:"float"},doc:"Return after this many seconds if no events match"}],doc:"Blocking call which returns a (possibly empty) batch of events"},
+"event.get_current_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return the ID of the next event to be generated by the system"},
+"pool.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given pool."},
+"pool.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class pool"},
+"pool.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the pools known to the system."},
+"pool.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the pool instance with the specified UUID."},
+"pool.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"pool"},doc:"All constructor arguments"}],doc:"Create a new pool instance, and return its handle."},
+"pool.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Destroy the specified pool instance."},
+"pool.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the uuid field of the given pool."},
+"pool.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the name_label field of the given pool."},
+"pool.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the name_description field of the given pool."},
+"pool.get_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the master field of the given pool."},
+"pool.get_default_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the default_SR field of the given pool."},
+"pool.get_suspend_image_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the suspend_image_SR field of the given pool."},
+"pool.get_crash_dump_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the crash_dump_SR field of the given pool."},
+"pool.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the other_config field of the given pool."},
+"pool.get_ha_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the ha_enabled field of the given pool."},
+"pool.get_ha_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the ha_configuration field of the given pool."},
+"pool.get_ha_statefiles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the ha_statefiles field of the given pool."},
+"pool.get_ha_host_failures_to_tolerate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the ha_host_failures_to_tolerate field of the given pool."},
+"pool.get_ha_plan_exists_for":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the ha_plan_exists_for field of the given pool."},
+"pool.get_ha_allow_overcommit":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the ha_allow_overcommit field of the given pool."},
+"pool.get_ha_overcommitted":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the ha_overcommitted field of the given pool."},
+"pool.get_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the blobs field of the given pool."},
+"pool.get_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the tags field of the given pool."},
+"pool.get_gui_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the gui_config field of the given pool."},
+"pool.get_wlb_url":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the wlb_url field of the given pool."},
+"pool.get_wlb_username":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the wlb_username field of the given pool."},
+"pool.get_wlb_password":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the wlb_password field of the given pool."},
+"pool.get_wlb_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the wlb_enabled field of the given pool."},
+"pool.get_wlb_verify_cert":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the wlb_verify_cert field of the given pool."},
+"pool.get_redo_log_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the redo_log_enabled field of the given pool."},
+"pool.get_redo_log_vdi":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the redo_log_vdi field of the given pool."},
+"pool.get_vswitch_controller":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the vswitch_controller field of the given pool."},
+"pool.get_restrictions":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the restrictions field of the given pool."},
+"pool.get_metadata_VDIs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the metadata_VDIs field of the given pool."},
+"pool.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given pool."},
+"pool.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name_label field of the given pool."},
+"pool.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name_description field of the given pool."},
+"pool.set_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the master field of the given pool."},
+"pool.set_default_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"SR"},doc:"New value to set"}],doc:"Set the default_SR field of the given pool."},
+"pool.set_suspend_image_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"SR"},doc:"New value to set"}],doc:"Set the suspend_image_SR field of the given pool."},
+"pool.set_crash_dump_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"SR"},doc:"New value to set"}],doc:"Set the crash_dump_SR field of the given pool."},
+"pool.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given pool."},
+"pool.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given pool."},
+"pool.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given pool.  If the key is not in that Map, then do nothing."},
+"pool.set_ha_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the ha_enabled field of the given pool."},
+"pool.set_ha_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the ha_configuration field of the given pool."},
+"pool.add_to_ha_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the ha_configuration field of the given pool."},
+"pool.remove_from_ha_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the ha_configuration field of the given pool.  If the key is not in that Map, then do nothing."},
+"pool.set_ha_statefiles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the ha_statefiles field of the given pool."},
+"pool.add_ha_statefiles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the ha_statefiles field of the given pool.  If the value is already in that Set, then do nothing."},
+"pool.remove_ha_statefiles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the ha_statefiles field of the given pool.  If the value is not in that Set, then do nothing."},
+"pool.set_ha_host_failures_to_tolerate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the ha_host_failures_to_tolerate field of the given pool."},
+"pool.set_ha_plan_exists_for":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the ha_plan_exists_for field of the given pool."},
+"pool.set_ha_allow_overcommit":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the ha_allow_overcommit field of the given pool."},
+"pool.set_ha_overcommitted":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the ha_overcommitted field of the given pool."},
+"pool.set_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"ref",class:"blob"}},doc:"New value to set"}],doc:"Set the blobs field of the given pool."},
+"pool.add_to_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"ref",class:"blob"},doc:"Value to add"}],doc:"Add the given key-value pair to the blobs field of the given pool."},
+"pool.remove_from_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the blobs field of the given pool.  If the key is not in that Map, then do nothing."},
+"pool.set_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the tags field of the given pool."},
+"pool.add_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the tags field of the given pool.  If the value is already in that Set, then do nothing."},
+"pool.remove_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the tags field of the given pool.  If the value is not in that Set, then do nothing."},
+"pool.set_gui_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the gui_config field of the given pool."},
+"pool.add_to_gui_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the gui_config field of the given pool."},
+"pool.remove_from_gui_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the gui_config field of the given pool.  If the key is not in that Map, then do nothing."},
+"pool.set_wlb_url":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the wlb_url field of the given pool."},
+"pool.set_wlb_username":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the wlb_username field of the given pool."},
+"pool.set_wlb_password":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"secret"},doc:"New value to set"}],doc:"Set the wlb_password field of the given pool."},
+"pool.set_wlb_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the wlb_enabled field of the given pool."},
+"pool.set_wlb_verify_cert":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the wlb_verify_cert field of the given pool."},
+"pool.set_redo_log_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the redo_log_enabled field of the given pool."},
+"pool.set_redo_log_vdi":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VDI"},doc:"New value to set"}],doc:"Set the redo_log_vdi field of the given pool."},
+"pool.set_vswitch_controller":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the vswitch_controller field of the given pool."},
+"pool.set_restrictions":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the restrictions field of the given pool."},
+"pool.add_to_restrictions":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the restrictions field of the given pool."},
+"pool.remove_from_restrictions":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the restrictions field of the given pool.  If the key is not in that Map, then do nothing."},
+"pool.join":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"master_address",ty:{ty:"string"},doc:"The hostname of the master of the pool to join"},{name:"master_username",ty:{ty:"string"},doc:"The username of the master (for initial authentication)"},{name:"master_password",ty:{ty:"string"},doc:"The password for the master (for initial authentication)"}],doc:"Instruct host to join a new pool"},
+"pool.join_force":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"master_address",ty:{ty:"string"},doc:"The hostname of the master of the pool to join"},{name:"master_username",ty:{ty:"string"},doc:"The username of the master (for initial authentication)"},{name:"master_password",ty:{ty:"string"},doc:"The password for the master (for initial authentication)"}],doc:"Instruct host to join a new pool"},
+"pool.eject":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to eject"}],doc:"Instruct a pool master to eject a host from the pool"},
+"pool.initial_auth":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Internal use only"},
+"pool.emergency_transition_to_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Instruct host that's currently a slave to transition to being master"},
+"pool.emergency_reset_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"master_address",ty:{ty:"string"},doc:"The hostname of the master"}],doc:"Instruct a slave already in a pool that the master has changed"},
+"pool.recover_slaves":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Instruct a pool master, M, to try and contact its slaves and, if slaves are in emergency mode, reset their master address to M."},
+"pool.hello":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host_uuid",ty:{ty:"string"},doc:""},{name:"host_address",ty:{ty:"string"},doc:""}],doc:"Internal use only"},
+"pool.is_slave":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:""}],doc:"Internal use only"},
+"pool.create_VLAN":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"device",ty:{ty:"string"},doc:"physical interface on which to create the VLAN interface"},{name:"network",ty:{ty:"ref",class:"network"},doc:"network to which this interface should be connected"},{name:"VLAN",ty:{ty:"int"},doc:"VLAN tag for the new interface"}],doc:"Create PIFs, mapping a network to the same physical interface/VLAN on each host. This call is deprecated: use Pool.create_VLAN_from_PIF instead."},
+"pool.create_VLAN_from_PIF":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"pif",ty:{ty:"ref",class:"PIF"},doc:"physical interface on any particular host, that identifies the PIF on which to create the (pool-wide) VLAN interface"},{name:"network",ty:{ty:"ref",class:"network"},doc:"network to which this interface should be connected"},{name:"VLAN",ty:{ty:"int"},doc:"VLAN tag for the new interface"}],doc:"Create a pool-wide VLAN by taking the PIF."},
+"pool.slave_network_report":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"phydevs",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"(device,bridge) pairs of physical NICs on slave"},{name:"dev_to_mac",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"(device,mac) pairs of physical NICs on slave"},{name:"dev_to_mtu",ty:{ty:"map",keys:{ty:"string"},values:{ty:"int"}},doc:"(device,mtu) pairs of physical NICs on slave"},{name:"slave_host",ty:{ty:"ref",class:"host"},doc:"the host that the PIFs will be attached to when created"}],doc:"Internal use only"},
+"pool.enable_ha":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"heartbeat_srs",ty:{ty:"set",contents:{ty:"ref",class:"SR"}},doc:"Set of SRs to use for storage heartbeating."},{name:"configuration",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Detailed HA configuration to apply"}],doc:"Turn on High Availability mode"},
+"pool.disable_ha":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Turn off High Availability mode"},
+"pool.sync_database":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Forcibly synchronise the database now"},
+"pool.designate_new_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host who should become the new master"}],doc:"Perform an orderly handover of the role of master to the referenced host."},
+"pool.ha_prevent_restarts_for":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"seconds",ty:{ty:"int"},doc:"The number of seconds to block the restart thread for"}],doc:"When this call returns the VM restart logic will not run for the requested number of seconds. If the argument is zero then the restart thread is immediately unblocked"},
+"pool.ha_failover_plan_exists":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"n",ty:{ty:"int"},doc:"The number of host failures to plan for"}],doc:"Returns true if a VM failover plan exists for up to 'n' host failures"},
+"pool.ha_compute_max_host_failures_to_tolerate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Returns the maximum number of host failures we could tolerate before we would be unable to restart configured VMs"},
+"pool.ha_compute_hypothetical_max_host_failures_to_tolerate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"configuration",ty:{ty:"map",keys:{ty:"ref",class:"VM"},values:{ty:"string"}},doc:"Map of protected VM reference to restart priority"}],doc:"Returns the maximum number of host failures we could tolerate before we would be unable to restart the provided VMs"},
+"pool.ha_compute_vm_failover_plan":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"failed_hosts",ty:{ty:"set",contents:{ty:"ref",class:"host"}},doc:"The set of hosts to assume have failed"},{name:"failed_vms",ty:{ty:"set",contents:{ty:"ref",class:"VM"}},doc:"The set of VMs to restart"}],doc:"Return a VM failover plan assuming a given subset of hosts fail"},
+"pool.set_ha_host_failures_to_tolerate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"The pool"},{name:"value",ty:{ty:"int"},doc:"New number of host failures to consider"}],doc:"Set the maximum number of host failures to consider in the HA VM restart planner"},
+"pool.create_new_blob":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"pool",ty:{ty:"ref",class:"pool"},doc:"The pool"},{name:"name",ty:{ty:"string"},doc:"The name associated with the blob"},{name:"mime_type",ty:{ty:"string"},doc:"The mime type for the data. Empty string translates to application/octet-stream"}],doc:"Create a placeholder for a named binary blob of data that is associated with this pool"},
+"pool.ha_schedule_plan_recomputation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Signal that the plan should be recomputed (eg a host has come online)"},
+"pool.enable_binary_storage":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Enable the storage of larger objects, such as RRDs, messages and binary blobs across all hosts in the pool"},
+"pool.disable_binary_storage":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Disable the storage of larger objects, such as RRDs, messages and binary blobs across all hosts in the pool. This will destroy all of these objects where they exist."},
+"pool.enable_external_auth":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"pool",ty:{ty:"ref",class:"pool"},doc:"The pool whose external authentication should be enabled"},{name:"config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"A list of key-values containing the configuration data"},{name:"service_name",ty:{ty:"string"},doc:"The name of the service"},{name:"auth_type",ty:{ty:"string"},doc:"The type of authentication (e.g. AD for Active Directory)"}],doc:"This call enables external authentication on all the hosts of the pool"},
+"pool.disable_external_auth":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"pool",ty:{ty:"ref",class:"pool"},doc:"The pool whose external authentication should be disabled"},{name:"config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Optional parameters as a list of key-values containing the configuration data"}],doc:"This call disables external authentication on all the hosts of the pool"},
+"pool.detect_nonhomogeneous_external_auth":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"pool",ty:{ty:"ref",class:"pool"},doc:"The pool where to detect non-homogeneous external authentication configuration"}],doc:"This call asynchronously detects if the external authentication configuration in any slave is different from that in the master and raises appropriate alerts"},
+"pool.initialize_wlb":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"wlb_url",ty:{ty:"string"},doc:"The ip address and port to use when accessing the wlb server"},{name:"wlb_username",ty:{ty:"string"},doc:"The username used to authenticate with the wlb server"},{name:"wlb_password",ty:{ty:"string"},doc:"The password used to authenticate with the wlb server"},{name:"xenserver_username",ty:{ty:"string"},doc:"The usernamed used by the wlb server to authenticate with the xenserver"},{name:"xenserver_password",ty:{ty:"string"},doc:"The password used by the wlb server to authenticate with the xenserver"}],doc:"Initializes workload balancing monitoring on this pool with the specified wlb server"},
+"pool.deconfigure_wlb":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Permanently deconfigures workload balancing monitoring on this pool"},
+"pool.send_wlb_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"The configuration to use in optimizing this pool"}],doc:"Sets the pool optimization criteria for the workload balancing server"},
+"pool.retrieve_wlb_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Retrieves the pool optimization criteria from the workload balancing server"},
+"pool.retrieve_wlb_recommendations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Retrieves vm migrate recommendations for the pool from the workload balancing server"},
+"pool.send_test_post":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"string"},doc:""},{name:"port",ty:{ty:"int"},doc:""},{name:"body",ty:{ty:"string"},doc:""}],doc:"Send the given body to the given host and port, using HTTPS, and print the response.  This is used for debugging the SSL layer."},
+"pool.certificate_install":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"name",ty:{ty:"string"},doc:"A name to give the certificate"},{name:"cert",ty:{ty:"string"},doc:"The certificate"}],doc:"Install an SSL certificate pool-wide."},
+"pool.certificate_uninstall":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"name",ty:{ty:"string"},doc:"The certificate name"}],doc:"Remove an SSL certificate."},
+"pool.certificate_list":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"List all installed SSL certificates."},
+"pool.crl_install":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"name",ty:{ty:"string"},doc:"A name to give the CRL"},{name:"cert",ty:{ty:"string"},doc:"The CRL"}],doc:"Install an SSL certificate revocation list, pool-wide."},
+"pool.crl_uninstall":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"name",ty:{ty:"string"},doc:"The CRL name"}],doc:"Remove an SSL certificate revocation list."},
+"pool.crl_list":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"List all installed SSL certificate revocation lists."},
+"pool.certificate_sync":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Sync SSL certificates from master to slaves."},
+"pool.enable_redo_log":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"SR to hold the redo log."}],doc:"Enable the redo log on the given SR and start using it, unless HA is enabled."},
+"pool.disable_redo_log":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Disable the redo log if in use, unless HA is enabled."},
+"pool.audit_log_append":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"line",ty:{ty:"string"},doc:"line to be appended to the audit log"}],doc:"Append a line to the audit log on the master."},
+"pool.set_vswitch_controller":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"address",ty:{ty:"string"},doc:"IP address of the vswitch controller."}],doc:"Set the IP address of the vswitch controller."},
+"pool.test_archive_target":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"Reference to the pool"},{name:"config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Location config settings to test"}],doc:"This call tests if a location is valid"},
+"pool.enable_local_storage_caching":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"Reference to the pool"}],doc:"This call attempts to enable pool-wide local storage caching"},
+"pool.disable_local_storage_caching":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"Reference to the pool"}],doc:"This call disables pool-wide local storage caching"},
+"pool.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the pools known to the system."},
+"pool.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the pools known to the system."},
+"pool.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of pool references to pool records for all pools known to the system."},
+"pool_patch.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given pool_patch."},
+"pool_patch.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class pool_patch"},
+"pool_patch.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the pool_patchs known to the system."},
+"pool_patch.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the pool_patch instance with the specified UUID."},
+"pool_patch.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"pool_patch"},doc:"All constructor arguments"}],doc:"Create a new pool_patch instance, and return its handle."},
+"pool_patch.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Destroy the specified pool_patch instance."},
+"pool_patch.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the pool_patch instances with the given label."},
+"pool_patch.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the uuid field of the given pool_patch."},
+"pool_patch.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the name/label field of the given pool_patch."},
+"pool_patch.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the name/description field of the given pool_patch."},
+"pool_patch.get_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the version field of the given pool_patch."},
+"pool_patch.get_filename":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the filename field of the given pool_patch."},
+"pool_patch.get_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the size field of the given pool_patch."},
+"pool_patch.get_pool_applied":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the pool_applied field of the given pool_patch."},
+"pool_patch.get_host_patches":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the host_patches field of the given pool_patch."},
+"pool_patch.get_after_apply_guidance":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the after_apply_guidance field of the given pool_patch."},
+"pool_patch.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the other_config field of the given pool_patch."},
+"pool_patch.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given pool_patch."},
+"pool_patch.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given pool_patch."},
+"pool_patch.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given pool_patch."},
+"pool_patch.set_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the version field of the given pool_patch."},
+"pool_patch.set_filename":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the filename field of the given pool_patch."},
+"pool_patch.set_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the size field of the given pool_patch."},
+"pool_patch.set_pool_applied":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the pool_applied field of the given pool_patch."},
+"pool_patch.set_after_apply_guidance":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"after_apply_guidance",values:["restartHVM","restartPV","restartHost","restartXAPI"]}},doc:"New value to set"}],doc:"Set the after_apply_guidance field of the given pool_patch."},
+"pool_patch.add_after_apply_guidance":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"after_apply_guidance",values:["restartHVM","restartPV","restartHost","restartXAPI"]},doc:"New value to add"}],doc:"Add the given value to the after_apply_guidance field of the given pool_patch.  If the value is already in that Set, then do nothing."},
+"pool_patch.remove_after_apply_guidance":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"after_apply_guidance",values:["restartHVM","restartPV","restartHost","restartXAPI"]},doc:"Value to remove"}],doc:"Remove the given value from the after_apply_guidance field of the given pool_patch.  If the value is not in that Set, then do nothing."},
+"pool_patch.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given pool_patch."},
+"pool_patch.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given pool_patch."},
+"pool_patch.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given pool_patch.  If the key is not in that Map, then do nothing."},
+"pool_patch.apply":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"The patch to apply"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to apply the patch too"}],doc:"Apply the selected patch to a host and return its output"},
+"pool_patch.pool_apply":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"The patch to apply"}],doc:"Apply the selected patch to all hosts in the pool and return a map of host_ref -> patch output"},
+"pool_patch.precheck":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"The patch whose prechecks will be run"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to run the prechecks on"}],doc:"Execute the precheck stage of the selected patch on a host and return its output"},
+"pool_patch.clean":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"The patch to clean up"}],doc:"Removes the patch's files from all hosts in the pool, but does not remove the database entries"},
+"pool_patch.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"The patch to destroy"}],doc:"Removes the patch's files from all hosts in the pool, and removes the database entries.  Only works on unapplied patches."},
+"pool_patch.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the pool_patchs known to the system."},
+"pool_patch.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the pool_patchs known to the system."},
+"pool_patch.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of pool_patch references to pool_patch records for all pool_patchs known to the system."},
+"VM.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VM."},
+"VM.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VM"},
+"VM.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VMs known to the system."},
+"VM.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VM instance with the specified UUID."},
+"VM.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VM"},doc:"All constructor arguments"}],doc:"Create a new VM instance, and return its handle."},
+"VM.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Destroy the specified VM.  The VM is completely removed from the system.  This function can only be called when the VM is in the Halted State."},
+"VM.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the VM instances with the given label."},
+"VM.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the uuid field of the given VM."},
+"VM.get_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the allowed_operations field of the given VM."},
+"VM.get_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the current_operations field of the given VM."},
+"VM.get_power_state":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the power_state field of the given VM."},
+"VM.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the name/label field of the given VM."},
+"VM.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the name/description field of the given VM."},
+"VM.get_user_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the user_version field of the given VM."},
+"VM.get_is_a_template":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the is_a_template field of the given VM."},
+"VM.get_suspend_VDI":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the suspend_VDI field of the given VM."},
+"VM.get_resident_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the resident_on field of the given VM."},
+"VM.get_scheduled_to_be_resident_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the scheduled_to_be_resident_on field of the given VM."},
+"VM.get_affinity":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the affinity field of the given VM."},
+"VM.get_memory_overhead":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the memory/overhead field of the given VM."},
+"VM.get_memory_target":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the memory/target field of the given VM."},
+"VM.get_memory_static_max":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the memory/static_max field of the given VM."},
+"VM.get_memory_dynamic_max":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the memory/dynamic_max field of the given VM."},
+"VM.get_memory_dynamic_min":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the memory/dynamic_min field of the given VM."},
+"VM.get_memory_static_min":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the memory/static_min field of the given VM."},
+"VM.get_VCPUs_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the VCPUs/params field of the given VM."},
+"VM.get_VCPUs_max":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the VCPUs/max field of the given VM."},
+"VM.get_VCPUs_at_startup":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the VCPUs/at_startup field of the given VM."},
+"VM.get_actions_after_shutdown":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the actions/after_shutdown field of the given VM."},
+"VM.get_actions_after_reboot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the actions/after_reboot field of the given VM."},
+"VM.get_actions_after_crash":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the actions/after_crash field of the given VM."},
+"VM.get_consoles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the consoles field of the given VM."},
+"VM.get_VIFs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the VIFs field of the given VM."},
+"VM.get_VBDs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the VBDs field of the given VM."},
+"VM.get_crash_dumps":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the crash_dumps field of the given VM."},
+"VM.get_VTPMs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the VTPMs field of the given VM."},
+"VM.get_PV_bootloader":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the PV/bootloader field of the given VM."},
+"VM.get_PV_kernel":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the PV/kernel field of the given VM."},
+"VM.get_PV_ramdisk":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the PV/ramdisk field of the given VM."},
+"VM.get_PV_args":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the PV/args field of the given VM."},
+"VM.get_PV_bootloader_args":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the PV/bootloader_args field of the given VM."},
+"VM.get_PV_legacy_args":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the PV/legacy_args field of the given VM."},
+"VM.get_HVM_boot_policy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the HVM/boot_policy field of the given VM."},
+"VM.get_HVM_boot_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the HVM/boot_params field of the given VM."},
+"VM.get_HVM_shadow_multiplier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the HVM/shadow_multiplier field of the given VM."},
+"VM.get_platform":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the platform field of the given VM."},
+"VM.get_PCI_bus":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the PCI_bus field of the given VM."},
+"VM.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the other_config field of the given VM."},
+"VM.get_domid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the domid field of the given VM."},
+"VM.get_domarch":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the domarch field of the given VM."},
+"VM.get_last_boot_CPU_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the last_boot_CPU_flags field of the given VM."},
+"VM.get_is_control_domain":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the is_control_domain field of the given VM."},
+"VM.get_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the metrics field of the given VM."},
+"VM.get_guest_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the guest_metrics field of the given VM."},
+"VM.get_last_booted_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the last_booted_record field of the given VM."},
+"VM.get_recommendations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the recommendations field of the given VM."},
+"VM.get_xenstore_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the xenstore_data field of the given VM."},
+"VM.get_ha_always_run":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the ha_always_run field of the given VM."},
+"VM.get_ha_restart_priority":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the ha_restart_priority field of the given VM."},
+"VM.get_is_a_snapshot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the is_a_snapshot field of the given VM."},
+"VM.get_snapshot_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the snapshot_of field of the given VM."},
+"VM.get_snapshots":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the snapshots field of the given VM."},
+"VM.get_snapshot_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the snapshot_time field of the given VM."},
+"VM.get_transportable_snapshot_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the transportable_snapshot_id field of the given VM."},
+"VM.get_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the blobs field of the given VM."},
+"VM.get_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the tags field of the given VM."},
+"VM.get_blocked_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the blocked_operations field of the given VM."},
+"VM.get_snapshot_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the snapshot_info field of the given VM."},
+"VM.get_snapshot_metadata":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the snapshot_metadata field of the given VM."},
+"VM.get_parent":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the parent field of the given VM."},
+"VM.get_children":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the children field of the given VM."},
+"VM.get_bios_strings":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the bios_strings field of the given VM."},
+"VM.get_protection_policy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the protection_policy field of the given VM."},
+"VM.get_is_snapshot_from_vmpp":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the is_snapshot_from_vmpp field of the given VM."},
+"VM.get_appliance":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the appliance field of the given VM."},
+"VM.get_start_delay":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the start_delay field of the given VM."},
+"VM.get_shutdown_delay":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the shutdown_delay field of the given VM."},
+"VM.get_order":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the order field of the given VM."},
+"VM.get_VGPUs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the VGPUs field of the given VM."},
+"VM.get_attached_PCIs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the attached_PCIs field of the given VM."},
+"VM.get_suspend_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the suspend_SR field of the given VM."},
+"VM.get_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the version field of the given VM."},
+"VM.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VM."},
+"VM.set_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","create_template","revert","checkpoint","snapshot_with_quiesce","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_dynamic_range","changing_static_range","changing_memory_limits","get_cooperative","changing_shadow_memory","changing_shadow_memory_live","changing_VCPUs","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","metadata_export","reverting","destroy"]}},doc:"New value to set"}],doc:"Set the allowed_operations field of the given VM."},
+"VM.add_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","create_template","revert","checkpoint","snapshot_with_quiesce","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_dynamic_range","changing_static_range","changing_memory_limits","get_cooperative","changing_shadow_memory","changing_shadow_memory_live","changing_VCPUs","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","metadata_export","reverting","destroy"]},doc:"New value to add"}],doc:"Add the given value to the allowed_operations field of the given VM.  If the value is already in that Set, then do nothing."},
+"VM.remove_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","create_template","revert","checkpoint","snapshot_with_quiesce","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_dynamic_range","changing_static_range","changing_memory_limits","get_cooperative","changing_shadow_memory","changing_shadow_memory_live","changing_VCPUs","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","metadata_export","reverting","destroy"]},doc:"Value to remove"}],doc:"Remove the given value from the allowed_operations field of the given VM.  If the value is not in that Set, then do nothing."},
+"VM.set_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","create_template","revert","checkpoint","snapshot_with_quiesce","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_dynamic_range","changing_static_range","changing_memory_limits","get_cooperative","changing_shadow_memory","changing_shadow_memory_live","changing_VCPUs","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","metadata_export","reverting","destroy"]}},doc:"New value to set"}],doc:"Set the current_operations field of the given VM."},
+"VM.add_to_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","create_template","revert","checkpoint","snapshot_with_quiesce","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_dynamic_range","changing_static_range","changing_memory_limits","get_cooperative","changing_shadow_memory","changing_shadow_memory_live","changing_VCPUs","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","metadata_export","reverting","destroy"]},doc:"Value to add"}],doc:"Add the given key-value pair to the current_operations field of the given VM."},
+"VM.remove_from_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the current_operations field of the given VM.  If the key is not in that Map, then do nothing."},
+"VM.set_power_state":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vm_power_state",values:["Halted","Paused","Running","Suspended"]},doc:"New value to set"}],doc:"Set the power_state field of the given VM."},
+"VM.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given VM."},
+"VM.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given VM."},
+"VM.set_user_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the user_version field of the given VM."},
+"VM.set_is_a_template":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the is_a_template field of the given VM."},
+"VM.set_suspend_VDI":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VDI"},doc:"New value to set"}],doc:"Set the suspend_VDI field of the given VM."},
+"VM.set_resident_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the resident_on field of the given VM."},
+"VM.set_scheduled_to_be_resident_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the scheduled_to_be_resident_on field of the given VM."},
+"VM.set_affinity":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the affinity field of the given VM."},
+"VM.set_memory_overhead":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/overhead field of the given VM."},
+"VM.set_memory_target":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/target field of the given VM."},
+"VM.set_memory_static_max":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/static_max field of the given VM."},
+"VM.set_memory_dynamic_max":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/dynamic_max field of the given VM."},
+"VM.set_memory_dynamic_min":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/dynamic_min field of the given VM."},
+"VM.set_memory_static_min":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/static_min field of the given VM."},
+"VM.set_VCPUs_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the VCPUs/params field of the given VM."},
+"VM.add_to_VCPUs_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the VCPUs/params field of the given VM."},
+"VM.remove_from_VCPUs_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the VCPUs/params field of the given VM.  If the key is not in that Map, then do nothing."},
+"VM.set_VCPUs_max":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the VCPUs/max field of the given VM."},
+"VM.set_VCPUs_at_startup":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the VCPUs/at_startup field of the given VM."},
+"VM.set_actions_after_shutdown":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"on_normal_exit",values:["destroy","restart"]},doc:"New value to set"}],doc:"Set the actions/after_shutdown field of the given VM."},
+"VM.set_actions_after_reboot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"on_normal_exit",values:["destroy","restart"]},doc:"New value to set"}],doc:"Set the actions/after_reboot field of the given VM."},
+"VM.set_actions_after_crash":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"on_crash_behaviour",values:["destroy","coredump_and_destroy","restart","coredump_and_restart","preserve","rename_restart"]},doc:"New value to set"}],doc:"Set the actions/after_crash field of the given VM."},
+"VM.set_PV_bootloader":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the PV/bootloader field of the given VM."},
+"VM.set_PV_kernel":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the PV/kernel field of the given VM."},
+"VM.set_PV_ramdisk":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the PV/ramdisk field of the given VM."},
+"VM.set_PV_args":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the PV/args field of the given VM."},
+"VM.set_PV_bootloader_args":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the PV/bootloader_args field of the given VM."},
+"VM.set_PV_legacy_args":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the PV/legacy_args field of the given VM."},
+"VM.set_HVM_boot_policy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the HVM/boot_policy field of the given VM."},
+"VM.set_HVM_boot_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the HVM/boot_params field of the given VM."},
+"VM.add_to_HVM_boot_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the HVM/boot_params field of the given VM."},
+"VM.remove_from_HVM_boot_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the HVM/boot_params field of the given VM.  If the key is not in that Map, then do nothing."},
+"VM.set_HVM_shadow_multiplier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the HVM/shadow_multiplier field of the given VM."},
+"VM.set_platform":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the platform field of the given VM."},
+"VM.add_to_platform":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the platform field of the given VM."},
+"VM.remove_from_platform":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the platform field of the given VM.  If the key is not in that Map, then do nothing."},
+"VM.set_PCI_bus":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the PCI_bus field of the given VM."},
+"VM.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VM."},
+"VM.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VM."},
+"VM.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VM.  If the key is not in that Map, then do nothing."},
+"VM.set_domid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the domid field of the given VM."},
+"VM.set_domarch":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the domarch field of the given VM."},
+"VM.set_last_boot_CPU_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the last_boot_CPU_flags field of the given VM."},
+"VM.add_to_last_boot_CPU_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the last_boot_CPU_flags field of the given VM."},
+"VM.remove_from_last_boot_CPU_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the last_boot_CPU_flags field of the given VM.  If the key is not in that Map, then do nothing."},
+"VM.set_is_control_domain":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the is_control_domain field of the given VM."},
+"VM.set_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM_metrics"},doc:"New value to set"}],doc:"Set the metrics field of the given VM."},
+"VM.set_guest_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"New value to set"}],doc:"Set the guest_metrics field of the given VM."},
+"VM.set_last_booted_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the last_booted_record field of the given VM."},
+"VM.set_recommendations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the recommendations field of the given VM."},
+"VM.set_xenstore_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the xenstore_data field of the given VM."},
+"VM.add_to_xenstore_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the xenstore_data field of the given VM."},
+"VM.remove_from_xenstore_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the xenstore_data field of the given VM.  If the key is not in that Map, then do nothing."},
+"VM.set_ha_always_run":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the ha_always_run field of the given VM."},
+"VM.set_ha_restart_priority":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the ha_restart_priority field of the given VM."},
+"VM.set_is_a_snapshot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the is_a_snapshot field of the given VM."},
+"VM.set_snapshot_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to set"}],doc:"Set the snapshot_of field of the given VM."},
+"VM.set_snapshot_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the snapshot_time field of the given VM."},
+"VM.set_transportable_snapshot_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the transportable_snapshot_id field of the given VM."},
+"VM.set_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"ref",class:"blob"}},doc:"New value to set"}],doc:"Set the blobs field of the given VM."},
+"VM.add_to_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"ref",class:"blob"},doc:"Value to add"}],doc:"Add the given key-value pair to the blobs field of the given VM."},
+"VM.remove_from_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the blobs field of the given VM.  If the key is not in that Map, then do nothing."},
+"VM.set_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the tags field of the given VM."},
+"VM.add_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the tags field of the given VM.  If the value is already in that Set, then do nothing."},
+"VM.remove_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the tags field of the given VM.  If the value is not in that Set, then do nothing."},
+"VM.set_blocked_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","create_template","revert","checkpoint","snapshot_with_quiesce","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_dynamic_range","changing_static_range","changing_memory_limits","get_cooperative","changing_shadow_memory","changing_shadow_memory_live","changing_VCPUs","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","metadata_export","reverting","destroy"]},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the blocked_operations field of the given VM."},
+"VM.add_to_blocked_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","create_template","revert","checkpoint","snapshot_with_quiesce","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_dynamic_range","changing_static_range","changing_memory_limits","get_cooperative","changing_shadow_memory","changing_shadow_memory_live","changing_VCPUs","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","metadata_export","reverting","destroy"]},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the blocked_operations field of the given VM."},
+"VM.remove_from_blocked_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","create_template","revert","checkpoint","snapshot_with_quiesce","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_dynamic_range","changing_static_range","changing_memory_limits","get_cooperative","changing_shadow_memory","changing_shadow_memory_live","changing_VCPUs","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","metadata_export","reverting","destroy"]},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the blocked_operations field of the given VM.  If the key is not in that Map, then do nothing."},
+"VM.set_snapshot_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the snapshot_info field of the given VM."},
+"VM.add_to_snapshot_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the snapshot_info field of the given VM."},
+"VM.remove_from_snapshot_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the snapshot_info field of the given VM.  If the key is not in that Map, then do nothing."},
+"VM.set_snapshot_metadata":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the snapshot_metadata field of the given VM."},
+"VM.set_parent":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to set"}],doc:"Set the parent field of the given VM."},
+"VM.set_bios_strings":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the bios_strings field of the given VM."},
+"VM.add_to_bios_strings":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the bios_strings field of the given VM."},
+"VM.remove_from_bios_strings":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the bios_strings field of the given VM.  If the key is not in that Map, then do nothing."},
+"VM.set_protection_policy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VMPP"},doc:"New value to set"}],doc:"Set the protection_policy field of the given VM."},
+"VM.set_is_snapshot_from_vmpp":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the is_snapshot_from_vmpp field of the given VM."},
+"VM.set_appliance":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM_appliance"},doc:"New value to set"}],doc:"Set the appliance field of the given VM."},
+"VM.set_start_delay":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the start_delay field of the given VM."},
+"VM.set_shutdown_delay":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the shutdown_delay field of the given VM."},
+"VM.set_order":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the order field of the given VM."},
+"VM.set_attached_PCIs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"ref",class:"PCI"}},doc:"New value to set"}],doc:"Set the attached_PCIs field of the given VM."},
+"VM.add_attached_PCIs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PCI"},doc:"New value to add"}],doc:"Add the given value to the attached_PCIs field of the given VM.  If the value is already in that Set, then do nothing."},
+"VM.remove_attached_PCIs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PCI"},doc:"Value to remove"}],doc:"Remove the given value from the attached_PCIs field of the given VM.  If the value is not in that Set, then do nothing."},
+"VM.set_suspend_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"SR"},doc:"New value to set"}],doc:"Set the suspend_SR field of the given VM."},
+"VM.set_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the version field of the given VM."},
+"VM.snapshot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to be snapshotted"},{name:"new_name",ty:{ty:"string"},doc:"The name of the snapshotted VM"}],doc:"Snapshots the specified VM, making a new VM. Snapshot automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write)."},
+"VM.snapshot_with_quiesce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to be snapshotted"},{name:"new_name",ty:{ty:"string"},doc:"The name of the snapshotted VM"}],doc:"Snapshots the specified VM with quiesce, making a new VM. Snapshot automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write)."},
+"VM.clone":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to be cloned"},{name:"new_name",ty:{ty:"string"},doc:"The name of the cloned VM"}],doc:"Clones the specified VM, making a new VM. Clone automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write).   This function can only be called when the VM is in the Halted State."},
+"VM.copy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to be copied"},{name:"new_name",ty:{ty:"string"},doc:"The name of the copied VM"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"An SR to copy all the VM's disks into (if an invalid reference then it uses the existing SRs)"}],doc:"Copied the specified VM, making a new VM. Unlike clone, copy does not exploits the capabilities of the underlying storage repository in which the VM's disk images are stored. Instead, copy guarantees that the disk images of the newly created VM will be 'full disks' - i.e. not part of a CoW chain.  This function can only be called when the VM is in the Halted State."},
+"VM.revert":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"snapshot",ty:{ty:"ref",class:"VM"},doc:"The snapshotted state that we revert to"}],doc:"Reverts the specified VM to a previous state."},
+"VM.checkpoint":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to be checkpointed"},{name:"new_name",ty:{ty:"string"},doc:"The name of the checkpointed VM"}],doc:"Checkpoints the specified VM, making a new VM. Checkpoint automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write) and saves the memory image as well."},
+"VM.provision":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to be provisioned"}],doc:"Inspects the disk configuration contained within the VM's other_config, creates VDIs and VBDs and then executes any applicable post-install script."},
+"VM.start":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to start"},{name:"start_paused",ty:{ty:"bool"},doc:"Instantiate VM in paused state if set to true."},{name:"force",ty:{ty:"bool"},doc:"Attempt to force the VM to start. If this flag is false then the VM may fail pre-boot safety checks (e.g. if the CPU the VM last booted on looks substantially different to the current one)"}],doc:"Start the specified VM.  This function can only be called with the VM is in the Halted State."},
+"VM.start_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to start"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host on which to start the VM"},{name:"start_paused",ty:{ty:"bool"},doc:"Instantiate VM in paused state if set to true."},{name:"force",ty:{ty:"bool"},doc:"Attempt to force the VM to start. If this flag is false then the VM may fail pre-boot safety checks (e.g. if the CPU the VM last booted on looks substantially different to the current one)"}],doc:"Start the specified VM on a particular host.  This function can only be called with the VM is in the Halted State."},
+"VM.pause":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to pause"}],doc:"Pause the specified VM. This can only be called when the specified VM is in the Running state."},
+"VM.unpause":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to unpause"}],doc:"Resume the specified VM. This can only be called when the specified VM is in the Paused state."},
+"VM.clean_shutdown":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to shutdown"}],doc:"Attempt to cleanly shutdown the specified VM. (Note: this may not be supported---e.g. if a guest agent is not installed). This can only be called when the specified VM is in the Running state."},
+"VM.clean_reboot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to shutdown"}],doc:"Attempt to cleanly shutdown the specified VM (Note: this may not be supported---e.g. if a guest agent is not installed). This can only be called when the specified VM is in the Running state."},
+"VM.hard_shutdown":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to destroy"}],doc:"Stop executing the specified VM without attempting a clean shutdown."},
+"VM.power_state_reset":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to reset"}],doc:"Reset the power-state of the VM to halted in the database only. (Used to recover from slave failures in pooling scenarios by resetting the power-states of VMs running on dead slaves to halted.) This is a potentially dangerous operation; use with care."},
+"VM.hard_reboot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to reboot"}],doc:"Stop executing the specified VM without attempting a clean shutdown and immediately restart the VM."},
+"VM.suspend":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to suspend"}],doc:"Suspend the specified VM to disk.  This can only be called when the specified VM is in the Running state."},
+"VM.csvm":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:""}],doc:"undocumented. internal use only. This call is deprecated."},
+"VM.resume":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to resume"},{name:"start_paused",ty:{ty:"bool"},doc:"Resume VM in paused state if set to true."},{name:"force",ty:{ty:"bool"},doc:"Attempt to force the VM to resume. If this flag is false then the VM may fail pre-resume safety checks (e.g. if the CPU the VM was running on looks substantially different to the current one)"}],doc:"Awaken the specified VM and resume it.  This can only be called when the specified VM is in the Suspended state."},
+"VM.hard_reboot_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to reboot"}],doc:"Internal function which immediately restarts the specified VM."},
+"VM.resume_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to resume"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host on which to resume the VM"},{name:"start_paused",ty:{ty:"bool"},doc:"Resume VM in paused state if set to true."},{name:"force",ty:{ty:"bool"},doc:"Attempt to force the VM to resume. If this flag is false then the VM may fail pre-resume safety checks (e.g. if the CPU the VM was running on looks substantially different to the current one)"}],doc:"Awaken the specified VM and resume it on a particular Host.  This can only be called when the specified VM is in the Suspended state."},
+"VM.pool_migrate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to migrate"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The target host"},{name:"options",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Extra configuration operations"}],doc:"Migrate a VM to another Host. This can only be called when the specified VM is in the Running state."},
+"VM.set_VCPUs_number_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"nvcpu",ty:{ty:"int"},doc:"The number of VCPUs"}],doc:"Set the number of VCPUs for a running VM"},
+"VM.add_to_VCPUs_params_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"key",ty:{ty:"string"},doc:"The key"},{name:"value",ty:{ty:"string"},doc:"The value"}],doc:"Add the given key-value pair to VM.VCPUs_params, and apply that value on the running VM"},
+"VM.set_ha_restart_priority":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"value",ty:{ty:"string"},doc:"The value"}],doc:"Set the value of the ha_restart_priority field"},
+"VM.set_ha_always_run":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"value",ty:{ty:"bool"},doc:"The value"}],doc:"Set the value of the ha_always_run"},
+"VM.compute_memory_overhead":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM for which to compute the memory overhead"}],doc:"Computes the virtualization memory overhead of a VM."},
+"VM.set_memory_dynamic_max":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM to modify"},{name:"value",ty:{ty:"int"},doc:"The new value of memory_dynamic_max"}],doc:"Set the value of the memory_dynamic_max field"},
+"VM.set_memory_dynamic_min":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM to modify"},{name:"value",ty:{ty:"int"},doc:"The new value of memory_dynamic_min"}],doc:"Set the value of the memory_dynamic_min field"},
+"VM.set_memory_dynamic_range":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"min",ty:{ty:"int"},doc:"The new minimum value"},{name:"max",ty:{ty:"int"},doc:"The new maximum value"}],doc:"Set the minimum and maximum amounts of physical memory the VM is allowed to use."},
+"VM.set_memory_static_max":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM to modify"},{name:"value",ty:{ty:"int"},doc:"The new value of memory_static_max"}],doc:"Set the value of the memory_static_max field"},
+"VM.set_memory_static_min":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM to modify"},{name:"value",ty:{ty:"int"},doc:"The new value of memory_static_min"}],doc:"Set the value of the memory_static_min field"},
+"VM.set_memory_static_range":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"min",ty:{ty:"int"},doc:"The new minimum value"},{name:"max",ty:{ty:"int"},doc:"The new maximum value"}],doc:"Set the static (ie boot-time) range of virtual memory that the VM is allowed to use."},
+"VM.set_memory_limits":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"static_min",ty:{ty:"int"},doc:"The new value of memory_static_min."},{name:"static_max",ty:{ty:"int"},doc:"The new value of memory_static_max."},{name:"dynamic_min",ty:{ty:"int"},doc:"The new value of memory_dynamic_min."},{name:"dynamic_max",ty:{ty:"int"},doc:"The new value of memory_dynamic_max."}],doc:"Set the memory limits of this VM."},
+"VM.set_memory_target_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"target",ty:{ty:"int"},doc:"The target in bytes"}],doc:"Set the memory target for a running VM"},
+"VM.wait_memory_target_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"}],doc:"Wait for a running VM to reach its current memory target"},
+"VM.get_cooperative":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"}],doc:"Return true if the VM is currently 'co-operative' i.e. is expected to reach a balloon target and actually has done"},
+"VM.set_HVM_shadow_multiplier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"value",ty:{ty:"float"},doc:"The new shadow memory multiplier to set"}],doc:"Set the shadow memory multiplier on a halted VM"},
+"VM.set_shadow_multiplier_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"multiplier",ty:{ty:"float"},doc:"The new shadow memory multiplier to set"}],doc:"Set the shadow memory multiplier on a running VM"},
+"VM.set_VCPUs_max":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"value",ty:{ty:"int"},doc:"The new maximum number of VCPUs"}],doc:"Set the maximum number of VCPUs for a halted VM"},
+"VM.set_VCPUs_at_startup":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"value",ty:{ty:"int"},doc:"The new maximum number of VCPUs"}],doc:"Set the number of startup VCPUs for a halted VM"},
+"VM.send_sysrq":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"key",ty:{ty:"string"},doc:"The key to send"}],doc:"Send the given key as a sysrq to this VM.  The key is specified as a single character (a String of length 1).  This can only be called when the specified VM is in the Running state."},
+"VM.send_trigger":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"trigger",ty:{ty:"string"},doc:"The trigger to send"}],doc:"Send the named trigger to this VM.  This can only be called when the specified VM is in the Running state."},
+"VM.maximise_memory":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"total",ty:{ty:"int"},doc:"Total amount of physical RAM to fit within"},{name:"approximate",ty:{ty:"bool"},doc:"If false the limit is calculated with the guest's current exact configuration. Otherwise a more approximate calculation is performed"}],doc:"Returns the maximum amount of guest memory which will fit, together with overheads, in the supplied amount of physical memory. If 'exact' is true then an exact calculation is performed using the VM's current settings. If 'exact' is false then a more conservative approximation is used"},
+"VM.migrate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"dest",ty:{ty:"string"},doc:"The destination host"},{name:"live",ty:{ty:"bool"},doc:"Live migration"},{name:"options",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Other parameters"}],doc:"Migrate the VM to another host.  This can only be called when the specified VM is in the Running state."},
+"VM.get_boot_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM whose boot-time state to return"}],doc:"Returns a record describing the VM's dynamic state, initialised when the VM boots and updated to reflect runtime configuration changes e.g. CPU hotplug"},
+"VM.get_data_sources":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM to interrogate"}],doc:""},
+"VM.record_data_source":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"data_source",ty:{ty:"string"},doc:"The data source to record"}],doc:"Start recording the specified data source"},
+"VM.query_data_source":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"data_source",ty:{ty:"string"},doc:"The data source to query"}],doc:"Query the latest value of the specified data source"},
+"VM.forget_data_source_archives":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"data_source",ty:{ty:"string"},doc:"The data source whose archives are to be forgotten"}],doc:"Forget the recorded statistics related to the specified data source"},
+"VM.assert_operation_valid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"op",ty:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","create_template","revert","checkpoint","snapshot_with_quiesce","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_dynamic_range","changing_static_range","changing_memory_limits","get_cooperative","changing_shadow_memory","changing_shadow_memory_live","changing_VCPUs","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","metadata_export","reverting","destroy"]},doc:"proposed operation"}],doc:"Check to see whether this operation is acceptable in the current state of the system, raising an error if the operation is invalid for some reason"},
+"VM.update_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Recomputes the list of acceptable operations"},
+"VM.get_allowed_VBD_devices":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to query"}],doc:"Returns a list of the allowed values that a VBD device field can take"},
+"VM.get_allowed_VIF_devices":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to query"}],doc:"Returns a list of the allowed values that a VIF device field can take"},
+"VM.get_possible_hosts":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM"}],doc:"Return the list of hosts on which this VM may run."},
+"VM.assert_can_boot_here":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"}],doc:"Returns an error if the VM could not boot on this host for some reason"},
+"VM.atomic_set_resident_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to modify"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to set resident_on to"}],doc:""},
+"VM.create_new_blob":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"name",ty:{ty:"string"},doc:"The name associated with the blob"},{name:"mime_type",ty:{ty:"string"},doc:"The mime type for the data. Empty string translates to application/octet-stream"}],doc:"Create a placeholder for a named binary blob of data that is associated with this VM"},
+"VM.s3_suspend":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM"}],doc:"Try to put the VM into ACPI S3 state"},
+"VM.s3_resume":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM"}],doc:"Try to resume the VM from ACPI S3 state"},
+"VM.assert_agile":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"}],doc:"Returns an error if the VM is not considered agile e.g. because it is tied to a resource local to a host"},
+"VM.update_snapshot_metadata":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to update"},{name:"snapshot_of",ty:{ty:"ref",class:"VM"},doc:""},{name:"snapshot_time",ty:{ty:"datetime"},doc:""},{name:"transportable_snapshot_id",ty:{ty:"string"},doc:""}],doc:""},
+"VM.retrieve_wlb_recommendations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM"}],doc:"Returns mapping of hosts to ratings, indicating the suitability of starting the VM at that location according to wlb. Rating is replaced with an error if the VM cannot boot there."},
+"VM.copy_bios_strings":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to modify"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to copy the BIOS strings from"}],doc:"Copy the BIOS strings from the given host to this VM"},
+"VM.set_protection_policy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"value",ty:{ty:"ref",class:"VMPP"},doc:"The value"}],doc:"Set the value of the protection_policy field"},
+"VM.set_start_delay":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"value",ty:{ty:"int"},doc:"This VM's start delay in seconds"}],doc:"Set this VM's start delay in seconds"},
+"VM.set_shutdown_delay":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"value",ty:{ty:"int"},doc:"This VM's shutdown delay in seconds"}],doc:"Set this VM's shutdown delay in seconds"},
+"VM.set_order":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"value",ty:{ty:"int"},doc:"This VM's boot order"}],doc:"Set this VM's boot order"},
+"VM.set_suspend_VDI":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"value",ty:{ty:"ref",class:"VDI"},doc:"The suspend VDI uuid"}],doc:"Set this VM's suspend VDI, which must be indentical to its current one"},
+"VM.assert_can_be_recovered":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM to recover"},{name:"session_to",ty:{ty:"ref",class:"session"},doc:"The session to which the VM is to be recovered."}],doc:"Assert whether all SRs required to recover this VM are available."},
+"VM.recover":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM to recover"},{name:"session_to",ty:{ty:"ref",class:"session"},doc:"The session to which the VM is to be recovered."},{name:"force",ty:{ty:"bool"},doc:"Whether the VM should replace newer versions of itself."}],doc:"Recover the VM"},
+"VM.set_appliance":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM to assign to an appliance."},{name:"value",ty:{ty:"ref",class:"VM_appliance"},doc:"The appliance to which this VM should be assigned."}],doc:"Assign this VM to an appliance."},
+"VM.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VMs known to the system."},
+"VM.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VMs known to the system."},
+"VM.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VM references to VM records for all VMs known to the system."},
+"VM_metrics.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VM_metrics."},
+"VM_metrics.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VM_metrics"},
+"VM_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VM_metrics instances known to the system."},
+"VM_metrics.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VM_metrics instance with the specified UUID."},
+"VM_metrics.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VM_metrics"},doc:"All constructor arguments"}],doc:"Create a new VM_metrics instance, and return its handle."},
+"VM_metrics.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Destroy the specified VM_metrics instance."},
+"VM_metrics.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the uuid field of the given VM_metrics."},
+"VM_metrics.get_memory_actual":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the memory/actual field of the given VM_metrics."},
+"VM_metrics.get_VCPUs_number":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the VCPUs/number field of the given VM_metrics."},
+"VM_metrics.get_VCPUs_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the VCPUs/utilisation field of the given VM_metrics."},
+"VM_metrics.get_VCPUs_CPU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the VCPUs/CPU field of the given VM_metrics."},
+"VM_metrics.get_VCPUs_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the VCPUs/params field of the given VM_metrics."},
+"VM_metrics.get_VCPUs_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the VCPUs/flags field of the given VM_metrics."},
+"VM_metrics.get_state":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the state field of the given VM_metrics."},
+"VM_metrics.get_start_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the start_time field of the given VM_metrics."},
+"VM_metrics.get_install_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the install_time field of the given VM_metrics."},
+"VM_metrics.get_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the last_updated field of the given VM_metrics."},
+"VM_metrics.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the other_config field of the given VM_metrics."},
+"VM_metrics.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VM_metrics."},
+"VM_metrics.set_memory_actual":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/actual field of the given VM_metrics."},
+"VM_metrics.set_VCPUs_number":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the VCPUs/number field of the given VM_metrics."},
+"VM_metrics.set_VCPUs_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"int"},values:{ty:"float"}},doc:"New value to set"}],doc:"Set the VCPUs/utilisation field of the given VM_metrics."},
+"VM_metrics.add_to_VCPUs_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"int"},doc:"Key to add"},{name:"value",ty:{ty:"float"},doc:"Value to add"}],doc:"Add the given key-value pair to the VCPUs/utilisation field of the given VM_metrics."},
+"VM_metrics.remove_from_VCPUs_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"int"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the VCPUs/utilisation field of the given VM_metrics.  If the key is not in that Map, then do nothing."},
+"VM_metrics.set_VCPUs_CPU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"int"},values:{ty:"int"}},doc:"New value to set"}],doc:"Set the VCPUs/CPU field of the given VM_metrics."},
+"VM_metrics.add_to_VCPUs_CPU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"int"},doc:"Key to add"},{name:"value",ty:{ty:"int"},doc:"Value to add"}],doc:"Add the given key-value pair to the VCPUs/CPU field of the given VM_metrics."},
+"VM_metrics.remove_from_VCPUs_CPU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"int"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the VCPUs/CPU field of the given VM_metrics.  If the key is not in that Map, then do nothing."},
+"VM_metrics.set_VCPUs_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the VCPUs/params field of the given VM_metrics."},
+"VM_metrics.add_to_VCPUs_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the VCPUs/params field of the given VM_metrics."},
+"VM_metrics.remove_from_VCPUs_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the VCPUs/params field of the given VM_metrics.  If the key is not in that Map, then do nothing."},
+"VM_metrics.set_VCPUs_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"int"},values:{ty:"set",contents:{ty:"string"}}},doc:"New value to set"}],doc:"Set the VCPUs/flags field of the given VM_metrics."},
+"VM_metrics.add_to_VCPUs_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"int"},doc:"Key to add"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"Value to add"}],doc:"Add the given key-value pair to the VCPUs/flags field of the given VM_metrics."},
+"VM_metrics.remove_from_VCPUs_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"int"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the VCPUs/flags field of the given VM_metrics.  If the key is not in that Map, then do nothing."},
+"VM_metrics.set_state":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the state field of the given VM_metrics."},
+"VM_metrics.add_state":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the state field of the given VM_metrics.  If the value is already in that Set, then do nothing."},
+"VM_metrics.remove_state":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the state field of the given VM_metrics.  If the value is not in that Set, then do nothing."},
+"VM_metrics.set_start_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the start_time field of the given VM_metrics."},
+"VM_metrics.set_install_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the install_time field of the given VM_metrics."},
+"VM_metrics.set_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the last_updated field of the given VM_metrics."},
+"VM_metrics.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VM_metrics."},
+"VM_metrics.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VM_metrics."},
+"VM_metrics.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VM_metrics.  If the key is not in that Map, then do nothing."},
+"VM_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VM_metrics instances known to the system."},
+"VM_metrics.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VM_metrics instances known to the system."},
+"VM_metrics.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VM_metrics references to VM_metrics records for all VM_metrics instances known to the system."},
+"VM_guest_metrics.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VM_guest_metrics."},
+"VM_guest_metrics.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VM_guest_metrics"},
+"VM_guest_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VM_guest_metrics instances known to the system."},
+"VM_guest_metrics.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VM_guest_metrics instance with the specified UUID."},
+"VM_guest_metrics.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VM_guest_metrics"},doc:"All constructor arguments"}],doc:"Create a new VM_guest_metrics instance, and return its handle."},
+"VM_guest_metrics.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Destroy the specified VM_guest_metrics instance."},
+"VM_guest_metrics.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the uuid field of the given VM_guest_metrics."},
+"VM_guest_metrics.get_os_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the os_version field of the given VM_guest_metrics."},
+"VM_guest_metrics.get_PV_drivers_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the PV_drivers_version field of the given VM_guest_metrics."},
+"VM_guest_metrics.get_PV_drivers_up_to_date":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the PV_drivers_up_to_date field of the given VM_guest_metrics."},
+"VM_guest_metrics.get_memory":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the memory field of the given VM_guest_metrics."},
+"VM_guest_metrics.get_disks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the disks field of the given VM_guest_metrics."},
+"VM_guest_metrics.get_networks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the networks field of the given VM_guest_metrics."},
+"VM_guest_metrics.get_other":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the other field of the given VM_guest_metrics."},
+"VM_guest_metrics.get_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the last_updated field of the given VM_guest_metrics."},
+"VM_guest_metrics.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the other_config field of the given VM_guest_metrics."},
+"VM_guest_metrics.get_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the live field of the given VM_guest_metrics."},
+"VM_guest_metrics.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VM_guest_metrics."},
+"VM_guest_metrics.set_os_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the os_version field of the given VM_guest_metrics."},
+"VM_guest_metrics.add_to_os_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the os_version field of the given VM_guest_metrics."},
+"VM_guest_metrics.remove_from_os_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the os_version field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing."},
+"VM_guest_metrics.set_PV_drivers_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the PV_drivers_version field of the given VM_guest_metrics."},
+"VM_guest_metrics.add_to_PV_drivers_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the PV_drivers_version field of the given VM_guest_metrics."},
+"VM_guest_metrics.remove_from_PV_drivers_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the PV_drivers_version field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing."},
+"VM_guest_metrics.set_PV_drivers_up_to_date":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the PV_drivers_up_to_date field of the given VM_guest_metrics."},
+"VM_guest_metrics.set_memory":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the memory field of the given VM_guest_metrics."},
+"VM_guest_metrics.add_to_memory":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the memory field of the given VM_guest_metrics."},
+"VM_guest_metrics.remove_from_memory":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the memory field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing."},
+"VM_guest_metrics.set_disks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the disks field of the given VM_guest_metrics."},
+"VM_guest_metrics.add_to_disks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the disks field of the given VM_guest_metrics."},
+"VM_guest_metrics.remove_from_disks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the disks field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing."},
+"VM_guest_metrics.set_networks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the networks field of the given VM_guest_metrics."},
+"VM_guest_metrics.add_to_networks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the networks field of the given VM_guest_metrics."},
+"VM_guest_metrics.remove_from_networks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the networks field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing."},
+"VM_guest_metrics.set_other":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other field of the given VM_guest_metrics."},
+"VM_guest_metrics.add_to_other":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other field of the given VM_guest_metrics."},
+"VM_guest_metrics.remove_from_other":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing."},
+"VM_guest_metrics.set_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the last_updated field of the given VM_guest_metrics."},
+"VM_guest_metrics.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VM_guest_metrics."},
+"VM_guest_metrics.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VM_guest_metrics."},
+"VM_guest_metrics.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing."},
+"VM_guest_metrics.set_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the live field of the given VM_guest_metrics."},
+"VM_guest_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VM_guest_metrics instances known to the system."},
+"VM_guest_metrics.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VM_guest_metrics instances known to the system."},
+"VM_guest_metrics.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VM_guest_metrics references to VM_guest_metrics records for all VM_guest_metrics instances known to the system."},
+"VMPP.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VMPP."},
+"VMPP.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VMPP"},
+"VMPP.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VMPPs known to the system."},
+"VMPP.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VMPP instance with the specified UUID."},
+"VMPP.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VMPP"},doc:"All constructor arguments"}],doc:"Create a new VMPP instance, and return its handle."},
+"VMPP.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Destroy the specified VMPP instance."},
+"VMPP.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the VMPP instances with the given label."},
+"VMPP.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the uuid field of the given VMPP."},
+"VMPP.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the name/label field of the given VMPP."},
+"VMPP.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the name/description field of the given VMPP."},
+"VMPP.get_is_policy_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the is_policy_enabled field of the given VMPP."},
+"VMPP.get_backup_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the backup_type field of the given VMPP."},
+"VMPP.get_backup_retention_value":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the backup_retention_value field of the given VMPP."},
+"VMPP.get_backup_frequency":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the backup_frequency field of the given VMPP."},
+"VMPP.get_backup_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the backup_schedule field of the given VMPP."},
+"VMPP.get_is_backup_running":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the is_backup_running field of the given VMPP."},
+"VMPP.get_backup_last_run_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the backup_last_run_time field of the given VMPP."},
+"VMPP.get_archive_target_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the archive_target_type field of the given VMPP."},
+"VMPP.get_archive_target_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the archive_target_config field of the given VMPP."},
+"VMPP.get_archive_frequency":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the archive_frequency field of the given VMPP."},
+"VMPP.get_archive_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the archive_schedule field of the given VMPP."},
+"VMPP.get_is_archive_running":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the is_archive_running field of the given VMPP."},
+"VMPP.get_archive_last_run_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the archive_last_run_time field of the given VMPP."},
+"VMPP.get_VMs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the VMs field of the given VMPP."},
+"VMPP.get_is_alarm_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the is_alarm_enabled field of the given VMPP."},
+"VMPP.get_alarm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the alarm_config field of the given VMPP."},
+"VMPP.get_recent_alerts":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"}],doc:"Get the recent_alerts field of the given VMPP."},
+"VMPP.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VMPP."},
+"VMPP.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given VMPP."},
+"VMPP.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given VMPP."},
+"VMPP.set_is_policy_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the is_policy_enabled field of the given VMPP."},
+"VMPP.set_backup_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vmpp_backup_type",values:["snapshot","checkpoint"]},doc:"New value to set"}],doc:"Set the backup_type field of the given VMPP."},
+"VMPP.set_backup_retention_value":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the backup_retention_value field of the given VMPP."},
+"VMPP.set_backup_frequency":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vmpp_backup_frequency",values:["hourly","daily","weekly"]},doc:"New value to set"}],doc:"Set the backup_frequency field of the given VMPP."},
+"VMPP.set_backup_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the backup_schedule field of the given VMPP."},
+"VMPP.add_to_backup_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the backup_schedule field of the given VMPP."},
+"VMPP.remove_from_backup_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the backup_schedule field of the given VMPP.  If the key is not in that Map, then do nothing."},
+"VMPP.set_is_backup_running":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the is_backup_running field of the given VMPP."},
+"VMPP.set_backup_last_run_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the backup_last_run_time field of the given VMPP."},
+"VMPP.set_archive_target_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vmpp_archive_target_type",values:["none","cifs","nfs"]},doc:"New value to set"}],doc:"Set the archive_target_type field of the given VMPP."},
+"VMPP.set_archive_target_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the archive_target_config field of the given VMPP."},
+"VMPP.add_to_archive_target_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the archive_target_config field of the given VMPP."},
+"VMPP.remove_from_archive_target_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the archive_target_config field of the given VMPP.  If the key is not in that Map, then do nothing."},
+"VMPP.set_archive_frequency":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vmpp_archive_frequency",values:["never","always_after_backup","daily","weekly"]},doc:"New value to set"}],doc:"Set the archive_frequency field of the given VMPP."},
+"VMPP.set_archive_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the archive_schedule field of the given VMPP."},
+"VMPP.add_to_archive_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the archive_schedule field of the given VMPP."},
+"VMPP.remove_from_archive_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the archive_schedule field of the given VMPP.  If the key is not in that Map, then do nothing."},
+"VMPP.set_is_archive_running":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the is_archive_running field of the given VMPP."},
+"VMPP.set_archive_last_run_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the archive_last_run_time field of the given VMPP."},
+"VMPP.set_is_alarm_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the is_alarm_enabled field of the given VMPP."},
+"VMPP.set_alarm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the alarm_config field of the given VMPP."},
+"VMPP.add_to_alarm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the alarm_config field of the given VMPP."},
+"VMPP.remove_from_alarm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the alarm_config field of the given VMPP.  If the key is not in that Map, then do nothing."},
+"VMPP.set_recent_alerts":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the recent_alerts field of the given VMPP."},
+"VMPP.add_recent_alerts":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the recent_alerts field of the given VMPP.  If the value is already in that Set, then do nothing."},
+"VMPP.remove_recent_alerts":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the recent_alerts field of the given VMPP.  If the value is not in that Set, then do nothing."},
+"VMPP.protect_now":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vmpp",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy to execute"}],doc:"This call executes the protection policy immediately"},
+"VMPP.archive_now":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"snapshot",ty:{ty:"ref",class:"VM"},doc:"The snapshot to archive"}],doc:"This call archives the snapshot provided as a parameter"},
+"VMPP.create_alert":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vmpp",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy where the alert should be created"},{name:"name",ty:{ty:"string"},doc:"The name of the message"},{name:"priority",ty:{ty:"int"},doc:"The priority of the message"},{name:"body",ty:{ty:"string"},doc:"The body of the email message"},{name:"data",ty:{ty:"string"},doc:"The data in xml"}],doc:"This call creates an alert for some protection policy"},
+"VMPP.get_alerts":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vmpp",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"hours_from_now",ty:{ty:"int"},doc:"how many hours in the past the oldest record to fetch is"}],doc:"This call fetches a history of alerts for a given protection policy"},
+"VMPP.set_backup_retention_value":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"value",ty:{ty:"int"},doc:"the value to set"}],doc:""},
+"VMPP.set_is_backup_running":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"value",ty:{ty:"bool"},doc:"true to mark this protection policy's backup is running"}],doc:"Set the value of the is_backup_running field"},
+"VMPP.set_is_archive_running":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"value",ty:{ty:"bool"},doc:"true to mark this protection policy's archive is running"}],doc:"Set the value of the is_archive_running field"},
+"VMPP.set_backup_frequency":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"value",ty:{ty:"enum",name:"vmpp_backup_frequency",values:["hourly","daily","weekly"]},doc:"the backup frequency"}],doc:"Set the value of the backup_frequency field"},
+"VMPP.set_backup_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"the value to set"}],doc:""},
+"VMPP.set_archive_frequency":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"value",ty:{ty:"enum",name:"vmpp_archive_frequency",values:["never","always_after_backup","daily","weekly"]},doc:"the archive frequency"}],doc:"Set the value of the archive_frequency field"},
+"VMPP.set_archive_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"the value to set"}],doc:""},
+"VMPP.set_archive_target_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"value",ty:{ty:"enum",name:"vmpp_archive_target_type",values:["none","cifs","nfs"]},doc:"the archive target config type"}],doc:"Set the value of the archive_target_config_type field"},
+"VMPP.set_archive_target_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"the value to set"}],doc:""},
+"VMPP.set_is_alarm_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"value",ty:{ty:"bool"},doc:"true if alarm is enabled for this policy"}],doc:"Set the value of the is_alarm_enabled field"},
+"VMPP.set_alarm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"the value to set"}],doc:""},
+"VMPP.add_to_backup_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"key",ty:{ty:"string"},doc:"the key to add"},{name:"value",ty:{ty:"string"},doc:"the value to add"}],doc:""},
+"VMPP.add_to_archive_target_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"key",ty:{ty:"string"},doc:"the key to add"},{name:"value",ty:{ty:"string"},doc:"the value to add"}],doc:""},
+"VMPP.add_to_archive_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"key",ty:{ty:"string"},doc:"the key to add"},{name:"value",ty:{ty:"string"},doc:"the value to add"}],doc:""},
+"VMPP.add_to_alarm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"key",ty:{ty:"string"},doc:"the key to add"},{name:"value",ty:{ty:"string"},doc:"the value to add"}],doc:""},
+"VMPP.remove_from_backup_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"key",ty:{ty:"string"},doc:"the key to remove"}],doc:""},
+"VMPP.remove_from_archive_target_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"key",ty:{ty:"string"},doc:"the key to remove"}],doc:""},
+"VMPP.remove_from_archive_schedule":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"key",ty:{ty:"string"},doc:"the key to remove"}],doc:""},
+"VMPP.remove_from_alarm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"key",ty:{ty:"string"},doc:"the key to remove"}],doc:""},
+"VMPP.set_backup_last_run_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"value",ty:{ty:"datetime"},doc:"the value to set"}],doc:""},
+"VMPP.set_archive_last_run_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VMPP"},doc:"The protection policy"},{name:"value",ty:{ty:"datetime"},doc:"the value to set"}],doc:""},
+"VMPP.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VMPPs known to the system."},
+"VMPP.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VMPPs known to the system."},
+"VMPP.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VMPP references to VMPP records for all VMPPs known to the system."},
+"VM_appliance.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VM_appliance."},
+"VM_appliance.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VM_appliance"},
+"VM_appliance.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VM_appliances known to the system."},
+"VM_appliance.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VM_appliance instance with the specified UUID."},
+"VM_appliance.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VM_appliance"},doc:"All constructor arguments"}],doc:"Create a new VM_appliance instance, and return its handle."},
+"VM_appliance.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"}],doc:"Destroy the specified VM_appliance instance."},
+"VM_appliance.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the VM_appliance instances with the given label."},
+"VM_appliance.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"}],doc:"Get the uuid field of the given VM_appliance."},
+"VM_appliance.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"}],doc:"Get the name/label field of the given VM_appliance."},
+"VM_appliance.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"}],doc:"Get the name/description field of the given VM_appliance."},
+"VM_appliance.get_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"}],doc:"Get the allowed_operations field of the given VM_appliance."},
+"VM_appliance.get_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"}],doc:"Get the current_operations field of the given VM_appliance."},
+"VM_appliance.get_VMs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"}],doc:"Get the VMs field of the given VM_appliance."},
+"VM_appliance.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VM_appliance."},
+"VM_appliance.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given VM_appliance."},
+"VM_appliance.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given VM_appliance."},
+"VM_appliance.set_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"vm_appliance_operation",values:["start","clean_shutdown","hard_shutdown","shutdown"]}},doc:"New value to set"}],doc:"Set the allowed_operations field of the given VM_appliance."},
+"VM_appliance.add_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vm_appliance_operation",values:["start","clean_shutdown","hard_shutdown","shutdown"]},doc:"New value to add"}],doc:"Add the given value to the allowed_operations field of the given VM_appliance.  If the value is already in that Set, then do nothing."},
+"VM_appliance.remove_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vm_appliance_operation",values:["start","clean_shutdown","hard_shutdown","shutdown"]},doc:"Value to remove"}],doc:"Remove the given value from the allowed_operations field of the given VM_appliance.  If the value is not in that Set, then do nothing."},
+"VM_appliance.set_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"enum",name:"vm_appliance_operation",values:["start","clean_shutdown","hard_shutdown","shutdown"]}},doc:"New value to set"}],doc:"Set the current_operations field of the given VM_appliance."},
+"VM_appliance.add_to_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"enum",name:"vm_appliance_operation",values:["start","clean_shutdown","hard_shutdown","shutdown"]},doc:"Value to add"}],doc:"Add the given key-value pair to the current_operations field of the given VM_appliance."},
+"VM_appliance.remove_from_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the current_operations field of the given VM_appliance.  If the key is not in that Map, then do nothing."},
+"VM_appliance.start":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"The VM appliance"},{name:"paused",ty:{ty:"bool"},doc:"Instantiate all VMs belonging to this appliance in paused state if set to true."}],doc:"Start all VMs in the appliance"},
+"VM_appliance.clean_shutdown":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"The VM appliance"}],doc:"Perform a clean shutdown of all the VMs in the appliance"},
+"VM_appliance.hard_shutdown":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"The VM appliance"}],doc:"Perform a hard shutdown of all the VMs in the appliance"},
+"VM_appliance.shutdown":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"The VM appliance"}],doc:"For each VM in the appliance, try to shut it down cleanly. If this fails, perform a hard shutdown of the VM."},
+"VM_appliance.assert_can_be_recovered":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"The VM appliance to recover"},{name:"session_to",ty:{ty:"ref",class:"session"},doc:"The session to which the VM appliance is to be recovered."}],doc:"Assert whether all SRs required to recover this VM appliance are available."},
+"VM_appliance.recover":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_appliance"},doc:"The VM appliance to recover"},{name:"session_to",ty:{ty:"ref",class:"session"},doc:"The session to which the VM appliance is to be recovered."},{name:"force",ty:{ty:"bool"},doc:"Whether the VMs should replace newer versions of themselves."}],doc:"Recover the VM appliance"},
+"VM_appliance.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VM_appliances known to the system."},
+"VM_appliance.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VM_appliances known to the system."},
+"VM_appliance.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VM_appliance references to VM_appliance records for all VM_appliances known to the system."},
+"DR_task.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"DR_task"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given DR_task."},
+"DR_task.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"DR_task"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class DR_task"},
+"DR_task.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the DR_tasks known to the system."},
+"DR_task.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the DR_task instance with the specified UUID."},
+"DR_task.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"DR_task"},doc:"All constructor arguments"}],doc:"Create a new DR_task instance, and return its handle."},
+"DR_task.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"DR_task"},doc:"reference to the object"}],doc:"Destroy the specified DR_task instance."},
+"DR_task.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"DR_task"},doc:"reference to the object"}],doc:"Get the uuid field of the given DR_task."},
+"DR_task.get_introduced_SRs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"DR_task"},doc:"reference to the object"}],doc:"Get the introduced_SRs field of the given DR_task."},
+"DR_task.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"DR_task"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given DR_task."},
+"DR_task.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"type",ty:{ty:"string"},doc:"The SR driver type of the SRs to introduce"},{name:"device_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"The device configuration of the SRs to introduce"},{name:"whitelist",ty:{ty:"set",contents:{ty:"string"}},doc:"The devices to use for disaster recovery"}],doc:"Create a disaster recovery task which will query the supplied list of devices"},
+"DR_task.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"DR_task"},doc:"The disaster recovery task to destroy"}],doc:"Destroy the disaster recovery task, detaching and forgetting any SRs introduced which are no longer required"},
+"DR_task.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the DR_tasks known to the system."},
+"DR_task.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the DR_tasks known to the system."},
+"DR_task.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of DR_task references to DR_task records for all DR_tasks known to the system."},
+"host.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given host."},
+"host.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class host"},
+"host.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the hosts known to the system."},
+"host.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the host instance with the specified UUID."},
+"host.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"host"},doc:"All constructor arguments"}],doc:"Create a new host instance, and return its handle."},
+"host.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Destroy the specified host instance."},
+"host.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the host instances with the given label."},
+"host.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the uuid field of the given host."},
+"host.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the name/label field of the given host."},
+"host.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the name/description field of the given host."},
+"host.get_memory_overhead":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the memory/overhead field of the given host."},
+"host.get_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the allowed_operations field of the given host."},
+"host.get_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the current_operations field of the given host."},
+"host.get_API_version_major":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the API_version/major field of the given host."},
+"host.get_API_version_minor":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the API_version/minor field of the given host."},
+"host.get_API_version_vendor":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the API_version/vendor field of the given host."},
+"host.get_API_version_vendor_implementation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the API_version/vendor_implementation field of the given host."},
+"host.get_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the enabled field of the given host."},
+"host.get_software_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the software_version field of the given host."},
+"host.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the other_config field of the given host."},
+"host.get_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the capabilities field of the given host."},
+"host.get_cpu_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the cpu_configuration field of the given host."},
+"host.get_sched_policy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the sched_policy field of the given host."},
+"host.get_supported_bootloaders":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the supported_bootloaders field of the given host."},
+"host.get_resident_VMs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the resident_VMs field of the given host."},
+"host.get_logging":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the logging field of the given host."},
+"host.get_PIFs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the PIFs field of the given host."},
+"host.get_suspend_image_sr":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the suspend_image_sr field of the given host."},
+"host.get_crash_dump_sr":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the crash_dump_sr field of the given host."},
+"host.get_crashdumps":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the crashdumps field of the given host."},
+"host.get_patches":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the patches field of the given host."},
+"host.get_PBDs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the PBDs field of the given host."},
+"host.get_host_CPUs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the host_CPUs field of the given host."},
+"host.get_cpu_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the cpu_info field of the given host."},
+"host.get_hostname":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the hostname field of the given host."},
+"host.get_address":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the address field of the given host."},
+"host.get_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the metrics field of the given host."},
+"host.get_license_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the license_params field of the given host."},
+"host.get_boot_free_mem":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the boot_free_mem field of the given host."},
+"host.get_ha_statefiles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the ha_statefiles field of the given host."},
+"host.get_ha_network_peers":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the ha_network_peers field of the given host."},
+"host.get_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the blobs field of the given host."},
+"host.get_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the tags field of the given host."},
+"host.get_external_auth_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the external_auth_type field of the given host."},
+"host.get_external_auth_service_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the external_auth_service_name field of the given host."},
+"host.get_external_auth_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the external_auth_configuration field of the given host."},
+"host.get_edition":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the edition field of the given host."},
+"host.get_license_server":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the license_server field of the given host."},
+"host.get_bios_strings":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the bios_strings field of the given host."},
+"host.get_power_on_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the power_on_mode field of the given host."},
+"host.get_power_on_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the power_on_config field of the given host."},
+"host.get_local_cache_sr":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the local_cache_sr field of the given host."},
+"host.get_chipset_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the chipset_info field of the given host."},
+"host.get_PCIs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the PCIs field of the given host."},
+"host.get_PGPUs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the PGPUs field of the given host."},
+"host.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given host."},
+"host.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given host."},
+"host.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given host."},
+"host.set_memory_overhead":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/overhead field of the given host."},
+"host.set_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"host_allowed_operations",values:["provision","evacuate","shutdown","reboot","power_on","vm_start","vm_resume","vm_migrate"]}},doc:"New value to set"}],doc:"Set the allowed_operations field of the given host."},
+"host.add_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"host_allowed_operations",values:["provision","evacuate","shutdown","reboot","power_on","vm_start","vm_resume","vm_migrate"]},doc:"New value to add"}],doc:"Add the given value to the allowed_operations field of the given host.  If the value is already in that Set, then do nothing."},
+"host.remove_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"host_allowed_operations",values:["provision","evacuate","shutdown","reboot","power_on","vm_start","vm_resume","vm_migrate"]},doc:"Value to remove"}],doc:"Remove the given value from the allowed_operations field of the given host.  If the value is not in that Set, then do nothing."},
+"host.set_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"enum",name:"host_allowed_operations",values:["provision","evacuate","shutdown","reboot","power_on","vm_start","vm_resume","vm_migrate"]}},doc:"New value to set"}],doc:"Set the current_operations field of the given host."},
+"host.add_to_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"enum",name:"host_allowed_operations",values:["provision","evacuate","shutdown","reboot","power_on","vm_start","vm_resume","vm_migrate"]},doc:"Value to add"}],doc:"Add the given key-value pair to the current_operations field of the given host."},
+"host.remove_from_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the current_operations field of the given host.  If the key is not in that Map, then do nothing."},
+"host.set_API_version_major":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the API_version/major field of the given host."},
+"host.set_API_version_minor":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the API_version/minor field of the given host."},
+"host.set_API_version_vendor":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the API_version/vendor field of the given host."},
+"host.set_API_version_vendor_implementation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the API_version/vendor_implementation field of the given host."},
+"host.add_to_API_version_vendor_implementation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the API_version/vendor_implementation field of the given host."},
+"host.remove_from_API_version_vendor_implementation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the API_version/vendor_implementation field of the given host.  If the key is not in that Map, then do nothing."},
+"host.set_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the enabled field of the given host."},
+"host.set_software_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the software_version field of the given host."},
+"host.add_to_software_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the software_version field of the given host."},
+"host.remove_from_software_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the software_version field of the given host.  If the key is not in that Map, then do nothing."},
+"host.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given host."},
+"host.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given host."},
+"host.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given host.  If the key is not in that Map, then do nothing."},
+"host.set_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the capabilities field of the given host."},
+"host.add_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the capabilities field of the given host.  If the value is already in that Set, then do nothing."},
+"host.remove_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the capabilities field of the given host.  If the value is not in that Set, then do nothing."},
+"host.set_cpu_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the cpu_configuration field of the given host."},
+"host.add_to_cpu_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the cpu_configuration field of the given host."},
+"host.remove_from_cpu_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the cpu_configuration field of the given host.  If the key is not in that Map, then do nothing."},
+"host.set_sched_policy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the sched_policy field of the given host."},
+"host.set_supported_bootloaders":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the supported_bootloaders field of the given host."},
+"host.add_supported_bootloaders":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the supported_bootloaders field of the given host.  If the value is already in that Set, then do nothing."},
+"host.remove_supported_bootloaders":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the supported_bootloaders field of the given host.  If the value is not in that Set, then do nothing."},
+"host.set_logging":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the logging field of the given host."},
+"host.add_to_logging":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the logging field of the given host."},
+"host.remove_from_logging":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the logging field of the given host.  If the key is not in that Map, then do nothing."},
+"host.set_suspend_image_sr":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"SR"},doc:"New value to set"}],doc:"Set the suspend_image_sr field of the given host."},
+"host.set_crash_dump_sr":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"SR"},doc:"New value to set"}],doc:"Set the crash_dump_sr field of the given host."},
+"host.set_cpu_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the cpu_info field of the given host."},
+"host.add_to_cpu_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the cpu_info field of the given host."},
+"host.remove_from_cpu_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the cpu_info field of the given host.  If the key is not in that Map, then do nothing."},
+"host.set_hostname":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the hostname field of the given host."},
+"host.set_address":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the address field of the given host."},
+"host.set_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host_metrics"},doc:"New value to set"}],doc:"Set the metrics field of the given host."},
+"host.set_license_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the license_params field of the given host."},
+"host.add_to_license_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the license_params field of the given host."},
+"host.remove_from_license_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the license_params field of the given host.  If the key is not in that Map, then do nothing."},
+"host.set_boot_free_mem":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the boot_free_mem field of the given host."},
+"host.set_ha_statefiles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the ha_statefiles field of the given host."},
+"host.add_ha_statefiles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the ha_statefiles field of the given host.  If the value is already in that Set, then do nothing."},
+"host.remove_ha_statefiles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the ha_statefiles field of the given host.  If the value is not in that Set, then do nothing."},
+"host.set_ha_network_peers":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the ha_network_peers field of the given host."},
+"host.add_ha_network_peers":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the ha_network_peers field of the given host.  If the value is already in that Set, then do nothing."},
+"host.remove_ha_network_peers":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the ha_network_peers field of the given host.  If the value is not in that Set, then do nothing."},
+"host.set_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"ref",class:"blob"}},doc:"New value to set"}],doc:"Set the blobs field of the given host."},
+"host.add_to_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"ref",class:"blob"},doc:"Value to add"}],doc:"Add the given key-value pair to the blobs field of the given host."},
+"host.remove_from_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the blobs field of the given host.  If the key is not in that Map, then do nothing."},
+"host.set_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the tags field of the given host."},
+"host.add_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the tags field of the given host.  If the value is already in that Set, then do nothing."},
+"host.remove_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the tags field of the given host.  If the value is not in that Set, then do nothing."},
+"host.set_external_auth_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the external_auth_type field of the given host."},
+"host.set_external_auth_service_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the external_auth_service_name field of the given host."},
+"host.set_external_auth_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the external_auth_configuration field of the given host."},
+"host.add_to_external_auth_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the external_auth_configuration field of the given host."},
+"host.remove_from_external_auth_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the external_auth_configuration field of the given host.  If the key is not in that Map, then do nothing."},
+"host.set_edition":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the edition field of the given host."},
+"host.set_license_server":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the license_server field of the given host."},
+"host.add_to_license_server":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the license_server field of the given host."},
+"host.remove_from_license_server":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the license_server field of the given host.  If the key is not in that Map, then do nothing."},
+"host.set_bios_strings":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the bios_strings field of the given host."},
+"host.add_to_bios_strings":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the bios_strings field of the given host."},
+"host.remove_from_bios_strings":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the bios_strings field of the given host.  If the key is not in that Map, then do nothing."},
+"host.set_power_on_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the power_on_mode field of the given host."},
+"host.set_power_on_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the power_on_config field of the given host."},
+"host.add_to_power_on_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the power_on_config field of the given host."},
+"host.remove_from_power_on_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the power_on_config field of the given host.  If the key is not in that Map, then do nothing."},
+"host.set_local_cache_sr":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"SR"},doc:"New value to set"}],doc:"Set the local_cache_sr field of the given host."},
+"host.set_chipset_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the chipset_info field of the given host."},
+"host.add_to_chipset_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the chipset_info field of the given host."},
+"host.remove_from_chipset_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the chipset_info field of the given host.  If the key is not in that Map, then do nothing."},
+"host.disable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to disable"}],doc:"Puts the host into a state in which no new VMs can be started. Currently active VMs on the host continue to execute."},
+"host.enable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to enable"}],doc:"Puts the host into a state in which new VMs can be started."},
+"host.shutdown":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to shutdown"}],doc:"Shutdown the host. (This function can only be called if there are no currently running VMs on the host and it is disabled.)"},
+"host.reboot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to reboot"}],doc:"Reboot the host. (This function can only be called if there are no currently running VMs on the host and it is disabled.)"},
+"host.dmesg":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to query"}],doc:"Get the host xen dmesg."},
+"host.dmesg_clear":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to query"}],doc:"Get the host xen dmesg, and clear the buffer."},
+"host.get_log":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to query"}],doc:"Get the host's log file"},
+"host.send_debug_keys":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"keys",ty:{ty:"string"},doc:"The keys to send"}],doc:"Inject the given string as debugging keys into Xen"},
+"host.bugreport_upload":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host on which to run xen-bugtool"},{name:"url",ty:{ty:"string"},doc:"The URL to upload to"},{name:"options",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Extra configuration operations"}],doc:"Run xen-bugtool --yestoall and upload the output to Citrix support"},
+"host.list_methods":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"List all supported methods"},
+"host.license_apply":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to upload the license to"},{name:"contents",ty:{ty:"string"},doc:"The contents of the license file, base64 encoded"}],doc:"Apply a new license to a host"},
+"host.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"unique identifier/object reference"},{name:"name_label",ty:{ty:"string"},doc:"The name of the new storage repository"},{name:"name_description",ty:{ty:"string"},doc:"The description of the new storage repository"},{name:"hostname",ty:{ty:"string"},doc:"Hostname"},{name:"address",ty:{ty:"string"},doc:"An address by which this host can be contacted by other members in its pool"},{name:"external_auth_type",ty:{ty:"string"},doc:"type of external authentication service configured; empty if none configured"},{name:"external_auth_service_name",ty:{ty:"string"},doc:"name of external authentication service configured; empty if none configured"},{name:"external_auth_configuration",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"configuration specific to external authentication service"},{name:"license_params",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"State of the current license"},{name:"edition",ty:{ty:"string"},doc:"XenServer edition"},{name:"license_server",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Contact information of the license server"},{name:"local_cache_sr",ty:{ty:"ref",class:"SR"},doc:"The SR that is used as a local cache"},{name:"chipset_info",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Information about chipset features"}],doc:"Create a new host record"},
+"host.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"The host record to remove"}],doc:"Destroy specified host record in database"},
+"host.power_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to power on"}],doc:"Attempt to power-on the host (if the capability exists)."},
+"host.set_license_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"The license_params"}],doc:"Set the new license details in the database, trigger a recomputation of the pool SKU"},
+"host.emergency_ha_disable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"This call disables HA on the local host. This should only be used with extreme care."},
+"host.ha_disarm_fencing":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to disarm"}],doc:"Disarms the fencing function of the HA subsystem. This function is extremely dangerous and should only be used as part of a controlled shutdown of the HA system."},
+"host.preconfigure_ha":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to modify"},{name:"statefiles",ty:{ty:"set",contents:{ty:"ref",class:"VDI"}},doc:"Set of statefile VDIs to use"},{name:"metadata_vdi",ty:{ty:"ref",class:"VDI"},doc:"VDI to use for Pool metadata"},{name:"generation",ty:{ty:"string"},doc:"UUID identifying this HA instance"}],doc:"Attach statefiles, generate config files but do not start the xHA daemon."},
+"host.ha_join_liveset":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host whose HA datmon to start"}],doc:"Block until this host joins the liveset."},
+"host.ha_disable_failover_decisions":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to disable failover decisions for"}],doc:"Prevents future failover decisions happening on this node. This function should only be used as part of a controlled shutdown of the HA system."},
+"host.ha_wait_for_shutdown_via_statefile":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host whose HA subsystem to query"}],doc:"Block until this host xHA daemon exits after having seen the invalid statefile. If the host loses statefile access then throw an exception"},
+"host.ha_stop_daemon":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host whose daemon should be stopped"}],doc:"Stops the HA daemon. This function is extremely dangerous and should only be used as part of a controlled shutdown of the HA system."},
+"host.ha_release_resources":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host whose resources should be cleaned up"}],doc:"Cleans up any resources on the host associated with this HA instance."},
+"host.ha_xapi_healthcheck":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Returns true if xapi appears to be functioning normally."},
+"host.local_assert_healthy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Returns nothing if this host is healthy, otherwise it throws an error explaining why the host is unhealthy"},
+"host.request_backup":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to send the request to"},{name:"generation",ty:{ty:"int"},doc:"The generation count of the master's database"},{name:"force",ty:{ty:"bool"},doc:"If this is true then the client _has_ to take a backup, otherwise it's just an 'offer'"}],doc:"Request this host performs a database backup"},
+"host.request_config_file_sync":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to send the request to"},{name:"hash",ty:{ty:"string"},doc:"The hash of the master's dom0 config files package"}],doc:"Request this host syncs dom0 config files"},
+"host.propose_new_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"address",ty:{ty:"string"},doc:"The address of the Host which is proposed as the new master"},{name:"manual",ty:{ty:"bool"},doc:"True if this call is being invoked by the user manually, false if automatic"}],doc:"First phase of a two-phase commit protocol to set the new master. If the host has already committed to another configuration or if the proposed new master is not in this node's membership set then the call will return an exception."},
+"host.commit_new_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"address",ty:{ty:"string"},doc:"The address of the Host which should be committed as the new master"}],doc:"Second phase of a two-phase commit protocol to set the new master."},
+"host.abort_new_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"address",ty:{ty:"string"},doc:"The address of the Host which is proposed as the new master"}],doc:"Causes the new master transaction to abort"},
+"host.get_data_sources":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to interrogate"}],doc:""},
+"host.record_data_source":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"data_source",ty:{ty:"string"},doc:"The data source to record"}],doc:"Start recording the specified data source"},
+"host.query_data_source":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"data_source",ty:{ty:"string"},doc:"The data source to query"}],doc:"Query the latest value of the specified data source"},
+"host.forget_data_source_archives":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"data_source",ty:{ty:"string"},doc:"The data source whose archives are to be forgotten"}],doc:"Forget the recorded statistics related to the specified data source"},
+"host.assert_can_evacuate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to evacuate"}],doc:"Check this host can be evacuated."},
+"host.get_vms_which_prevent_evacuation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"The host to query"}],doc:"Return a set of VMs which prevent the host being evacuated, with per-VM error codes"},
+"host.get_uncooperative_resident_VMs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"The host to query"}],doc:"Return a set of VMs which are not co-operating with the host's memory control system"},
+"host.get_uncooperative_domains":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"The host to query"}],doc:"Return the set of domain uuids which are not co-operating with the host's memory control system"},
+"host.evacuate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to evacuate"}],doc:"Migrate all VMs off of this host, where possible."},
+"host.signal_networking_change":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Signals that the management IP address or hostname has been changed beneath us."},
+"host.notify":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"ty",ty:{ty:"string"},doc:"type of the notification"},{name:"params",ty:{ty:"string"},doc:"arguments of the notification (can be empty)"}],doc:"Notify an event"},
+"host.syslog_reconfigure":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"Tell the host to reread its Host.logging parameters and reconfigure itself accordingly"}],doc:"Re-configure syslog logging"},
+"host.management_reconfigure":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"pif",ty:{ty:"ref",class:"PIF"},doc:"reference to a PIF object corresponding to the management interface"}],doc:"Reconfigure the management network interface"},
+"host.local_management_reconfigure":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"interface",ty:{ty:"string"},doc:"name of the interface to use as a management interface"}],doc:"Reconfigure the management network interface. Should only be used if Host.management_reconfigure is impossible because the network configuration is broken."},
+"host.management_disable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Disable the management network interface"},
+"host.get_system_status_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to interrogate"}],doc:""},
+"host.get_diagnostic_timing_stats":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to interrogate"}],doc:"Return timing statistics for diagnostic purposes"},
+"host.restart_agent":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host on which you want to restart the agent"}],doc:"Restarts the agent after a 10 second pause. WARNING: this is a dangerous operation. Any operations in progress will be aborted, and unrecoverable data loss may occur. The caller is responsible for ensuring that there are no operations in progress when this method is called."},
+"host.shutdown_agent":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Shuts the agent down after a 10 second pause. WARNING: this is a dangerous operation. Any operations in progress will be aborted, and unrecoverable data loss may occur. The caller is responsible for ensuring that there are no operations in progress when this method is called."},
+"host.set_hostname_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host whose host name to set"},{name:"hostname",ty:{ty:"string"},doc:"The new host name"}],doc:"Sets the host name to the specified string.  Both the API and lower-level system hostname are changed immediately."},
+"host.is_in_emergency_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Diagnostics call to discover if host is in emergency mode"},
+"host.compute_free_memory":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to send the request to"}],doc:"Computes the amount of free memory on the host."},
+"host.compute_memory_overhead":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host for which to compute the memory overhead"}],doc:"Computes the virtualization memory overhead of a host."},
+"host.tickle_heartbeat":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host calling the function, and whose heartbeat to tickle"},{name:"stuff",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Anything else we want to let the master know"}],doc:"Needs to be called every 30 seconds for the master to believe the host is alive"},
+"host.sync_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to whom the data should be sent"}],doc:"This causes the synchronisation of the non-database data (messages, RRDs and so on) stored on the master to be synchronised with the host"},
+"host.backup_rrds":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"Schedule a backup of the RRDs of this host"},{name:"delay",ty:{ty:"float"},doc:"Delay in seconds from when the call is received to perform the backup"}],doc:"This causes the RRDs to be backed up to the master"},
+"host.create_new_blob":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"name",ty:{ty:"string"},doc:"The name associated with the blob"},{name:"mime_type",ty:{ty:"string"},doc:"The mime type for the data. Empty string translates to application/octet-stream"}],doc:"Create a placeholder for a named binary blob of data that is associated with this host"},
+"host.call_plugin":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"plugin",ty:{ty:"string"},doc:"The name of the plugin"},{name:"fn",ty:{ty:"string"},doc:"The name of the function within the plugin"},{name:"args",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Arguments for the function"}],doc:"Call a XenAPI plugin on this host"},
+"host.get_servertime":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host whose clock should be queried"}],doc:"This call queries the host's clock for the current time"},
+"host.get_server_localtime":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host whose clock should be queried"}],doc:"This call queries the host's clock for the current time in the host's local timezone"},
+"host.enable_binary_storage":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"}],doc:"Enable binary storage on a particular host, for storing RRDs, messages and blobs"},
+"host.disable_binary_storage":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"}],doc:"Disable binary storage on a particular host, deleting stored RRDs, messages and blobs"},
+"host.enable_external_auth":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host whose external authentication should be enabled"},{name:"config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"A list of key-values containing the configuration data"},{name:"service_name",ty:{ty:"string"},doc:"The name of the service"},{name:"auth_type",ty:{ty:"string"},doc:"The type of authentication (e.g. AD for Active Directory)"}],doc:"This call enables external authentication on a host"},
+"host.disable_external_auth":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host whose external authentication should be disabled"},{name:"config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Optional parameters as a list of key-values containing the configuration data"}],doc:"This call disables external authentication on the local host"},
+"host.retrieve_wlb_evacuate_recommendations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"The host to query"}],doc:"Retrieves recommended host migrations to perform when evacuating the host from the wlb server. If a VM cannot be migrated from the host the reason is listed instead of a recommendation."},
+"host.certificate_install":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"name",ty:{ty:"string"},doc:"A name to give the certificate"},{name:"cert",ty:{ty:"string"},doc:"The certificate"}],doc:"Install an SSL certificate to this host."},
+"host.certificate_uninstall":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"name",ty:{ty:"string"},doc:"The certificate name"}],doc:"Remove an SSL certificate from this host."},
+"host.certificate_list":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"}],doc:"List all installed SSL certificates."},
+"host.crl_install":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"name",ty:{ty:"string"},doc:"A name to give the CRL"},{name:"crl",ty:{ty:"string"},doc:"The CRL"}],doc:"Install an SSL certificate revocation list to this host."},
+"host.crl_uninstall":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"name",ty:{ty:"string"},doc:"The CRL name"}],doc:"Remove an SSL certificate revocation list from this host."},
+"host.crl_list":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"}],doc:"List all installed SSL certificate revocation lists."},
+"host.certificate_sync":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"}],doc:"Resync installed SSL certificates and CRLs."},
+"host.get_server_certificate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"}],doc:"Get the installed server SSL certificate."},
+"host.update_pool_secret":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"pool_secret",ty:{ty:"string"},doc:"The new pool secret"}],doc:""},
+"host.update_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"master_address",ty:{ty:"string"},doc:"The new master address"}],doc:""},
+"host.attach_static_vdis":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to modify"},{name:"vdi_reason_map",ty:{ty:"map",keys:{ty:"ref",class:"VDI"},values:{ty:"string"}},doc:"List of VDI+reason pairs to attach"}],doc:"Statically attach VDIs on a host."},
+"host.detach_static_vdis":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to modify"},{name:"vdis",ty:{ty:"set",contents:{ty:"ref",class:"VDI"}},doc:"Set of VDIs to detach"}],doc:"Detach static VDIs from a host."},
+"host.set_localdb_key":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to modify"},{name:"key",ty:{ty:"string"},doc:"Key to change"},{name:"value",ty:{ty:"string"},doc:"Value to set"}],doc:"Set a key in the local DB of the host."},
+"host.apply_edition":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"edition",ty:{ty:"string"},doc:"The requested edition"}],doc:"Change to another edition, or reactivate the current edition after a license has expired. This may be subject to the successful checkout of an appropriate license."},
+"host.refresh_pack_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to modify"}],doc:"Refresh the list of installed Supplemental Packs."},
+"host.set_power_on_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"power_on_mode",ty:{ty:"string"},doc:"power-on-mode can be empty,iLO,wake-on-lan, DRAC or other"},{name:"power_on_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Power on config"}],doc:"Set the power-on-mode, host, user and password "},
+"host.set_cpu_features":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"features",ty:{ty:"string"},doc:"The features string (32 hexadecimal digits)"}],doc:"Set the CPU features to be used after a reboot, if the given features string is valid."},
+"host.reset_cpu_features":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"}],doc:"Remove the feature mask, such that after a reboot all features of the CPU are enabled."},
+"host.reset_networking":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to modify"}],doc:"Purge all network-related metadata associated with the given host."},
+"host.enable_local_storage_caching":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR to use as a local cache"}],doc:"Enable the use of a local SR for caching purposes"},
+"host.disable_local_storage_caching":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"}],doc:"Disable the use of a local SR for caching purposes"},
+"host.get_sm_diagnostics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"}],doc:"Return live SM diagnostics"},
+"host.get_thread_diagnostics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"}],doc:"Return live thread diagnostics"},
+"host.sm_dp_destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"dp",ty:{ty:"string"},doc:"The datapath"},{name:"allow_leak",ty:{ty:"bool"},doc:"If true, all records of the datapath will be removed even if the datapath could not be destroyed cleanly."}],doc:"Attempt to cleanup and destroy a named SM datapath"},
+"host.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the hosts known to the system."},
+"host.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the hosts known to the system."},
+"host.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of host references to host records for all hosts known to the system."},
+"host_crashdump.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given host_crashdump."},
+"host_crashdump.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class host_crashdump"},
+"host_crashdump.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the host_crashdumps known to the system."},
+"host_crashdump.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the host_crashdump instance with the specified UUID."},
+"host_crashdump.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"host_crashdump"},doc:"All constructor arguments"}],doc:"Create a new host_crashdump instance, and return its handle."},
+"host_crashdump.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"Destroy the specified host_crashdump instance."},
+"host_crashdump.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"Get the uuid field of the given host_crashdump."},
+"host_crashdump.get_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"Get the host field of the given host_crashdump."},
+"host_crashdump.get_timestamp":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"Get the timestamp field of the given host_crashdump."},
+"host_crashdump.get_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"Get the size field of the given host_crashdump."},
+"host_crashdump.get_filename":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"Get the filename field of the given host_crashdump."},
+"host_crashdump.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"Get the other_config field of the given host_crashdump."},
+"host_crashdump.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given host_crashdump."},
+"host_crashdump.set_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the host field of the given host_crashdump."},
+"host_crashdump.set_timestamp":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the timestamp field of the given host_crashdump."},
+"host_crashdump.set_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the size field of the given host_crashdump."},
+"host_crashdump.set_filename":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the filename field of the given host_crashdump."},
+"host_crashdump.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given host_crashdump."},
+"host_crashdump.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given host_crashdump."},
+"host_crashdump.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given host_crashdump.  If the key is not in that Map, then do nothing."},
+"host_crashdump.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"The host crashdump to destroy"}],doc:"Destroy specified host crash dump, removing it from the disk."},
+"host_crashdump.upload":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"The host crashdump to upload"},{name:"url",ty:{ty:"string"},doc:"The URL to upload to"},{name:"options",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Extra configuration operations"}],doc:"Upload the specified host crash dump to a specified URL"},
+"host_crashdump.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the host_crashdumps known to the system."},
+"host_crashdump.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the host_crashdumps known to the system."},
+"host_crashdump.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of host_crashdump references to host_crashdump records for all host_crashdumps known to the system."},
+"host_patch.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given host_patch."},
+"host_patch.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class host_patch"},
+"host_patch.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the host_patchs known to the system."},
+"host_patch.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the host_patch instance with the specified UUID."},
+"host_patch.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"host_patch"},doc:"All constructor arguments"}],doc:"Create a new host_patch instance, and return its handle."},
+"host_patch.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Destroy the specified host_patch instance."},
+"host_patch.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the host_patch instances with the given label."},
+"host_patch.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the uuid field of the given host_patch."},
+"host_patch.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the name/label field of the given host_patch."},
+"host_patch.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the name/description field of the given host_patch."},
+"host_patch.get_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the version field of the given host_patch."},
+"host_patch.get_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the host field of the given host_patch."},
+"host_patch.get_filename":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the filename field of the given host_patch."},
+"host_patch.get_applied":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the applied field of the given host_patch."},
+"host_patch.get_timestamp_applied":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the timestamp_applied field of the given host_patch."},
+"host_patch.get_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the size field of the given host_patch."},
+"host_patch.get_pool_patch":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the pool_patch field of the given host_patch."},
+"host_patch.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the other_config field of the given host_patch."},
+"host_patch.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given host_patch."},
+"host_patch.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given host_patch."},
+"host_patch.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given host_patch."},
+"host_patch.set_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the version field of the given host_patch."},
+"host_patch.set_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the host field of the given host_patch."},
+"host_patch.set_filename":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the filename field of the given host_patch."},
+"host_patch.set_applied":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the applied field of the given host_patch."},
+"host_patch.set_timestamp_applied":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the timestamp_applied field of the given host_patch."},
+"host_patch.set_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the size field of the given host_patch."},
+"host_patch.set_pool_patch":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"pool_patch"},doc:"New value to set"}],doc:"Set the pool_patch field of the given host_patch."},
+"host_patch.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given host_patch."},
+"host_patch.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given host_patch."},
+"host_patch.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given host_patch.  If the key is not in that Map, then do nothing."},
+"host_patch.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"The patch to destroy"}],doc:"Destroy the specified host patch, removing it from the disk. This does NOT reverse the patch"},
+"host_patch.apply":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"The patch to apply"}],doc:"Apply the selected patch and return its output"},
+"host_patch.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the host_patchs known to the system."},
+"host_patch.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the host_patchs known to the system."},
+"host_patch.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of host_patch references to host_patch records for all host_patchs known to the system."},
+"host_metrics.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given host_metrics."},
+"host_metrics.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class host_metrics"},
+"host_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the host_metrics instances known to the system."},
+"host_metrics.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the host_metrics instance with the specified UUID."},
+"host_metrics.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"host_metrics"},doc:"All constructor arguments"}],doc:"Create a new host_metrics instance, and return its handle."},
+"host_metrics.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"Destroy the specified host_metrics instance."},
+"host_metrics.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"Get the uuid field of the given host_metrics."},
+"host_metrics.get_memory_total":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"Get the memory/total field of the given host_metrics."},
+"host_metrics.get_memory_free":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"Get the memory/free field of the given host_metrics."},
+"host_metrics.get_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"Get the live field of the given host_metrics."},
+"host_metrics.get_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"Get the last_updated field of the given host_metrics."},
+"host_metrics.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"Get the other_config field of the given host_metrics."},
+"host_metrics.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given host_metrics."},
+"host_metrics.set_memory_total":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/total field of the given host_metrics."},
+"host_metrics.set_memory_free":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/free field of the given host_metrics."},
+"host_metrics.set_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the live field of the given host_metrics."},
+"host_metrics.set_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the last_updated field of the given host_metrics."},
+"host_metrics.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given host_metrics."},
+"host_metrics.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given host_metrics."},
+"host_metrics.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given host_metrics.  If the key is not in that Map, then do nothing."},
+"host_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the host_metrics instances known to the system."},
+"host_metrics.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the host_metrics instances known to the system."},
+"host_metrics.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of host_metrics references to host_metrics records for all host_metrics instances known to the system."},
+"host_cpu.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given host_cpu."},
+"host_cpu.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class host_cpu"},
+"host_cpu.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the host_cpus known to the system."},
+"host_cpu.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the host_cpu instance with the specified UUID."},
+"host_cpu.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"host_cpu"},doc:"All constructor arguments"}],doc:"Create a new host_cpu instance, and return its handle."},
+"host_cpu.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Destroy the specified host_cpu instance."},
+"host_cpu.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the uuid field of the given host_cpu."},
+"host_cpu.get_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the host field of the given host_cpu."},
+"host_cpu.get_number":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the number field of the given host_cpu."},
+"host_cpu.get_vendor":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the vendor field of the given host_cpu."},
+"host_cpu.get_speed":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the speed field of the given host_cpu."},
+"host_cpu.get_modelname":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the modelname field of the given host_cpu."},
+"host_cpu.get_family":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the family field of the given host_cpu."},
+"host_cpu.get_model":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the model field of the given host_cpu."},
+"host_cpu.get_stepping":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the stepping field of the given host_cpu."},
+"host_cpu.get_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the flags field of the given host_cpu."},
+"host_cpu.get_features":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the features field of the given host_cpu."},
+"host_cpu.get_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the utilisation field of the given host_cpu."},
+"host_cpu.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the other_config field of the given host_cpu."},
+"host_cpu.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given host_cpu."},
+"host_cpu.set_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the host field of the given host_cpu."},
+"host_cpu.set_number":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the number field of the given host_cpu."},
+"host_cpu.set_vendor":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the vendor field of the given host_cpu."},
+"host_cpu.set_speed":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the speed field of the given host_cpu."},
+"host_cpu.set_modelname":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the modelname field of the given host_cpu."},
+"host_cpu.set_family":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the family field of the given host_cpu."},
+"host_cpu.set_model":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the model field of the given host_cpu."},
+"host_cpu.set_stepping":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the stepping field of the given host_cpu."},
+"host_cpu.set_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the flags field of the given host_cpu."},
+"host_cpu.set_features":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the features field of the given host_cpu."},
+"host_cpu.set_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the utilisation field of the given host_cpu."},
+"host_cpu.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given host_cpu."},
+"host_cpu.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given host_cpu."},
+"host_cpu.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given host_cpu.  If the key is not in that Map, then do nothing."},
+"host_cpu.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the host_cpus known to the system."},
+"host_cpu.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the host_cpus known to the system."},
+"host_cpu.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of host_cpu references to host_cpu records for all host_cpus known to the system."},
+"network.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given network."},
+"network.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class network"},
+"network.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the networks known to the system."},
+"network.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the network instance with the specified UUID."},
+"network.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"network"},doc:"All constructor arguments"}],doc:"Create a new network instance, and return its handle."},
+"network.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Destroy the specified network instance."},
+"network.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the network instances with the given label."},
+"network.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the uuid field of the given network."},
+"network.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the name/label field of the given network."},
+"network.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the name/description field of the given network."},
+"network.get_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the allowed_operations field of the given network."},
+"network.get_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the current_operations field of the given network."},
+"network.get_VIFs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the VIFs field of the given network."},
+"network.get_PIFs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the PIFs field of the given network."},
+"network.get_MTU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the MTU field of the given network."},
+"network.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the other_config field of the given network."},
+"network.get_bridge":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the bridge field of the given network."},
+"network.get_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the blobs field of the given network."},
+"network.get_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the tags field of the given network."},
+"network.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given network."},
+"network.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given network."},
+"network.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given network."},
+"network.set_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"network_operations",values:["attaching"]}},doc:"New value to set"}],doc:"Set the allowed_operations field of the given network."},
+"network.add_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"network_operations",values:["attaching"]},doc:"New value to add"}],doc:"Add the given value to the allowed_operations field of the given network.  If the value is already in that Set, then do nothing."},
+"network.remove_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"network_operations",values:["attaching"]},doc:"Value to remove"}],doc:"Remove the given value from the allowed_operations field of the given network.  If the value is not in that Set, then do nothing."},
+"network.set_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"enum",name:"network_operations",values:["attaching"]}},doc:"New value to set"}],doc:"Set the current_operations field of the given network."},
+"network.add_to_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"enum",name:"network_operations",values:["attaching"]},doc:"Value to add"}],doc:"Add the given key-value pair to the current_operations field of the given network."},
+"network.remove_from_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the current_operations field of the given network.  If the key is not in that Map, then do nothing."},
+"network.set_MTU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the MTU field of the given network."},
+"network.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given network."},
+"network.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given network."},
+"network.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given network.  If the key is not in that Map, then do nothing."},
+"network.set_bridge":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the bridge field of the given network."},
+"network.set_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"ref",class:"blob"}},doc:"New value to set"}],doc:"Set the blobs field of the given network."},
+"network.add_to_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"ref",class:"blob"},doc:"Value to add"}],doc:"Add the given key-value pair to the blobs field of the given network."},
+"network.remove_from_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the blobs field of the given network.  If the key is not in that Map, then do nothing."},
+"network.set_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the tags field of the given network."},
+"network.add_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the tags field of the given network.  If the value is already in that Set, then do nothing."},
+"network.remove_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the tags field of the given network.  If the value is not in that Set, then do nothing."},
+"network.attach":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"network",ty:{ty:"ref",class:"network"},doc:"network to which this interface should be connected"},{name:"host",ty:{ty:"ref",class:"host"},doc:"physical machine to which this PIF is connected"}],doc:"Makes the network immediately available on a particular host"},
+"network.pool_introduce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"name_label",ty:{ty:"string"},doc:""},{name:"name_description",ty:{ty:"string"},doc:""},{name:"MTU",ty:{ty:"int"},doc:""},{name:"other_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:""},{name:"bridge",ty:{ty:"string"},doc:""}],doc:"Create a new network record in the database only"},
+"network.create_new_blob":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"network",ty:{ty:"ref",class:"network"},doc:"The network"},{name:"name",ty:{ty:"string"},doc:"The name associated with the blob"},{name:"mime_type",ty:{ty:"string"},doc:"The mime type for the data. Empty string translates to application/octet-stream"}],doc:"Create a placeholder for a named binary blob of data that is associated with this pool"},
+"network.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the networks known to the system."},
+"network.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the networks known to the system."},
+"network.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of network references to network records for all networks known to the system."},
+"VIF.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VIF."},
+"VIF.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VIF"},
+"VIF.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VIFs known to the system."},
+"VIF.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VIF instance with the specified UUID."},
+"VIF.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VIF"},doc:"All constructor arguments"}],doc:"Create a new VIF instance, and return its handle."},
+"VIF.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Destroy the specified VIF instance."},
+"VIF.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the uuid field of the given VIF."},
+"VIF.get_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the allowed_operations field of the given VIF."},
+"VIF.get_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the current_operations field of the given VIF."},
+"VIF.get_device":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the device field of the given VIF."},
+"VIF.get_network":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the network field of the given VIF."},
+"VIF.get_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the VM field of the given VIF."},
+"VIF.get_MAC":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the MAC field of the given VIF."},
+"VIF.get_MTU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the MTU field of the given VIF."},
+"VIF.get_reserved":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the reserved field of the given VIF."},
+"VIF.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the other_config field of the given VIF."},
+"VIF.get_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the currently_attached field of the given VIF."},
+"VIF.get_status_code":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the status_code field of the given VIF."},
+"VIF.get_status_detail":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the status_detail field of the given VIF."},
+"VIF.get_runtime_properties":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the runtime_properties field of the given VIF."},
+"VIF.get_qos_algorithm_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the qos/algorithm_type field of the given VIF."},
+"VIF.get_qos_algorithm_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the qos/algorithm_params field of the given VIF."},
+"VIF.get_qos_supported_algorithms":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the qos/supported_algorithms field of the given VIF."},
+"VIF.get_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the metrics field of the given VIF."},
+"VIF.get_MAC_autogenerated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the MAC_autogenerated field of the given VIF."},
+"VIF.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VIF."},
+"VIF.set_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"vif_operations",values:["attach","plug","unplug"]}},doc:"New value to set"}],doc:"Set the allowed_operations field of the given VIF."},
+"VIF.add_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vif_operations",values:["attach","plug","unplug"]},doc:"New value to add"}],doc:"Add the given value to the allowed_operations field of the given VIF.  If the value is already in that Set, then do nothing."},
+"VIF.remove_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vif_operations",values:["attach","plug","unplug"]},doc:"Value to remove"}],doc:"Remove the given value from the allowed_operations field of the given VIF.  If the value is not in that Set, then do nothing."},
+"VIF.set_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"enum",name:"vif_operations",values:["attach","plug","unplug"]}},doc:"New value to set"}],doc:"Set the current_operations field of the given VIF."},
+"VIF.add_to_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"enum",name:"vif_operations",values:["attach","plug","unplug"]},doc:"Value to add"}],doc:"Add the given key-value pair to the current_operations field of the given VIF."},
+"VIF.remove_from_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the current_operations field of the given VIF.  If the key is not in that Map, then do nothing."},
+"VIF.set_device":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the device field of the given VIF."},
+"VIF.set_network":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"network"},doc:"New value to set"}],doc:"Set the network field of the given VIF."},
+"VIF.set_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to set"}],doc:"Set the VM field of the given VIF."},
+"VIF.set_MAC":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the MAC field of the given VIF."},
+"VIF.set_MTU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the MTU field of the given VIF."},
+"VIF.set_reserved":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the reserved field of the given VIF."},
+"VIF.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VIF."},
+"VIF.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VIF."},
+"VIF.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VIF.  If the key is not in that Map, then do nothing."},
+"VIF.set_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the currently_attached field of the given VIF."},
+"VIF.set_status_code":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the status_code field of the given VIF."},
+"VIF.set_status_detail":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the status_detail field of the given VIF."},
+"VIF.set_runtime_properties":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the runtime_properties field of the given VIF."},
+"VIF.add_to_runtime_properties":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the runtime_properties field of the given VIF."},
+"VIF.remove_from_runtime_properties":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the runtime_properties field of the given VIF.  If the key is not in that Map, then do nothing."},
+"VIF.set_qos_algorithm_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the qos/algorithm_type field of the given VIF."},
+"VIF.set_qos_algorithm_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the qos/algorithm_params field of the given VIF."},
+"VIF.add_to_qos_algorithm_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the qos/algorithm_params field of the given VIF."},
+"VIF.remove_from_qos_algorithm_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the qos/algorithm_params field of the given VIF.  If the key is not in that Map, then do nothing."},
+"VIF.set_qos_supported_algorithms":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the qos/supported_algorithms field of the given VIF."},
+"VIF.add_qos_supported_algorithms":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the qos/supported_algorithms field of the given VIF.  If the value is already in that Set, then do nothing."},
+"VIF.remove_qos_supported_algorithms":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the qos/supported_algorithms field of the given VIF.  If the value is not in that Set, then do nothing."},
+"VIF.set_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VIF_metrics"},doc:"New value to set"}],doc:"Set the metrics field of the given VIF."},
+"VIF.set_MAC_autogenerated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the MAC_autogenerated field of the given VIF."},
+"VIF.plug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"The VIF to hotplug"}],doc:"Hotplug the specified VIF, dynamically attaching it to the running VM"},
+"VIF.unplug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"The VIF to hot-unplug"}],doc:"Hot-unplug the specified VIF, dynamically unattaching it from the running VM"},
+"VIF.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VIFs known to the system."},
+"VIF.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VIFs known to the system."},
+"VIF.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VIF references to VIF records for all VIFs known to the system."},
+"VIF_metrics.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VIF_metrics."},
+"VIF_metrics.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VIF_metrics"},
+"VIF_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VIF_metrics instances known to the system."},
+"VIF_metrics.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VIF_metrics instance with the specified UUID."},
+"VIF_metrics.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VIF_metrics"},doc:"All constructor arguments"}],doc:"Create a new VIF_metrics instance, and return its handle."},
+"VIF_metrics.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"}],doc:"Destroy the specified VIF_metrics instance."},
+"VIF_metrics.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"}],doc:"Get the uuid field of the given VIF_metrics."},
+"VIF_metrics.get_io_read_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"}],doc:"Get the io/read_kbs field of the given VIF_metrics."},
+"VIF_metrics.get_io_write_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"}],doc:"Get the io/write_kbs field of the given VIF_metrics."},
+"VIF_metrics.get_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"}],doc:"Get the last_updated field of the given VIF_metrics."},
+"VIF_metrics.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"}],doc:"Get the other_config field of the given VIF_metrics."},
+"VIF_metrics.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VIF_metrics."},
+"VIF_metrics.set_io_read_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the io/read_kbs field of the given VIF_metrics."},
+"VIF_metrics.set_io_write_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the io/write_kbs field of the given VIF_metrics."},
+"VIF_metrics.set_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the last_updated field of the given VIF_metrics."},
+"VIF_metrics.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VIF_metrics."},
+"VIF_metrics.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VIF_metrics."},
+"VIF_metrics.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VIF_metrics.  If the key is not in that Map, then do nothing."},
+"VIF_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VIF_metrics instances known to the system."},
+"VIF_metrics.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VIF_metrics instances known to the system."},
+"VIF_metrics.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VIF_metrics references to VIF_metrics records for all VIF_metrics instances known to the system."},
+"PIF.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given PIF."},
+"PIF.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class PIF"},
+"PIF.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the PIFs known to the system."},
+"PIF.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the PIF instance with the specified UUID."},
+"PIF.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"PIF"},doc:"All constructor arguments"}],doc:"Create a new PIF instance, and return its handle."},
+"PIF.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Destroy the specified PIF instance."},
+"PIF.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the uuid field of the given PIF."},
+"PIF.get_device":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the device field of the given PIF."},
+"PIF.get_network":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the network field of the given PIF."},
+"PIF.get_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the host field of the given PIF."},
+"PIF.get_MAC":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the MAC field of the given PIF."},
+"PIF.get_MTU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the MTU field of the given PIF."},
+"PIF.get_VLAN":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the VLAN field of the given PIF."},
+"PIF.get_device_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the device_name field of the given PIF."},
+"PIF.get_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the metrics field of the given PIF."},
+"PIF.get_physical":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the physical field of the given PIF."},
+"PIF.get_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the currently_attached field of the given PIF."},
+"PIF.get_ip_configuration_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the ip_configuration_mode field of the given PIF."},
+"PIF.get_IP":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the IP field of the given PIF."},
+"PIF.get_netmask":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the netmask field of the given PIF."},
+"PIF.get_gateway":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the gateway field of the given PIF."},
+"PIF.get_DNS":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the DNS field of the given PIF."},
+"PIF.get_bond_slave_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the bond_slave_of field of the given PIF."},
+"PIF.get_bond_master_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the bond_master_of field of the given PIF."},
+"PIF.get_VLAN_master_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the VLAN_master_of field of the given PIF."},
+"PIF.get_VLAN_slave_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the VLAN_slave_of field of the given PIF."},
+"PIF.get_management":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the management field of the given PIF."},
+"PIF.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the other_config field of the given PIF."},
+"PIF.get_disallow_unplug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the disallow_unplug field of the given PIF."},
+"PIF.get_tunnel_access_PIF_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the tunnel_access_PIF_of field of the given PIF."},
+"PIF.get_tunnel_transport_PIF_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the tunnel_transport_PIF_of field of the given PIF."},
+"PIF.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given PIF."},
+"PIF.set_device":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the device field of the given PIF."},
+"PIF.set_network":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"network"},doc:"New value to set"}],doc:"Set the network field of the given PIF."},
+"PIF.set_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the host field of the given PIF."},
+"PIF.set_MAC":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the MAC field of the given PIF."},
+"PIF.set_MTU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the MTU field of the given PIF."},
+"PIF.set_VLAN":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the VLAN field of the given PIF."},
+"PIF.set_device_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the device_name field of the given PIF."},
+"PIF.set_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PIF_metrics"},doc:"New value to set"}],doc:"Set the metrics field of the given PIF."},
+"PIF.set_physical":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the physical field of the given PIF."},
+"PIF.set_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the currently_attached field of the given PIF."},
+"PIF.set_ip_configuration_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"ip_configuration_mode",values:["None","DHCP","Static"]},doc:"New value to set"}],doc:"Set the ip_configuration_mode field of the given PIF."},
+"PIF.set_IP":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the IP field of the given PIF."},
+"PIF.set_netmask":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the netmask field of the given PIF."},
+"PIF.set_gateway":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the gateway field of the given PIF."},
+"PIF.set_DNS":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the DNS field of the given PIF."},
+"PIF.set_bond_slave_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"Bond"},doc:"New value to set"}],doc:"Set the bond_slave_of field of the given PIF."},
+"PIF.set_VLAN_master_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VLAN"},doc:"New value to set"}],doc:"Set the VLAN_master_of field of the given PIF."},
+"PIF.set_management":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the management field of the given PIF."},
+"PIF.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given PIF."},
+"PIF.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given PIF."},
+"PIF.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given PIF.  If the key is not in that Map, then do nothing."},
+"PIF.set_disallow_unplug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the disallow_unplug field of the given PIF."},
+"PIF.create_VLAN":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"device",ty:{ty:"string"},doc:"physical interface on which to create the VLAN interface"},{name:"network",ty:{ty:"ref",class:"network"},doc:"network to which this interface should be connected"},{name:"host",ty:{ty:"ref",class:"host"},doc:"physical machine to which this PIF is connected"},{name:"VLAN",ty:{ty:"int"},doc:"VLAN tag for the new interface"}],doc:"Create a VLAN interface from an existing physical interface. This call is deprecated: use VLAN.create instead"},
+"PIF.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"the PIF object to destroy"}],doc:"Destroy the PIF object (provided it is a VLAN interface). This call is deprecated: use VLAN.destroy or Bond.destroy instead"},
+"PIF.reconfigure_ip":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"the PIF object to reconfigure"},{name:"mode",ty:{ty:"enum",name:"ip_configuration_mode",values:["None","DHCP","Static"]},doc:"whether to use dynamic/static/no-assignment"},{name:"IP",ty:{ty:"string"},doc:"the new IP address"},{name:"netmask",ty:{ty:"string"},doc:"the new netmask"},{name:"gateway",ty:{ty:"string"},doc:"the new gateway"},{name:"DNS",ty:{ty:"string"},doc:"the new DNS settings"}],doc:"Reconfigure the IP address settings for this interface"},
+"PIF.scan":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host on which to scan"}],doc:"Scan for physical interfaces on a host and create PIF objects to represent them"},
+"PIF.introduce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host on which the interface exists"},{name:"MAC",ty:{ty:"string"},doc:"The MAC address of the interface"},{name:"device",ty:{ty:"string"},doc:"The device name to use for the interface"}],doc:"Create a PIF object matching a particular network interface"},
+"PIF.forget":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"The PIF object to destroy"}],doc:"Destroy the PIF object matching a particular network interface"},
+"PIF.unplug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"the PIF object to unplug"}],doc:"Attempt to bring down a physical interface"},
+"PIF.plug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"the PIF object to plug"}],doc:"Attempt to bring up a physical interface"},
+"PIF.pool_introduce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"device",ty:{ty:"string"},doc:""},{name:"network",ty:{ty:"ref",class:"network"},doc:""},{name:"host",ty:{ty:"ref",class:"host"},doc:""},{name:"MAC",ty:{ty:"string"},doc:""},{name:"MTU",ty:{ty:"int"},doc:""},{name:"VLAN",ty:{ty:"int"},doc:""},{name:"physical",ty:{ty:"bool"},doc:""},{name:"ip_configuration_mode",ty:{ty:"enum",name:"ip_configuration_mode",values:["None","DHCP","Static"]},doc:""},{name:"IP",ty:{ty:"string"},doc:""},{name:"netmask",ty:{ty:"string"},doc:""},{name:"gateway",ty:{ty:"string"},doc:""},{name:"DNS",ty:{ty:"string"},doc:""},{name:"bond_slave_of",ty:{ty:"ref",class:"Bond"},doc:""},{name:"VLAN_master_of",ty:{ty:"ref",class:"VLAN"},doc:""},{name:"management",ty:{ty:"bool"},doc:""},{name:"other_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:""},{name:"disallow_unplug",ty:{ty:"bool"},doc:""}],doc:"Create a new PIF record in the database only"},
+"PIF.db_introduce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"device",ty:{ty:"string"},doc:""},{name:"network",ty:{ty:"ref",class:"network"},doc:""},{name:"host",ty:{ty:"ref",class:"host"},doc:""},{name:"MAC",ty:{ty:"string"},doc:""},{name:"MTU",ty:{ty:"int"},doc:""},{name:"VLAN",ty:{ty:"int"},doc:""},{name:"physical",ty:{ty:"bool"},doc:""},{name:"ip_configuration_mode",ty:{ty:"enum",name:"ip_configuration_mode",values:["None","DHCP","Static"]},doc:""},{name:"IP",ty:{ty:"string"},doc:""},{name:"netmask",ty:{ty:"string"},doc:""},{name:"gateway",ty:{ty:"string"},doc:""},{name:"DNS",ty:{ty:"string"},doc:""},{name:"bond_slave_of",ty:{ty:"ref",class:"Bond"},doc:""},{name:"VLAN_master_of",ty:{ty:"ref",class:"VLAN"},doc:""},{name:"management",ty:{ty:"bool"},doc:""},{name:"other_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:""},{name:"disallow_unplug",ty:{ty:"bool"},doc:""}],doc:"Create a new PIF record in the database only"},
+"PIF.db_forget":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"The ref of the PIF whose database record should be destroyed"}],doc:"Destroy a PIF database record."},
+"PIF.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the PIFs known to the system."},
+"PIF.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the PIFs known to the system."},
+"PIF.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of PIF references to PIF records for all PIFs known to the system."},
+"PIF_metrics.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given PIF_metrics."},
+"PIF_metrics.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class PIF_metrics"},
+"PIF_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the PIF_metrics instances known to the system."},
+"PIF_metrics.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the PIF_metrics instance with the specified UUID."},
+"PIF_metrics.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"PIF_metrics"},doc:"All constructor arguments"}],doc:"Create a new PIF_metrics instance, and return its handle."},
+"PIF_metrics.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Destroy the specified PIF_metrics instance."},
+"PIF_metrics.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the uuid field of the given PIF_metrics."},
+"PIF_metrics.get_io_read_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the io/read_kbs field of the given PIF_metrics."},
+"PIF_metrics.get_io_write_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the io/write_kbs field of the given PIF_metrics."},
+"PIF_metrics.get_carrier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the carrier field of the given PIF_metrics."},
+"PIF_metrics.get_vendor_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the vendor_id field of the given PIF_metrics."},
+"PIF_metrics.get_vendor_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the vendor_name field of the given PIF_metrics."},
+"PIF_metrics.get_device_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the device_id field of the given PIF_metrics."},
+"PIF_metrics.get_device_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the device_name field of the given PIF_metrics."},
+"PIF_metrics.get_speed":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the speed field of the given PIF_metrics."},
+"PIF_metrics.get_duplex":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the duplex field of the given PIF_metrics."},
+"PIF_metrics.get_pci_bus_path":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the pci_bus_path field of the given PIF_metrics."},
+"PIF_metrics.get_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the last_updated field of the given PIF_metrics."},
+"PIF_metrics.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the other_config field of the given PIF_metrics."},
+"PIF_metrics.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given PIF_metrics."},
+"PIF_metrics.set_io_read_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the io/read_kbs field of the given PIF_metrics."},
+"PIF_metrics.set_io_write_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the io/write_kbs field of the given PIF_metrics."},
+"PIF_metrics.set_carrier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the carrier field of the given PIF_metrics."},
+"PIF_metrics.set_vendor_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the vendor_id field of the given PIF_metrics."},
+"PIF_metrics.set_vendor_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the vendor_name field of the given PIF_metrics."},
+"PIF_metrics.set_device_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the device_id field of the given PIF_metrics."},
+"PIF_metrics.set_device_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the device_name field of the given PIF_metrics."},
+"PIF_metrics.set_speed":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the speed field of the given PIF_metrics."},
+"PIF_metrics.set_duplex":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the duplex field of the given PIF_metrics."},
+"PIF_metrics.set_pci_bus_path":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the pci_bus_path field of the given PIF_metrics."},
+"PIF_metrics.set_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the last_updated field of the given PIF_metrics."},
+"PIF_metrics.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given PIF_metrics."},
+"PIF_metrics.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given PIF_metrics."},
+"PIF_metrics.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given PIF_metrics.  If the key is not in that Map, then do nothing."},
+"PIF_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the PIF_metrics instances known to the system."},
+"PIF_metrics.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the PIF_metrics instances known to the system."},
+"PIF_metrics.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of PIF_metrics references to PIF_metrics records for all PIF_metrics instances known to the system."},
+"Bond.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given Bond."},
+"Bond.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class Bond"},
+"Bond.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the Bonds known to the system."},
+"Bond.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the Bond instance with the specified UUID."},
+"Bond.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"Bond"},doc:"All constructor arguments"}],doc:"Create a new Bond instance, and return its handle."},
+"Bond.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"}],doc:"Destroy the specified Bond instance."},
+"Bond.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"}],doc:"Get the uuid field of the given Bond."},
+"Bond.get_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"}],doc:"Get the master field of the given Bond."},
+"Bond.get_slaves":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"}],doc:"Get the slaves field of the given Bond."},
+"Bond.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"}],doc:"Get the other_config field of the given Bond."},
+"Bond.get_primary_slave":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"}],doc:"Get the primary_slave field of the given Bond."},
+"Bond.get_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"}],doc:"Get the mode field of the given Bond."},
+"Bond.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given Bond."},
+"Bond.set_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PIF"},doc:"New value to set"}],doc:"Set the master field of the given Bond."},
+"Bond.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given Bond."},
+"Bond.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given Bond."},
+"Bond.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given Bond.  If the key is not in that Map, then do nothing."},
+"Bond.set_primary_slave":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PIF"},doc:"New value to set"}],doc:"Set the primary_slave field of the given Bond."},
+"Bond.set_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"bond_mode",values:["balance-slb","active-backup"]},doc:"New value to set"}],doc:"Set the mode field of the given Bond."},
+"Bond.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"network",ty:{ty:"ref",class:"network"},doc:"Network to add the bonded PIF to"},{name:"members",ty:{ty:"set",contents:{ty:"ref",class:"PIF"}},doc:"PIFs to add to this bond"},{name:"MAC",ty:{ty:"string"},doc:"The MAC address to use on the bond itself. If this parameter is the empty string then the bond will inherit its MAC address from the primary slave."},{name:"mode",ty:{ty:"enum",name:"bond_mode",values:["balance-slb","active-backup"]},doc:"Bonding mode to use for the new bond"}],doc:"Create an interface bond"},
+"Bond.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"Bond to destroy"}],doc:"Destroy an interface bond"},
+"Bond.set_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"The bond"},{name:"value",ty:{ty:"enum",name:"bond_mode",values:["balance-slb","active-backup"]},doc:"The new bond mode"}],doc:"Change the bond mode"},
+"Bond.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the Bonds known to the system."},
+"Bond.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the Bonds known to the system."},
+"Bond.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of Bond references to Bond records for all Bonds known to the system."},
+"VLAN.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VLAN."},
+"VLAN.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VLAN"},
+"VLAN.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VLANs known to the system."},
+"VLAN.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VLAN instance with the specified UUID."},
+"VLAN.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VLAN"},doc:"All constructor arguments"}],doc:"Create a new VLAN instance, and return its handle."},
+"VLAN.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"}],doc:"Destroy the specified VLAN instance."},
+"VLAN.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"}],doc:"Get the uuid field of the given VLAN."},
+"VLAN.get_tagged_PIF":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"}],doc:"Get the tagged_PIF field of the given VLAN."},
+"VLAN.get_untagged_PIF":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"}],doc:"Get the untagged_PIF field of the given VLAN."},
+"VLAN.get_tag":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"}],doc:"Get the tag field of the given VLAN."},
+"VLAN.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"}],doc:"Get the other_config field of the given VLAN."},
+"VLAN.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VLAN."},
+"VLAN.set_tagged_PIF":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PIF"},doc:"New value to set"}],doc:"Set the tagged_PIF field of the given VLAN."},
+"VLAN.set_untagged_PIF":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PIF"},doc:"New value to set"}],doc:"Set the untagged_PIF field of the given VLAN."},
+"VLAN.set_tag":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the tag field of the given VLAN."},
+"VLAN.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VLAN."},
+"VLAN.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VLAN."},
+"VLAN.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VLAN.  If the key is not in that Map, then do nothing."},
+"VLAN.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"tagged_PIF",ty:{ty:"ref",class:"PIF"},doc:"PIF which receives the tagged traffic"},{name:"tag",ty:{ty:"int"},doc:"VLAN tag to use"},{name:"network",ty:{ty:"ref",class:"network"},doc:"Network to receive the untagged traffic"}],doc:"Create a VLAN mux/demuxer"},
+"VLAN.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"VLAN mux/demuxer to destroy"}],doc:"Destroy a VLAN mux/demuxer"},
+"VLAN.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VLANs known to the system."},
+"VLAN.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VLANs known to the system."},
+"VLAN.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VLAN references to VLAN records for all VLANs known to the system."},
+"SM.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given SM."},
+"SM.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class SM"},
+"SM.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the SMs known to the system."},
+"SM.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the SM instance with the specified UUID."},
+"SM.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"SM"},doc:"All constructor arguments"}],doc:"Create a new SM instance, and return its handle."},
+"SM.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Destroy the specified SM instance."},
+"SM.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the SM instances with the given label."},
+"SM.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the uuid field of the given SM."},
+"SM.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the name/label field of the given SM."},
+"SM.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the name/description field of the given SM."},
+"SM.get_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the type field of the given SM."},
+"SM.get_vendor":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the vendor field of the given SM."},
+"SM.get_copyright":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the copyright field of the given SM."},
+"SM.get_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the version field of the given SM."},
+"SM.get_required_api_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the required_api_version field of the given SM."},
+"SM.get_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the configuration field of the given SM."},
+"SM.get_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the capabilities field of the given SM."},
+"SM.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the other_config field of the given SM."},
+"SM.get_driver_filename":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the driver_filename field of the given SM."},
+"SM.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given SM."},
+"SM.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given SM."},
+"SM.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given SM."},
+"SM.set_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the type field of the given SM."},
+"SM.set_vendor":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the vendor field of the given SM."},
+"SM.set_copyright":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the copyright field of the given SM."},
+"SM.set_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the version field of the given SM."},
+"SM.set_required_api_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the required_api_version field of the given SM."},
+"SM.set_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the configuration field of the given SM."},
+"SM.add_to_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the configuration field of the given SM."},
+"SM.remove_from_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the configuration field of the given SM.  If the key is not in that Map, then do nothing."},
+"SM.set_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the capabilities field of the given SM."},
+"SM.add_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the capabilities field of the given SM.  If the value is already in that Set, then do nothing."},
+"SM.remove_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the capabilities field of the given SM.  If the value is not in that Set, then do nothing."},
+"SM.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given SM."},
+"SM.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given SM."},
+"SM.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given SM.  If the key is not in that Map, then do nothing."},
+"SM.set_driver_filename":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the driver_filename field of the given SM."},
+"SM.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the SMs known to the system."},
+"SM.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the SMs known to the system."},
+"SM.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of SM references to SM records for all SMs known to the system."},
+"SR.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given SR."},
+"SR.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class SR"},
+"SR.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the SRs known to the system."},
+"SR.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the SR instance with the specified UUID."},
+"SR.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"SR"},doc:"All constructor arguments"}],doc:"Create a new SR instance, and return its handle."},
+"SR.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Destroy the specified SR instance."},
+"SR.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the SR instances with the given label."},
+"SR.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the uuid field of the given SR."},
+"SR.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the name/label field of the given SR."},
+"SR.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the name/description field of the given SR."},
+"SR.get_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the allowed_operations field of the given SR."},
+"SR.get_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the current_operations field of the given SR."},
+"SR.get_VDIs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the VDIs field of the given SR."},
+"SR.get_PBDs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the PBDs field of the given SR."},
+"SR.get_virtual_allocation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the virtual_allocation field of the given SR."},
+"SR.get_physical_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the physical_utilisation field of the given SR."},
+"SR.get_physical_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the physical_size field of the given SR."},
+"SR.get_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the type field of the given SR."},
+"SR.get_content_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the content_type field of the given SR."},
+"SR.get_shared":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the shared field of the given SR."},
+"SR.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the other_config field of the given SR."},
+"SR.get_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the tags field of the given SR."},
+"SR.get_default_vdi_visibility":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the default_vdi_visibility field of the given SR."},
+"SR.get_sm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the sm_config field of the given SR."},
+"SR.get_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the blobs field of the given SR."},
+"SR.get_local_cache_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the local_cache_enabled field of the given SR."},
+"SR.get_introduced_by":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the introduced_by field of the given SR."},
+"SR.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given SR."},
+"SR.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given SR."},
+"SR.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given SR."},
+"SR.set_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"storage_operations",values:["scan","destroy","forget","plug","unplug","update","vdi_create","vdi_introduce","vdi_destroy","vdi_resize","vdi_clone","vdi_snapshot"]}},doc:"New value to set"}],doc:"Set the allowed_operations field of the given SR."},
+"SR.add_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"storage_operations",values:["scan","destroy","forget","plug","unplug","update","vdi_create","vdi_introduce","vdi_destroy","vdi_resize","vdi_clone","vdi_snapshot"]},doc:"New value to add"}],doc:"Add the given value to the allowed_operations field of the given SR.  If the value is already in that Set, then do nothing."},
+"SR.remove_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"storage_operations",values:["scan","destroy","forget","plug","unplug","update","vdi_create","vdi_introduce","vdi_destroy","vdi_resize","vdi_clone","vdi_snapshot"]},doc:"Value to remove"}],doc:"Remove the given value from the allowed_operations field of the given SR.  If the value is not in that Set, then do nothing."},
+"SR.set_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"enum",name:"storage_operations",values:["scan","destroy","forget","plug","unplug","update","vdi_create","vdi_introduce","vdi_destroy","vdi_resize","vdi_clone","vdi_snapshot"]}},doc:"New value to set"}],doc:"Set the current_operations field of the given SR."},
+"SR.add_to_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"enum",name:"storage_operations",values:["scan","destroy","forget","plug","unplug","update","vdi_create","vdi_introduce","vdi_destroy","vdi_resize","vdi_clone","vdi_snapshot"]},doc:"Value to add"}],doc:"Add the given key-value pair to the current_operations field of the given SR."},
+"SR.remove_from_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the current_operations field of the given SR.  If the key is not in that Map, then do nothing."},
+"SR.set_virtual_allocation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the virtual_allocation field of the given SR."},
+"SR.set_physical_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the physical_utilisation field of the given SR."},
+"SR.set_physical_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the physical_size field of the given SR."},
+"SR.set_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the type field of the given SR."},
+"SR.set_content_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the content_type field of the given SR."},
+"SR.set_shared":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the shared field of the given SR."},
+"SR.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given SR."},
+"SR.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given SR."},
+"SR.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given SR.  If the key is not in that Map, then do nothing."},
+"SR.set_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the tags field of the given SR."},
+"SR.add_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the tags field of the given SR.  If the value is already in that Set, then do nothing."},
+"SR.remove_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the tags field of the given SR.  If the value is not in that Set, then do nothing."},
+"SR.set_default_vdi_visibility":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the default_vdi_visibility field of the given SR."},
+"SR.set_sm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the sm_config field of the given SR."},
+"SR.add_to_sm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the sm_config field of the given SR."},
+"SR.remove_from_sm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the sm_config field of the given SR.  If the key is not in that Map, then do nothing."},
+"SR.set_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"ref",class:"blob"}},doc:"New value to set"}],doc:"Set the blobs field of the given SR."},
+"SR.add_to_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"ref",class:"blob"},doc:"Value to add"}],doc:"Add the given key-value pair to the blobs field of the given SR."},
+"SR.remove_from_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the blobs field of the given SR.  If the key is not in that Map, then do nothing."},
+"SR.set_local_cache_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the local_cache_enabled field of the given SR."},
+"SR.set_introduced_by":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"DR_task"},doc:"New value to set"}],doc:"Set the introduced_by field of the given SR."},
+"SR.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to create/make the SR on"},{name:"device_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"The device config string that will be passed to backend SR driver"},{name:"physical_size",ty:{ty:"int"},doc:"The physical size of the new storage repository"},{name:"name_label",ty:{ty:"string"},doc:"The name of the new storage repository"},{name:"name_description",ty:{ty:"string"},doc:"The description of the new storage repository"},{name:"type",ty:{ty:"string"},doc:"The type of the SR; used to specify the SR backend driver to use"},{name:"content_type",ty:{ty:"string"},doc:"The type of the new SRs content, if required (e.g. ISOs)"},{name:"shared",ty:{ty:"bool"},doc:"True if the SR (is capable of) being shared by multiple hosts"},{name:"sm_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Storage backend specific configuration options"}],doc:"Create a new Storage Repository and introduce it into the managed system, creating both SR record and PBD record to attach it to current host (with specified device_config parameters)"},
+"SR.introduce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"The uuid assigned to the introduced SR"},{name:"name_label",ty:{ty:"string"},doc:"The name of the new storage repository"},{name:"name_description",ty:{ty:"string"},doc:"The description of the new storage repository"},{name:"type",ty:{ty:"string"},doc:"The type of the SR; used to specify the SR backend driver to use"},{name:"content_type",ty:{ty:"string"},doc:"The type of the new SRs content, if required (e.g. ISOs)"},{name:"shared",ty:{ty:"bool"},doc:"True if the SR (is capable of) being shared by multiple hosts"},{name:"sm_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Storage backend specific configuration options"}],doc:"Introduce a new Storage Repository into the managed system"},
+"SR.make":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to create/make the SR on"},{name:"device_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"The device config string that will be passed to backend SR driver"},{name:"physical_size",ty:{ty:"int"},doc:"The physical size of the new storage repository"},{name:"name_label",ty:{ty:"string"},doc:"The name of the new storage repository"},{name:"name_description",ty:{ty:"string"},doc:"The description of the new storage repository"},{name:"type",ty:{ty:"string"},doc:"The type of the SR; used to specify the SR backend driver to use"},{name:"content_type",ty:{ty:"string"},doc:"The type of the new SRs content, if required (e.g. ISOs)"},{name:"sm_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Storage backend specific configuration options"}],doc:"Create a new Storage Repository on disk. This call is deprecated: use SR.create instead."},
+"SR.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR to destroy"}],doc:"Destroy specified SR, removing SR-record from database and remove SR from disk. (In order to affect this operation the appropriate device_config is read from the specified SR's PBD on current host)"},
+"SR.forget":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR to destroy"}],doc:"Removing specified SR-record from database, without attempting to remove SR from disk"},
+"SR.update":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR whose fields should be refreshed"}],doc:"Refresh the fields on the SR object"},
+"SR.get_supported_types":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a set of all the SR types supported by the system"},
+"SR.scan":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR to scan"}],doc:"Refreshes the list of VDIs associated with an SR"},
+"SR.probe":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to create/make the SR on"},{name:"device_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"The device config string that will be passed to backend SR driver"},{name:"type",ty:{ty:"string"},doc:"The type of the SR; used to specify the SR backend driver to use"},{name:"sm_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Storage backend specific configuration options"}],doc:"Perform a backend-specific scan, using the given device_config.  If the device_config is complete, then this will return a list of the SRs present of this type on the device, if any.  If the device_config is partial, then a backend-specific scan will be performed, returning results that will guide the user in improving the device_config."},
+"SR.set_shared":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR"},{name:"value",ty:{ty:"bool"},doc:"True if the SR is shared"}],doc:"Sets the shared flag on the SR"},
+"SR.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR"},{name:"value",ty:{ty:"string"},doc:"The name label for the SR"}],doc:"Set the name label of the SR"},
+"SR.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR"},{name:"value",ty:{ty:"string"},doc:"The name description for the SR"}],doc:"Set the name description of the SR"},
+"SR.create_new_blob":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR"},{name:"name",ty:{ty:"string"},doc:"The name associated with the blob"},{name:"mime_type",ty:{ty:"string"},doc:"The mime type for the data. Empty string translates to application/octet-stream"}],doc:"Create a placeholder for a named binary blob of data that is associated with this SR"},
+"SR.set_physical_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"The SR to modify"},{name:"value",ty:{ty:"int"},doc:"The new value of the SR's physical_size"}],doc:"Sets the SR's physical_size field"},
+"SR.set_virtual_allocation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"The SR to modify"},{name:"value",ty:{ty:"int"},doc:"The new value of the SR's virtual_allocation"}],doc:"Sets the SR's virtual_allocation field"},
+"SR.set_physical_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"The SR to modify"},{name:"value",ty:{ty:"int"},doc:"The new value of the SR's physical utilisation"}],doc:"Sets the SR's physical_utilisation field"},
+"SR.assert_can_host_ha_statefile":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR to query"}],doc:"Returns successfully if the given SR can host an HA statefile. Otherwise returns an error to explain why not"},
+"SR.assert_supports_database_replication":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR to query"}],doc:"Returns successfully if the given SR supports database replication. Otherwise returns an error to explain why not."},
+"SR.enable_database_replication":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR to which metadata should be replicated"}],doc:""},
+"SR.disable_database_replication":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR to which metadata should be no longer replicated"}],doc:""},
+"SR.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the SRs known to the system."},
+"SR.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the SRs known to the system."},
+"SR.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of SR references to SR records for all SRs known to the system."},
+"VDI.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VDI."},
+"VDI.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VDI"},
+"VDI.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VDIs known to the system."},
+"VDI.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VDI instance with the specified UUID."},
+"VDI.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VDI"},doc:"All constructor arguments"}],doc:"Create a new VDI instance, and return its handle."},
+"VDI.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Destroy the specified VDI instance."},
+"VDI.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the VDI instances with the given label."},
+"VDI.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the uuid field of the given VDI."},
+"VDI.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the name/label field of the given VDI."},
+"VDI.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the name/description field of the given VDI."},
+"VDI.get_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the allowed_operations field of the given VDI."},
+"VDI.get_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the current_operations field of the given VDI."},
+"VDI.get_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the SR field of the given VDI."},
+"VDI.get_VBDs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the VBDs field of the given VDI."},
+"VDI.get_crash_dumps":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the crash_dumps field of the given VDI."},
+"VDI.get_virtual_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the virtual_size field of the given VDI."},
+"VDI.get_physical_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the physical_utilisation field of the given VDI."},
+"VDI.get_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the type field of the given VDI."},
+"VDI.get_sharable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the sharable field of the given VDI."},
+"VDI.get_read_only":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the read_only field of the given VDI."},
+"VDI.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the other_config field of the given VDI."},
+"VDI.get_storage_lock":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the storage_lock field of the given VDI."},
+"VDI.get_location":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the location field of the given VDI."},
+"VDI.get_managed":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the managed field of the given VDI."},
+"VDI.get_missing":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the missing field of the given VDI."},
+"VDI.get_parent":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the parent field of the given VDI."},
+"VDI.get_xenstore_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the xenstore_data field of the given VDI."},
+"VDI.get_sm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the sm_config field of the given VDI."},
+"VDI.get_is_a_snapshot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the is_a_snapshot field of the given VDI."},
+"VDI.get_snapshot_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the snapshot_of field of the given VDI."},
+"VDI.get_snapshots":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the snapshots field of the given VDI."},
+"VDI.get_snapshot_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the snapshot_time field of the given VDI."},
+"VDI.get_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the tags field of the given VDI."},
+"VDI.get_allow_caching":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the allow_caching field of the given VDI."},
+"VDI.get_on_boot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the on_boot field of the given VDI."},
+"VDI.get_metadata_of_pool":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the metadata_of_pool field of the given VDI."},
+"VDI.get_metadata_latest":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the metadata_latest field of the given VDI."},
+"VDI.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VDI."},
+"VDI.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given VDI."},
+"VDI.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given VDI."},
+"VDI.set_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"vdi_operations",values:["scan","clone","copy","resize","resize_online","snapshot","destroy","forget","update","force_unlock","generate_config","blocked"]}},doc:"New value to set"}],doc:"Set the allowed_operations field of the given VDI."},
+"VDI.add_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vdi_operations",values:["scan","clone","copy","resize","resize_online","snapshot","destroy","forget","update","force_unlock","generate_config","blocked"]},doc:"New value to add"}],doc:"Add the given value to the allowed_operations field of the given VDI.  If the value is already in that Set, then do nothing."},
+"VDI.remove_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vdi_operations",values:["scan","clone","copy","resize","resize_online","snapshot","destroy","forget","update","force_unlock","generate_config","blocked"]},doc:"Value to remove"}],doc:"Remove the given value from the allowed_operations field of the given VDI.  If the value is not in that Set, then do nothing."},
+"VDI.set_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"enum",name:"vdi_operations",values:["scan","clone","copy","resize","resize_online","snapshot","destroy","forget","update","force_unlock","generate_config","blocked"]}},doc:"New value to set"}],doc:"Set the current_operations field of the given VDI."},
+"VDI.add_to_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"enum",name:"vdi_operations",values:["scan","clone","copy","resize","resize_online","snapshot","destroy","forget","update","force_unlock","generate_config","blocked"]},doc:"Value to add"}],doc:"Add the given key-value pair to the current_operations field of the given VDI."},
+"VDI.remove_from_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the current_operations field of the given VDI.  If the key is not in that Map, then do nothing."},
+"VDI.set_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"SR"},doc:"New value to set"}],doc:"Set the SR field of the given VDI."},
+"VDI.set_virtual_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the virtual_size field of the given VDI."},
+"VDI.set_physical_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the physical_utilisation field of the given VDI."},
+"VDI.set_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vdi_type",values:["system","user","ephemeral","suspend","crashdump","ha_statefile","metadata","redo_log"]},doc:"New value to set"}],doc:"Set the type field of the given VDI."},
+"VDI.set_sharable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the sharable field of the given VDI."},
+"VDI.set_read_only":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the read_only field of the given VDI."},
+"VDI.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VDI."},
+"VDI.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VDI."},
+"VDI.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VDI.  If the key is not in that Map, then do nothing."},
+"VDI.set_storage_lock":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the storage_lock field of the given VDI."},
+"VDI.set_location":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the location field of the given VDI."},
+"VDI.set_managed":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the managed field of the given VDI."},
+"VDI.set_missing":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the missing field of the given VDI."},
+"VDI.set_parent":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VDI"},doc:"New value to set"}],doc:"Set the parent field of the given VDI."},
+"VDI.set_xenstore_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the xenstore_data field of the given VDI."},
+"VDI.add_to_xenstore_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the xenstore_data field of the given VDI."},
+"VDI.remove_from_xenstore_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the xenstore_data field of the given VDI.  If the key is not in that Map, then do nothing."},
+"VDI.set_sm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the sm_config field of the given VDI."},
+"VDI.add_to_sm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the sm_config field of the given VDI."},
+"VDI.remove_from_sm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the sm_config field of the given VDI.  If the key is not in that Map, then do nothing."},
+"VDI.set_is_a_snapshot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the is_a_snapshot field of the given VDI."},
+"VDI.set_snapshot_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VDI"},doc:"New value to set"}],doc:"Set the snapshot_of field of the given VDI."},
+"VDI.set_snapshot_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the snapshot_time field of the given VDI."},
+"VDI.set_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the tags field of the given VDI."},
+"VDI.add_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the tags field of the given VDI.  If the value is already in that Set, then do nothing."},
+"VDI.remove_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the tags field of the given VDI.  If the value is not in that Set, then do nothing."},
+"VDI.set_allow_caching":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the allow_caching field of the given VDI."},
+"VDI.set_on_boot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"on_boot",values:["reset","persist"]},doc:"New value to set"}],doc:"Set the on_boot field of the given VDI."},
+"VDI.set_metadata_of_pool":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"pool"},doc:"New value to set"}],doc:"Set the metadata_of_pool field of the given VDI."},
+"VDI.set_metadata_latest":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the metadata_latest field of the given VDI."},
+"VDI.snapshot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to snapshot"},{name:"driver_params",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Optional parameters that can be passed through to backend driver in order to specify storage-type-specific snapshot options"}],doc:"Take a read-only snapshot of the VDI, returning a reference to the snapshot. If any driver_params are specified then these are passed through to the storage-specific substrate driver that takes the snapshot. NB the snapshot lives in the same Storage Repository as its parent."},
+"VDI.clone":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to clone"},{name:"driver_params",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Optional parameters that are passed through to the backend driver in order to specify storage-type-specific clone options"}],doc:"Take an exact copy of the VDI and return a reference to the new disk. If any driver_params are specified then these are passed through to the storage-specific substrate driver that implements the clone operation. NB the clone lives in the same Storage Repository as its parent."},
+"VDI.resize":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to resize"},{name:"size",ty:{ty:"int"},doc:"The new size of the VDI"}],doc:"Resize the VDI."},
+"VDI.resize_online":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to resize"},{name:"size",ty:{ty:"int"},doc:"The new size of the VDI"}],doc:"Resize the VDI which may or may not be attached to running guests."},
+"VDI.introduce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"The uuid of the disk to introduce"},{name:"name_label",ty:{ty:"string"},doc:"The name of the disk record"},{name:"name_description",ty:{ty:"string"},doc:"The description of the disk record"},{name:"SR",ty:{ty:"ref",class:"SR"},doc:"The SR that the VDI is in"},{name:"type",ty:{ty:"enum",name:"vdi_type",values:["system","user","ephemeral","suspend","crashdump","ha_statefile","metadata","redo_log"]},doc:"The type of the VDI"},{name:"sharable",ty:{ty:"bool"},doc:"true if this disk may be shared"},{name:"read_only",ty:{ty:"bool"},doc:"true if this disk may ONLY be mounted read-only"},{name:"other_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"additional configuration"},{name:"location",ty:{ty:"string"},doc:"location information"},{name:"xenstore_data",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Data to insert into xenstore"},{name:"sm_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Storage-specific config"}],doc:"Create a new VDI record in the database only"},
+"VDI.pool_introduce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"The uuid of the disk to introduce"},{name:"name_label",ty:{ty:"string"},doc:"The name of the disk record"},{name:"name_description",ty:{ty:"string"},doc:"The description of the disk record"},{name:"SR",ty:{ty:"ref",class:"SR"},doc:"The SR that the VDI is in"},{name:"type",ty:{ty:"enum",name:"vdi_type",values:["system","user","ephemeral","suspend","crashdump","ha_statefile","metadata","redo_log"]},doc:"The type of the VDI"},{name:"sharable",ty:{ty:"bool"},doc:"true if this disk may be shared"},{name:"read_only",ty:{ty:"bool"},doc:"true if this disk may ONLY be mounted read-only"},{name:"other_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"additional configuration"},{name:"location",ty:{ty:"string"},doc:"location information"},{name:"xenstore_data",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Data to insert into xenstore"},{name:"sm_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Storage-specific config"}],doc:"Create a new VDI record in the database only"},
+"VDI.db_introduce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"The uuid of the disk to introduce"},{name:"name_label",ty:{ty:"string"},doc:"The name of the disk record"},{name:"name_description",ty:{ty:"string"},doc:"The description of the disk record"},{name:"SR",ty:{ty:"ref",class:"SR"},doc:"The SR that the VDI is in"},{name:"type",ty:{ty:"enum",name:"vdi_type",values:["system","user","ephemeral","suspend","crashdump","ha_statefile","metadata","redo_log"]},doc:"The type of the VDI"},{name:"sharable",ty:{ty:"bool"},doc:"true if this disk may be shared"},{name:"read_only",ty:{ty:"bool"},doc:"true if this disk may ONLY be mounted read-only"},{name:"other_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"additional configuration"},{name:"location",ty:{ty:"string"},doc:"location information"},{name:"xenstore_data",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Data to insert into xenstore"},{name:"sm_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Storage-specific config"}],doc:"Create a new VDI record in the database only"},
+"VDI.db_forget":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to forget about"}],doc:"Removes a VDI record from the database"},
+"VDI.update":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI whose stats (eg size) should be updated"}],doc:"Ask the storage backend to refresh the fields in the VDI object"},
+"VDI.copy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to copy"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The destination SR"}],doc:"Make a fresh VDI in the specified SR and copy the supplied VDI's data to the new disk"},
+"VDI.force_unlock":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to forcibly unlock"}],doc:"Steals the lock on this VDI and leaves it unlocked. This function is extremely dangerous. This call is deprecated."},
+"VDI.set_managed":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"bool"},doc:"The new value of the VDI's managed field"}],doc:"Sets the VDI's managed field"},
+"VDI.forget":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to forget about"}],doc:"Removes a VDI record from the database"},
+"VDI.set_sharable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"bool"},doc:"The new value of the VDI's sharable field"}],doc:"Sets the VDI's sharable field"},
+"VDI.set_read_only":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"bool"},doc:"The new value of the VDI's read_only field"}],doc:"Sets the VDI's read_only field"},
+"VDI.set_missing":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"bool"},doc:"The new value of the VDI's missing field"}],doc:"Sets the VDI's missing field"},
+"VDI.set_virtual_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"int"},doc:"The new value of the VDI's virtual size"}],doc:"Sets the VDI's virtual_size field"},
+"VDI.set_physical_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"int"},doc:"The new value of the VDI's physical utilisation"}],doc:"Sets the VDI's physical_utilisation field"},
+"VDI.set_is_a_snapshot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"bool"},doc:"The new value indicating whether this VDI is a snapshot"}],doc:"Sets whether this VDI is a snapshot"},
+"VDI.set_snapshot_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"ref",class:"VDI"},doc:"The VDI of which this VDI is a snapshot"}],doc:"Sets the VDI of which this VDI is a snapshot"},
+"VDI.set_snapshot_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"datetime"},doc:"The snapshot time of this VDI."}],doc:"Sets the snapshot time of this VDI."},
+"VDI.set_metadata_of_pool":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"ref",class:"pool"},doc:"The pool whose metadata is contained by this VDI"}],doc:"Records the pool whose metadata is contained by this VDI."},
+"VDI.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"string"},doc:"The name lable for the VDI"}],doc:"Set the name label of the VDI. This can only happen when then its SR is currently attached."},
+"VDI.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"string"},doc:"The name description for the VDI"}],doc:"Set the name description of the VDI. This can only happen when its SR is currently attached."},
+"VDI.generate_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host on which to generate the configuration"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to generate the configuration for"}],doc:"Internal function for debugging only"},
+"VDI.set_on_boot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"enum",name:"on_boot",values:["reset","persist"]},doc:"The value to set"}],doc:"Set the value of the on_boot parameter. This value can only be changed when the VDI is not attached to a running VM."},
+"VDI.set_allow_caching":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"bool"},doc:"The value to set"}],doc:"Set the value of the allow_caching parameter. This value can only be changed when the VDI is not attached to a running VM. The caching behaviour is only affected by this flag for VHD-based VDIs that have one parent and no child VHDs. Moreover, caching only takes place when the host running the VM containing this VDI has a nominated SR for local caching."},
+"VDI.open_database":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI which contains the database to open"}],doc:"Load the metadata found on the supplied VDI and return a session reference which can be used in XenAPI calls to query its contents."},
+"VDI.checksum":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to checksum"}],doc:"Internal function to calculate VDI checksum and return a string"},
+"VDI.read_database_pool_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The metadata VDI to look up in the cache."}],doc:"Check the VDI cache for the pool UUID of the database on this VDI."},
+"VDI.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VDIs known to the system."},
+"VDI.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VDIs known to the system."},
+"VDI.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VDI references to VDI records for all VDIs known to the system."},
+"VBD.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VBD."},
+"VBD.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VBD"},
+"VBD.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VBDs known to the system."},
+"VBD.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VBD instance with the specified UUID."},
+"VBD.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VBD"},doc:"All constructor arguments"}],doc:"Create a new VBD instance, and return its handle."},
+"VBD.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Destroy the specified VBD instance."},
+"VBD.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the uuid field of the given VBD."},
+"VBD.get_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the allowed_operations field of the given VBD."},
+"VBD.get_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the current_operations field of the given VBD."},
+"VBD.get_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the VM field of the given VBD."},
+"VBD.get_VDI":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the VDI field of the given VBD."},
+"VBD.get_device":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the device field of the given VBD."},
+"VBD.get_userdevice":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the userdevice field of the given VBD."},
+"VBD.get_bootable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the bootable field of the given VBD."},
+"VBD.get_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the mode field of the given VBD."},
+"VBD.get_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the type field of the given VBD."},
+"VBD.get_unpluggable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the unpluggable field of the given VBD."},
+"VBD.get_storage_lock":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the storage_lock field of the given VBD."},
+"VBD.get_empty":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the empty field of the given VBD."},
+"VBD.get_reserved":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the reserved field of the given VBD."},
+"VBD.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the other_config field of the given VBD."},
+"VBD.get_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the currently_attached field of the given VBD."},
+"VBD.get_status_code":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the status_code field of the given VBD."},
+"VBD.get_status_detail":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the status_detail field of the given VBD."},
+"VBD.get_runtime_properties":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the runtime_properties field of the given VBD."},
+"VBD.get_qos_algorithm_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the qos/algorithm_type field of the given VBD."},
+"VBD.get_qos_algorithm_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the qos/algorithm_params field of the given VBD."},
+"VBD.get_qos_supported_algorithms":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the qos/supported_algorithms field of the given VBD."},
+"VBD.get_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the metrics field of the given VBD."},
+"VBD.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VBD."},
+"VBD.set_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"vbd_operations",values:["attach","eject","insert","plug","unplug","unplug_force","pause","unpause"]}},doc:"New value to set"}],doc:"Set the allowed_operations field of the given VBD."},
+"VBD.add_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vbd_operations",values:["attach","eject","insert","plug","unplug","unplug_force","pause","unpause"]},doc:"New value to add"}],doc:"Add the given value to the allowed_operations field of the given VBD.  If the value is already in that Set, then do nothing."},
+"VBD.remove_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vbd_operations",values:["attach","eject","insert","plug","unplug","unplug_force","pause","unpause"]},doc:"Value to remove"}],doc:"Remove the given value from the allowed_operations field of the given VBD.  If the value is not in that Set, then do nothing."},
+"VBD.set_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"enum",name:"vbd_operations",values:["attach","eject","insert","plug","unplug","unplug_force","pause","unpause"]}},doc:"New value to set"}],doc:"Set the current_operations field of the given VBD."},
+"VBD.add_to_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"enum",name:"vbd_operations",values:["attach","eject","insert","plug","unplug","unplug_force","pause","unpause"]},doc:"Value to add"}],doc:"Add the given key-value pair to the current_operations field of the given VBD."},
+"VBD.remove_from_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the current_operations field of the given VBD.  If the key is not in that Map, then do nothing."},
+"VBD.set_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to set"}],doc:"Set the VM field of the given VBD."},
+"VBD.set_VDI":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VDI"},doc:"New value to set"}],doc:"Set the VDI field of the given VBD."},
+"VBD.set_device":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the device field of the given VBD."},
+"VBD.set_userdevice":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the userdevice field of the given VBD."},
+"VBD.set_bootable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the bootable field of the given VBD."},
+"VBD.set_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vbd_mode",values:["RO","RW"]},doc:"New value to set"}],doc:"Set the mode field of the given VBD."},
+"VBD.set_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vbd_type",values:["CD","Disk"]},doc:"New value to set"}],doc:"Set the type field of the given VBD."},
+"VBD.set_unpluggable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the unpluggable field of the given VBD."},
+"VBD.set_storage_lock":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the storage_lock field of the given VBD."},
+"VBD.set_empty":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the empty field of the given VBD."},
+"VBD.set_reserved":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the reserved field of the given VBD."},
+"VBD.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VBD."},
+"VBD.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VBD."},
+"VBD.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VBD.  If the key is not in that Map, then do nothing."},
+"VBD.set_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the currently_attached field of the given VBD."},
+"VBD.set_status_code":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the status_code field of the given VBD."},
+"VBD.set_status_detail":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the status_detail field of the given VBD."},
+"VBD.set_runtime_properties":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the runtime_properties field of the given VBD."},
+"VBD.add_to_runtime_properties":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the runtime_properties field of the given VBD."},
+"VBD.remove_from_runtime_properties":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the runtime_properties field of the given VBD.  If the key is not in that Map, then do nothing."},
+"VBD.set_qos_algorithm_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the qos/algorithm_type field of the given VBD."},
+"VBD.set_qos_algorithm_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the qos/algorithm_params field of the given VBD."},
+"VBD.add_to_qos_algorithm_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the qos/algorithm_params field of the given VBD."},
+"VBD.remove_from_qos_algorithm_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the qos/algorithm_params field of the given VBD.  If the key is not in that Map, then do nothing."},
+"VBD.set_qos_supported_algorithms":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the qos/supported_algorithms field of the given VBD."},
+"VBD.add_qos_supported_algorithms":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the qos/supported_algorithms field of the given VBD.  If the value is already in that Set, then do nothing."},
+"VBD.remove_qos_supported_algorithms":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the qos/supported_algorithms field of the given VBD.  If the value is not in that Set, then do nothing."},
+"VBD.set_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VBD_metrics"},doc:"New value to set"}],doc:"Set the metrics field of the given VBD."},
+"VBD.eject":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vbd",ty:{ty:"ref",class:"VBD"},doc:"The vbd representing the CDROM-like device"}],doc:"Remove the media from the device and leave it empty"},
+"VBD.insert":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vbd",ty:{ty:"ref",class:"VBD"},doc:"The vbd representing the CDROM-like device"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The new VDI to 'insert'"}],doc:"Insert new media into the device"},
+"VBD.plug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"The VBD to hotplug"}],doc:"Hotplug the specified VBD, dynamically attaching it to the running VM"},
+"VBD.unplug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"The VBD to hot-unplug"}],doc:"Hot-unplug the specified VBD, dynamically unattaching it from the running VM"},
+"VBD.unplug_force":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"The VBD to forcibly unplug"}],doc:"Forcibly unplug the specified VBD"},
+"VBD.unplug_force_no_safety_check":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"The VBD to forcibly unplug (no safety checks are applied to test if the device supports surprise-remove)"}],doc:"Forcibly unplug the specified VBD without any safety checks. This is an extremely dangerous operation in the general case that can cause guest crashes and data corruption; it should be called with extreme caution."},
+"VBD.assert_attachable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"The VBD to query"}],doc:"Throws an error if this VBD could not be attached to this VM if the VM were running. Intended for debugging."},
+"VBD.pause":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"The VBD to pause"}],doc:"Stop the backend device servicing requests so that an operation can be performed on the disk (eg live resize, snapshot)"},
+"VBD.unpause":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"The VBD to unpause"},{name:"token",ty:{ty:"string"},doc:"The token from VBD.pause"}],doc:"Restart the backend device after it was paused while an operation was performed on the disk (eg live resize, snapshot)"},
+"VBD.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VBDs known to the system."},
+"VBD.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VBDs known to the system."},
+"VBD.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VBD references to VBD records for all VBDs known to the system."},
+"VBD_metrics.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VBD_metrics."},
+"VBD_metrics.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VBD_metrics"},
+"VBD_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VBD_metrics instances known to the system."},
+"VBD_metrics.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VBD_metrics instance with the specified UUID."},
+"VBD_metrics.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VBD_metrics"},doc:"All constructor arguments"}],doc:"Create a new VBD_metrics instance, and return its handle."},
+"VBD_metrics.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"}],doc:"Destroy the specified VBD_metrics instance."},
+"VBD_metrics.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"}],doc:"Get the uuid field of the given VBD_metrics."},
+"VBD_metrics.get_io_read_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"}],doc:"Get the io/read_kbs field of the given VBD_metrics."},
+"VBD_metrics.get_io_write_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"}],doc:"Get the io/write_kbs field of the given VBD_metrics."},
+"VBD_metrics.get_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"}],doc:"Get the last_updated field of the given VBD_metrics."},
+"VBD_metrics.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"}],doc:"Get the other_config field of the given VBD_metrics."},
+"VBD_metrics.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VBD_metrics."},
+"VBD_metrics.set_io_read_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the io/read_kbs field of the given VBD_metrics."},
+"VBD_metrics.set_io_write_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the io/write_kbs field of the given VBD_metrics."},
+"VBD_metrics.set_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the last_updated field of the given VBD_metrics."},
+"VBD_metrics.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VBD_metrics."},
+"VBD_metrics.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VBD_metrics."},
+"VBD_metrics.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VBD_metrics.  If the key is not in that Map, then do nothing."},
+"VBD_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VBD_metrics instances known to the system."},
+"VBD_metrics.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VBD_metrics instances known to the system."},
+"VBD_metrics.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VBD_metrics references to VBD_metrics records for all VBD_metrics instances known to the system."},
+"PBD.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given PBD."},
+"PBD.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class PBD"},
+"PBD.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the PBDs known to the system."},
+"PBD.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the PBD instance with the specified UUID."},
+"PBD.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"PBD"},doc:"All constructor arguments"}],doc:"Create a new PBD instance, and return its handle."},
+"PBD.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"Destroy the specified PBD instance."},
+"PBD.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"Get the uuid field of the given PBD."},
+"PBD.get_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"Get the host field of the given PBD."},
+"PBD.get_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"Get the SR field of the given PBD."},
+"PBD.get_device_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"Get the device_config field of the given PBD."},
+"PBD.get_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"Get the currently_attached field of the given PBD."},
+"PBD.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"Get the other_config field of the given PBD."},
+"PBD.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given PBD."},
+"PBD.set_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the host field of the given PBD."},
+"PBD.set_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"SR"},doc:"New value to set"}],doc:"Set the SR field of the given PBD."},
+"PBD.set_device_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the device_config field of the given PBD."},
+"PBD.add_to_device_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the device_config field of the given PBD."},
+"PBD.remove_from_device_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the device_config field of the given PBD.  If the key is not in that Map, then do nothing."},
+"PBD.set_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the currently_attached field of the given PBD."},
+"PBD.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given PBD."},
+"PBD.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given PBD."},
+"PBD.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given PBD.  If the key is not in that Map, then do nothing."},
+"PBD.plug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"The PBD to activate"}],doc:"Activate the specified PBD, causing the referenced SR to be attached and scanned"},
+"PBD.unplug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"The PBD to deactivate"}],doc:"Deactivate the specified PBD, causing the referenced SR to be detached and nolonger scanned"},
+"PBD.set_device_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"The PBD to modify"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"The new value of the PBD's device_config"}],doc:"Sets the PBD's device_config field"},
+"PBD.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the PBDs known to the system."},
+"PBD.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the PBDs known to the system."},
+"PBD.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of PBD references to PBD records for all PBDs known to the system."},
+"crashdump.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given crashdump."},
+"crashdump.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class crashdump"},
+"crashdump.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the crashdumps known to the system."},
+"crashdump.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the crashdump instance with the specified UUID."},
+"crashdump.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"crashdump"},doc:"All constructor arguments"}],doc:"Create a new crashdump instance, and return its handle."},
+"crashdump.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"}],doc:"Destroy the specified crashdump instance."},
+"crashdump.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"}],doc:"Get the uuid field of the given crashdump."},
+"crashdump.get_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"}],doc:"Get the VM field of the given crashdump."},
+"crashdump.get_VDI":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"}],doc:"Get the VDI field of the given crashdump."},
+"crashdump.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"}],doc:"Get the other_config field of the given crashdump."},
+"crashdump.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given crashdump."},
+"crashdump.set_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to set"}],doc:"Set the VM field of the given crashdump."},
+"crashdump.set_VDI":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VDI"},doc:"New value to set"}],doc:"Set the VDI field of the given crashdump."},
+"crashdump.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given crashdump."},
+"crashdump.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given crashdump."},
+"crashdump.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given crashdump.  If the key is not in that Map, then do nothing."},
+"crashdump.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"The crashdump to destroy"}],doc:"Destroy the specified crashdump"},
+"crashdump.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the crashdumps known to the system."},
+"crashdump.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the crashdumps known to the system."},
+"crashdump.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of crashdump references to crashdump records for all crashdumps known to the system."},
+"VTPM.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VTPM."},
+"VTPM.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VTPM"},
+"VTPM.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VTPMs known to the system."},
+"VTPM.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VTPM instance with the specified UUID."},
+"VTPM.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VTPM"},doc:"All constructor arguments"}],doc:"Create a new VTPM instance, and return its handle."},
+"VTPM.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"}],doc:"Destroy the specified VTPM instance."},
+"VTPM.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"}],doc:"Get the uuid field of the given VTPM."},
+"VTPM.get_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"}],doc:"Get the VM field of the given VTPM."},
+"VTPM.get_backend":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"}],doc:"Get the backend field of the given VTPM."},
+"VTPM.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VTPM."},
+"VTPM.set_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to set"}],doc:"Set the VM field of the given VTPM."},
+"VTPM.set_backend":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to set"}],doc:"Set the backend field of the given VTPM."},
+"console.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given console."},
+"console.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class console"},
+"console.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the consoles known to the system."},
+"console.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the console instance with the specified UUID."},
+"console.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"console"},doc:"All constructor arguments"}],doc:"Create a new console instance, and return its handle."},
+"console.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"Destroy the specified console instance."},
+"console.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"Get the uuid field of the given console."},
+"console.get_protocol":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"Get the protocol field of the given console."},
+"console.get_location":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"Get the location field of the given console."},
+"console.get_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"Get the VM field of the given console."},
+"console.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"Get the other_config field of the given console."},
+"console.get_port":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"Get the port field of the given console."},
+"console.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given console."},
+"console.set_protocol":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"console_protocol",values:["vt100","rfb","rdp"]},doc:"New value to set"}],doc:"Set the protocol field of the given console."},
+"console.set_location":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the location field of the given console."},
+"console.set_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to set"}],doc:"Set the VM field of the given console."},
+"console.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given console."},
+"console.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given console."},
+"console.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given console.  If the key is not in that Map, then do nothing."},
+"console.set_port":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the port field of the given console."},
+"console.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the consoles known to the system."},
+"console.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the consoles known to the system."},
+"console.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of console references to console records for all consoles known to the system."},
+"user.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given user."},
+"user.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class user"},
+"user.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the users known to the system."},
+"user.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the user instance with the specified UUID."},
+"user.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"user"},doc:"All constructor arguments"}],doc:"Create a new user instance, and return its handle."},
+"user.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"}],doc:"Destroy the specified user instance."},
+"user.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"}],doc:"Get the uuid field of the given user."},
+"user.get_short_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"}],doc:"Get the short_name field of the given user."},
+"user.get_fullname":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"}],doc:"Get the fullname field of the given user."},
+"user.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"}],doc:"Get the other_config field of the given user."},
+"user.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given user."},
+"user.set_short_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the short_name field of the given user."},
+"user.set_fullname":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the fullname field of the given user."},
+"user.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given user."},
+"user.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given user."},
+"user.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given user.  If the key is not in that Map, then do nothing."},
+"blob.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given blob."},
+"blob.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class blob"},
+"blob.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the blobs known to the system."},
+"blob.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the blob instance with the specified UUID."},
+"blob.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"blob"},doc:"All constructor arguments"}],doc:"Create a new blob instance, and return its handle."},
+"blob.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"Destroy the specified blob instance."},
+"blob.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the blob instances with the given label."},
+"blob.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"Get the uuid field of the given blob."},
+"blob.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"Get the name/label field of the given blob."},
+"blob.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"Get the name/description field of the given blob."},
+"blob.get_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"Get the size field of the given blob."},
+"blob.get_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"Get the last_updated field of the given blob."},
+"blob.get_mime_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"Get the mime_type field of the given blob."},
+"blob.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given blob."},
+"blob.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given blob."},
+"blob.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given blob."},
+"blob.set_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the size field of the given blob."},
+"blob.set_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the last_updated field of the given blob."},
+"blob.set_mime_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the mime_type field of the given blob."},
+"blob.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"mime_type",ty:{ty:"string"},doc:"The mime-type of the blob. Defaults to 'application/octet-stream' if the empty string is supplied"}],doc:"Create a placeholder for a binary blob"},
+"blob.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"The reference of the blob to destroy"}],doc:""},
+"blob.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the blobs known to the system."},
+"blob.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the blobs known to the system."},
+"blob.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of blob references to blob records for all blobs known to the system."},
+"message.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"name",ty:{ty:"string"},doc:"The name of the message"},{name:"priority",ty:{ty:"int"},doc:"The priority of the message"},{name:"cls",ty:{ty:"enum",name:"cls",values:["VM","Host","SR","Pool","VMPP"]},doc:"The class of object this message is associated with"},{name:"obj_uuid",ty:{ty:"string"},doc:"The uuid of the object this message is associated with"},{name:"body",ty:{ty:"string"},doc:"The body of the message"}],doc:""},
+"message.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"message"},doc:"The reference of the message to destroy"}],doc:""},
+"message.get":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"cls",ty:{ty:"enum",name:"cls",values:["VM","Host","SR","Pool","VMPP"]},doc:"The class of object"},{name:"obj_uuid",ty:{ty:"string"},doc:"The uuid of the object"},{name:"since",ty:{ty:"datetime"},doc:"The cutoff time"}],doc:""},
+"message.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:""},
+"message.get_since":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"since",ty:{ty:"datetime"},doc:"The cutoff time"}],doc:""},
+"message.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"message"},doc:"The reference to the message"}],doc:""},
+"message.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"The uuid of the message"}],doc:""},
+"message.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:""},
+"message.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"The expression to match (not currently used)"}],doc:""},
+"secret.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"secret"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given secret."},
+"secret.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"secret"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class secret"},
+"secret.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the secrets known to the system."},
+"secret.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the secret instance with the specified UUID."},
+"secret.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"secret"},doc:"All constructor arguments"}],doc:"Create a new secret instance, and return its handle."},
+"secret.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"secret"},doc:"reference to the object"}],doc:"Destroy the specified secret instance."},
+"secret.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"secret"},doc:"reference to the object"}],doc:"Get the uuid field of the given secret."},
+"secret.get_value":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"secret"},doc:"reference to the object"}],doc:"Get the value field of the given secret."},
+"secret.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"secret"},doc:"reference to the object"}],doc:"Get the other_config field of the given secret."},
+"secret.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"secret"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given secret."},
+"secret.set_value":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"secret"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the value field of the given secret."},
+"secret.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"secret"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given secret."},
+"secret.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"secret"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given secret."},
+"secret.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"secret"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given secret.  If the key is not in that Map, then do nothing."},
+"secret.introduce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:""},{name:"value",ty:{ty:"string"},doc:""},{name:"other_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:""}],doc:""},
+"secret.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the secrets known to the system."},
+"secret.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the secrets known to the system."},
+"secret.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of secret references to secret records for all secrets known to the system."},
+"tunnel.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given tunnel."},
+"tunnel.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class tunnel"},
+"tunnel.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the tunnels known to the system."},
+"tunnel.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the tunnel instance with the specified UUID."},
+"tunnel.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"tunnel"},doc:"All constructor arguments"}],doc:"Create a new tunnel instance, and return its handle."},
+"tunnel.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"}],doc:"Destroy the specified tunnel instance."},
+"tunnel.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"}],doc:"Get the uuid field of the given tunnel."},
+"tunnel.get_access_PIF":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"}],doc:"Get the access_PIF field of the given tunnel."},
+"tunnel.get_transport_PIF":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"}],doc:"Get the transport_PIF field of the given tunnel."},
+"tunnel.get_status":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"}],doc:"Get the status field of the given tunnel."},
+"tunnel.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"}],doc:"Get the other_config field of the given tunnel."},
+"tunnel.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given tunnel."},
+"tunnel.set_access_PIF":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PIF"},doc:"New value to set"}],doc:"Set the access_PIF field of the given tunnel."},
+"tunnel.set_transport_PIF":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PIF"},doc:"New value to set"}],doc:"Set the transport_PIF field of the given tunnel."},
+"tunnel.set_status":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the status field of the given tunnel."},
+"tunnel.add_to_status":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the status field of the given tunnel."},
+"tunnel.remove_from_status":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the status field of the given tunnel.  If the key is not in that Map, then do nothing."},
+"tunnel.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given tunnel."},
+"tunnel.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given tunnel."},
+"tunnel.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given tunnel.  If the key is not in that Map, then do nothing."},
+"tunnel.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"transport_PIF",ty:{ty:"ref",class:"PIF"},doc:"PIF which receives the tagged traffic"},{name:"network",ty:{ty:"ref",class:"network"},doc:"Network to receive the tunnelled traffic"}],doc:"Create a tunnel"},
+"tunnel.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"tunnel"},doc:"tunnel to destroy"}],doc:"Destroy a tunnel"},
+"tunnel.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the tunnels known to the system."},
+"tunnel.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the tunnels known to the system."},
+"tunnel.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of tunnel references to tunnel records for all tunnels known to the system."},
+"PCI.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given PCI."},
+"PCI.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class PCI"},
+"PCI.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the PCIs known to the system."},
+"PCI.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the PCI instance with the specified UUID."},
+"PCI.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"PCI"},doc:"All constructor arguments"}],doc:"Create a new PCI instance, and return its handle."},
+"PCI.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Destroy the specified PCI instance."},
+"PCI.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get the uuid field of the given PCI."},
+"PCI.get_class_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get the class_id field of the given PCI."},
+"PCI.get_class_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get the class_name field of the given PCI."},
+"PCI.get_vendor_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get the vendor_id field of the given PCI."},
+"PCI.get_vendor_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get the vendor_name field of the given PCI."},
+"PCI.get_device_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get the device_id field of the given PCI."},
+"PCI.get_device_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get the device_name field of the given PCI."},
+"PCI.get_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get the host field of the given PCI."},
+"PCI.get_pci_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get the pci_id field of the given PCI."},
+"PCI.get_functions":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get the functions field of the given PCI."},
+"PCI.get_attached_VMs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get the attached_VMs field of the given PCI."},
+"PCI.get_dependencies":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get the dependencies field of the given PCI."},
+"PCI.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"}],doc:"Get the other_config field of the given PCI."},
+"PCI.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given PCI."},
+"PCI.set_class_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the class_id field of the given PCI."},
+"PCI.set_class_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the class_name field of the given PCI."},
+"PCI.set_vendor_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the vendor_id field of the given PCI."},
+"PCI.set_vendor_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the vendor_name field of the given PCI."},
+"PCI.set_device_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the device_id field of the given PCI."},
+"PCI.set_device_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the device_name field of the given PCI."},
+"PCI.set_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the host field of the given PCI."},
+"PCI.set_pci_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the pci_id field of the given PCI."},
+"PCI.set_functions":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the functions field of the given PCI."},
+"PCI.set_attached_VMs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"ref",class:"VM"}},doc:"New value to set"}],doc:"Set the attached_VMs field of the given PCI."},
+"PCI.add_attached_VMs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to add"}],doc:"Add the given value to the attached_VMs field of the given PCI.  If the value is already in that Set, then do nothing."},
+"PCI.remove_attached_VMs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"Value to remove"}],doc:"Remove the given value from the attached_VMs field of the given PCI.  If the value is not in that Set, then do nothing."},
+"PCI.set_dependencies":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"ref",class:"PCI"}},doc:"New value to set"}],doc:"Set the dependencies field of the given PCI."},
+"PCI.add_dependencies":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PCI"},doc:"New value to add"}],doc:"Add the given value to the dependencies field of the given PCI.  If the value is already in that Set, then do nothing."},
+"PCI.remove_dependencies":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PCI"},doc:"Value to remove"}],doc:"Remove the given value from the dependencies field of the given PCI.  If the value is not in that Set, then do nothing."},
+"PCI.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given PCI."},
+"PCI.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given PCI."},
+"PCI.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PCI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given PCI.  If the key is not in that Map, then do nothing."},
+"PCI.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the PCIs known to the system."},
+"PCI.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the PCIs known to the system."},
+"PCI.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of PCI references to PCI records for all PCIs known to the system."},
+"PGPU.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given PGPU."},
+"PGPU.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class PGPU"},
+"PGPU.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the PGPUs known to the system."},
+"PGPU.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the PGPU instance with the specified UUID."},
+"PGPU.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"PGPU"},doc:"All constructor arguments"}],doc:"Create a new PGPU instance, and return its handle."},
+"PGPU.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"}],doc:"Destroy the specified PGPU instance."},
+"PGPU.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"}],doc:"Get the uuid field of the given PGPU."},
+"PGPU.get_PCI":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"}],doc:"Get the PCI field of the given PGPU."},
+"PGPU.get_GPU_group":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"}],doc:"Get the GPU_group field of the given PGPU."},
+"PGPU.get_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"}],doc:"Get the host field of the given PGPU."},
+"PGPU.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"}],doc:"Get the other_config field of the given PGPU."},
+"PGPU.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given PGPU."},
+"PGPU.set_PCI":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PCI"},doc:"New value to set"}],doc:"Set the PCI field of the given PGPU."},
+"PGPU.set_GPU_group":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"GPU_group"},doc:"New value to set"}],doc:"Set the GPU_group field of the given PGPU."},
+"PGPU.set_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the host field of the given PGPU."},
+"PGPU.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given PGPU."},
+"PGPU.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given PGPU."},
+"PGPU.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PGPU"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given PGPU.  If the key is not in that Map, then do nothing."},
+"PGPU.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the PGPUs known to the system."},
+"PGPU.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the PGPUs known to the system."},
+"PGPU.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of PGPU references to PGPU records for all PGPUs known to the system."},
+"GPU_group.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given GPU_group."},
+"GPU_group.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class GPU_group"},
+"GPU_group.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the GPU_groups known to the system."},
+"GPU_group.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the GPU_group instance with the specified UUID."},
+"GPU_group.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"GPU_group"},doc:"All constructor arguments"}],doc:"Create a new GPU_group instance, and return its handle."},
+"GPU_group.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"}],doc:"Destroy the specified GPU_group instance."},
+"GPU_group.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the GPU_group instances with the given label."},
+"GPU_group.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"}],doc:"Get the uuid field of the given GPU_group."},
+"GPU_group.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"}],doc:"Get the name/label field of the given GPU_group."},
+"GPU_group.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"}],doc:"Get the name/description field of the given GPU_group."},
+"GPU_group.get_PGPUs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"}],doc:"Get the PGPUs field of the given GPU_group."},
+"GPU_group.get_VGPUs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"}],doc:"Get the VGPUs field of the given GPU_group."},
+"GPU_group.get_GPU_types":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"}],doc:"Get the GPU_types field of the given GPU_group."},
+"GPU_group.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"}],doc:"Get the other_config field of the given GPU_group."},
+"GPU_group.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given GPU_group."},
+"GPU_group.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given GPU_group."},
+"GPU_group.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given GPU_group."},
+"GPU_group.set_GPU_types":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the GPU_types field of the given GPU_group."},
+"GPU_group.add_GPU_types":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the GPU_types field of the given GPU_group.  If the value is already in that Set, then do nothing."},
+"GPU_group.remove_GPU_types":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the GPU_types field of the given GPU_group.  If the value is not in that Set, then do nothing."},
+"GPU_group.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given GPU_group."},
+"GPU_group.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given GPU_group."},
+"GPU_group.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given GPU_group.  If the key is not in that Map, then do nothing."},
+"GPU_group.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"name_label",ty:{ty:"string"},doc:""},{name:"name_description",ty:{ty:"string"},doc:""},{name:"other_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:""}],doc:""},
+"GPU_group.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"GPU_group"},doc:"The vGPU to destroy"}],doc:""},
+"GPU_group.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the GPU_groups known to the system."},
+"GPU_group.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the GPU_groups known to the system."},
+"GPU_group.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of GPU_group references to GPU_group records for all GPU_groups known to the system."},
+"VGPU.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VGPU."},
+"VGPU.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VGPU"},
+"VGPU.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VGPUs known to the system."},
+"VGPU.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VGPU instance with the specified UUID."},
+"VGPU.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VGPU"},doc:"All constructor arguments"}],doc:"Create a new VGPU instance, and return its handle."},
+"VGPU.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"}],doc:"Destroy the specified VGPU instance."},
+"VGPU.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"}],doc:"Get the uuid field of the given VGPU."},
+"VGPU.get_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"}],doc:"Get the VM field of the given VGPU."},
+"VGPU.get_GPU_group":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"}],doc:"Get the GPU_group field of the given VGPU."},
+"VGPU.get_device":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"}],doc:"Get the device field of the given VGPU."},
+"VGPU.get_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"}],doc:"Get the currently_attached field of the given VGPU."},
+"VGPU.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"}],doc:"Get the other_config field of the given VGPU."},
+"VGPU.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VGPU."},
+"VGPU.set_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to set"}],doc:"Set the VM field of the given VGPU."},
+"VGPU.set_GPU_group":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"GPU_group"},doc:"New value to set"}],doc:"Set the GPU_group field of the given VGPU."},
+"VGPU.set_device":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the device field of the given VGPU."},
+"VGPU.set_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the currently_attached field of the given VGPU."},
+"VGPU.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VGPU."},
+"VGPU.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VGPU."},
+"VGPU.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VGPU.  If the key is not in that Map, then do nothing."},
+"VGPU.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"VM",ty:{ty:"ref",class:"VM"},doc:""},{name:"GPU_group",ty:{ty:"ref",class:"GPU_group"},doc:""},{name:"device",ty:{ty:"string"},doc:""},{name:"other_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:""}],doc:""},
+"VGPU.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VGPU"},doc:"The vGPU to destroy"}],doc:""},
+"VGPU.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VGPUs known to the system."},
+"VGPU.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VGPUs known to the system."},
+"VGPU.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VGPU references to VGPU records for all VGPUs known to the system."}};
\ No newline at end of file
--- /dev/null
+++ xen-api-0.1/ocaml/xapi/storage_interface.mli
@@ -0,0 +1,266 @@
+type sr = string
+val rpc_of_sr : string -> Rpc.t
+val sr_of_rpc : Rpc.t -> string
+type vdi = string
+val rpc_of_vdi : string -> Rpc.t
+val vdi_of_rpc : Rpc.t -> string
+type task = string
+val rpc_of_task : string -> Rpc.t
+val task_of_rpc : Rpc.t -> string
+type physical_device = string
+val rpc_of_physical_device : string -> Rpc.t
+val physical_device_of_rpc : Rpc.t -> string
+type dp = string
+val rpc_of_dp : string -> Rpc.t
+val dp_of_rpc : Rpc.t -> string
+type success_t = Vdi of physical_device | Unit | State of Vdi_automaton.state
+val rpc_of_success_t : success_t -> Rpc.t
+val success_t_of_rpc : Rpc.t -> success_t
+type failure_t =
+    Sr_not_attached
+  | Illegal_transition of Vdi_automaton.state * Vdi_automaton.state
+  | Backend_error of string * string list
+  | Internal_error of string
+val rpc_of_failure_t : failure_t -> Rpc.t
+val failure_t_of_rpc : Rpc.t -> failure_t
+type result = Success of success_t | Failure of failure_t
+val rpc_of_result : result -> Rpc.t
+val result_of_rpc : Rpc.t -> result
+val string_of_success : success_t -> string
+val string_of_failure : failure_t -> string
+val string_of_result : result -> string
+val success : result -> bool
+module DP : sig  end
+module SR : sig  end
+module VDI : sig  end
+type failure = string * (string * string) list
+val rpc_of_failure : string * (string * string) list -> Rpc.t
+val failure_of_rpc : Rpc.t -> string * (string * string) list
+exception RpcFailure of (string * (string * string) list)
+module Args :
+  sig
+    module DP :
+      sig
+        module Create :
+          sig
+            type request = { task : task; id : string; }
+            val rpc_of_request : request -> Rpc.t
+            val request_of_rpc : Rpc.t -> request
+            type response = dp
+            val rpc_of_response : string -> Rpc.t
+            val response_of_rpc : Rpc.t -> string
+            val call_of_create : task:task -> id:string -> Rpc.call
+          end
+        module Destroy :
+          sig
+            type request = { task : task; dp : dp; allow_leak : bool; }
+            val rpc_of_request : request -> Rpc.t
+            val request_of_rpc : Rpc.t -> request
+            type response = result
+            val rpc_of_response : result -> Rpc.t
+            val response_of_rpc : Rpc.t -> result
+            val call_of_destroy :
+              task:task -> dp:dp -> allow_leak:bool -> Rpc.call
+          end
+        module Diagnostics :
+          sig
+            val rpc_of___x1__ : 'a -> Rpc.t
+            val __x1___of_rpc : Rpc.t -> unit
+            type response = string
+            val rpc_of_response : string -> Rpc.t
+            val response_of_rpc : Rpc.t -> string
+            val call_of_diagnostics : 'a -> Rpc.call
+          end
+      end
+    module SR :
+      sig
+        module Attach :
+          sig
+            type request = { task : task; sr : sr; }
+            val rpc_of_request : request -> Rpc.t
+            val request_of_rpc : Rpc.t -> request
+            type response = result
+            val rpc_of_response : result -> Rpc.t
+            val response_of_rpc : Rpc.t -> result
+            val call_of_attach : task:task -> sr:sr -> Rpc.call
+          end
+        module Detach :
+          sig
+            type request = { task : task; sr : sr; }
+            val rpc_of_request : request -> Rpc.t
+            val request_of_rpc : Rpc.t -> request
+            type response = result
+            val rpc_of_response : result -> Rpc.t
+            val response_of_rpc : Rpc.t -> result
+            val call_of_detach : task:task -> sr:sr -> Rpc.call
+          end
+        module Destroy :
+          sig
+            type request = { task : task; sr : sr; }
+            val rpc_of_request : request -> Rpc.t
+            val request_of_rpc : Rpc.t -> request
+            type response = result
+            val rpc_of_response : result -> Rpc.t
+            val response_of_rpc : Rpc.t -> result
+            val call_of_destroy : task:task -> sr:sr -> Rpc.call
+          end
+        module List :
+          sig
+            type request = { task : task; }
+            val rpc_of_request : request -> Rpc.t
+            val request_of_rpc : Rpc.t -> request
+            type response = sr list
+            val rpc_of_response : string list -> Rpc.t
+            val response_of_rpc : Rpc.t -> string list
+            val call_of_list : task:task -> Rpc.call
+          end
+      end
+    module VDI :
+      sig
+        module Attach :
+          sig
+            type request = {
+              task : task;
+              dp : dp;
+              sr : sr;
+              vdi : vdi;
+              read_write : bool;
+            }
+            val rpc_of_request : request -> Rpc.t
+            val request_of_rpc : Rpc.t -> request
+            type response = result
+            val rpc_of_response : result -> Rpc.t
+            val response_of_rpc : Rpc.t -> result
+            val call_of_attach :
+              task:task ->
+              dp:dp -> sr:sr -> vdi:vdi -> read_write:bool -> Rpc.call
+          end
+        module Activate :
+          sig
+            type request = { task : task; dp : dp; sr : sr; vdi : vdi; }
+            val rpc_of_request : request -> Rpc.t
+            val request_of_rpc : Rpc.t -> request
+            type response = result
+            val rpc_of_response : result -> Rpc.t
+            val response_of_rpc : Rpc.t -> result
+            val call_of_activate :
+              task:task -> dp:dp -> sr:sr -> vdi:vdi -> Rpc.call
+          end
+        module Stat :
+          sig
+            type request = {
+              task : task;
+              dp : dp option;
+              sr : sr;
+              vdi : vdi;
+            }
+            val rpc_of_request : request -> Rpc.t
+            val request_of_rpc : Rpc.t -> request
+            val rpc_of___x5__ : 'a -> Rpc.t
+            val __x5___of_rpc : Rpc.t -> unit
+            type response = result
+            val rpc_of_response : result -> Rpc.t
+            val response_of_rpc : Rpc.t -> result
+            val call_of_stat :
+              task:task -> ?dp:dp -> sr:sr -> vdi:vdi -> 'a -> Rpc.call
+          end
+        module Deactivate :
+          sig
+            type request = { task : task; dp : dp; sr : sr; vdi : vdi; }
+            val rpc_of_request : request -> Rpc.t
+            val request_of_rpc : Rpc.t -> request
+            type response = result
+            val rpc_of_response : result -> Rpc.t
+            val response_of_rpc : Rpc.t -> result
+            val call_of_deactivate :
+              task:task -> dp:dp -> sr:sr -> vdi:vdi -> Rpc.call
+          end
+        module Detach :
+          sig
+            type request = { task : task; dp : dp; sr : sr; vdi : vdi; }
+            val rpc_of_request : request -> Rpc.t
+            val request_of_rpc : Rpc.t -> request
+            type response = result
+            val rpc_of_response : result -> Rpc.t
+            val response_of_rpc : Rpc.t -> result
+            val call_of_detach :
+              task:task -> dp:dp -> sr:sr -> vdi:vdi -> Rpc.call
+          end
+      end
+  end
+module Client :
+  sig
+    module DP :
+      sig
+        val create :
+          (Rpc.call -> Rpc.response) -> task:task -> id:string -> string
+        val destroy :
+          (Rpc.call -> Rpc.response) ->
+          task:task -> dp:dp -> allow_leak:bool -> result
+        val diagnostics : (Rpc.call -> Rpc.response) -> 'a -> string
+      end
+    module SR :
+      sig
+        val attach :
+          (Rpc.call -> Rpc.response) -> task:task -> sr:sr -> result
+        val detach :
+          (Rpc.call -> Rpc.response) -> task:task -> sr:sr -> result
+        val destroy :
+          (Rpc.call -> Rpc.response) -> task:task -> sr:sr -> result
+        val list : (Rpc.call -> Rpc.response) -> task:task -> string list
+      end
+    module VDI :
+      sig
+        val attach :
+          (Rpc.call -> Rpc.response) ->
+          task:task -> dp:dp -> sr:sr -> vdi:vdi -> read_write:bool -> result
+        val activate :
+          (Rpc.call -> Rpc.response) ->
+          task:task -> dp:dp -> sr:sr -> vdi:vdi -> result
+        val stat :
+          (Rpc.call -> Rpc.response) ->
+          task:task -> ?dp:dp -> sr:sr -> vdi:vdi -> 'a -> result
+        val deactivate :
+          (Rpc.call -> Rpc.response) ->
+          task:task -> dp:dp -> sr:sr -> vdi:vdi -> result
+        val detach :
+          (Rpc.call -> Rpc.response) ->
+          task:task -> dp:dp -> sr:sr -> vdi:vdi -> result
+      end
+  end
+module type Server_impl =
+  sig
+    type context
+    module DP :
+      sig
+        val create : context -> task:task -> id:string -> dp
+        val destroy :
+          context -> task:task -> dp:dp -> allow_leak:bool -> result
+        val diagnostics : context -> unit -> string
+      end
+    module SR :
+      sig
+        val attach : context -> task:task -> sr:sr -> result
+        val detach : context -> task:task -> sr:sr -> result
+        val destroy : context -> task:task -> sr:sr -> result
+        val list : context -> task:task -> sr list
+      end
+    module VDI :
+      sig
+        val attach :
+          context ->
+          task:task -> dp:dp -> sr:sr -> vdi:vdi -> read_write:bool -> result
+        val activate :
+          context -> task:task -> dp:dp -> sr:sr -> vdi:vdi -> result
+        val stat :
+          context ->
+          task:task -> ?dp:dp -> sr:sr -> vdi:vdi -> unit -> result
+        val deactivate :
+          context -> task:task -> dp:dp -> sr:sr -> vdi:vdi -> result
+        val detach :
+          context -> task:task -> dp:dp -> sr:sr -> vdi:vdi -> result
+      end
+  end
+module Server :
+  functor (Impl : Server_impl) ->
+    sig val process : Impl.context -> Rpc.call -> Rpc.response end
--- /dev/null
+++ xen-api-0.1/ocaml/xe-cli/rt/geneva/cli_test.annot
@@ -0,0 +1,3534 @@
+"cli_test.ml" 19 612 616 "cli_test.ml" 19 612 625
+type(
+  string ref
+)
+ident(
+  def exportdir "cli_test.ml" 21 636 636 --
+)
+"cli_test.ml" 19 612 628 "cli_test.ml" 19 612 631
+type(
+  string -> string ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"cli_test.ml" 19 612 632 "cli_test.ml" 19 612 634
+type(
+  string
+)
+"cli_test.ml" 19 612 628 "cli_test.ml" 19 612 634
+type(
+  string ref
+)
+"cli_test.ml" 21 636 640 "cli_test.ml" 21 636 651
+type(
+  string ref
+)
+ident(
+  def bridge_name "cli_test.ml" 23 674 674 --
+)
+"cli_test.ml" 21 636 654 "cli_test.ml" 21 636 657
+type(
+  string -> string ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"cli_test.ml" 21 636 658 "cli_test.ml" 21 636 666
+type(
+  string
+)
+"cli_test.ml" 21 636 654 "cli_test.ml" 21 636 666
+type(
+  string ref
+)
+"cli_test.ml" 23 674 678 "cli_test.ml" 23 674 685
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> unit
+)
+ident(
+  def cd_test "cli_test.ml" 34 1115 1115 --
+)
+"cli_test.ml" 23 674 686 "cli_test.ml" 23 674 689
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_test.ml" 23 674 690 "cli_test.ml" 27 846 897
+)
+"cli_test.ml" 23 674 690 "cli_test.ml" 23 674 694
+type(
+  string
+)
+ident(
+  def vmid "cli_test.ml" 24 697 699 "cli_test.ml" 27 846 897
+)
+"cli_test.ml" 24 697 699 "cli_test.ml" 24 697 715
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> string option -> unit
+)
+ident(
+  ext_ref Cli_utils.cd_attach_remove
+)
+"cli_test.ml" 24 697 716 "cli_test.ml" 24 697 719
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 23 674 686 "cli_test.ml" 23 674 689
+)
+"cli_test.ml" 24 697 720 "cli_test.ml" 24 697 724
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_test.ml" 23 674 690 "cli_test.ml" 23 674 694
+)
+"cli_test.ml" 24 697 725 "cli_test.ml" 24 697 740
+type(
+  string
+)
+"cli_test.ml" 24 697 741 "cli_test.ml" 24 697 745
+type(
+  string option
+)
+"cli_test.ml" 24 697 699 "cli_test.ml" 24 697 745
+type(
+  unit
+)
+"cli_test.ml" 25 747 749 "cli_test.ml" 25 747 765
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> string option -> unit
+)
+ident(
+  ext_ref Cli_utils.cd_attach_remove
+)
+"cli_test.ml" 25 747 766 "cli_test.ml" 25 747 769
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 23 674 686 "cli_test.ml" 23 674 689
+)
+"cli_test.ml" 25 747 770 "cli_test.ml" 25 747 774
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_test.ml" 23 674 690 "cli_test.ml" 23 674 694
+)
+"cli_test.ml" 25 747 775 "cli_test.ml" 25 747 789
+type(
+  string
+)
+"cli_test.ml" 25 747 790 "cli_test.ml" 25 747 794
+type(
+  string option
+)
+"cli_test.ml" 25 747 749 "cli_test.ml" 25 747 794
+type(
+  unit
+)
+"cli_test.ml" 27 846 848 "cli_test.ml" 27 846 864
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> string option -> unit
+)
+ident(
+  ext_ref Cli_utils.cd_attach_remove
+)
+"cli_test.ml" 27 846 865 "cli_test.ml" 27 846 868
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 23 674 686 "cli_test.ml" 23 674 689
+)
+"cli_test.ml" 27 846 869 "cli_test.ml" 27 846 873
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_test.ml" 23 674 690 "cli_test.ml" 23 674 694
+)
+"cli_test.ml" 27 846 874 "cli_test.ml" 27 846 892
+type(
+  string
+)
+"cli_test.ml" 27 846 893 "cli_test.ml" 27 846 897
+type(
+  string option
+)
+"cli_test.ml" 27 846 848 "cli_test.ml" 27 846 897
+type(
+  unit
+)
+"cli_test.ml" 25 747 749 "cli_test.ml" 27 846 897
+type(
+  unit
+)
+"cli_test.ml" 24 697 699 "cli_test.ml" 27 846 897
+type(
+  unit
+)
+"cli_test.ml" 34 1115 1119 "cli_test.ml" 34 1115 1128
+type(
+  (string * string) list
+)
+ident(
+  def pv_guests "cli_test.ml" 39 1271 1271 --
+)
+"cli_test.ml" 34 1115 1133 "cli_test.ml" 34 1115 1151
+type(
+  string
+)
+"cli_test.ml" 34 1115 1152 "cli_test.ml" 34 1115 1161
+type(
+  string
+)
+"cli_test.ml" 34 1115 1132 "cli_test.ml" 34 1115 1162
+type(
+  string * string
+)
+"cli_test.ml" 35 1164 1168 "cli_test.ml" 35 1164 1186
+type(
+  string
+)
+"cli_test.ml" 35 1164 1187 "cli_test.ml" 35 1164 1196
+type(
+  string
+)
+"cli_test.ml" 35 1164 1167 "cli_test.ml" 35 1164 1197
+type(
+  string * string
+)
+"cli_test.ml" 36 1199 1203 "cli_test.ml" 36 1199 1221
+type(
+  string
+)
+"cli_test.ml" 36 1199 1222 "cli_test.ml" 36 1199 1231
+type(
+  string
+)
+"cli_test.ml" 36 1199 1202 "cli_test.ml" 36 1199 1232
+type(
+  string * string
+)
+"cli_test.ml" 37 1234 1238 "cli_test.ml" 37 1234 1256
+type(
+  string
+)
+"cli_test.ml" 37 1234 1257 "cli_test.ml" 37 1234 1265
+type(
+  string
+)
+"cli_test.ml" 37 1234 1237 "cli_test.ml" 37 1234 1266
+type(
+  string * string
+)
+"cli_test.ml" 34 1115 1131 "cli_test.ml" 37 1234 1267
+type(
+  (string * string) list
+)
+"cli_test.ml" 39 1271 1275 "cli_test.ml" 39 1271 1283
+type(
+  (string * string) list
+)
+ident(
+  def pv_disks "cli_test.ml" 45 1373 1373 --
+)
+"cli_test.ml" 39 1271 1288 "cli_test.ml" 39 1271 1293
+type(
+  string
+)
+"cli_test.ml" 39 1271 1294 "cli_test.ml" 39 1271 1299
+type(
+  string
+)
+"cli_test.ml" 39 1271 1287 "cli_test.ml" 39 1271 1300
+type(
+  string * string
+)
+"cli_test.ml" 40 1302 1305 "cli_test.ml" 40 1302 1310
+type(
+  string
+)
+"cli_test.ml" 40 1302 1311 "cli_test.ml" 40 1302 1317
+type(
+  string
+)
+"cli_test.ml" 40 1302 1304 "cli_test.ml" 40 1302 1318
+type(
+  string * string
+)
+"cli_test.ml" 41 1320 1323 "cli_test.ml" 41 1320 1328
+type(
+  string
+)
+"cli_test.ml" 41 1320 1329 "cli_test.ml" 41 1320 1335
+type(
+  string
+)
+"cli_test.ml" 41 1320 1322 "cli_test.ml" 41 1320 1336
+type(
+  string * string
+)
+"cli_test.ml" 42 1338 1341 "cli_test.ml" 42 1338 1346
+type(
+  string
+)
+"cli_test.ml" 42 1338 1347 "cli_test.ml" 42 1338 1352
+type(
+  string
+)
+"cli_test.ml" 42 1338 1340 "cli_test.ml" 42 1338 1353
+type(
+  string * string
+)
+"cli_test.ml" 43 1355 1358 "cli_test.ml" 43 1355 1363
+type(
+  string
+)
+"cli_test.ml" 43 1355 1364 "cli_test.ml" 43 1355 1369
+type(
+  string
+)
+"cli_test.ml" 43 1355 1357 "cli_test.ml" 43 1355 1370
+type(
+  string * string
+)
+"cli_test.ml" 39 1271 1286 "cli_test.ml" 43 1355 1371
+type(
+  (string * string) list
+)
+"cli_test.ml" 45 1373 1377 "cli_test.ml" 45 1373 1387
+type(
+  (string * string) list
+)
+ident(
+  def hvm_guests "cli_test.ml" 52 1537 1537 --
+)
+"cli_test.ml" 46 1392 1397 "cli_test.ml" 46 1392 1413
+type(
+  string
+)
+"cli_test.ml" 46 1392 1414 "cli_test.ml" 46 1392 1424
+type(
+  string
+)
+"cli_test.ml" 46 1392 1396 "cli_test.ml" 46 1392 1425
+type(
+  string * string
+)
+"cli_test.ml" 47 1427 1432 "cli_test.ml" 47 1427 1448
+type(
+  string
+)
+"cli_test.ml" 47 1427 1449 "cli_test.ml" 47 1427 1459
+type(
+  string
+)
+"cli_test.ml" 47 1427 1431 "cli_test.ml" 47 1427 1460
+type(
+  string * string
+)
+"cli_test.ml" 48 1462 1467 "cli_test.ml" 48 1462 1483
+type(
+  string
+)
+"cli_test.ml" 48 1462 1484 "cli_test.ml" 48 1462 1494
+type(
+  string
+)
+"cli_test.ml" 48 1462 1466 "cli_test.ml" 48 1462 1495
+type(
+  string * string
+)
+"cli_test.ml" 49 1497 1502 "cli_test.ml" 49 1497 1518
+type(
+  string
+)
+"cli_test.ml" 49 1497 1519 "cli_test.ml" 49 1497 1529
+type(
+  string
+)
+"cli_test.ml" 49 1497 1501 "cli_test.ml" 49 1497 1530
+type(
+  string * string
+)
+"cli_test.ml" 45 1373 1390 "cli_test.ml" 50 1531 1535
+type(
+  (string * string) list
+)
+"cli_test.ml" 52 1537 1541 "cli_test.ml" 52 1537 1550
+type(
+  (string * string) list
+)
+ident(
+  def hvm_disks "cli_test.ml" 55 1589 1589 --
+)
+"cli_test.ml" 52 1537 1555 "cli_test.ml" 52 1537 1560
+type(
+  string
+)
+"cli_test.ml" 52 1537 1561 "cli_test.ml" 52 1537 1566
+type(
+  string
+)
+"cli_test.ml" 52 1537 1554 "cli_test.ml" 52 1537 1567
+type(
+  string * string
+)
+"cli_test.ml" 53 1569 1573 "cli_test.ml" 53 1569 1578
+type(
+  string
+)
+"cli_test.ml" 53 1569 1579 "cli_test.ml" 53 1569 1585
+type(
+  string
+)
+"cli_test.ml" 53 1569 1572 "cli_test.ml" 53 1569 1586
+type(
+  string * string
+)
+"cli_test.ml" 52 1537 1553 "cli_test.ml" 53 1569 1587
+type(
+  (string * string) list
+)
+"cli_test.ml" 55 1589 1593 "cli_test.ml" 55 1589 1600
+type(
+  unit -> (string * string * string) list
+)
+ident(
+  def pv_nics "cli_test.ml" 58 1694 1694 --
+)
+"cli_test.ml" 55 1589 1601 "cli_test.ml" 55 1589 1603
+type(
+  unit
+)
+"cli_test.ml" 55 1589 1608 "cli_test.ml" 55 1589 1614
+type(
+  string
+)
+"cli_test.ml" 55 1589 1615 "cli_test.ml" 55 1589 1631
+type(
+  string
+)
+"cli_test.ml" 55 1589 1632 "cli_test.ml" 55 1589 1633
+type(
+  string ref -> string
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"cli_test.ml" 55 1589 1633 "cli_test.ml" 55 1589 1644
+type(
+  string ref
+)
+ident(
+  int_ref bridge_name "cli_test.ml" 21 636 640 "cli_test.ml" 21 636 651
+)
+"cli_test.ml" 55 1589 1632 "cli_test.ml" 55 1589 1644
+type(
+  string
+)
+"cli_test.ml" 55 1589 1607 "cli_test.ml" 55 1589 1645
+type(
+  string * string * string
+)
+"cli_test.ml" 56 1647 1652 "cli_test.ml" 56 1647 1658
+type(
+  string
+)
+"cli_test.ml" 56 1647 1659 "cli_test.ml" 56 1647 1675
+type(
+  string
+)
+"cli_test.ml" 56 1647 1676 "cli_test.ml" 56 1647 1677
+type(
+  string ref -> string
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"cli_test.ml" 56 1647 1677 "cli_test.ml" 56 1647 1688
+type(
+  string ref
+)
+ident(
+  int_ref bridge_name "cli_test.ml" 21 636 640 "cli_test.ml" 21 636 651
+)
+"cli_test.ml" 56 1647 1676 "cli_test.ml" 56 1647 1688
+type(
+  string
+)
+"cli_test.ml" 56 1647 1651 "cli_test.ml" 56 1647 1689
+type(
+  string * string * string
+)
+"cli_test.ml" 55 1589 1606 "cli_test.ml" 56 1647 1690
+type(
+  (string * string * string) list
+)
+"cli_test.ml" 58 1694 1698 "cli_test.ml" 58 1694 1706
+type(
+  unit -> (string * string * string) list
+)
+ident(
+  def hvm_nics "cli_test.ml" 61 1796 1796 --
+)
+"cli_test.ml" 58 1694 1707 "cli_test.ml" 58 1694 1709
+type(
+  unit
+)
+"cli_test.ml" 58 1694 1714 "cli_test.ml" 58 1694 1720
+type(
+  string
+)
+"cli_test.ml" 58 1694 1721 "cli_test.ml" 58 1694 1737
+type(
+  string
+)
+"cli_test.ml" 58 1694 1738 "cli_test.ml" 58 1694 1739
+type(
+  string ref -> string
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"cli_test.ml" 58 1694 1739 "cli_test.ml" 58 1694 1750
+type(
+  string ref
+)
+ident(
+  int_ref bridge_name "cli_test.ml" 21 636 640 "cli_test.ml" 21 636 651
+)
+"cli_test.ml" 58 1694 1738 "cli_test.ml" 58 1694 1750
+type(
+  string
+)
+"cli_test.ml" 58 1694 1713 "cli_test.ml" 58 1694 1751
+type(
+  string * string * string
+)
+"cli_test.ml" 59 1753 1756 "cli_test.ml" 59 1753 1762
+type(
+  string
+)
+"cli_test.ml" 59 1753 1763 "cli_test.ml" 59 1753 1779
+type(
+  string
+)
+"cli_test.ml" 59 1753 1780 "cli_test.ml" 59 1753 1781
+type(
+  string ref -> string
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"cli_test.ml" 59 1753 1781 "cli_test.ml" 59 1753 1792
+type(
+  string ref
+)
+ident(
+  int_ref bridge_name "cli_test.ml" 21 636 640 "cli_test.ml" 21 636 651
+)
+"cli_test.ml" 59 1753 1780 "cli_test.ml" 59 1753 1792
+type(
+  string
+)
+"cli_test.ml" 59 1753 1755 "cli_test.ml" 59 1753 1793
+type(
+  string * string * string
+)
+"cli_test.ml" 58 1694 1712 "cli_test.ml" 59 1753 1794
+type(
+  (string * string * string) list
+)
+"cli_test.ml" 61 1796 1800 "cli_test.ml" 61 1796 1808
+type(
+  string list
+)
+ident(
+  def vbridges "cli_test.ml" 63 1847 1847 --
+)
+"cli_test.ml" 61 1796 1812 "cli_test.ml" 61 1796 1822
+type(
+  string
+)
+"cli_test.ml" 61 1796 1823 "cli_test.ml" 61 1796 1833
+type(
+  string
+)
+"cli_test.ml" 61 1796 1834 "cli_test.ml" 61 1796 1844
+type(
+  string
+)
+"cli_test.ml" 61 1796 1811 "cli_test.ml" 61 1796 1845
+type(
+  string list
+)
+"cli_test.ml" 63 1847 1851 "cli_test.ml" 63 1847 1864
+type(
+  string
+)
+ident(
+  def patchfilename "cli_test.ml" 69 2065 2065 --
+)
+"cli_test.ml" 63 1847 1867 "cli_test.ml" 63 1847 1885
+type(
+  string
+)
+"cli_test.ml" 69 2065 2069 "cli_test.ml" 69 2065 2088
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string list -> unit
+)
+ident(
+  def run_host_test_cycle "cli_test.ml" 103 3224 3224 --
+)
+"cli_test.ml" 69 2065 2089 "cli_test.ml" 69 2065 2092
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_test.ml" 69 2065 2093 "cli_test.ml" 96 2993 3046
+)
+"cli_test.ml" 69 2065 2093 "cli_test.ml" 69 2065 2101
+type(
+  string list
+)
+ident(
+  def vbridges "cli_test.ml" 72 2152 2154 "cli_test.ml" 96 2993 3046
+)
+"cli_test.ml" 72 2152 2158 "cli_test.ml" 72 2152 2175
+type(
+  string list
+)
+"cli_test.ml" 72 2152 2178 "cli_test.ml" 72 2152 2190
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string list
+)
+ident(
+  ext_ref Cli_utils.get_vbridges
+)
+"cli_test.ml" 72 2152 2191 "cli_test.ml" 72 2152 2194
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 69 2065 2089 "cli_test.ml" 69 2065 2092
+)
+"cli_test.ml" 72 2152 2178 "cli_test.ml" 72 2152 2194
+type(
+  string list
+)
+"cli_test.ml" 73 2198 2204 "cli_test.ml" 73 2198 2205
+type(
+  unit
+)
+"cli_test.ml" 73 2198 2208 "cli_test.ml" 73 2198 2217
+type(
+  (string -> unit) -> string list -> unit
+)
+ident(
+  ext_ref List.iter
+)
+"cli_test.ml" 73 2198 2219 "cli_test.ml" 73 2198 2238
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> unit
+)
+ident(
+  ext_ref Cli_utils.sync_remove_vbridge
+)
+"cli_test.ml" 73 2198 2239 "cli_test.ml" 73 2198 2242
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 69 2065 2089 "cli_test.ml" 69 2065 2092
+)
+"cli_test.ml" 73 2198 2218 "cli_test.ml" 73 2198 2243
+type(
+  string -> unit
+)
+"cli_test.ml" 73 2198 2244 "cli_test.ml" 73 2198 2261
+type(
+  string list
+)
+ident(
+  int_ref existing_vbridges "cli_test.ml" 72 2152 2158 "cli_test.ml" 72 2152 2175
+)
+"cli_test.ml" 73 2198 2208 "cli_test.ml" 73 2198 2261
+type(
+  unit
+)
+"cli_test.ml" 76 2337 2343 "cli_test.ml" 76 2337 2359
+type(
+  string list
+)
+"cli_test.ml" 76 2337 2362 "cli_test.ml" 76 2337 2373
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string list
+)
+ident(
+  ext_ref Cli_utils.get_patches
+)
+"cli_test.ml" 76 2337 2374 "cli_test.ml" 76 2337 2377
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 69 2065 2089 "cli_test.ml" 69 2065 2092
+)
+"cli_test.ml" 76 2337 2362 "cli_test.ml" 76 2337 2377
+type(
+  string list
+)
+"cli_test.ml" 77 2381 2387 "cli_test.ml" 77 2381 2388
+type(
+  unit
+)
+"cli_test.ml" 77 2381 2391 "cli_test.ml" 77 2381 2400
+type(
+  (string -> unit) -> string list -> unit
+)
+ident(
+  ext_ref List.iter
+)
+"cli_test.ml" 77 2381 2402 "cli_test.ml" 77 2381 2419
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> unit
+)
+ident(
+  ext_ref Cli_utils.sync_remove_patch
+)
+"cli_test.ml" 77 2381 2420 "cli_test.ml" 77 2381 2423
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 69 2065 2089 "cli_test.ml" 69 2065 2092
+)
+"cli_test.ml" 77 2381 2401 "cli_test.ml" 77 2381 2424
+type(
+  string -> unit
+)
+"cli_test.ml" 77 2381 2425 "cli_test.ml" 77 2381 2441
+type(
+  string list
+)
+ident(
+  int_ref existing_patches "cli_test.ml" 76 2337 2343 "cli_test.ml" 76 2337 2359
+)
+"cli_test.ml" 77 2381 2391 "cli_test.ml" 77 2381 2441
+type(
+  unit
+)
+"cli_test.ml" 80 2500 2506 "cli_test.ml" 80 2500 2507
+type(
+  unit
+)
+"cli_test.ml" 80 2500 2510 "cli_test.ml" 80 2500 2519
+type(
+  (string -> unit) -> string list -> unit
+)
+ident(
+  ext_ref List.iter
+)
+"cli_test.ml" 80 2500 2521 "cli_test.ml" 80 2500 2537
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> unit
+)
+ident(
+  ext_ref Cli_utils.sync_add_vbridge
+)
+"cli_test.ml" 80 2500 2538 "cli_test.ml" 80 2500 2541
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 69 2065 2089 "cli_test.ml" 69 2065 2092
+)
+"cli_test.ml" 80 2500 2520 "cli_test.ml" 80 2500 2542
+type(
+  string -> unit
+)
+"cli_test.ml" 80 2500 2543 "cli_test.ml" 80 2500 2551
+type(
+  string list
+)
+ident(
+  int_ref vbridges "cli_test.ml" 69 2065 2093 "cli_test.ml" 69 2065 2101
+)
+"cli_test.ml" 80 2500 2510 "cli_test.ml" 80 2500 2551
+type(
+  unit
+)
+"cli_test.ml" 83 2585 2591 "cli_test.ml" 83 2585 2592
+type(
+  unit
+)
+"cli_test.ml" 83 2585 2595 "cli_test.ml" 83 2585 2608
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  unit
+)
+ident(
+  ext_ref Cli_utils.loglevel_test
+)
+"cli_test.ml" 83 2585 2609 "cli_test.ml" 83 2585 2612
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 69 2065 2089 "cli_test.ml" 69 2065 2092
+)
+"cli_test.ml" 83 2585 2595 "cli_test.ml" 83 2585 2612
+type(
+  unit
+)
+"cli_test.ml" 86 2653 2659 "cli_test.ml" 86 2653 2660
+type(
+  unit
+)
+"cli_test.ml" 87 2663 2667 "cli_test.ml" 87 2663 2684
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  unit
+)
+ident(
+  ext_ref Cli_utils.print_host_output
+)
+"cli_test.ml" 87 2663 2685 "cli_test.ml" 87 2663 2688
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 69 2065 2089 "cli_test.ml" 69 2065 2092
+)
+"cli_test.ml" 87 2663 2667 "cli_test.ml" 87 2663 2688
+type(
+  unit
+)
+"cli_test.ml" 90 2755 2761 "cli_test.ml" 90 2755 2762
+type(
+  unit
+)
+"cli_test.ml" 90 2755 2765 "cli_test.ml" 90 2755 2774
+type(
+  (string -> unit) -> string list -> unit
+)
+ident(
+  ext_ref List.iter
+)
+"cli_test.ml" 90 2755 2776 "cli_test.ml" 90 2755 2795
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> unit
+)
+ident(
+  ext_ref Cli_utils.sync_remove_vbridge
+)
+"cli_test.ml" 90 2755 2796 "cli_test.ml" 90 2755 2799
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 69 2065 2089 "cli_test.ml" 69 2065 2092
+)
+"cli_test.ml" 90 2755 2775 "cli_test.ml" 90 2755 2800
+type(
+  string -> unit
+)
+"cli_test.ml" 90 2755 2801 "cli_test.ml" 90 2755 2809
+type(
+  string list
+)
+ident(
+  int_ref vbridges "cli_test.ml" 69 2065 2093 "cli_test.ml" 69 2065 2101
+)
+"cli_test.ml" 90 2755 2765 "cli_test.ml" 90 2755 2809
+type(
+  unit
+)
+"cli_test.ml" 93 2884 2890 "cli_test.ml" 93 2884 2906
+type(
+  string list
+)
+"cli_test.ml" 93 2884 2909 "cli_test.ml" 93 2884 2920
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string list
+)
+ident(
+  ext_ref Cli_utils.get_patches
+)
+"cli_test.ml" 93 2884 2921 "cli_test.ml" 93 2884 2924
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 69 2065 2089 "cli_test.ml" 69 2065 2092
+)
+"cli_test.ml" 93 2884 2909 "cli_test.ml" 93 2884 2924
+type(
+  string list
+)
+"cli_test.ml" 94 2928 2934 "cli_test.ml" 94 2928 2935
+type(
+  unit
+)
+"cli_test.ml" 94 2928 2938 "cli_test.ml" 94 2928 2947
+type(
+  (string -> unit) -> string list -> unit
+)
+ident(
+  ext_ref List.iter
+)
+"cli_test.ml" 94 2928 2949 "cli_test.ml" 94 2928 2966
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> unit
+)
+ident(
+  ext_ref Cli_utils.sync_remove_patch
+)
+"cli_test.ml" 94 2928 2967 "cli_test.ml" 94 2928 2970
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 69 2065 2089 "cli_test.ml" 69 2065 2092
+)
+"cli_test.ml" 94 2928 2948 "cli_test.ml" 94 2928 2971
+type(
+  string -> unit
+)
+"cli_test.ml" 94 2928 2972 "cli_test.ml" 94 2928 2988
+type(
+  string list
+)
+ident(
+  int_ref existing_patches "cli_test.ml" 93 2884 2890 "cli_test.ml" 93 2884 2906
+)
+"cli_test.ml" 94 2928 2938 "cli_test.ml" 94 2928 2988
+type(
+  unit
+)
+"cli_test.ml" 96 2993 2997 "cli_test.ml" 96 2993 3007
+type(
+  string -> unit
+)
+ident(
+  ext_ref Cli_utils.print_line
+)
+"cli_test.ml" 96 2993 3008 "cli_test.ml" 96 2993 3046
+type(
+  string
+)
+"cli_test.ml" 96 2993 2997 "cli_test.ml" 96 2993 3046
+type(
+  unit
+)
+"cli_test.ml" 94 2928 2930 "cli_test.ml" 96 2993 3046
+type(
+  unit
+)
+"cli_test.ml" 93 2884 2886 "cli_test.ml" 96 2993 3046
+type(
+  unit
+)
+"cli_test.ml" 90 2755 2757 "cli_test.ml" 96 2993 3046
+type(
+  unit
+)
+"cli_test.ml" 86 2653 2655 "cli_test.ml" 96 2993 3046
+type(
+  unit
+)
+"cli_test.ml" 83 2585 2587 "cli_test.ml" 96 2993 3046
+type(
+  unit
+)
+"cli_test.ml" 80 2500 2502 "cli_test.ml" 96 2993 3046
+type(
+  unit
+)
+"cli_test.ml" 77 2381 2383 "cli_test.ml" 96 2993 3046
+type(
+  unit
+)
+"cli_test.ml" 76 2337 2339 "cli_test.ml" 96 2993 3046
+type(
+  unit
+)
+"cli_test.ml" 73 2198 2200 "cli_test.ml" 96 2993 3046
+type(
+  unit
+)
+"cli_test.ml" 72 2152 2154 "cli_test.ml" 96 2993 3046
+type(
+  unit
+)
+"cli_test.ml" 103 3224 3228 "cli_test.ml" 103 3224 3245
+type(
+  bool ->
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  (string * string) list ->
+  (string * string) list -> (string * string * string) list -> unit
+)
+ident(
+  def run_vm_test_cycle "cli_test.ml" 197 5725 5725 --
+)
+"cli_test.ml" 103 3224 3246 "cli_test.ml" 103 3224 3252
+type(
+  bool
+)
+ident(
+  def is_hvm "cli_test.ml" 103 3224 3253 "cli_test.ml" 195 5672 5723
+)
+"cli_test.ml" 103 3224 3253 "cli_test.ml" 103 3224 3256
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_test.ml" 103 3224 3257 "cli_test.ml" 195 5672 5723
+)
+"cli_test.ml" 103 3224 3257 "cli_test.ml" 103 3224 3260
+type(
+  (string * string) list
+)
+ident(
+  def vms "cli_test.ml" 103 3224 3261 "cli_test.ml" 195 5672 5723
+)
+"cli_test.ml" 103 3224 3261 "cli_test.ml" 103 3224 3266
+type(
+  (string * string) list
+)
+ident(
+  def disks "cli_test.ml" 103 3224 3267 "cli_test.ml" 195 5672 5723
+)
+"cli_test.ml" 103 3224 3267 "cli_test.ml" 103 3224 3271
+type(
+  (string * string * string) list
+)
+ident(
+  def nics "cli_test.ml" 106 3323 3325 "cli_test.ml" 195 5672 5723
+)
+"cli_test.ml" 106 3323 3329 "cli_test.ml" 106 3323 3342
+type(
+  string list
+)
+"cli_test.ml" 107 3345 3350 "cli_test.ml" 107 3345 3356
+type(
+  string
+)
+"cli_test.ml" 107 3345 3357 "cli_test.ml" 107 3345 3370
+type(
+  string
+)
+"cli_test.ml" 107 3345 3371 "cli_test.ml" 107 3345 3385
+type(
+  string
+)
+"cli_test.ml" 107 3345 3386 "cli_test.ml" 107 3345 3404
+type(
+  string
+)
+"cli_test.ml" 108 3406 3411 "cli_test.ml" 108 3406 3415
+type(
+  string
+)
+"cli_test.ml" 108 3406 3416 "cli_test.ml" 108 3406 3423
+type(
+  string
+)
+"cli_test.ml" 108 3406 3424 "cli_test.ml" 108 3406 3436
+type(
+  string
+)
+"cli_test.ml" 108 3406 3437 "cli_test.ml" 108 3406 3451
+type(
+  string
+)
+"cli_test.ml" 108 3406 3452 "cli_test.ml" 108 3406 3463
+type(
+  string
+)
+"cli_test.ml" 108 3406 3464 "cli_test.ml" 108 3406 3477
+type(
+  string
+)
+"cli_test.ml" 107 3345 3349 "cli_test.ml" 108 3406 3478
+type(
+  string list
+)
+"cli_test.ml" 110 3483 3489 "cli_test.ml" 110 3483 3502
+type(
+  (string * string) list
+)
+"cli_test.ml" 110 3483 3507 "cli_test.ml" 110 3483 3513
+type(
+  string
+)
+"cli_test.ml" 110 3483 3514 "cli_test.ml" 110 3483 3527
+type(
+  string
+)
+"cli_test.ml" 110 3483 3506 "cli_test.ml" 110 3483 3528
+type(
+  string * string
+)
+"cli_test.ml" 111 3530 3540 "cli_test.ml" 111 3530 3553
+type(
+  string
+)
+"cli_test.ml" 111 3530 3554 "cli_test.ml" 111 3530 3574
+type(
+  string
+)
+"cli_test.ml" 111 3530 3539 "cli_test.ml" 111 3530 3575
+type(
+  string * string
+)
+"cli_test.ml" 112 3577 3587 "cli_test.ml" 112 3577 3594
+type(
+  string
+)
+"cli_test.ml" 112 3577 3595 "cli_test.ml" 112 3577 3598
+type(
+  string
+)
+"cli_test.ml" 112 3577 3586 "cli_test.ml" 112 3577 3599
+type(
+  string * string
+)
+"cli_test.ml" 113 3601 3611 "cli_test.ml" 113 3601 3623
+type(
+  string
+)
+"cli_test.ml" 113 3601 3624 "cli_test.ml" 113 3601 3629
+type(
+  string
+)
+"cli_test.ml" 113 3601 3610 "cli_test.ml" 113 3601 3630
+type(
+  string * string
+)
+"cli_test.ml" 114 3632 3642 "cli_test.ml" 114 3632 3656
+type(
+  string
+)
+"cli_test.ml" 114 3632 3657 "cli_test.ml" 114 3632 3664
+type(
+  string
+)
+"cli_test.ml" 114 3632 3641 "cli_test.ml" 114 3632 3665
+type(
+  string * string
+)
+"cli_test.ml" 115 3667 3677 "cli_test.ml" 115 3667 3691
+type(
+  string
+)
+"cli_test.ml" 115 3667 3692 "cli_test.ml" 115 3667 3698
+type(
+  string
+)
+"cli_test.ml" 115 3667 3676 "cli_test.ml" 115 3667 3699
+type(
+  string * string
+)
+"cli_test.ml" 118 3768 3778 "cli_test.ml" 118 3768 3791
+type(
+  string
+)
+"cli_test.ml" 118 3768 3792 "cli_test.ml" 118 3768 3802
+type(
+  string
+)
+"cli_test.ml" 118 3768 3777 "cli_test.ml" 118 3768 3803
+type(
+  string * string
+)
+"cli_test.ml" 119 3805 3815 "cli_test.ml" 119 3805 3825
+type(
+  string
+)
+"cli_test.ml" 119 3805 3826 "cli_test.ml" 119 3805 3835
+type(
+  string
+)
+"cli_test.ml" 119 3805 3814 "cli_test.ml" 119 3805 3836
+type(
+  string * string
+)
+"cli_test.ml" 120 3838 3848 "cli_test.ml" 120 3838 3858
+type(
+  string
+)
+"cli_test.ml" 120 3838 3859 "cli_test.ml" 120 3838 3868
+type(
+  string
+)
+"cli_test.ml" 120 3838 3847 "cli_test.ml" 120 3838 3869
+type(
+  string * string
+)
+"cli_test.ml" 110 3483 3505 "cli_test.ml" 120 3838 3870
+type(
+  (string * string) list
+)
+"cli_test.ml" 123 3932 3938 "cli_test.ml" 123 3932 3939
+type(
+  unit
+)
+"cli_test.ml" 123 3932 3942 "cli_test.ml" 123 3932 3959
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  unit
+)
+ident(
+  ext_ref Cli_utils.uninstall_all_vms
+)
+"cli_test.ml" 123 3932 3960 "cli_test.ml" 123 3932 3963
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 103 3224 3253 "cli_test.ml" 103 3224 3256
+)
+"cli_test.ml" 123 3932 3942 "cli_test.ml" 123 3932 3963
+type(
+  unit
+)
+"cli_test.ml" 126 4033 4039 "cli_test.ml" 126 4033 4044
+type(
+  string list
+)
+"cli_test.ml" 127 4047 4051 "cli_test.ml" 127 4047 4059
+type(
+  (string * string -> string) -> (string * string) list -> string list
+)
+ident(
+  ext_ref List.map
+)
+"cli_test.ml" 128 4060 4067 "cli_test.ml" 128 4060 4080
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string * string -> string
+)
+ident(
+  ext_ref Cli_utils.install_guest
+)
+"cli_test.ml" 128 4060 4081 "cli_test.ml" 128 4060 4084
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 103 3224 3253 "cli_test.ml" 103 3224 3256
+)
+"cli_test.ml" 128 4060 4066 "cli_test.ml" 128 4060 4085
+type(
+  string * string -> string
+)
+"cli_test.ml" 128 4060 4086 "cli_test.ml" 128 4060 4089
+type(
+  (string * string) list
+)
+ident(
+  int_ref vms "cli_test.ml" 103 3224 3257 "cli_test.ml" 103 3224 3260
+)
+"cli_test.ml" 127 4047 4051 "cli_test.ml" 128 4060 4089
+type(
+  string list
+)
+"cli_test.ml" 131 4162 4168 "cli_test.ml" 131 4162 4175
+type(
+  string
+)
+"cli_test.ml" 131 4162 4178 "cli_test.ml" 131 4162 4185
+type(
+  string list -> string
+)
+ident(
+  ext_ref List.hd
+)
+"cli_test.ml" 131 4162 4186 "cli_test.ml" 131 4162 4191
+type(
+  string list
+)
+ident(
+  int_ref uuids "cli_test.ml" 126 4033 4039 "cli_test.ml" 126 4033 4044
+)
+"cli_test.ml" 131 4162 4178 "cli_test.ml" 131 4162 4191
+type(
+  string
+)
+"cli_test.ml" 134 4228 4234 "cli_test.ml" 134 4228 4235
+type(
+  unit
+)
+"cli_test.ml" 135 4238 4242 "cli_test.ml" 135 4238 4251
+type(
+  (string -> unit) -> string list -> unit
+)
+ident(
+  ext_ref List.iter
+)
+"cli_test.ml" 136 4252 4263 "cli_test.ml" 136 4252 4267
+type(
+  string
+)
+ident(
+  def vmid "cli_test.ml" 137 4271 4273 "cli_test.ml" 137 4271 4313
+)
+"cli_test.ml" 137 4271 4273 "cli_test.ml" 137 4271 4282
+type(
+  (string * string -> unit) -> (string * string) list -> unit
+)
+ident(
+  ext_ref List.iter
+)
+"cli_test.ml" 137 4271 4284 "cli_test.ml" 137 4271 4297
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string * string -> unit
+)
+ident(
+  ext_ref Cli_utils.sync_add_disk
+)
+"cli_test.ml" 137 4271 4298 "cli_test.ml" 137 4271 4301
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 103 3224 3253 "cli_test.ml" 103 3224 3256
+)
+"cli_test.ml" 137 4271 4302 "cli_test.ml" 137 4271 4306
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_test.ml" 136 4252 4263 "cli_test.ml" 136 4252 4267
+)
+"cli_test.ml" 137 4271 4283 "cli_test.ml" 137 4271 4307
+type(
+  string * string -> unit
+)
+"cli_test.ml" 137 4271 4308 "cli_test.ml" 137 4271 4313
+type(
+  (string * string) list
+)
+ident(
+  int_ref disks "cli_test.ml" 103 3224 3261 "cli_test.ml" 103 3224 3266
+)
+"cli_test.ml" 137 4271 4273 "cli_test.ml" 137 4271 4313
+type(
+  unit
+)
+"cli_test.ml" 136 4252 4258 "cli_test.ml" 137 4271 4314
+type(
+  string -> unit
+)
+"cli_test.ml" 137 4271 4315 "cli_test.ml" 137 4271 4320
+type(
+  string list
+)
+ident(
+  int_ref uuids "cli_test.ml" 126 4033 4039 "cli_test.ml" 126 4033 4044
+)
+"cli_test.ml" 135 4238 4242 "cli_test.ml" 137 4271 4320
+type(
+  unit
+)
+"cli_test.ml" 140 4353 4359 "cli_test.ml" 140 4353 4360
+type(
+  unit
+)
+"cli_test.ml" 141 4363 4367 "cli_test.ml" 141 4363 4376
+type(
+  (string -> unit) -> string list -> unit
+)
+ident(
+  ext_ref List.iter
+)
+"cli_test.ml" 142 4377 4388 "cli_test.ml" 142 4377 4392
+type(
+  string
+)
+ident(
+  def vmid "cli_test.ml" 143 4396 4398 "cli_test.ml" 143 4396 4436
+)
+"cli_test.ml" 143 4396 4398 "cli_test.ml" 143 4396 4407
+type(
+  (string * string * string -> unit) ->
+  (string * string * string) list -> unit
+)
+ident(
+  ext_ref List.iter
+)
+"cli_test.ml" 143 4396 4409 "cli_test.ml" 143 4396 4421
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string * string * string -> unit
+)
+ident(
+  ext_ref Cli_utils.sync_add_nic
+)
+"cli_test.ml" 143 4396 4422 "cli_test.ml" 143 4396 4425
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 103 3224 3253 "cli_test.ml" 103 3224 3256
+)
+"cli_test.ml" 143 4396 4426 "cli_test.ml" 143 4396 4430
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_test.ml" 142 4377 4388 "cli_test.ml" 142 4377 4392
+)
+"cli_test.ml" 143 4396 4408 "cli_test.ml" 143 4396 4431
+type(
+  string * string * string -> unit
+)
+"cli_test.ml" 143 4396 4432 "cli_test.ml" 143 4396 4436
+type(
+  (string * string * string) list
+)
+ident(
+  int_ref nics "cli_test.ml" 103 3224 3267 "cli_test.ml" 103 3224 3271
+)
+"cli_test.ml" 143 4396 4398 "cli_test.ml" 143 4396 4436
+type(
+  unit
+)
+"cli_test.ml" 142 4377 4383 "cli_test.ml" 143 4396 4437
+type(
+  string -> unit
+)
+"cli_test.ml" 143 4396 4438 "cli_test.ml" 143 4396 4443
+type(
+  string list
+)
+ident(
+  int_ref uuids "cli_test.ml" 126 4033 4039 "cli_test.ml" 126 4033 4044
+)
+"cli_test.ml" 141 4363 4367 "cli_test.ml" 143 4396 4443
+type(
+  unit
+)
+"cli_test.ml" 146 4483 4489 "cli_test.ml" 146 4483 4490
+type(
+  unit
+)
+"cli_test.ml" 147 4493 4500 "cli_test.ml" 147 4493 4506
+type(
+  bool
+)
+ident(
+  int_ref is_hvm "cli_test.ml" 103 3224 3246 "cli_test.ml" 103 3224 3252
+)
+"cli_test.ml" 147 4493 4512 "cli_test.ml" 147 4493 4519
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> unit
+)
+ident(
+  int_ref cd_test "cli_test.ml" 23 674 678 "cli_test.ml" 23 674 685
+)
+"cli_test.ml" 147 4493 4520 "cli_test.ml" 147 4493 4523
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 103 3224 3253 "cli_test.ml" 103 3224 3256
+)
+"cli_test.ml" 147 4493 4524 "cli_test.ml" 147 4493 4531
+type(
+  string
+)
+ident(
+  int_ref test_vm "cli_test.ml" 131 4162 4168 "cli_test.ml" 131 4162 4175
+)
+"cli_test.ml" 147 4493 4512 "cli_test.ml" 147 4493 4531
+type(
+  unit
+)
+"cli_test.ml" 147 4493 4497 "cli_test.ml" 147 4493 4531
+type(
+  unit
+)
+"cli_test.ml" 150 4567 4573 "cli_test.ml" 150 4567 4574
+type(
+  unit
+)
+"cli_test.ml" 151 4577 4581 "cli_test.ml" 151 4577 4596
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> unit
+)
+ident(
+  ext_ref Cli_utils.print_vm_output
+)
+"cli_test.ml" 151 4577 4597 "cli_test.ml" 151 4577 4600
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 103 3224 3253 "cli_test.ml" 103 3224 3256
+)
+"cli_test.ml" 151 4577 4601 "cli_test.ml" 151 4577 4608
+type(
+  string
+)
+ident(
+  int_ref test_vm "cli_test.ml" 131 4162 4168 "cli_test.ml" 131 4162 4175
+)
+"cli_test.ml" 151 4577 4581 "cli_test.ml" 151 4577 4608
+type(
+  unit
+)
+"cli_test.ml" 154 4660 4666 "cli_test.ml" 154 4660 4667
+type(
+  unit
+)
+"cli_test.ml" 155 4670 4674 "cli_test.ml" 155 4670 4683
+type(
+  (string -> unit) -> string list -> unit
+)
+ident(
+  ext_ref List.iter
+)
+"cli_test.ml" 156 4684 4695 "cli_test.ml" 156 4684 4699
+type(
+  string
+)
+ident(
+  def vmid "cli_test.ml" 157 4703 4705 "cli_test.ml" 158 4743 4779
+)
+"cli_test.ml" 157 4703 4705 "cli_test.ml" 157 4703 4714
+type(
+  (string -> unit) -> string list -> unit
+)
+ident(
+  ext_ref List.iter
+)
+"cli_test.ml" 157 4703 4716 "cli_test.ml" 157 4703 4731
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> unit
+)
+ident(
+  ext_ref Cli_utils.sync_remove_nic
+)
+"cli_test.ml" 157 4703 4732 "cli_test.ml" 157 4703 4735
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 103 3224 3253 "cli_test.ml" 103 3224 3256
+)
+"cli_test.ml" 157 4703 4736 "cli_test.ml" 157 4703 4740
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_test.ml" 156 4684 4695 "cli_test.ml" 156 4684 4699
+)
+"cli_test.ml" 157 4703 4715 "cli_test.ml" 157 4703 4741
+type(
+  string -> unit
+)
+"cli_test.ml" 158 4743 4748 "cli_test.ml" 158 4743 4756
+type(
+  (string * string * string -> string) ->
+  (string * string * string) list -> string list
+)
+ident(
+  ext_ref List.map
+)
+"cli_test.ml" 158 4743 4763 "cli_test.ml" 158 4743 4764
+type(
+  string
+)
+ident(
+  def n "cli_test.ml" 158 4743 4771 "cli_test.ml" 158 4743 4772
+)
+"cli_test.ml" 158 4743 4765 "cli_test.ml" 158 4743 4766
+type(
+  string
+)
+"cli_test.ml" 158 4743 4767 "cli_test.ml" 158 4743 4768
+type(
+  string
+)
+"cli_test.ml" 158 4743 4762 "cli_test.ml" 158 4743 4769
+type(
+  string * string * string
+)
+"cli_test.ml" 158 4743 4771 "cli_test.ml" 158 4743 4772
+type(
+  string
+)
+ident(
+  int_ref n "cli_test.ml" 158 4743 4763 "cli_test.ml" 158 4743 4764
+)
+"cli_test.ml" 158 4743 4757 "cli_test.ml" 158 4743 4773
+type(
+  string * string * string -> string
+)
+"cli_test.ml" 158 4743 4774 "cli_test.ml" 158 4743 4778
+type(
+  (string * string * string) list
+)
+ident(
+  int_ref nics "cli_test.ml" 103 3224 3267 "cli_test.ml" 103 3224 3271
+)
+"cli_test.ml" 158 4743 4747 "cli_test.ml" 158 4743 4779
+type(
+  string list
+)
+"cli_test.ml" 157 4703 4705 "cli_test.ml" 158 4743 4779
+type(
+  unit
+)
+"cli_test.ml" 156 4684 4690 "cli_test.ml" 158 4743 4780
+type(
+  string -> unit
+)
+"cli_test.ml" 158 4743 4781 "cli_test.ml" 158 4743 4786
+type(
+  string list
+)
+ident(
+  int_ref uuids "cli_test.ml" 126 4033 4039 "cli_test.ml" 126 4033 4044
+)
+"cli_test.ml" 155 4670 4674 "cli_test.ml" 158 4743 4786
+type(
+  unit
+)
+"cli_test.ml" 161 4823 4829 "cli_test.ml" 161 4823 4830
+type(
+  unit
+)
+"cli_test.ml" 162 4833 4837 "cli_test.ml" 162 4833 4846
+type(
+  (string * string -> unit) -> (string * string) list -> unit
+)
+ident(
+  ext_ref List.iter
+)
+"cli_test.ml" 163 4847 4859 "cli_test.ml" 163 4847 4863
+type(
+  string
+)
+ident(
+  def disk "cli_test.ml" 164 4873 4875 "cli_test.ml" 164 4873 4933
+)
+"cli_test.ml" 163 4847 4864 "cli_test.ml" 163 4847 4868
+type(
+  string
+)
+ident(
+  def size "cli_test.ml" 164 4873 4875 "cli_test.ml" 164 4873 4933
+)
+"cli_test.ml" 163 4847 4858 "cli_test.ml" 163 4847 4869
+type(
+  string * string
+)
+"cli_test.ml" 164 4873 4875 "cli_test.ml" 164 4873 4884
+type(
+  (string -> unit) -> string list -> unit
+)
+ident(
+  ext_ref List.iter
+)
+"cli_test.ml" 164 4873 4890 "cli_test.ml" 164 4873 4894
+type(
+  string
+)
+ident(
+  def vmid "cli_test.ml" 164 4873 4896 "cli_test.ml" 164 4873 4926
+)
+"cli_test.ml" 164 4873 4896 "cli_test.ml" 164 4873 4907
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> string -> unit
+)
+ident(
+  ext_ref Cli_utils.resize_disk
+)
+"cli_test.ml" 164 4873 4908 "cli_test.ml" 164 4873 4911
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 103 3224 3253 "cli_test.ml" 103 3224 3256
+)
+"cli_test.ml" 164 4873 4912 "cli_test.ml" 164 4873 4916
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_test.ml" 164 4873 4890 "cli_test.ml" 164 4873 4894
+)
+"cli_test.ml" 164 4873 4917 "cli_test.ml" 164 4873 4921
+type(
+  string
+)
+ident(
+  int_ref disk "cli_test.ml" 163 4847 4859 "cli_test.ml" 163 4847 4863
+)
+"cli_test.ml" 164 4873 4922 "cli_test.ml" 164 4873 4926
+type(
+  string
+)
+ident(
+  int_ref size "cli_test.ml" 163 4847 4864 "cli_test.ml" 163 4847 4868
+)
+"cli_test.ml" 164 4873 4896 "cli_test.ml" 164 4873 4926
+type(
+  unit
+)
+"cli_test.ml" 164 4873 4885 "cli_test.ml" 164 4873 4927
+type(
+  string -> unit
+)
+"cli_test.ml" 164 4873 4928 "cli_test.ml" 164 4873 4933
+type(
+  string list
+)
+ident(
+  int_ref uuids "cli_test.ml" 126 4033 4039 "cli_test.ml" 126 4033 4044
+)
+"cli_test.ml" 164 4873 4875 "cli_test.ml" 164 4873 4933
+type(
+  unit
+)
+"cli_test.ml" 163 4847 4853 "cli_test.ml" 164 4873 4934
+type(
+  string * string -> unit
+)
+"cli_test.ml" 165 4935 4942 "cli_test.ml" 165 4935 4950
+type(
+  (string * string -> string * string) ->
+  (string * string) list -> (string * string) list
+)
+ident(
+  ext_ref List.map
+)
+"cli_test.ml" 166 4951 4959 "cli_test.ml" 166 4951 4960
+type(
+  string
+)
+ident(
+  def d "cli_test.ml" 166 4951 4965 "cli_test.ml" 166 4951 5006
+)
+"cli_test.ml" 166 4951 4961 "cli_test.ml" 166 4951 4962
+type(
+  string
+)
+ident(
+  def s "cli_test.ml" 166 4951 4965 "cli_test.ml" 166 4951 5006
+)
+"cli_test.ml" 166 4951 4958 "cli_test.ml" 166 4951 4963
+type(
+  string * string
+)
+"cli_test.ml" 166 4951 4966 "cli_test.ml" 166 4951 4967
+type(
+  string
+)
+ident(
+  int_ref d "cli_test.ml" 166 4951 4959 "cli_test.ml" 166 4951 4960
+)
+"cli_test.ml" 166 4951 4968 "cli_test.ml" 166 4951 4981
+type(
+  int -> string
+)
+ident(
+  ext_ref Pervasives.string_of_int
+)
+"cli_test.ml" 166 4951 4984 "cli_test.ml" 166 4951 4997
+type(
+  string -> int
+)
+ident(
+  ext_ref Pervasives.int_of_string
+)
+"cli_test.ml" 166 4951 4998 "cli_test.ml" 166 4951 4999
+type(
+  string
+)
+ident(
+  int_ref s "cli_test.ml" 166 4951 4961 "cli_test.ml" 166 4951 4962
+)
+"cli_test.ml" 166 4951 4983 "cli_test.ml" 166 4951 5000
+type(
+  int
+)
+"cli_test.ml" 166 4951 5000 "cli_test.ml" 166 4951 5001
+type(
+  int -> int -> int
+)
+ident(
+  ext_ref Pervasives.( + )
+)
+"cli_test.ml" 166 4951 5001 "cli_test.ml" 166 4951 5004
+type(
+  int
+)
+"cli_test.ml" 166 4951 4982 "cli_test.ml" 166 4951 5005
+type(
+  int
+)
+"cli_test.ml" 166 4951 4968 "cli_test.ml" 166 4951 5005
+type(
+  string
+)
+"cli_test.ml" 166 4951 4965 "cli_test.ml" 166 4951 5006
+type(
+  string * string
+)
+"cli_test.ml" 166 4951 4953 "cli_test.ml" 166 4951 5007
+type(
+  string * string -> string * string
+)
+"cli_test.ml" 166 4951 5008 "cli_test.ml" 166 4951 5013
+type(
+  (string * string) list
+)
+ident(
+  int_ref disks "cli_test.ml" 103 3224 3261 "cli_test.ml" 103 3224 3266
+)
+"cli_test.ml" 165 4935 4941 "cli_test.ml" 166 4951 5014
+type(
+  (string * string) list
+)
+"cli_test.ml" 162 4833 4837 "cli_test.ml" 166 4951 5014
+type(
+  unit
+)
+"cli_test.ml" 169 5053 5059 "cli_test.ml" 169 5053 5060
+type(
+  unit
+)
+"cli_test.ml" 170 5063 5067 "cli_test.ml" 170 5063 5076
+type(
+  (string -> unit) -> string list -> unit
+)
+ident(
+  ext_ref List.iter
+)
+"cli_test.ml" 171 5077 5088 "cli_test.ml" 171 5077 5092
+type(
+  string
+)
+ident(
+  def vmid "cli_test.ml" 172 5096 5098 "cli_test.ml" 173 5136 5160
+)
+"cli_test.ml" 172 5096 5098 "cli_test.ml" 172 5096 5107
+type(
+  (string -> unit) -> string list -> unit
+)
+ident(
+  ext_ref List.iter
+)
+"cli_test.ml" 172 5096 5109 "cli_test.ml" 172 5096 5125
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> unit
+)
+ident(
+  ext_ref Cli_utils.sync_remove_disk
+)
+"cli_test.ml" 172 5096 5126 "cli_test.ml" 172 5096 5129
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 103 3224 3253 "cli_test.ml" 103 3224 3256
+)
+"cli_test.ml" 172 5096 5130 "cli_test.ml" 172 5096 5134
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_test.ml" 171 5077 5088 "cli_test.ml" 171 5077 5092
+)
+"cli_test.ml" 172 5096 5108 "cli_test.ml" 172 5096 5135
+type(
+  string -> unit
+)
+"cli_test.ml" 173 5136 5141 "cli_test.ml" 173 5136 5149
+type(
+  (string * string -> string) -> (string * string) list -> string list
+)
+ident(
+  ext_ref List.map
+)
+"cli_test.ml" 173 5136 5150 "cli_test.ml" 173 5136 5153
+type(
+  string * string -> string
+)
+ident(
+  ext_ref Pervasives.fst
+)
+"cli_test.ml" 173 5136 5154 "cli_test.ml" 173 5136 5159
+type(
+  (string * string) list
+)
+ident(
+  int_ref disks "cli_test.ml" 103 3224 3261 "cli_test.ml" 103 3224 3266
+)
+"cli_test.ml" 173 5136 5140 "cli_test.ml" 173 5136 5160
+type(
+  string list
+)
+"cli_test.ml" 172 5096 5098 "cli_test.ml" 173 5136 5160
+type(
+  unit
+)
+"cli_test.ml" 171 5077 5083 "cli_test.ml" 173 5136 5161
+type(
+  string -> unit
+)
+"cli_test.ml" 173 5136 5162 "cli_test.ml" 173 5136 5167
+type(
+  string list
+)
+ident(
+  int_ref uuids "cli_test.ml" 126 4033 4039 "cli_test.ml" 126 4033 4044
+)
+"cli_test.ml" 170 5063 5067 "cli_test.ml" 173 5136 5167
+type(
+  unit
+)
+"cli_test.ml" 176 5218 5224 "cli_test.ml" 176 5218 5225
+type(
+  unit
+)
+"cli_test.ml" 176 5218 5231 "cli_test.ml" 176 5218 5234
+type(
+  bool -> bool
+)
+ident(
+  ext_ref Pervasives.not
+)
+"cli_test.ml" 176 5218 5235 "cli_test.ml" 176 5218 5241
+type(
+  bool
+)
+ident(
+  int_ref is_hvm "cli_test.ml" 103 3224 3246 "cli_test.ml" 103 3224 3252
+)
+"cli_test.ml" 176 5218 5231 "cli_test.ml" 176 5218 5241
+type(
+  bool
+)
+"cli_test.ml" 176 5218 5247 "cli_test.ml" 176 5218 5257
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> unit
+)
+ident(
+  ext_ref Cli_utils.state_test
+)
+"cli_test.ml" 176 5218 5258 "cli_test.ml" 176 5218 5261
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 103 3224 3253 "cli_test.ml" 103 3224 3256
+)
+"cli_test.ml" 176 5218 5262 "cli_test.ml" 176 5218 5269
+type(
+  string
+)
+ident(
+  int_ref test_vm "cli_test.ml" 131 4162 4168 "cli_test.ml" 131 4162 4175
+)
+"cli_test.ml" 176 5218 5247 "cli_test.ml" 176 5218 5269
+type(
+  unit
+)
+"cli_test.ml" 176 5218 5228 "cli_test.ml" 176 5218 5269
+type(
+  unit
+)
+"cli_test.ml" 179 5295 5301 "cli_test.ml" 179 5295 5302
+type(
+  string
+)
+"cli_test.ml" 179 5295 5305 "cli_test.ml" 179 5295 5315
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> string
+)
+ident(
+  ext_ref Cli_utils.clone_test
+)
+"cli_test.ml" 179 5295 5316 "cli_test.ml" 179 5295 5319
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 103 3224 3253 "cli_test.ml" 103 3224 3256
+)
+"cli_test.ml" 179 5295 5320 "cli_test.ml" 179 5295 5327
+type(
+  string
+)
+ident(
+  int_ref test_vm "cli_test.ml" 131 4162 4168 "cli_test.ml" 131 4162 4175
+)
+"cli_test.ml" 179 5295 5328 "cli_test.ml" 179 5295 5339
+type(
+  string
+)
+"cli_test.ml" 179 5295 5305 "cli_test.ml" 179 5295 5339
+type(
+  string
+)
+"cli_test.ml" 182 5368 5374 "cli_test.ml" 182 5368 5375
+type(
+  string list
+)
+"cli_test.ml" 183 5378 5382 "cli_test.ml" 183 5378 5390
+type(
+  (string -> string) -> string list -> string list
+)
+ident(
+  ext_ref List.map
+)
+"cli_test.ml" 184 5391 5402 "cli_test.ml" 184 5391 5411
+type(
+  string
+)
+ident(
+  def paramname "cli_test.ml" 184 5391 5415 "cli_test.ml" 184 5391 5445
+)
+"cli_test.ml" 184 5391 5415 "cli_test.ml" 184 5391 5423
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> string
+)
+ident(
+  ext_ref Cli_utils.getparam
+)
+"cli_test.ml" 184 5391 5424 "cli_test.ml" 184 5391 5427
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 103 3224 3253 "cli_test.ml" 103 3224 3256
+)
+"cli_test.ml" 184 5391 5428 "cli_test.ml" 184 5391 5435
+type(
+  string
+)
+ident(
+  int_ref test_vm "cli_test.ml" 131 4162 4168 "cli_test.ml" 131 4162 4175
+)
+"cli_test.ml" 184 5391 5436 "cli_test.ml" 184 5391 5445
+type(
+  string
+)
+ident(
+  int_ref paramname "cli_test.ml" 184 5391 5402 "cli_test.ml" 184 5391 5411
+)
+"cli_test.ml" 184 5391 5415 "cli_test.ml" 184 5391 5445
+type(
+  string
+)
+"cli_test.ml" 184 5391 5397 "cli_test.ml" 184 5391 5446
+type(
+  string -> string
+)
+"cli_test.ml" 185 5447 5453 "cli_test.ml" 185 5447 5466
+type(
+  string list
+)
+ident(
+  int_ref vm_get_params "cli_test.ml" 106 3323 3329 "cli_test.ml" 106 3323 3342
+)
+"cli_test.ml" 183 5378 5382 "cli_test.ml" 185 5447 5466
+type(
+  string list
+)
+"cli_test.ml" 188 5499 5505 "cli_test.ml" 188 5499 5506
+type(
+  unit
+)
+"cli_test.ml" 189 5509 5513 "cli_test.ml" 189 5509 5522
+type(
+  (string * string -> unit) -> (string * string) list -> unit
+)
+ident(
+  ext_ref List.iter
+)
+"cli_test.ml" 190 5523 5535 "cli_test.ml" 190 5523 5536
+type(
+  string
+)
+ident(
+  def p "cli_test.ml" 190 5523 5543 "cli_test.ml" 190 5523 5578
+)
+"cli_test.ml" 190 5523 5537 "cli_test.ml" 190 5523 5538
+type(
+  string
+)
+ident(
+  def s "cli_test.ml" 190 5523 5543 "cli_test.ml" 190 5523 5578
+)
+"cli_test.ml" 190 5523 5534 "cli_test.ml" 190 5523 5539
+type(
+  string * string
+)
+"cli_test.ml" 190 5523 5543 "cli_test.ml" 190 5523 5562
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> string -> unit
+)
+ident(
+  ext_ref Cli_utils.set_and_check_param
+)
+"cli_test.ml" 190 5523 5563 "cli_test.ml" 190 5523 5566
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 103 3224 3253 "cli_test.ml" 103 3224 3256
+)
+"cli_test.ml" 190 5523 5567 "cli_test.ml" 190 5523 5574
+type(
+  string
+)
+ident(
+  int_ref test_vm "cli_test.ml" 131 4162 4168 "cli_test.ml" 131 4162 4175
+)
+"cli_test.ml" 190 5523 5575 "cli_test.ml" 190 5523 5576
+type(
+  string
+)
+ident(
+  int_ref p "cli_test.ml" 190 5523 5535 "cli_test.ml" 190 5523 5536
+)
+"cli_test.ml" 190 5523 5577 "cli_test.ml" 190 5523 5578
+type(
+  string
+)
+ident(
+  int_ref s "cli_test.ml" 190 5523 5537 "cli_test.ml" 190 5523 5538
+)
+"cli_test.ml" 190 5523 5543 "cli_test.ml" 190 5523 5578
+type(
+  unit
+)
+"cli_test.ml" 190 5523 5529 "cli_test.ml" 190 5523 5579
+type(
+  string * string -> unit
+)
+"cli_test.ml" 191 5580 5586 "cli_test.ml" 191 5580 5599
+type(
+  (string * string) list
+)
+ident(
+  int_ref vm_set_params "cli_test.ml" 110 3483 3489 "cli_test.ml" 110 3483 3502
+)
+"cli_test.ml" 189 5509 5513 "cli_test.ml" 191 5580 5599
+type(
+  unit
+)
+"cli_test.ml" 194 5633 5639 "cli_test.ml" 194 5633 5640
+type(
+  unit
+)
+"cli_test.ml" 194 5633 5643 "cli_test.ml" 194 5633 5660
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  unit
+)
+ident(
+  ext_ref Cli_utils.uninstall_all_vms
+)
+"cli_test.ml" 194 5633 5661 "cli_test.ml" 194 5633 5664
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 103 3224 3253 "cli_test.ml" 103 3224 3256
+)
+"cli_test.ml" 194 5633 5643 "cli_test.ml" 194 5633 5664
+type(
+  unit
+)
+"cli_test.ml" 195 5672 5676 "cli_test.ml" 195 5672 5686
+type(
+  string -> unit
+)
+ident(
+  ext_ref Cli_utils.print_line
+)
+"cli_test.ml" 195 5672 5687 "cli_test.ml" 195 5672 5723
+type(
+  string
+)
+"cli_test.ml" 195 5672 5676 "cli_test.ml" 195 5672 5723
+type(
+  unit
+)
+"cli_test.ml" 194 5633 5635 "cli_test.ml" 195 5672 5723
+type(
+  unit
+)
+"cli_test.ml" 188 5499 5501 "cli_test.ml" 195 5672 5723
+type(
+  unit
+)
+"cli_test.ml" 182 5368 5370 "cli_test.ml" 195 5672 5723
+type(
+  unit
+)
+"cli_test.ml" 179 5295 5297 "cli_test.ml" 195 5672 5723
+type(
+  unit
+)
+"cli_test.ml" 176 5218 5220 "cli_test.ml" 195 5672 5723
+type(
+  unit
+)
+"cli_test.ml" 169 5053 5055 "cli_test.ml" 195 5672 5723
+type(
+  unit
+)
+"cli_test.ml" 161 4823 4825 "cli_test.ml" 195 5672 5723
+type(
+  unit
+)
+"cli_test.ml" 154 4660 4662 "cli_test.ml" 195 5672 5723
+type(
+  unit
+)
+"cli_test.ml" 150 4567 4569 "cli_test.ml" 195 5672 5723
+type(
+  unit
+)
+"cli_test.ml" 146 4483 4485 "cli_test.ml" 195 5672 5723
+type(
+  unit
+)
+"cli_test.ml" 140 4353 4355 "cli_test.ml" 195 5672 5723
+type(
+  unit
+)
+"cli_test.ml" 134 4228 4230 "cli_test.ml" 195 5672 5723
+type(
+  unit
+)
+"cli_test.ml" 131 4162 4164 "cli_test.ml" 195 5672 5723
+type(
+  unit
+)
+"cli_test.ml" 126 4033 4035 "cli_test.ml" 195 5672 5723
+type(
+  unit
+)
+"cli_test.ml" 123 3932 3934 "cli_test.ml" 195 5672 5723
+type(
+  unit
+)
+"cli_test.ml" 110 3483 3485 "cli_test.ml" 195 5672 5723
+type(
+  unit
+)
+"cli_test.ml" 106 3323 3325 "cli_test.ml" 195 5672 5723
+type(
+  unit
+)
+"cli_test.ml" 197 5725 5729 "cli_test.ml" 197 5725 5745
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  unit
+)
+ident(
+  def installuninstall "cli_test.ml" 203 5871 5871 --
+)
+"cli_test.ml" 197 5725 5746 "cli_test.ml" 197 5725 5749
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_test.ml" 198 5752 5754 "cli_test.ml" 200 5814 5844
+)
+"cli_test.ml" 198 5752 5758 "cli_test.ml" 198 5752 5765
+type(
+  string
+)
+"cli_test.ml" 199 5768 5772 "cli_test.ml" 199 5768 5785
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string * string -> string
+)
+ident(
+  ext_ref Cli_utils.install_guest
+)
+"cli_test.ml" 199 5768 5786 "cli_test.ml" 199 5768 5789
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 197 5725 5746 "cli_test.ml" 197 5725 5749
+)
+"cli_test.ml" 199 5768 5791 "cli_test.ml" 199 5768 5798
+type(
+  (string * string) list -> string * string
+)
+ident(
+  ext_ref List.hd
+)
+"cli_test.ml" 199 5768 5799 "cli_test.ml" 199 5768 5809
+type(
+  (string * string) list
+)
+ident(
+  int_ref hvm_guests "cli_test.ml" 45 1373 1377 "cli_test.ml" 45 1373 1387
+)
+"cli_test.ml" 199 5768 5790 "cli_test.ml" 199 5768 5810
+type(
+  string * string
+)
+"cli_test.ml" 199 5768 5772 "cli_test.ml" 199 5768 5810
+type(
+  string
+)
+"cli_test.ml" 200 5814 5818 "cli_test.ml" 200 5814 5832
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> unit
+)
+ident(
+  ext_ref Cli_utils.sync_uninstall
+)
+"cli_test.ml" 200 5814 5833 "cli_test.ml" 200 5814 5836
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 197 5725 5746 "cli_test.ml" 197 5725 5749
+)
+"cli_test.ml" 200 5814 5837 "cli_test.ml" 200 5814 5844
+type(
+  string
+)
+ident(
+  int_ref vm_uuid "cli_test.ml" 198 5752 5758 "cli_test.ml" 198 5752 5765
+)
+"cli_test.ml" 200 5814 5818 "cli_test.ml" 200 5814 5844
+type(
+  unit
+)
+"cli_test.ml" 198 5752 5754 "cli_test.ml" 200 5814 5844
+type(
+  unit
+)
+"cli_test.ml" 203 5871 5875 "cli_test.ml" 203 5871 5888
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  unit
+)
+ident(
+  def export_checks "cli_test.ml" 218 6385 6385 --
+)
+"cli_test.ml" 203 5871 5889 "cli_test.ml" 203 5871 5892
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_test.ml" 204 5895 5897 "cli_test.ml" 211 6175 6181
+)
+"cli_test.ml" 204 5895 5901 "cli_test.ml" 204 5895 5905
+type(
+  string
+)
+"cli_test.ml" 204 5895 5908 "cli_test.ml" 204 5895 5921
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string * string -> string
+)
+ident(
+  ext_ref Cli_utils.install_guest
+)
+"cli_test.ml" 204 5895 5922 "cli_test.ml" 204 5895 5925
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 203 5871 5889 "cli_test.ml" 203 5871 5892
+)
+"cli_test.ml" 204 5895 5927 "cli_test.ml" 204 5895 5934
+type(
+  (string * string) list -> string * string
+)
+ident(
+  ext_ref List.hd
+)
+"cli_test.ml" 204 5895 5935 "cli_test.ml" 204 5895 5944
+type(
+  (string * string) list
+)
+ident(
+  int_ref pv_guests "cli_test.ml" 34 1115 1119 "cli_test.ml" 34 1115 1128
+)
+"cli_test.ml" 204 5895 5926 "cli_test.ml" 204 5895 5945
+type(
+  string * string
+)
+"cli_test.ml" 204 5895 5908 "cli_test.ml" 204 5895 5945
+type(
+  string
+)
+"cli_test.ml" 205 5949 5955 "cli_test.ml" 205 5949 5961
+type(
+  (string * string) list
+)
+"cli_test.ml" 206 5964 5970 "cli_test.ml" 206 5964 5977
+type(
+  string
+)
+"cli_test.ml" 206 5964 5978 "cli_test.ml" 206 5964 5982
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_test.ml" 204 5895 5901 "cli_test.ml" 204 5895 5905
+)
+"cli_test.ml" 206 5964 5969 "cli_test.ml" 206 5964 5983
+type(
+  string * string
+)
+"cli_test.ml" 207 5985 5991 "cli_test.ml" 207 5985 6001
+type(
+  string
+)
+"cli_test.ml" 207 5985 6002 "cli_test.ml" 207 5985 6003
+type(
+  string ref -> string
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"cli_test.ml" 207 5985 6003 "cli_test.ml" 207 5985 6012
+type(
+  string ref
+)
+ident(
+  int_ref exportdir "cli_test.ml" 19 612 616 "cli_test.ml" 19 612 625
+)
+"cli_test.ml" 207 5985 6002 "cli_test.ml" 207 5985 6012
+type(
+  string
+)
+"cli_test.ml" 207 5985 5990 "cli_test.ml" 207 5985 6013
+type(
+  string * string
+)
+"cli_test.ml" 206 5964 5968 "cli_test.ml" 207 5985 6014
+type(
+  (string * string) list
+)
+"cli_test.ml" 208 6018 6024 "cli_test.ml" 208 6018 6025
+type(
+  string list
+)
+"cli_test.ml" 208 6018 6028 "cli_test.ml" 208 6018 6042
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  ext_ref Cli_utils.expect_success
+)
+"cli_test.ml" 208 6018 6047 "cli_test.ml" 208 6018 6049
+type(
+  unit
+)
+"cli_test.ml" 208 6018 6051 "cli_test.ml" 208 6018 6054
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 203 5871 5889 "cli_test.ml" 203 5871 5892
+)
+"cli_test.ml" 208 6018 6055 "cli_test.ml" 208 6018 6066
+type(
+  string
+)
+"cli_test.ml" 208 6018 6067 "cli_test.ml" 208 6018 6073
+type(
+  (string * string) list
+)
+ident(
+  int_ref params "cli_test.ml" 205 5949 5955 "cli_test.ml" 205 5949 5961
+)
+"cli_test.ml" 208 6018 6051 "cli_test.ml" 208 6018 6073
+type(
+  string list * Unix.process_status
+)
+"cli_test.ml" 208 6018 6043 "cli_test.ml" 208 6018 6074
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_test.ml" 208 6018 6028 "cli_test.ml" 208 6018 6074
+type(
+  string list
+)
+"cli_test.ml" 209 6078 6084 "cli_test.ml" 209 6078 6085
+type(
+  unit
+)
+"cli_test.ml" 209 6078 6088 "cli_test.ml" 209 6078 6102
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> unit
+)
+ident(
+  ext_ref Cli_utils.sync_uninstall
+)
+"cli_test.ml" 209 6078 6103 "cli_test.ml" 209 6078 6106
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 203 5871 5889 "cli_test.ml" 203 5871 5892
+)
+"cli_test.ml" 209 6078 6107 "cli_test.ml" 209 6078 6111
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_test.ml" 204 5895 5901 "cli_test.ml" 204 5895 5905
+)
+"cli_test.ml" 209 6078 6088 "cli_test.ml" 209 6078 6111
+type(
+  unit
+)
+"cli_test.ml" 210 6115 6121 "cli_test.ml" 210 6115 6122
+type(
+  string list
+)
+"cli_test.ml" 210 6115 6125 "cli_test.ml" 210 6115 6139
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  ext_ref Cli_utils.expect_success
+)
+"cli_test.ml" 210 6115 6144 "cli_test.ml" 210 6115 6146
+type(
+  unit
+)
+"cli_test.ml" 210 6115 6148 "cli_test.ml" 210 6115 6151
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 203 5871 5889 "cli_test.ml" 203 5871 5892
+)
+"cli_test.ml" 210 6115 6152 "cli_test.ml" 210 6115 6163
+type(
+  string
+)
+"cli_test.ml" 210 6115 6164 "cli_test.ml" 210 6115 6170
+type(
+  (string * string) list
+)
+ident(
+  int_ref params "cli_test.ml" 205 5949 5955 "cli_test.ml" 205 5949 5961
+)
+"cli_test.ml" 210 6115 6148 "cli_test.ml" 210 6115 6170
+type(
+  string list * Unix.process_status
+)
+"cli_test.ml" 210 6115 6140 "cli_test.ml" 210 6115 6171
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_test.ml" 210 6115 6125 "cli_test.ml" 210 6115 6171
+type(
+  string list
+)
+"cli_test.ml" 211 6175 6179 "cli_test.ml" 211 6175 6181
+type(
+  unit
+)
+"cli_test.ml" 210 6115 6117 "cli_test.ml" 211 6175 6181
+type(
+  unit
+)
+"cli_test.ml" 209 6078 6080 "cli_test.ml" 211 6175 6181
+type(
+  unit
+)
+"cli_test.ml" 208 6018 6020 "cli_test.ml" 211 6175 6181
+type(
+  unit
+)
+"cli_test.ml" 205 5949 5951 "cli_test.ml" 211 6175 6181
+type(
+  unit
+)
+"cli_test.ml" 204 5895 5897 "cli_test.ml" 211 6175 6181
+type(
+  unit
+)
+"cli_test.ml" 219 6393 6395 "cli_test.ml" 219 6393 6404
+type(
+  (Arg.key * Arg.spec * Arg.doc) list ->
+  Arg.anon_fun -> Arg.usage_msg -> unit
+)
+ident(
+  ext_ref Arg.parse
+)
+"cli_test.ml" 220 6407 6414 "cli_test.ml" 220 6407 6421
+type(
+  Arg.key
+)
+"cli_test.ml" 220 6407 6438 "cli_test.ml" 220 6407 6442
+type(
+  string ref
+)
+ident(
+  ext_ref Cli_utils.host
+)
+"cli_test.ml" 220 6407 6423 "cli_test.ml" 220 6407 6442
+type(
+  Arg.spec
+)
+"cli_test.ml" 220 6407 6444 "cli_test.ml" 220 6407 6470
+type(
+  Arg.doc
+)
+"cli_test.ml" 220 6407 6414 "cli_test.ml" 220 6407 6470
+type(
+  Arg.key * Arg.spec * Arg.doc
+)
+"cli_test.ml" 221 6472 6479 "cli_test.ml" 221 6472 6484
+type(
+  Arg.key
+)
+"cli_test.ml" 221 6472 6501 "cli_test.ml" 221 6472 6503
+type(
+  string ref
+)
+ident(
+  ext_ref Cli_utils.xe
+)
+"cli_test.ml" 221 6472 6486 "cli_test.ml" 221 6472 6503
+type(
+  Arg.spec
+)
+"cli_test.ml" 221 6472 6505 "cli_test.ml" 221 6472 6532
+type(
+  Arg.doc
+)
+"cli_test.ml" 221 6472 6479 "cli_test.ml" 221 6472 6532
+type(
+  Arg.key * Arg.spec * Arg.doc
+)
+"cli_test.ml" 222 6534 6541 "cli_test.ml" 222 6534 6553
+type(
+  Arg.key
+)
+"cli_test.ml" 222 6534 6570 "cli_test.ml" 222 6534 6579
+type(
+  string ref
+)
+ident(
+  int_ref exportdir "cli_test.ml" 19 612 616 "cli_test.ml" 19 612 625
+)
+"cli_test.ml" 222 6534 6555 "cli_test.ml" 222 6534 6579
+type(
+  Arg.spec
+)
+"cli_test.ml" 222 6534 6581 "cli_test.ml" 222 6534 6603
+type(
+  Arg.doc
+)
+"cli_test.ml" 222 6534 6541 "cli_test.ml" 222 6534 6603
+type(
+  Arg.key * Arg.spec * Arg.doc
+)
+"cli_test.ml" 223 6605 6612 "cli_test.ml" 223 6605 6621
+type(
+  Arg.key
+)
+"cli_test.ml" 223 6605 6638 "cli_test.ml" 223 6605 6649
+type(
+  string ref
+)
+ident(
+  int_ref bridge_name "cli_test.ml" 21 636 640 "cli_test.ml" 21 636 651
+)
+"cli_test.ml" 223 6605 6623 "cli_test.ml" 223 6605 6649
+type(
+  Arg.spec
+)
+"cli_test.ml" 224 6652 6659 "cli_test.ml" 224 6652 6673
+type(
+  (string -> Arg.doc, unit, Arg.doc) format -> string -> Arg.doc
+)
+ident(
+  ext_ref Printf.sprintf
+)
+"cli_test.ml" 224 6652 6674 "cli_test.ml" 224 6652 6713
+type(
+  (string -> Arg.doc, unit, Arg.doc) format
+)
+"cli_test.ml" 224 6652 6714 "cli_test.ml" 224 6652 6715
+type(
+  string ref -> string
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"cli_test.ml" 224 6652 6715 "cli_test.ml" 224 6652 6726
+type(
+  string ref
+)
+ident(
+  int_ref bridge_name "cli_test.ml" 21 636 640 "cli_test.ml" 21 636 651
+)
+"cli_test.ml" 224 6652 6714 "cli_test.ml" 224 6652 6726
+type(
+  string
+)
+"cli_test.ml" 224 6652 6659 "cli_test.ml" 224 6652 6726
+type(
+  Arg.doc
+)
+"cli_test.ml" 223 6605 6612 "cli_test.ml" 224 6652 6726
+type(
+  Arg.key * Arg.spec * Arg.doc
+)
+"cli_test.ml" 219 6393 6405 "cli_test.ml" 225 6728 6734
+type(
+  (Arg.key * Arg.spec * Arg.doc) list
+)
+"cli_test.ml" 226 6735 6744 "cli_test.ml" 226 6735 6745
+type(
+  string
+)
+ident(
+  def x "cli_test.ml" 226 6735 6749 "cli_test.ml" 226 6735 6805
+)
+"cli_test.ml" 226 6735 6749 "cli_test.ml" 226 6735 6762
+type(
+  (string -> unit, out_channel, unit) format -> string -> unit
+)
+ident(
+  ext_ref Printf.printf
+)
+"cli_test.ml" 226 6735 6763 "cli_test.ml" 226 6735 6803
+type(
+  (string -> unit, out_channel, unit) format
+)
+"cli_test.ml" 226 6735 6804 "cli_test.ml" 226 6735 6805
+type(
+  string
+)
+ident(
+  int_ref x "cli_test.ml" 226 6735 6744 "cli_test.ml" 226 6735 6745
+)
+"cli_test.ml" 226 6735 6749 "cli_test.ml" 226 6735 6805
+type(
+  unit
+)
+"cli_test.ml" 226 6735 6739 "cli_test.ml" 226 6735 6806
+type(
+  string -> unit
+)
+"cli_test.ml" 227 6807 6811 "cli_test.ml" 227 6807 6839
+type(
+  Arg.usage_msg
+)
+"cli_test.ml" 219 6393 6395 "cli_test.ml" 227 6807 6839
+type(
+  unit
+)
+"cli_test.ml" 231 6875 6880 "cli_test.ml" 231 6875 6881
+type(
+  string ref -> string
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"cli_test.ml" 231 6875 6881 "cli_test.ml" 231 6875 6883
+type(
+  string ref
+)
+ident(
+  ext_ref Cli_utils.xe
+)
+"cli_test.ml" 231 6875 6880 "cli_test.ml" 231 6875 6883
+type(
+  string
+)
+"cli_test.ml" 231 6875 6884 "cli_test.ml" 231 6875 6885
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"cli_test.ml" 231 6875 6886 "cli_test.ml" 231 6875 6888
+type(
+  string
+)
+"cli_test.ml" 231 6875 6880 "cli_test.ml" 231 6875 6888
+type(
+  bool
+)
+"cli_test.ml" 233 6904 6910 "cli_test.ml" 233 6904 6920
+type(
+  string -> unit
+)
+ident(
+  ext_ref Cli_utils.print_line
+)
+"cli_test.ml" 233 6904 6921 "cli_test.ml" 233 6904 6977
+type(
+  string
+)
+"cli_test.ml" 233 6904 6910 "cli_test.ml" 233 6904 6977
+type(
+  unit
+)
+"cli_test.ml" 234 6979 6985 "cli_test.ml" 234 6979 6990
+type(
+  exn -> unit
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"cli_test.ml" 234 6979 6991 "cli_test.ml" 234 6979 7006
+type(
+  exn
+)
+"cli_test.ml" 234 6979 6985 "cli_test.ml" 234 6979 7006
+type(
+  unit
+)
+"cli_test.ml" 232 6894 6898 "cli_test.ml" 235 7007 7014
+type(
+  unit
+)
+"cli_test.ml" 231 6875 6877 "cli_test.ml" 235 7007 7014
+type(
+  unit
+)
+"cli_test.ml" 236 7016 7021 "cli_test.ml" 236 7016 7022
+type(
+  string ref -> string
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"cli_test.ml" 236 7016 7022 "cli_test.ml" 236 7016 7026
+type(
+  string ref
+)
+ident(
+  ext_ref Cli_utils.host
+)
+"cli_test.ml" 236 7016 7021 "cli_test.ml" 236 7016 7026
+type(
+  string
+)
+"cli_test.ml" 236 7016 7027 "cli_test.ml" 236 7016 7028
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"cli_test.ml" 236 7016 7029 "cli_test.ml" 236 7016 7031
+type(
+  string
+)
+"cli_test.ml" 236 7016 7021 "cli_test.ml" 236 7016 7031
+type(
+  bool
+)
+"cli_test.ml" 238 7047 7053 "cli_test.ml" 238 7047 7063
+type(
+  string -> unit
+)
+ident(
+  ext_ref Cli_utils.print_line
+)
+"cli_test.ml" 238 7047 7064 "cli_test.ml" 238 7047 7122
+type(
+  string
+)
+"cli_test.ml" 238 7047 7053 "cli_test.ml" 238 7047 7122
+type(
+  unit
+)
+"cli_test.ml" 239 7124 7130 "cli_test.ml" 239 7124 7135
+type(
+  exn -> unit
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"cli_test.ml" 239 7124 7136 "cli_test.ml" 239 7124 7151
+type(
+  exn
+)
+"cli_test.ml" 239 7124 7130 "cli_test.ml" 239 7124 7151
+type(
+  unit
+)
+"cli_test.ml" 237 7037 7041 "cli_test.ml" 240 7152 7159
+type(
+  unit
+)
+"cli_test.ml" 236 7016 7018 "cli_test.ml" 240 7152 7159
+type(
+  unit
+)
+"cli_test.ml" 231 6875 6877 "cli_test.ml" 240 7152 7159
+type(
+  unit
+)
+"cli_test.ml" 242 7161 7165 "cli_test.ml" 242 7161 7168
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_test.ml" 253 7446 7446 --
+)
+"cli_test.ml" 243 7171 7176 "cli_test.ml" 243 7171 7177
+type(
+  string ref -> string
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"cli_test.ml" 243 7171 7177 "cli_test.ml" 243 7171 7181
+type(
+  string ref
+)
+ident(
+  ext_ref Cli_utils.host
+)
+"cli_test.ml" 243 7171 7176 "cli_test.ml" 243 7171 7181
+type(
+  string
+)
+"cli_test.ml" 243 7171 7181 "cli_test.ml" 243 7171 7182
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"cli_test.ml" 243 7171 7182 "cli_test.ml" 243 7171 7190
+type(
+  string
+)
+"cli_test.ml" 243 7171 7176 "cli_test.ml" 243 7171 7190
+type(
+  bool
+)
+"cli_test.ml" 244 7191 7199 "cli_test.ml" 244 7191 7209
+type(
+  string -> unit
+)
+ident(
+  ext_ref Cli_utils.print_line
+)
+"cli_test.ml" 244 7191 7210 "cli_test.ml" 244 7191 7241
+type(
+  string
+)
+"cli_test.ml" 244 7191 7199 "cli_test.ml" 244 7191 7241
+type(
+  unit
+)
+"cli_test.ml" 244 7191 7243 "cli_test.ml" 244 7191 7253
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  ext_ref Cli_utils.cli_onhost
+)
+"cli_test.ml" 244 7191 7198 "cli_test.ml" 244 7191 7254
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+"cli_test.ml" 245 7255 7263 "cli_test.ml" 245 7255 7273
+type(
+  string -> unit
+)
+ident(
+  ext_ref Cli_utils.print_line
+)
+"cli_test.ml" 245 7255 7274 "cli_test.ml" 245 7255 7306
+type(
+  string
+)
+"cli_test.ml" 245 7255 7263 "cli_test.ml" 245 7255 7306
+type(
+  unit
+)
+"cli_test.ml" 245 7255 7308 "cli_test.ml" 245 7255 7319
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  ext_ref Cli_utils.cli_offhost
+)
+"cli_test.ml" 245 7255 7262 "cli_test.ml" 245 7255 7320
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+"cli_test.ml" 243 7171 7173 "cli_test.ml" 245 7255 7320
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+"cli_test.ml" 253 7446 7454 "cli_test.ml" 253 7446 7473
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string list -> unit
+)
+ident(
+  int_ref run_host_test_cycle "cli_test.ml" 69 2065 2069 "cli_test.ml" 69 2065 2088
+)
+"cli_test.ml" 253 7446 7474 "cli_test.ml" 253 7446 7477
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 242 7161 7165 "cli_test.ml" 242 7161 7168
+)
+"cli_test.ml" 253 7446 7478 "cli_test.ml" 253 7446 7486
+type(
+  string list
+)
+ident(
+  int_ref vbridges "cli_test.ml" 61 1796 1800 "cli_test.ml" 61 1796 1808
+)
+"cli_test.ml" 253 7446 7454 "cli_test.ml" 253 7446 7486
+type(
+  unit
+)
+"cli_test.ml" 256 7545 7553 "cli_test.ml" 256 7545 7570
+type(
+  bool ->
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  (string * string) list ->
+  (string * string) list -> (string * string * string) list -> unit
+)
+ident(
+  int_ref run_vm_test_cycle "cli_test.ml" 103 3224 3228 "cli_test.ml" 103 3224 3245
+)
+"cli_test.ml" 256 7545 7571 "cli_test.ml" 256 7545 7576
+type(
+  bool
+)
+"cli_test.ml" 256 7545 7577 "cli_test.ml" 256 7545 7580
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 242 7161 7165 "cli_test.ml" 242 7161 7168
+)
+"cli_test.ml" 256 7545 7581 "cli_test.ml" 256 7545 7590
+type(
+  (string * string) list
+)
+ident(
+  int_ref pv_guests "cli_test.ml" 34 1115 1119 "cli_test.ml" 34 1115 1128
+)
+"cli_test.ml" 256 7545 7591 "cli_test.ml" 256 7545 7599
+type(
+  (string * string) list
+)
+ident(
+  int_ref pv_disks "cli_test.ml" 39 1271 1275 "cli_test.ml" 39 1271 1283
+)
+"cli_test.ml" 256 7545 7601 "cli_test.ml" 256 7545 7608
+type(
+  unit -> (string * string * string) list
+)
+ident(
+  int_ref pv_nics "cli_test.ml" 55 1589 1593 "cli_test.ml" 55 1589 1600
+)
+"cli_test.ml" 256 7545 7609 "cli_test.ml" 256 7545 7611
+type(
+  unit
+)
+"cli_test.ml" 256 7545 7600 "cli_test.ml" 256 7545 7612
+type(
+  (string * string * string) list
+)
+"cli_test.ml" 256 7545 7553 "cli_test.ml" 256 7545 7612
+type(
+  unit
+)
+"cli_test.ml" 259 7672 7680 "cli_test.ml" 259 7672 7697
+type(
+  bool ->
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  (string * string) list ->
+  (string * string) list -> (string * string * string) list -> unit
+)
+ident(
+  int_ref run_vm_test_cycle "cli_test.ml" 103 3224 3228 "cli_test.ml" 103 3224 3245
+)
+"cli_test.ml" 259 7672 7698 "cli_test.ml" 259 7672 7702
+type(
+  bool
+)
+"cli_test.ml" 259 7672 7703 "cli_test.ml" 259 7672 7706
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 242 7161 7165 "cli_test.ml" 242 7161 7168
+)
+"cli_test.ml" 259 7672 7707 "cli_test.ml" 259 7672 7717
+type(
+  (string * string) list
+)
+ident(
+  int_ref hvm_guests "cli_test.ml" 45 1373 1377 "cli_test.ml" 45 1373 1387
+)
+"cli_test.ml" 259 7672 7718 "cli_test.ml" 259 7672 7727
+type(
+  (string * string) list
+)
+ident(
+  int_ref hvm_disks "cli_test.ml" 52 1537 1541 "cli_test.ml" 52 1537 1550
+)
+"cli_test.ml" 259 7672 7729 "cli_test.ml" 259 7672 7737
+type(
+  unit -> (string * string * string) list
+)
+ident(
+  int_ref hvm_nics "cli_test.ml" 58 1694 1698 "cli_test.ml" 58 1694 1706
+)
+"cli_test.ml" 259 7672 7738 "cli_test.ml" 259 7672 7740
+type(
+  unit
+)
+"cli_test.ml" 259 7672 7728 "cli_test.ml" 259 7672 7741
+type(
+  (string * string * string) list
+)
+"cli_test.ml" 259 7672 7680 "cli_test.ml" 259 7672 7741
+type(
+  unit
+)
+"cli_test.ml" 262 7812 7820 "cli_test.ml" 262 7812 7834
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  ext_ref Cli_utils.expect_success
+)
+"cli_test.ml" 262 7812 7839 "cli_test.ml" 262 7812 7841
+type(
+  unit
+)
+"cli_test.ml" 262 7812 7843 "cli_test.ml" 262 7812 7846
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 242 7161 7165 "cli_test.ml" 242 7161 7168
+)
+"cli_test.ml" 262 7812 7847 "cli_test.ml" 262 7812 7866
+type(
+  string
+)
+"cli_test.ml" 263 7867 7873 "cli_test.ml" 263 7867 7885
+type(
+  string
+)
+"cli_test.ml" 263 7867 7886 "cli_test.ml" 263 7867 7899
+type(
+  string
+)
+ident(
+  int_ref patchfilename "cli_test.ml" 63 1847 1851 "cli_test.ml" 63 1847 1864
+)
+"cli_test.ml" 263 7867 7873 "cli_test.ml" 263 7867 7899
+type(
+  string * string
+)
+"cli_test.ml" 263 7867 7872 "cli_test.ml" 263 7867 7900
+type(
+  (string * string) list
+)
+"cli_test.ml" 262 7812 7843 "cli_test.ml" 263 7867 7900
+type(
+  string list * Unix.process_status
+)
+"cli_test.ml" 262 7812 7835 "cli_test.ml" 263 7867 7901
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_test.ml" 262 7812 7820 "cli_test.ml" 263 7867 7901
+type(
+  string list
+)
+"cli_test.ml" 265 7904 7912 "cli_test.ml" 265 7904 7926
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  ext_ref Cli_utils.expect_success
+)
+"cli_test.ml" 265 7904 7931 "cli_test.ml" 265 7904 7933
+type(
+  unit
+)
+"cli_test.ml" 265 7904 7935 "cli_test.ml" 265 7904 7938
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 242 7161 7165 "cli_test.ml" 242 7161 7168
+)
+"cli_test.ml" 265 7904 7939 "cli_test.ml" 265 7904 7958
+type(
+  string
+)
+"cli_test.ml" 266 7959 7965 "cli_test.ml" 266 7959 7977
+type(
+  string
+)
+"cli_test.ml" 266 7959 7978 "cli_test.ml" 266 7959 7991
+type(
+  string
+)
+ident(
+  int_ref patchfilename "cli_test.ml" 63 1847 1851 "cli_test.ml" 63 1847 1864
+)
+"cli_test.ml" 266 7959 7965 "cli_test.ml" 266 7959 7991
+type(
+  string * string
+)
+"cli_test.ml" 266 7959 7964 "cli_test.ml" 266 7959 7992
+type(
+  (string * string) list
+)
+"cli_test.ml" 265 7904 7935 "cli_test.ml" 266 7959 7992
+type(
+  string list * Unix.process_status
+)
+"cli_test.ml" 265 7904 7927 "cli_test.ml" 266 7959 7993
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_test.ml" 265 7904 7912 "cli_test.ml" 266 7959 7993
+type(
+  string list
+)
+"cli_test.ml" 268 7996 8004 "cli_test.ml" 268 7996 8018
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  ext_ref Cli_utils.expect_success
+)
+"cli_test.ml" 268 7996 8023 "cli_test.ml" 268 7996 8025
+type(
+  unit
+)
+"cli_test.ml" 268 7996 8028 "cli_test.ml" 268 7996 8031
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_test.ml" 242 7161 7165 "cli_test.ml" 242 7161 7168
+)
+"cli_test.ml" 268 7996 8032 "cli_test.ml" 268 7996 8050
+type(
+  string
+)
+"cli_test.ml" 269 8051 8057 "cli_test.ml" 269 8051 8069
+type(
+  string
+)
+"cli_test.ml" 269 8051 8070 "cli_test.ml" 269 8051 8083
+type(
+  string
+)
+ident(
+  int_ref patchfilename "cli_test.ml" 63 1847 1851 "cli_test.ml" 63 1847 1864
+)
+"cli_test.ml" 269 8051 8057 "cli_test.ml" 269 8051 8083
+type(
+  string * string
+)
+"cli_test.ml" 269 8051 8056 "cli_test.ml" 269 8051 8084
+type(
+  (string * string) list
+)
+"cli_test.ml" 268 7996 8028 "cli_test.ml" 269 8051 8084
+type(
+  string list * Unix.process_status
+)
+"cli_test.ml" 268 7996 8019 "cli_test.ml" 269 8051 8085
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_test.ml" 268 7996 8004 "cli_test.ml" 269 8051 8085
+type(
+  string list
+)
+"cli_test.ml" 271 8088 8099 "cli_test.ml" 271 8088 8100
+type(
+  string ref -> string
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"cli_test.ml" 271 8088 8100 "cli_test.ml" 271 8088 8109
+type(
+  string ref
+)
+ident(
+  int_ref exportdir "cli_test.ml" 19 612 616 "cli_test.ml" 19 612 625
+)
+"cli_test.ml" 271 8088 8099 "cli_test.ml" 271 8088 8109
+type(
+  string
+)
+"cli_test.ml" 271 8088 8109 "cli_test.ml" 271 8088 8111
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( <> )
+)
+"cli_test.ml" 271 8088 8111 "cli_test.ml" 271 8088 8113
+type(
+  string
+)
+"cli_test.ml" 271 8088 8099 "cli_test.ml" 271 8088 8113
+type(
+  bool
+)
+"cli_test.ml" 271 8088 8119 "cli_test.ml" 271 8088 8132
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  unit
+)
+ident(
+  int_ref export_checks "cli_test.ml" 203 5871 5875 "cli_test.ml" 203 5871 5888
+)
+"cli_test.ml" 271 8088 8133 "cli_test.ml" 271 8088 8144
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  ext_ref Cli_utils.cli_offhost
+)
+"cli_test.ml" 271 8088 8119 "cli_test.ml" 271 8088 8144
+type(
+  unit
+)
+"cli_test.ml" 271 8088 8096 "cli_test.ml" 271 8088 8144
+type(
+  unit
+)
+"cli_test.ml" 274 8176 8180 "cli_test.ml" 274 8176 8194
+type(
+  unit -> unit
+)
+ident(
+  def offhost_checks "cli_test.ml" 287 8623 8623 --
+)
+"cli_test.ml" 274 8176 8194 "cli_test.ml" 274 8176 8196
+type(
+  unit
+)
+"cli_test.ml" 277 8278 8284 "cli_test.ml" 277 8278 8285
+type(
+  unit
+)
+"cli_test.ml" 277 8278 8288 "cli_test.ml" 277 8278 8304
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  unit
+)
+ident(
+  int_ref installuninstall "cli_test.ml" 197 5725 5729 "cli_test.ml" 197 5725 5745
+)
+"cli_test.ml" 277 8278 8306 "cli_test.ml" 277 8278 8326
+type(
+  string ->
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  ext_ref Cli_utils.cli_offhost_with_pwf
+)
+"cli_test.ml" 277 8278 8327 "cli_test.ml" 277 8278 8335
+type(
+  string
+)
+ident(
+  ext_ref Cli_utils.pwf_unix
+)
+"cli_test.ml" 277 8278 8305 "cli_test.ml" 277 8278 8336
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+"cli_test.ml" 277 8278 8288 "cli_test.ml" 277 8278 8336
+type(
+  unit
+)
+"cli_test.ml" 279 8407 8413 "cli_test.ml" 279 8407 8414
+type(
+  unit
+)
+"cli_test.ml" 279 8407 8417 "cli_test.ml" 279 8407 8433
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  unit
+)
+ident(
+  int_ref installuninstall "cli_test.ml" 197 5725 5729 "cli_test.ml" 197 5725 5745
+)
+"cli_test.ml" 279 8407 8435 "cli_test.ml" 279 8407 8455
+type(
+  string ->
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  ext_ref Cli_utils.cli_offhost_with_pwf
+)
+"cli_test.ml" 279 8407 8456 "cli_test.ml" 279 8407 8467
+type(
+  string
+)
+ident(
+  ext_ref Cli_utils.pwf_windows
+)
+"cli_test.ml" 279 8407 8434 "cli_test.ml" 279 8407 8468
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+"cli_test.ml" 279 8407 8417 "cli_test.ml" 279 8407 8468
+type(
+  unit
+)
+"cli_test.ml" 282 8518 8524 "cli_test.ml" 282 8518 8525
+type(
+  unit
+)
+"cli_test.ml" 282 8518 8528 "cli_test.ml" 282 8518 8545
+type(
+  (string ->
+   string -> (string * string) list -> string list * Unix.process_status) ->
+  unit
+)
+ident(
+  ext_ref Cli_utils.test_password_set
+)
+"cli_test.ml" 282 8518 8546 "cli_test.ml" 282 8518 8566
+type(
+  string ->
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  ext_ref Cli_utils.cli_offhost_with_pwd
+)
+"cli_test.ml" 282 8518 8528 "cli_test.ml" 282 8518 8566
+type(
+  unit
+)
+"cli_test.ml" 284 8573 8575 "cli_test.ml" 284 8573 8577
+type(
+  unit
+)
+"cli_test.ml" 282 8518 8520 "cli_test.ml" 284 8573 8577
+type(
+  unit
+)
+"cli_test.ml" 279 8407 8409 "cli_test.ml" 284 8573 8577
+type(
+  unit
+)
+"cli_test.ml" 277 8278 8280 "cli_test.ml" 284 8573 8577
+type(
+  unit
+)
+"cli_test.ml" 287 8623 8634 "cli_test.ml" 287 8623 8635
+type(
+  string ref -> string
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"cli_test.ml" 287 8623 8635 "cli_test.ml" 287 8623 8639
+type(
+  string ref
+)
+ident(
+  ext_ref Cli_utils.host
+)
+"cli_test.ml" 287 8623 8634 "cli_test.ml" 287 8623 8639
+type(
+  string
+)
+"cli_test.ml" 287 8623 8639 "cli_test.ml" 287 8623 8641
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( <> )
+)
+"cli_test.ml" 287 8623 8641 "cli_test.ml" 287 8623 8649
+type(
+  string
+)
+"cli_test.ml" 287 8623 8634 "cli_test.ml" 287 8623 8649
+type(
+  bool
+)
+"cli_test.ml" 287 8623 8655 "cli_test.ml" 287 8623 8669
+type(
+  unit -> unit
+)
+ident(
+  int_ref offhost_checks "cli_test.ml" 274 8176 8180 "cli_test.ml" 274 8176 8194
+)
+"cli_test.ml" 287 8623 8669 "cli_test.ml" 287 8623 8671
+type(
+  unit
+)
+"cli_test.ml" 287 8623 8655 "cli_test.ml" 287 8623 8671
+type(
+  unit
+)
+"cli_test.ml" 287 8623 8631 "cli_test.ml" 287 8623 8671
+type(
+  unit
+)
--- /dev/null
+++ xen-api-0.1/ocaml/xe-cli/rt/geneva/cli_utils.annot
@@ -0,0 +1,9963 @@
+"cli_utils.ml" 18 612 616 "cli_utils.ml" 18 612 620
+type(
+  string
+)
+ident(
+  def user "cli_utils.ml" 19 630 630 --
+)
+"cli_utils.ml" 18 612 623 "cli_utils.ml" 18 612 629
+type(
+  string
+)
+"cli_utils.ml" 19 630 634 "cli_utils.ml" 19 630 642
+type(
+  string
+)
+ident(
+  def password "cli_utils.ml" 21 656 656 --
+)
+"cli_utils.ml" 19 630 645 "cli_utils.ml" 19 630 654
+type(
+  string
+)
+"cli_utils.ml" 21 656 660 "cli_utils.ml" 21 656 668
+type(
+  string
+)
+ident(
+  def pwf_unix "cli_utils.ml" 22 689 689 --
+)
+"cli_utils.ml" 21 656 671 "cli_utils.ml" 21 656 688
+type(
+  string
+)
+"cli_utils.ml" 22 689 693 "cli_utils.ml" 22 689 704
+type(
+  string
+)
+ident(
+  def pwf_windows "cli_utils.ml" 23 728 728 --
+)
+"cli_utils.ml" 22 689 707 "cli_utils.ml" 22 689 727
+type(
+  string
+)
+"cli_utils.ml" 23 728 732 "cli_utils.ml" 23 728 744
+type(
+  string
+)
+ident(
+  def license_file "cli_utils.ml" 25 762 762 --
+)
+"cli_utils.ml" 23 728 747 "cli_utils.ml" 23 728 760
+type(
+  string
+)
+"cli_utils.ml" 25 762 766 "cli_utils.ml" 25 762 770
+type(
+  string ref
+)
+ident(
+  def host "cli_utils.ml" 26 780 780 --
+)
+"cli_utils.ml" 25 762 773 "cli_utils.ml" 25 762 776
+type(
+  string -> string ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"cli_utils.ml" 25 762 777 "cli_utils.ml" 25 762 779
+type(
+  string
+)
+"cli_utils.ml" 25 762 773 "cli_utils.ml" 25 762 779
+type(
+  string ref
+)
+"cli_utils.ml" 26 780 784 "cli_utils.ml" 26 780 786
+type(
+  string ref
+)
+ident(
+  def xe "cli_utils.ml" 29 832 832 --
+)
+"cli_utils.ml" 26 780 789 "cli_utils.ml" 26 780 792
+type(
+  string -> string ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"cli_utils.ml" 26 780 793 "cli_utils.ml" 26 780 797
+type(
+  string
+)
+"cli_utils.ml" 26 780 789 "cli_utils.ml" 26 780 797
+type(
+  string ref
+)
+"cli_utils.ml" 29 832 836 "cli_utils.ml" 29 832 848
+type(
+  float
+)
+ident(
+  def wait_timeout "cli_utils.ml" 30 877 877 --
+)
+"cli_utils.ml" 29 832 857 "cli_utils.ml" 29 832 862
+type(
+  float
+)
+type(
+  float
+)
+"cli_utils.ml" 30 877 881 "cli_utils.ml" 30 877 894
+type(
+  int
+)
+ident(
+  def poll_interval "cli_utils.ml" 35 994 994 --
+)
+"cli_utils.ml" 30 877 902 "cli_utils.ml" 30 877 903
+type(
+  int
+)
+type(
+  int
+)
+"cli_utils.ml" 35 994 998 "cli_utils.ml" 35 994 1003
+type(
+  string -> unit
+)
+ident(
+  def print "cli_utils.ml" 39 1043 1043 --
+)
+"cli_utils.ml" 35 994 1004 "cli_utils.ml" 35 994 1005
+type(
+  string
+)
+ident(
+  def s "cli_utils.ml" 36 1008 1010 "cli_utils.ml" 37 1026 1041
+)
+"cli_utils.ml" 36 1008 1010 "cli_utils.ml" 36 1008 1022
+type(
+  string -> unit
+)
+ident(
+  ext_ref Pervasives.print_string
+)
+"cli_utils.ml" 36 1008 1023 "cli_utils.ml" 36 1008 1024
+type(
+  string
+)
+ident(
+  int_ref s "cli_utils.ml" 35 994 1004 "cli_utils.ml" 35 994 1005
+)
+"cli_utils.ml" 36 1008 1010 "cli_utils.ml" 36 1008 1024
+type(
+  unit
+)
+"cli_utils.ml" 37 1026 1028 "cli_utils.ml" 37 1026 1033
+type(
+  out_channel -> unit
+)
+ident(
+  ext_ref Pervasives.flush
+)
+"cli_utils.ml" 37 1026 1033 "cli_utils.ml" 37 1026 1041
+type(
+  out_channel
+)
+ident(
+  ext_ref Pervasives.stdout
+)
+"cli_utils.ml" 37 1026 1028 "cli_utils.ml" 37 1026 1041
+type(
+  unit
+)
+"cli_utils.ml" 36 1008 1010 "cli_utils.ml" 37 1026 1041
+type(
+  unit
+)
+"cli_utils.ml" 39 1043 1047 "cli_utils.ml" 39 1043 1057
+type(
+  string -> unit
+)
+ident(
+  def print_line "cli_utils.ml" 42 1080 1080 --
+)
+"cli_utils.ml" 39 1043 1058 "cli_utils.ml" 39 1043 1059
+type(
+  string
+)
+ident(
+  def s "cli_utils.ml" 40 1062 1064 "cli_utils.ml" 40 1062 1078
+)
+"cli_utils.ml" 40 1062 1064 "cli_utils.ml" 40 1062 1069
+type(
+  string -> unit
+)
+ident(
+  int_ref print "cli_utils.ml" 35 994 998 "cli_utils.ml" 35 994 1003
+)
+"cli_utils.ml" 40 1062 1071 "cli_utils.ml" 40 1062 1072
+type(
+  string
+)
+ident(
+  int_ref s "cli_utils.ml" 39 1043 1058 "cli_utils.ml" 39 1043 1059
+)
+"cli_utils.ml" 40 1062 1072 "cli_utils.ml" 40 1062 1073
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 40 1062 1073 "cli_utils.ml" 40 1062 1077
+type(
+  string
+)
+"cli_utils.ml" 40 1062 1070 "cli_utils.ml" 40 1062 1078
+type(
+  string
+)
+"cli_utils.ml" 40 1062 1064 "cli_utils.ml" 40 1062 1078
+type(
+  unit
+)
+"cli_utils.ml" 42 1080 1084 "cli_utils.ml" 42 1080 1095
+type(
+  string -> string list * Unix.process_status
+)
+ident(
+  def run_command "cli_utils.ml" 55 1393 1393 --
+)
+"cli_utils.ml" 42 1080 1096 "cli_utils.ml" 42 1080 1099
+type(
+  string
+)
+ident(
+  def cmd "cli_utils.ml" 43 1102 1104 "cli_utils.ml" 53 1375 1391
+)
+"cli_utils.ml" 43 1102 1108 "cli_utils.ml" 43 1102 1110
+type(
+  in_channel
+)
+"cli_utils.ml" 43 1102 1113 "cli_utils.ml" 43 1102 1133
+type(
+  string -> in_channel
+)
+ident(
+  ext_ref Unix.open_process_in
+)
+"cli_utils.ml" 43 1102 1134 "cli_utils.ml" 43 1102 1137
+type(
+  string
+)
+ident(
+  int_ref cmd "cli_utils.ml" 42 1080 1096 "cli_utils.ml" 42 1080 1099
+)
+"cli_utils.ml" 43 1102 1113 "cli_utils.ml" 43 1102 1137
+type(
+  in_channel
+)
+"cli_utils.ml" 44 1141 1147 "cli_utils.ml" 44 1141 1153
+type(
+  string list ref
+)
+"cli_utils.ml" 44 1141 1176 "cli_utils.ml" 44 1141 1179
+type(
+  string list -> string list ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"cli_utils.ml" 44 1141 1180 "cli_utils.ml" 44 1141 1182
+type(
+  string list
+)
+"cli_utils.ml" 44 1141 1176 "cli_utils.ml" 44 1141 1182
+type(
+  string list ref
+)
+type(
+  string list ref
+)
+"cli_utils.ml" 45 1186 1192 "cli_utils.ml" 45 1186 1200
+type(
+  unit -> unit
+)
+"cli_utils.ml" 45 1186 1201 "cli_utils.ml" 45 1186 1203
+type(
+  unit
+)
+"cli_utils.ml" 47 1214 1226 "cli_utils.ml" 47 1214 1230
+type(
+  bool
+)
+"cli_utils.ml" 48 1234 1235 "cli_utils.ml" 48 1234 1241
+type(
+  string list ref
+)
+ident(
+  int_ref result "cli_utils.ml" 44 1141 1147 "cli_utils.ml" 44 1141 1153
+)
+"cli_utils.ml" 48 1234 1242 "cli_utils.ml" 48 1234 1244
+type(
+  string list ref -> string list -> unit
+)
+ident(
+  ext_ref Pervasives.( := )
+)
+"cli_utils.ml" 48 1234 1246 "cli_utils.ml" 48 1234 1247
+type(
+  string list ref -> string list
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"cli_utils.ml" 48 1234 1247 "cli_utils.ml" 48 1234 1253
+type(
+  string list ref
+)
+ident(
+  int_ref result "cli_utils.ml" 44 1141 1147 "cli_utils.ml" 44 1141 1153
+)
+"cli_utils.ml" 48 1234 1245 "cli_utils.ml" 48 1234 1254
+type(
+  string list
+)
+"cli_utils.ml" 48 1234 1255 "cli_utils.ml" 48 1234 1256
+type(
+  string list -> string list -> string list
+)
+ident(
+  ext_ref Pervasives.( @ )
+)
+"cli_utils.ml" 48 1234 1259 "cli_utils.ml" 48 1234 1269
+type(
+  in_channel -> string
+)
+ident(
+  ext_ref Pervasives.input_line
+)
+"cli_utils.ml" 48 1234 1270 "cli_utils.ml" 48 1234 1272
+type(
+  in_channel
+)
+ident(
+  int_ref ic "cli_utils.ml" 43 1102 1108 "cli_utils.ml" 43 1102 1110
+)
+"cli_utils.ml" 48 1234 1258 "cli_utils.ml" 48 1234 1273
+type(
+  string
+)
+"cli_utils.ml" 48 1234 1273 "cli_utils.ml" 48 1234 1274
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 48 1234 1274 "cli_utils.ml" 48 1234 1278
+type(
+  string
+)
+"cli_utils.ml" 48 1234 1258 "cli_utils.ml" 48 1234 1278
+type(
+  string
+)
+"cli_utils.ml" 48 1234 1257 "cli_utils.ml" 48 1234 1279
+type(
+  string list
+)
+"cli_utils.ml" 48 1234 1245 "cli_utils.ml" 48 1234 1279
+type(
+  string list
+)
+"cli_utils.ml" 48 1234 1235 "cli_utils.ml" 48 1234 1280
+type(
+  unit
+)
+"cli_utils.ml" 47 1214 1220 "cli_utils.ml" 49 1281 1291
+type(
+  unit
+)
+"cli_utils.ml" 50 1292 1301 "cli_utils.ml" 50 1292 1302
+type(
+  exn
+)
+"cli_utils.ml" 50 1292 1306 "cli_utils.ml" 50 1292 1308
+type(
+  unit
+)
+"cli_utils.ml" 46 1206 1210 "cli_utils.ml" 50 1292 1308
+type(
+  unit
+)
+"cli_utils.ml" 51 1312 1318 "cli_utils.ml" 51 1312 1319
+type(
+  unit
+)
+"cli_utils.ml" 51 1312 1322 "cli_utils.ml" 51 1312 1330
+type(
+  unit -> unit
+)
+ident(
+  int_ref read_str "cli_utils.ml" 45 1186 1192 "cli_utils.ml" 45 1186 1200
+)
+"cli_utils.ml" 51 1312 1330 "cli_utils.ml" 51 1312 1332
+type(
+  unit
+)
+"cli_utils.ml" 51 1312 1322 "cli_utils.ml" 51 1312 1332
+type(
+  unit
+)
+"cli_utils.ml" 52 1336 1342 "cli_utils.ml" 52 1336 1344
+type(
+  Unix.process_status
+)
+"cli_utils.ml" 52 1336 1347 "cli_utils.ml" 52 1336 1368
+type(
+  in_channel -> Unix.process_status
+)
+ident(
+  ext_ref Unix.close_process_in
+)
+"cli_utils.ml" 52 1336 1369 "cli_utils.ml" 52 1336 1371
+type(
+  in_channel
+)
+ident(
+  int_ref ic "cli_utils.ml" 43 1102 1108 "cli_utils.ml" 43 1102 1110
+)
+"cli_utils.ml" 52 1336 1347 "cli_utils.ml" 52 1336 1371
+type(
+  Unix.process_status
+)
+"cli_utils.ml" 53 1375 1380 "cli_utils.ml" 53 1375 1381
+type(
+  string list ref -> string list
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"cli_utils.ml" 53 1375 1381 "cli_utils.ml" 53 1375 1387
+type(
+  string list ref
+)
+ident(
+  int_ref result "cli_utils.ml" 44 1141 1147 "cli_utils.ml" 44 1141 1153
+)
+"cli_utils.ml" 53 1375 1380 "cli_utils.ml" 53 1375 1387
+type(
+  string list
+)
+"cli_utils.ml" 53 1375 1388 "cli_utils.ml" 53 1375 1390
+type(
+  Unix.process_status
+)
+ident(
+  int_ref rc "cli_utils.ml" 52 1336 1342 "cli_utils.ml" 52 1336 1344
+)
+"cli_utils.ml" 53 1375 1379 "cli_utils.ml" 53 1375 1391
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 52 1336 1338 "cli_utils.ml" 53 1375 1391
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 51 1312 1314 "cli_utils.ml" 53 1375 1391
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 45 1186 1188 "cli_utils.ml" 53 1375 1391
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 44 1141 1143 "cli_utils.ml" 53 1375 1391
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 43 1102 1104 "cli_utils.ml" 53 1375 1391
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 59 1462 1466 "cli_utils.ml" 59 1462 1481
+type(
+  bool ->
+  string ->
+  (string * string) list -> pwspec -> string list * Unix.process_status
+)
+ident(
+  def cli_with_pwspec "cli_utils.ml" 78 1982 1982 --
+)
+"cli_utils.ml" 59 1462 1482 "cli_utils.ml" 59 1462 1492
+type(
+  bool
+)
+ident(
+  def is_offhost "cli_utils.ml" 59 1462 1493 "cli_utils.ml" 76 1949 1980
+)
+"cli_utils.ml" 59 1462 1493 "cli_utils.ml" 59 1462 1496
+type(
+  string
+)
+ident(
+  def cmd "cli_utils.ml" 59 1462 1497 "cli_utils.ml" 76 1949 1980
+)
+"cli_utils.ml" 59 1462 1497 "cli_utils.ml" 59 1462 1503
+type(
+  (string * string) list
+)
+ident(
+  def params "cli_utils.ml" 59 1462 1504 "cli_utils.ml" 76 1949 1980
+)
+"cli_utils.ml" 59 1462 1504 "cli_utils.ml" 59 1462 1510
+type(
+  pwspec
+)
+ident(
+  def pwspec "cli_utils.ml" 60 1513 1515 "cli_utils.ml" 76 1949 1980
+)
+"cli_utils.ml" 60 1513 1523 "cli_utils.ml" 60 1513 1532
+type(
+  (string * string) list -> string
+)
+"cli_utils.ml" 60 1513 1533 "cli_utils.ml" 60 1513 1534
+type(
+  (string * string) list
+)
+ident(
+  def l "cli_utils.ml" 61 1537 1541 "cli_utils.ml" 63 1564 1622
+)
+"cli_utils.ml" 61 1537 1547 "cli_utils.ml" 61 1537 1548
+type(
+  (string * string) list
+)
+ident(
+  int_ref l "cli_utils.ml" 60 1513 1533 "cli_utils.ml" 60 1513 1534
+)
+"cli_utils.ml" 62 1554 1555 "cli_utils.ml" 62 1554 1557
+type(
+  (string * string) list
+)
+"cli_utils.ml" 62 1554 1561 "cli_utils.ml" 62 1554 1563
+type(
+  string
+)
+"cli_utils.ml" 63 1564 1574 "cli_utils.ml" 63 1564 1575
+type(
+  string
+)
+ident(
+  def k "cli_utils.ml" 63 1564 1588 "cli_utils.ml" 63 1564 1622
+)
+"cli_utils.ml" 63 1564 1576 "cli_utils.ml" 63 1564 1577
+type(
+  string
+)
+ident(
+  def v "cli_utils.ml" 63 1564 1588 "cli_utils.ml" 63 1564 1622
+)
+"cli_utils.ml" 63 1564 1573 "cli_utils.ml" 63 1564 1578
+type(
+  string * string
+)
+"cli_utils.ml" 63 1564 1580 "cli_utils.ml" 63 1564 1583
+type(
+  (string * string) list
+)
+ident(
+  def kvs "cli_utils.ml" 63 1564 1588 "cli_utils.ml" 63 1564 1622
+)
+"cli_utils.ml" 63 1564 1572 "cli_utils.ml" 63 1564 1584
+type(
+  (string * string) list
+)
+"cli_utils.ml" 63 1564 1588 "cli_utils.ml" 63 1564 1589
+type(
+  string
+)
+ident(
+  int_ref k "cli_utils.ml" 63 1564 1574 "cli_utils.ml" 63 1564 1575
+)
+"cli_utils.ml" 63 1564 1589 "cli_utils.ml" 63 1564 1590
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 63 1564 1590 "cli_utils.ml" 63 1564 1595
+type(
+  string
+)
+"cli_utils.ml" 63 1564 1595 "cli_utils.ml" 63 1564 1596
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 63 1564 1596 "cli_utils.ml" 63 1564 1597
+type(
+  string
+)
+ident(
+  int_ref v "cli_utils.ml" 63 1564 1576 "cli_utils.ml" 63 1564 1577
+)
+"cli_utils.ml" 63 1564 1597 "cli_utils.ml" 63 1564 1598
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 63 1564 1598 "cli_utils.ml" 63 1564 1602
+type(
+  string
+)
+"cli_utils.ml" 63 1564 1602 "cli_utils.ml" 63 1564 1603
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 63 1564 1603 "cli_utils.ml" 63 1564 1606
+type(
+  string
+)
+"cli_utils.ml" 63 1564 1606 "cli_utils.ml" 63 1564 1607
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 63 1564 1608 "cli_utils.ml" 63 1564 1617
+type(
+  (string * string) list -> string
+)
+ident(
+  int_ref mk_params "cli_utils.ml" 60 1513 1523 "cli_utils.ml" 60 1513 1532
+)
+"cli_utils.ml" 63 1564 1618 "cli_utils.ml" 63 1564 1621
+type(
+  (string * string) list
+)
+ident(
+  int_ref kvs "cli_utils.ml" 63 1564 1580 "cli_utils.ml" 63 1564 1583
+)
+"cli_utils.ml" 63 1564 1607 "cli_utils.ml" 63 1564 1622
+type(
+  string
+)
+"cli_utils.ml" 63 1564 1603 "cli_utils.ml" 63 1564 1622
+type(
+  string
+)
+"cli_utils.ml" 63 1564 1598 "cli_utils.ml" 63 1564 1622
+type(
+  string
+)
+"cli_utils.ml" 63 1564 1596 "cli_utils.ml" 63 1564 1622
+type(
+  string
+)
+"cli_utils.ml" 63 1564 1590 "cli_utils.ml" 63 1564 1622
+type(
+  string
+)
+"cli_utils.ml" 63 1564 1588 "cli_utils.ml" 63 1564 1622
+type(
+  string
+)
+"cli_utils.ml" 61 1537 1541 "cli_utils.ml" 63 1564 1622
+type(
+  string
+)
+"cli_utils.ml" 64 1626 1632 "cli_utils.ml" 64 1626 1641
+type(
+  string
+)
+"cli_utils.ml" 64 1626 1644 "cli_utils.ml" 64 1626 1653
+type(
+  (string * string) list -> string
+)
+ident(
+  int_ref mk_params "cli_utils.ml" 60 1513 1523 "cli_utils.ml" 60 1513 1532
+)
+"cli_utils.ml" 64 1626 1654 "cli_utils.ml" 64 1626 1660
+type(
+  (string * string) list
+)
+ident(
+  int_ref params "cli_utils.ml" 59 1462 1497 "cli_utils.ml" 59 1462 1503
+)
+"cli_utils.ml" 64 1626 1644 "cli_utils.ml" 64 1626 1660
+type(
+  string
+)
+"cli_utils.ml" 65 1664 1670 "cli_utils.ml" 65 1664 1685
+type(
+  string
+)
+"cli_utils.ml" 66 1688 1693 "cli_utils.ml" 66 1688 1694
+type(
+  string ref -> string
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"cli_utils.ml" 66 1688 1694 "cli_utils.ml" 66 1688 1696
+type(
+  string ref
+)
+ident(
+  int_ref xe "cli_utils.ml" 26 780 784 "cli_utils.ml" 26 780 786
+)
+"cli_utils.ml" 66 1688 1692 "cli_utils.ml" 66 1688 1697
+type(
+  string
+)
+"cli_utils.ml" 66 1688 1697 "cli_utils.ml" 66 1688 1698
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 66 1688 1698 "cli_utils.ml" 66 1688 1701
+type(
+  string
+)
+"cli_utils.ml" 66 1688 1701 "cli_utils.ml" 66 1688 1702
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 66 1688 1702 "cli_utils.ml" 66 1688 1705
+type(
+  string
+)
+ident(
+  int_ref cmd "cli_utils.ml" 59 1462 1493 "cli_utils.ml" 59 1462 1496
+)
+"cli_utils.ml" 67 1706 1710 "cli_utils.ml" 67 1706 1711
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 67 1706 1715 "cli_utils.ml" 67 1706 1725
+type(
+  bool
+)
+ident(
+  int_ref is_offhost "cli_utils.ml" 59 1462 1482 "cli_utils.ml" 59 1462 1492
+)
+"cli_utils.ml" 68 1731 1734 "cli_utils.ml" 68 1731 1740
+type(
+  string
+)
+"cli_utils.ml" 68 1731 1740 "cli_utils.ml" 68 1731 1741
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 68 1731 1742 "cli_utils.ml" 68 1731 1743
+type(
+  string ref -> string
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"cli_utils.ml" 68 1731 1743 "cli_utils.ml" 68 1731 1747
+type(
+  string ref
+)
+ident(
+  int_ref host "cli_utils.ml" 25 762 766 "cli_utils.ml" 25 762 770
+)
+"cli_utils.ml" 68 1731 1741 "cli_utils.ml" 68 1731 1748
+type(
+  string
+)
+"cli_utils.ml" 69 1749 1752 "cli_utils.ml" 69 1749 1753
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 69 1749 1753 "cli_utils.ml" 69 1749 1756
+type(
+  string
+)
+"cli_utils.ml" 70 1757 1760 "cli_utils.ml" 70 1757 1761
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 70 1757 1768 "cli_utils.ml" 70 1757 1774
+type(
+  pwspec
+)
+ident(
+  int_ref pwspec "cli_utils.ml" 59 1462 1504 "cli_utils.ml" 59 1462 1510
+)
+"cli_utils.ml" 71 1780 1791 "cli_utils.ml" 71 1780 1792
+type(
+  string
+)
+ident(
+  def s "cli_utils.ml" 71 1780 1796 "cli_utils.ml" 71 1780 1816
+)
+"cli_utils.ml" 71 1780 1782 "cli_utils.ml" 71 1780 1792
+type(
+  pwspec
+)
+"cli_utils.ml" 71 1780 1796 "cli_utils.ml" 71 1780 1801
+type(
+  string
+)
+"cli_utils.ml" 71 1780 1801 "cli_utils.ml" 71 1780 1802
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 71 1780 1802 "cli_utils.ml" 71 1780 1806
+type(
+  string
+)
+ident(
+  int_ref user "cli_utils.ml" 18 612 616 "cli_utils.ml" 18 612 620
+)
+"cli_utils.ml" 71 1780 1806 "cli_utils.ml" 71 1780 1807
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 71 1780 1807 "cli_utils.ml" 71 1780 1814
+type(
+  string
+)
+"cli_utils.ml" 71 1780 1814 "cli_utils.ml" 71 1780 1815
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 71 1780 1815 "cli_utils.ml" 71 1780 1816
+type(
+  string
+)
+ident(
+  int_ref s "cli_utils.ml" 71 1780 1791 "cli_utils.ml" 71 1780 1792
+)
+"cli_utils.ml" 71 1780 1807 "cli_utils.ml" 71 1780 1816
+type(
+  string
+)
+"cli_utils.ml" 71 1780 1802 "cli_utils.ml" 71 1780 1816
+type(
+  string
+)
+"cli_utils.ml" 71 1780 1796 "cli_utils.ml" 71 1780 1816
+type(
+  string
+)
+"cli_utils.ml" 72 1817 1839 "cli_utils.ml" 72 1817 1840
+type(
+  string
+)
+ident(
+  def s "cli_utils.ml" 72 1817 1844 "cli_utils.ml" 72 1817 1853
+)
+"cli_utils.ml" 72 1817 1826 "cli_utils.ml" 72 1817 1840
+type(
+  pwspec
+)
+"cli_utils.ml" 72 1817 1844 "cli_utils.ml" 72 1817 1851
+type(
+  string
+)
+"cli_utils.ml" 72 1817 1851 "cli_utils.ml" 72 1817 1852
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 72 1817 1852 "cli_utils.ml" 72 1817 1853
+type(
+  string
+)
+ident(
+  int_ref s "cli_utils.ml" 72 1817 1839 "cli_utils.ml" 72 1817 1840
+)
+"cli_utils.ml" 72 1817 1844 "cli_utils.ml" 72 1817 1853
+type(
+  string
+)
+"cli_utils.ml" 70 1757 1761 "cli_utils.ml" 72 1817 1854
+type(
+  string
+)
+"cli_utils.ml" 69 1749 1753 "cli_utils.ml" 72 1817 1854
+type(
+  string
+)
+"cli_utils.ml" 68 1731 1741 "cli_utils.ml" 72 1817 1854
+type(
+  string
+)
+"cli_utils.ml" 68 1731 1734 "cli_utils.ml" 72 1817 1854
+type(
+  string
+)
+"cli_utils.ml" 73 1855 1866 "cli_utils.ml" 73 1855 1872
+type(
+  string
+)
+"cli_utils.ml" 73 1855 1872 "cli_utils.ml" 73 1855 1873
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 73 1855 1873 "cli_utils.ml" 73 1855 1877
+type(
+  string
+)
+ident(
+  int_ref user "cli_utils.ml" 18 612 616 "cli_utils.ml" 18 612 620
+)
+"cli_utils.ml" 73 1855 1866 "cli_utils.ml" 73 1855 1877
+type(
+  string
+)
+"cli_utils.ml" 67 1706 1711 "cli_utils.ml" 73 1855 1878
+type(
+  string
+)
+"cli_utils.ml" 74 1879 1883 "cli_utils.ml" 74 1879 1884
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 74 1879 1884 "cli_utils.ml" 74 1879 1887
+type(
+  string
+)
+"cli_utils.ml" 74 1879 1887 "cli_utils.ml" 74 1879 1888
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 74 1879 1888 "cli_utils.ml" 74 1879 1897
+type(
+  string
+)
+ident(
+  int_ref param_str "cli_utils.ml" 64 1626 1632 "cli_utils.ml" 64 1626 1641
+)
+"cli_utils.ml" 74 1879 1884 "cli_utils.ml" 74 1879 1897
+type(
+  string
+)
+"cli_utils.ml" 67 1706 1711 "cli_utils.ml" 74 1879 1897
+type(
+  string
+)
+"cli_utils.ml" 66 1688 1702 "cli_utils.ml" 74 1879 1897
+type(
+  string
+)
+"cli_utils.ml" 66 1688 1698 "cli_utils.ml" 74 1879 1897
+type(
+  string
+)
+"cli_utils.ml" 66 1688 1692 "cli_utils.ml" 74 1879 1897
+type(
+  string
+)
+"cli_utils.ml" 75 1901 1905 "cli_utils.ml" 75 1901 1915
+type(
+  string -> unit
+)
+ident(
+  int_ref print_line "cli_utils.ml" 39 1043 1047 "cli_utils.ml" 39 1043 1057
+)
+"cli_utils.ml" 75 1901 1917 "cli_utils.ml" 75 1901 1930
+type(
+  string
+)
+"cli_utils.ml" 75 1901 1930 "cli_utils.ml" 75 1901 1931
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 75 1901 1931 "cli_utils.ml" 75 1901 1946
+type(
+  string
+)
+ident(
+  int_ref cli_base_string "cli_utils.ml" 65 1664 1670 "cli_utils.ml" 65 1664 1685
+)
+"cli_utils.ml" 75 1901 1916 "cli_utils.ml" 75 1901 1947
+type(
+  string
+)
+"cli_utils.ml" 75 1901 1905 "cli_utils.ml" 75 1901 1947
+type(
+  unit
+)
+"cli_utils.ml" 76 1949 1953 "cli_utils.ml" 76 1949 1964
+type(
+  string -> string list * Unix.process_status
+)
+ident(
+  int_ref run_command "cli_utils.ml" 42 1080 1084 "cli_utils.ml" 42 1080 1095
+)
+"cli_utils.ml" 76 1949 1965 "cli_utils.ml" 76 1949 1980
+type(
+  string
+)
+ident(
+  int_ref cli_base_string "cli_utils.ml" 65 1664 1670 "cli_utils.ml" 65 1664 1685
+)
+"cli_utils.ml" 76 1949 1953 "cli_utils.ml" 76 1949 1980
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 75 1901 1905 "cli_utils.ml" 76 1949 1980
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 65 1664 1666 "cli_utils.ml" 76 1949 1980
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 64 1626 1628 "cli_utils.ml" 76 1949 1980
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 60 1513 1515 "cli_utils.ml" 76 1949 1980
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 78 1982 1986 "cli_utils.ml" 78 1982 2009
+type(
+  string ->
+  (string * string) list -> pwspec -> string list * Unix.process_status
+)
+ident(
+  def cli_offhost_with_pwspec "cli_utils.ml" 81 2072 2072 --
+)
+"cli_utils.ml" 78 1982 2010 "cli_utils.ml" 78 1982 2013
+type(
+  string
+)
+ident(
+  def cmd "cli_utils.ml" 78 1982 2014 "cli_utils.ml" 79 2030 2070
+)
+"cli_utils.ml" 78 1982 2014 "cli_utils.ml" 78 1982 2020
+type(
+  (string * string) list
+)
+ident(
+  def params "cli_utils.ml" 78 1982 2021 "cli_utils.ml" 79 2030 2070
+)
+"cli_utils.ml" 78 1982 2021 "cli_utils.ml" 78 1982 2027
+type(
+  pwspec
+)
+ident(
+  def pwspec "cli_utils.ml" 79 2030 2032 "cli_utils.ml" 79 2030 2070
+)
+"cli_utils.ml" 79 2030 2032 "cli_utils.ml" 79 2030 2047
+type(
+  bool ->
+  string ->
+  (string * string) list -> pwspec -> string list * Unix.process_status
+)
+ident(
+  int_ref cli_with_pwspec "cli_utils.ml" 59 1462 1466 "cli_utils.ml" 59 1462 1481
+)
+"cli_utils.ml" 79 2030 2048 "cli_utils.ml" 79 2030 2052
+type(
+  bool
+)
+"cli_utils.ml" 79 2030 2053 "cli_utils.ml" 79 2030 2056
+type(
+  string
+)
+ident(
+  int_ref cmd "cli_utils.ml" 78 1982 2010 "cli_utils.ml" 78 1982 2013
+)
+"cli_utils.ml" 79 2030 2057 "cli_utils.ml" 79 2030 2063
+type(
+  (string * string) list
+)
+ident(
+  int_ref params "cli_utils.ml" 78 1982 2014 "cli_utils.ml" 78 1982 2020
+)
+"cli_utils.ml" 79 2030 2064 "cli_utils.ml" 79 2030 2070
+type(
+  pwspec
+)
+ident(
+  int_ref pwspec "cli_utils.ml" 78 1982 2021 "cli_utils.ml" 78 1982 2027
+)
+"cli_utils.ml" 79 2030 2032 "cli_utils.ml" 79 2030 2070
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 81 2072 2076 "cli_utils.ml" 81 2072 2086
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli_onhost "cli_utils.ml" 85 2161 2161 --
+)
+"cli_utils.ml" 81 2072 2087 "cli_utils.ml" 81 2072 2090
+type(
+  string
+)
+ident(
+  def cmd "cli_utils.ml" 81 2072 2091 "cli_utils.ml" 82 2100 2154
+)
+"cli_utils.ml" 81 2072 2091 "cli_utils.ml" 81 2072 2097
+type(
+  (string * string) list
+)
+ident(
+  def params "cli_utils.ml" 82 2100 2102 "cli_utils.ml" 82 2100 2154
+)
+"cli_utils.ml" 82 2100 2102 "cli_utils.ml" 82 2100 2117
+type(
+  bool ->
+  string ->
+  (string * string) list -> pwspec -> string list * Unix.process_status
+)
+ident(
+  int_ref cli_with_pwspec "cli_utils.ml" 59 1462 1466 "cli_utils.ml" 59 1462 1481
+)
+"cli_utils.ml" 82 2100 2118 "cli_utils.ml" 82 2100 2123
+type(
+  bool
+)
+"cli_utils.ml" 82 2100 2124 "cli_utils.ml" 82 2100 2127
+type(
+  string
+)
+ident(
+  int_ref cmd "cli_utils.ml" 81 2072 2087 "cli_utils.ml" 81 2072 2090
+)
+"cli_utils.ml" 82 2100 2128 "cli_utils.ml" 82 2100 2134
+type(
+  (string * string) list
+)
+ident(
+  int_ref params "cli_utils.ml" 81 2072 2091 "cli_utils.ml" 81 2072 2097
+)
+"cli_utils.ml" 82 2100 2145 "cli_utils.ml" 82 2100 2153
+type(
+  string
+)
+"cli_utils.ml" 82 2100 2135 "cli_utils.ml" 82 2100 2154
+type(
+  pwspec
+)
+"cli_utils.ml" 82 2100 2102 "cli_utils.ml" 82 2100 2154
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 85 2161 2165 "cli_utils.ml" 85 2161 2185
+type(
+  string ->
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli_offhost_with_pwd "cli_utils.ml" 88 2256 2256 --
+)
+"cli_utils.ml" 85 2161 2186 "cli_utils.ml" 85 2161 2189
+type(
+  string
+)
+ident(
+  def pwd "cli_utils.ml" 85 2161 2190 "cli_utils.ml" 86 2203 2254
+)
+"cli_utils.ml" 85 2161 2190 "cli_utils.ml" 85 2161 2193
+type(
+  string
+)
+ident(
+  def cmd "cli_utils.ml" 85 2161 2194 "cli_utils.ml" 86 2203 2254
+)
+"cli_utils.ml" 85 2161 2194 "cli_utils.ml" 85 2161 2200
+type(
+  (string * string) list
+)
+ident(
+  def params "cli_utils.ml" 86 2203 2205 "cli_utils.ml" 86 2203 2254
+)
+"cli_utils.ml" 86 2203 2205 "cli_utils.ml" 86 2203 2228
+type(
+  string ->
+  (string * string) list -> pwspec -> string list * Unix.process_status
+)
+ident(
+  int_ref cli_offhost_with_pwspec "cli_utils.ml" 78 1982 1986 "cli_utils.ml" 78 1982 2009
+)
+"cli_utils.ml" 86 2203 2229 "cli_utils.ml" 86 2203 2232
+type(
+  string
+)
+ident(
+  int_ref cmd "cli_utils.ml" 85 2161 2190 "cli_utils.ml" 85 2161 2193
+)
+"cli_utils.ml" 86 2203 2233 "cli_utils.ml" 86 2203 2239
+type(
+  (string * string) list
+)
+ident(
+  int_ref params "cli_utils.ml" 85 2161 2194 "cli_utils.ml" 85 2161 2200
+)
+"cli_utils.ml" 86 2203 2250 "cli_utils.ml" 86 2203 2253
+type(
+  string
+)
+ident(
+  int_ref pwd "cli_utils.ml" 85 2161 2186 "cli_utils.ml" 85 2161 2189
+)
+"cli_utils.ml" 86 2203 2240 "cli_utils.ml" 86 2203 2254
+type(
+  pwspec
+)
+"cli_utils.ml" 86 2203 2205 "cli_utils.ml" 86 2203 2254
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 88 2256 2260 "cli_utils.ml" 88 2256 2280
+type(
+  string ->
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli_offhost_with_pwf "cli_utils.ml" 91 2355 2355 --
+)
+"cli_utils.ml" 88 2256 2281 "cli_utils.ml" 88 2256 2284
+type(
+  string
+)
+ident(
+  def pwf "cli_utils.ml" 88 2256 2285 "cli_utils.ml" 89 2298 2353
+)
+"cli_utils.ml" 88 2256 2285 "cli_utils.ml" 88 2256 2288
+type(
+  string
+)
+ident(
+  def cmd "cli_utils.ml" 88 2256 2289 "cli_utils.ml" 89 2298 2353
+)
+"cli_utils.ml" 88 2256 2289 "cli_utils.ml" 88 2256 2295
+type(
+  (string * string) list
+)
+ident(
+  def params "cli_utils.ml" 89 2298 2300 "cli_utils.ml" 89 2298 2353
+)
+"cli_utils.ml" 89 2298 2300 "cli_utils.ml" 89 2298 2323
+type(
+  string ->
+  (string * string) list -> pwspec -> string list * Unix.process_status
+)
+ident(
+  int_ref cli_offhost_with_pwspec "cli_utils.ml" 78 1982 1986 "cli_utils.ml" 78 1982 2009
+)
+"cli_utils.ml" 89 2298 2324 "cli_utils.ml" 89 2298 2327
+type(
+  string
+)
+ident(
+  int_ref cmd "cli_utils.ml" 88 2256 2285 "cli_utils.ml" 88 2256 2288
+)
+"cli_utils.ml" 89 2298 2328 "cli_utils.ml" 89 2298 2334
+type(
+  (string * string) list
+)
+ident(
+  int_ref params "cli_utils.ml" 88 2256 2289 "cli_utils.ml" 88 2256 2295
+)
+"cli_utils.ml" 89 2298 2349 "cli_utils.ml" 89 2298 2352
+type(
+  string
+)
+ident(
+  int_ref pwf "cli_utils.ml" 88 2256 2281 "cli_utils.ml" 88 2256 2284
+)
+"cli_utils.ml" 89 2298 2335 "cli_utils.ml" 89 2298 2353
+type(
+  pwspec
+)
+"cli_utils.ml" 89 2298 2300 "cli_utils.ml" 89 2298 2353
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 91 2355 2359 "cli_utils.ml" 91 2355 2370
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli_offhost "cli_utils.ml" 94 2428 2428 --
+)
+"cli_utils.ml" 91 2355 2371 "cli_utils.ml" 91 2355 2374
+type(
+  string
+)
+ident(
+  def cmd "cli_utils.ml" 91 2355 2375 "cli_utils.ml" 92 2384 2426
+)
+"cli_utils.ml" 91 2355 2375 "cli_utils.ml" 91 2355 2381
+type(
+  (string * string) list
+)
+ident(
+  def params "cli_utils.ml" 92 2384 2386 "cli_utils.ml" 92 2384 2426
+)
+"cli_utils.ml" 92 2384 2386 "cli_utils.ml" 92 2384 2406
+type(
+  string ->
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli_offhost_with_pwd "cli_utils.ml" 85 2161 2165 "cli_utils.ml" 85 2161 2185
+)
+"cli_utils.ml" 92 2384 2407 "cli_utils.ml" 92 2384 2415
+type(
+  string
+)
+ident(
+  int_ref password "cli_utils.ml" 19 630 634 "cli_utils.ml" 19 630 642
+)
+"cli_utils.ml" 92 2384 2416 "cli_utils.ml" 92 2384 2419
+type(
+  string
+)
+ident(
+  int_ref cmd "cli_utils.ml" 91 2355 2371 "cli_utils.ml" 91 2355 2374
+)
+"cli_utils.ml" 92 2384 2420 "cli_utils.ml" 92 2384 2426
+type(
+  (string * string) list
+)
+ident(
+  int_ref params "cli_utils.ml" 91 2355 2375 "cli_utils.ml" 91 2355 2381
+)
+"cli_utils.ml" 92 2384 2386 "cli_utils.ml" 92 2384 2426
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 96 2460 2464 "cli_utils.ml" 96 2460 2475
+type(
+  string list -> unit
+)
+ident(
+  def print_lines "cli_utils.ml" 98 2499 2499 --
+)
+"cli_utils.ml" 96 2460 2476 "cli_utils.ml" 96 2460 2477
+type(
+  string list
+)
+ident(
+  def l "cli_utils.ml" 96 2460 2480 "cli_utils.ml" 96 2460 2497
+)
+"cli_utils.ml" 96 2460 2480 "cli_utils.ml" 96 2460 2489
+type(
+  (string -> unit) -> string list -> unit
+)
+ident(
+  ext_ref List.iter
+)
+"cli_utils.ml" 96 2460 2490 "cli_utils.ml" 96 2460 2495
+type(
+  string -> unit
+)
+ident(
+  int_ref print "cli_utils.ml" 35 994 998 "cli_utils.ml" 35 994 1003
+)
+"cli_utils.ml" 96 2460 2496 "cli_utils.ml" 96 2460 2497
+type(
+  string list
+)
+ident(
+  int_ref l "cli_utils.ml" 96 2460 2476 "cli_utils.ml" 96 2460 2477
+)
+"cli_utils.ml" 96 2460 2480 "cli_utils.ml" 96 2460 2497
+type(
+  unit
+)
+"cli_utils.ml" 98 2499 2503 "cli_utils.ml" 98 2499 2517
+type(
+  string -> 'a
+)
+ident(
+  def report_failure "cli_utils.ml" 102 2624 2624 --
+)
+"cli_utils.ml" 98 2499 2518 "cli_utils.ml" 98 2499 2521
+type(
+  string
+)
+ident(
+  def msg "cli_utils.ml" 99 2524 2526 "cli_utils.ml" 100 2598 2622
+)
+"cli_utils.ml" 99 2524 2526 "cli_utils.ml" 99 2524 2536
+type(
+  string -> unit
+)
+ident(
+  int_ref print_line "cli_utils.ml" 39 1043 1047 "cli_utils.ml" 39 1043 1057
+)
+"cli_utils.ml" 99 2524 2537 "cli_utils.ml" 99 2524 2596
+type(
+  string
+)
+"cli_utils.ml" 99 2524 2526 "cli_utils.ml" 99 2524 2596
+type(
+  unit
+)
+"cli_utils.ml" 100 2598 2600 "cli_utils.ml" 100 2598 2605
+type(
+  exn -> 'a
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"cli_utils.ml" 100 2598 2618 "cli_utils.ml" 100 2598 2621
+type(
+  string
+)
+ident(
+  int_ref msg "cli_utils.ml" 98 2499 2518 "cli_utils.ml" 98 2499 2521
+)
+"cli_utils.ml" 100 2598 2606 "cli_utils.ml" 100 2598 2622
+type(
+  exn
+)
+"cli_utils.ml" 100 2598 2600 "cli_utils.ml" 100 2598 2622
+type(
+  'a
+)
+"cli_utils.ml" 99 2524 2526 "cli_utils.ml" 100 2598 2622
+type(
+  'a
+)
+"cli_utils.ml" 102 2624 2628 "cli_utils.ml" 102 2624 2638
+type(
+  Unix.process_status -> string list -> unit
+)
+ident(
+  def is_success "cli_utils.ml" 110 2830 2830 --
+)
+"cli_utils.ml" 102 2624 2639 "cli_utils.ml" 102 2624 2641
+type(
+  Unix.process_status
+)
+ident(
+  def rc "cli_utils.ml" 102 2624 2642 "cli_utils.ml" 108 2814 2827
+)
+"cli_utils.ml" 102 2624 2642 "cli_utils.ml" 102 2624 2643
+type(
+  string list
+)
+ident(
+  def s "cli_utils.ml" 103 2646 2648 "cli_utils.ml" 108 2814 2827
+)
+"cli_utils.ml" 103 2646 2654 "cli_utils.ml" 103 2646 2656
+type(
+  Unix.process_status
+)
+ident(
+  int_ref rc "cli_utils.ml" 102 2624 2639 "cli_utils.ml" 102 2624 2641
+)
+"cli_utils.ml" 104 2662 2681 "cli_utils.ml" 104 2662 2682
+type(
+  int
+)
+ident(
+  def i "cli_utils.ml" 105 2686 2687 "cli_utils.ml" 107 2767 2813
+)
+"cli_utils.ml" 104 2662 2668 "cli_utils.ml" 104 2662 2682
+type(
+  Unix.process_status
+)
+"cli_utils.ml" 105 2686 2690 "cli_utils.ml" 105 2686 2691
+type(
+  int
+)
+ident(
+  int_ref i "cli_utils.ml" 104 2662 2681 "cli_utils.ml" 104 2662 2682
+)
+"cli_utils.ml" 105 2686 2691 "cli_utils.ml" 105 2686 2693
+type(
+  int -> int -> bool
+)
+ident(
+  ext_ref Pervasives.( <> )
+)
+"cli_utils.ml" 105 2686 2693 "cli_utils.ml" 105 2686 2694
+type(
+  int
+)
+"cli_utils.ml" 105 2686 2690 "cli_utils.ml" 105 2686 2694
+type(
+  bool
+)
+"cli_utils.ml" 106 2700 2703 "cli_utils.ml" 106 2700 2717
+type(
+  string -> unit
+)
+ident(
+  int_ref report_failure "cli_utils.ml" 98 2499 2503 "cli_utils.ml" 98 2499 2517
+)
+"cli_utils.ml" 106 2700 2719 "cli_utils.ml" 106 2700 2748
+type(
+  string
+)
+"cli_utils.ml" 106 2700 2748 "cli_utils.ml" 106 2700 2749
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 106 2700 2750 "cli_utils.ml" 106 2700 2763
+type(
+  int -> string
+)
+ident(
+  ext_ref Pervasives.string_of_int
+)
+"cli_utils.ml" 106 2700 2764 "cli_utils.ml" 106 2700 2765
+type(
+  int
+)
+ident(
+  int_ref i "cli_utils.ml" 104 2662 2681 "cli_utils.ml" 104 2662 2682
+)
+"cli_utils.ml" 106 2700 2749 "cli_utils.ml" 106 2700 2766
+type(
+  string
+)
+"cli_utils.ml" 107 2767 2772 "cli_utils.ml" 107 2767 2773
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 107 2767 2773 "cli_utils.ml" 107 2767 2791
+type(
+  string
+)
+"cli_utils.ml" 107 2767 2791 "cli_utils.ml" 107 2767 2792
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 107 2767 2793 "cli_utils.ml" 107 2767 2806
+type(
+  string -> string list -> string
+)
+ident(
+  ext_ref String.concat
+)
+"cli_utils.ml" 107 2767 2807 "cli_utils.ml" 107 2767 2809
+type(
+  string
+)
+"cli_utils.ml" 107 2767 2810 "cli_utils.ml" 107 2767 2811
+type(
+  string list
+)
+ident(
+  int_ref s "cli_utils.ml" 102 2624 2642 "cli_utils.ml" 102 2624 2643
+)
+"cli_utils.ml" 107 2767 2792 "cli_utils.ml" 107 2767 2812
+type(
+  string
+)
+"cli_utils.ml" 107 2767 2773 "cli_utils.ml" 107 2767 2812
+type(
+  string
+)
+"cli_utils.ml" 106 2700 2749 "cli_utils.ml" 107 2767 2812
+type(
+  string
+)
+"cli_utils.ml" 106 2700 2718 "cli_utils.ml" 107 2767 2813
+type(
+  string
+)
+"cli_utils.ml" 106 2700 2703 "cli_utils.ml" 107 2767 2813
+type(
+  unit
+)
+"cli_utils.ml" 105 2686 2687 "cli_utils.ml" 107 2767 2813
+type(
+  unit
+)
+"cli_utils.ml" 108 2814 2820 "cli_utils.ml" 108 2814 2821
+type(
+  Unix.process_status
+)
+"cli_utils.ml" 108 2814 2825 "cli_utils.ml" 108 2814 2827
+type(
+  unit
+)
+"cli_utils.ml" 103 2646 2648 "cli_utils.ml" 108 2814 2827
+type(
+  unit
+)
+"cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  def expect_success "cli_utils.ml" 114 2905 2905 --
+)
+"cli_utils.ml" 110 2830 2849 "cli_utils.ml" 110 2830 2850
+type(
+  unit -> string list * Unix.process_status
+)
+ident(
+  def f "cli_utils.ml" 111 2853 2855 "cli_utils.ml" 112 2875 2897
+)
+"cli_utils.ml" 111 2853 2860 "cli_utils.ml" 111 2853 2861
+type(
+  string list
+)
+"cli_utils.ml" 111 2853 2862 "cli_utils.ml" 111 2853 2864
+type(
+  Unix.process_status
+)
+"cli_utils.ml" 111 2853 2859 "cli_utils.ml" 111 2853 2865
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 111 2853 2868 "cli_utils.ml" 111 2853 2869
+type(
+  unit -> string list * Unix.process_status
+)
+ident(
+  int_ref f "cli_utils.ml" 110 2830 2849 "cli_utils.ml" 110 2830 2850
+)
+"cli_utils.ml" 111 2853 2869 "cli_utils.ml" 111 2853 2871
+type(
+  unit
+)
+"cli_utils.ml" 111 2853 2868 "cli_utils.ml" 111 2853 2871
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 112 2875 2879 "cli_utils.ml" 112 2875 2889
+type(
+  Unix.process_status -> string list -> unit
+)
+ident(
+  int_ref is_success "cli_utils.ml" 102 2624 2628 "cli_utils.ml" 102 2624 2638
+)
+"cli_utils.ml" 112 2875 2890 "cli_utils.ml" 112 2875 2892
+type(
+  Unix.process_status
+)
+ident(
+  int_ref rc "cli_utils.ml" 111 2853 2862 "cli_utils.ml" 111 2853 2864
+)
+"cli_utils.ml" 112 2875 2893 "cli_utils.ml" 112 2875 2894
+type(
+  string list
+)
+ident(
+  int_ref s "cli_utils.ml" 111 2853 2860 "cli_utils.ml" 111 2853 2861
+)
+"cli_utils.ml" 112 2875 2879 "cli_utils.ml" 112 2875 2894
+type(
+  unit
+)
+"cli_utils.ml" 112 2875 2896 "cli_utils.ml" 112 2875 2897
+type(
+  string list
+)
+ident(
+  int_ref s "cli_utils.ml" 111 2853 2860 "cli_utils.ml" 111 2853 2861
+)
+"cli_utils.ml" 112 2875 2879 "cli_utils.ml" 112 2875 2897
+type(
+  string list
+)
+"cli_utils.ml" 111 2853 2855 "cli_utils.ml" 112 2875 2897
+type(
+  string list
+)
+"cli_utils.ml" 114 2905 2909 "cli_utils.ml" 114 2905 2915
+type(
+  string -> string -> string option
+)
+ident(
+  def getval "cli_utils.ml" 126 3182 3182 --
+)
+"cli_utils.ml" 114 2905 2916 "cli_utils.ml" 114 2905 2917
+type(
+  string
+)
+ident(
+  def v "cli_utils.ml" 114 2905 2918 "cli_utils.ml" 124 3159 3177
+)
+"cli_utils.ml" 114 2905 2918 "cli_utils.ml" 114 2905 2922
+type(
+  string
+)
+ident(
+  def line "cli_utils.ml" 115 2925 2927 "cli_utils.ml" 124 3159 3177
+)
+"cli_utils.ml" 115 2925 2931 "cli_utils.ml" 115 2925 2934
+type(
+  string list
+)
+"cli_utils.ml" 115 2925 2937 "cli_utils.ml" 115 2925 2945
+type(
+  string -> string list
+)
+ident(
+  ext_ref Utils.tokenize
+)
+"cli_utils.ml" 115 2925 2946 "cli_utils.ml" 115 2925 2950
+type(
+  string
+)
+ident(
+  int_ref line "cli_utils.ml" 114 2905 2918 "cli_utils.ml" 114 2905 2922
+)
+"cli_utils.ml" 115 2925 2937 "cli_utils.ml" 115 2925 2950
+type(
+  string list
+)
+"cli_utils.ml" 116 2954 2960 "cli_utils.ml" 116 2954 2962
+type(
+  string list
+)
+"cli_utils.ml" 116 2954 2966 "cli_utils.ml" 116 2954 2974
+type(
+  string -> string list
+)
+ident(
+  ext_ref Utils.tokenize
+)
+"cli_utils.ml" 116 2954 2975 "cli_utils.ml" 116 2954 2976
+type(
+  string
+)
+ident(
+  int_ref v "cli_utils.ml" 114 2905 2916 "cli_utils.ml" 114 2905 2917
+)
+"cli_utils.ml" 116 2954 2966 "cli_utils.ml" 116 2954 2976
+type(
+  string list
+)
+"cli_utils.ml" 117 2980 2990 "cli_utils.ml" 117 2980 2997
+type(
+  'a list -> 'a list -> 'a option
+)
+"cli_utils.ml" 117 2980 2998 "cli_utils.ml" 117 2980 3004
+type(
+  'a list
+)
+ident(
+  def tokens "cli_utils.ml" 117 2980 3005 "cli_utils.ml" 123 3133 3155
+)
+"cli_utils.ml" 117 2980 3005 "cli_utils.ml" 117 2980 3011
+type(
+  'a list
+)
+ident(
+  def values "cli_utils.ml" 118 3014 3018 "cli_utils.ml" 123 3133 3155
+)
+"cli_utils.ml" 118 3014 3025 "cli_utils.ml" 118 3014 3031
+type(
+  'a list
+)
+ident(
+  int_ref tokens "cli_utils.ml" 117 2980 2998 "cli_utils.ml" 117 2980 3004
+)
+"cli_utils.ml" 118 3014 3032 "cli_utils.ml" 118 3014 3038
+type(
+  'a list
+)
+ident(
+  int_ref values "cli_utils.ml" 117 2980 3005 "cli_utils.ml" 117 2980 3011
+)
+"cli_utils.ml" 118 3014 3024 "cli_utils.ml" 118 3014 3039
+type(
+  'a list * 'a list
+)
+"cli_utils.ml" 119 3045 3047 "cli_utils.ml" 119 3045 3048
+type(
+  'a
+)
+ident(
+  def t "cli_utils.ml" 119 3045 3059 "cli_utils.ml" 119 3045 3065
+)
+"cli_utils.ml" 119 3045 3050 "cli_utils.ml" 119 3045 3051
+type(
+  'a list
+)
+"cli_utils.ml" 119 3045 3047 "cli_utils.ml" 119 3045 3051
+type(
+  'a list
+)
+"cli_utils.ml" 119 3045 3052 "cli_utils.ml" 119 3045 3054
+type(
+  'a list
+)
+"cli_utils.ml" 119 3045 3046 "cli_utils.ml" 119 3045 3055
+type(
+  'a list * 'a list
+)
+"cli_utils.ml" 119 3045 3064 "cli_utils.ml" 119 3045 3065
+type(
+  'a
+)
+ident(
+  int_ref t "cli_utils.ml" 119 3045 3047 "cli_utils.ml" 119 3045 3048
+)
+"cli_utils.ml" 119 3045 3059 "cli_utils.ml" 119 3045 3065
+type(
+  'a option
+)
+"cli_utils.ml" 120 3066 3075 "cli_utils.ml" 120 3066 3076
+type(
+  'a
+)
+ident(
+  def t "cli_utils.ml" 121 3091 3094 "cli_utils.ml" 122 3120 3132
+)
+"cli_utils.ml" 120 3066 3078 "cli_utils.ml" 120 3066 3080
+type(
+  'a list
+)
+ident(
+  def ts "cli_utils.ml" 121 3091 3094 "cli_utils.ml" 122 3120 3132
+)
+"cli_utils.ml" 120 3066 3075 "cli_utils.ml" 120 3066 3080
+type(
+  'a list
+)
+"cli_utils.ml" 120 3066 3081 "cli_utils.ml" 120 3066 3082
+type(
+  'a
+)
+ident(
+  def v "cli_utils.ml" 121 3091 3094 "cli_utils.ml" 122 3120 3132
+)
+"cli_utils.ml" 120 3066 3084 "cli_utils.ml" 120 3066 3086
+type(
+  'a list
+)
+ident(
+  def vs "cli_utils.ml" 121 3091 3094 "cli_utils.ml" 122 3120 3132
+)
+"cli_utils.ml" 120 3066 3081 "cli_utils.ml" 120 3066 3086
+type(
+  'a list
+)
+"cli_utils.ml" 120 3066 3074 "cli_utils.ml" 120 3066 3087
+type(
+  'a list * 'a list
+)
+"cli_utils.ml" 121 3091 3097 "cli_utils.ml" 121 3091 3098
+type(
+  'a
+)
+ident(
+  int_ref t "cli_utils.ml" 120 3066 3075 "cli_utils.ml" 120 3066 3076
+)
+"cli_utils.ml" 121 3091 3098 "cli_utils.ml" 121 3091 3099
+type(
+  'a -> 'a -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"cli_utils.ml" 121 3091 3099 "cli_utils.ml" 121 3091 3100
+type(
+  'a
+)
+ident(
+  int_ref v "cli_utils.ml" 120 3066 3081 "cli_utils.ml" 120 3066 3082
+)
+"cli_utils.ml" 121 3091 3097 "cli_utils.ml" 121 3091 3100
+type(
+  bool
+)
+"cli_utils.ml" 121 3091 3106 "cli_utils.ml" 121 3091 3113
+type(
+  'a list -> 'a list -> 'a option
+)
+ident(
+  int_ref domatch "cli_utils.ml" 117 2980 2990 "cli_utils.ml" 117 2980 2997
+)
+"cli_utils.ml" 121 3091 3114 "cli_utils.ml" 121 3091 3116
+type(
+  'a list
+)
+ident(
+  int_ref ts "cli_utils.ml" 120 3066 3078 "cli_utils.ml" 120 3066 3080
+)
+"cli_utils.ml" 121 3091 3117 "cli_utils.ml" 121 3091 3119
+type(
+  'a list
+)
+ident(
+  int_ref vs "cli_utils.ml" 120 3066 3084 "cli_utils.ml" 120 3066 3086
+)
+"cli_utils.ml" 121 3091 3106 "cli_utils.ml" 121 3091 3119
+type(
+  'a option
+)
+"cli_utils.ml" 122 3120 3128 "cli_utils.ml" 122 3120 3132
+type(
+  'a option
+)
+"cli_utils.ml" 121 3091 3094 "cli_utils.ml" 122 3120 3132
+type(
+  'a option
+)
+"cli_utils.ml" 123 3133 3142 "cli_utils.ml" 123 3133 3144
+type(
+  'a list
+)
+"cli_utils.ml" 123 3133 3145 "cli_utils.ml" 123 3133 3146
+type(
+  'a list
+)
+"cli_utils.ml" 123 3133 3141 "cli_utils.ml" 123 3133 3147
+type(
+  'a list * 'a list
+)
+"cli_utils.ml" 123 3133 3151 "cli_utils.ml" 123 3133 3155
+type(
+  'a option
+)
+"cli_utils.ml" 118 3014 3018 "cli_utils.ml" 123 3133 3155
+type(
+  'a option
+)
+"cli_utils.ml" 124 3159 3163 "cli_utils.ml" 124 3159 3170
+type(
+  string list -> string list -> string option
+)
+ident(
+  int_ref domatch "cli_utils.ml" 117 2980 2990 "cli_utils.ml" 117 2980 2997
+)
+"cli_utils.ml" 124 3159 3171 "cli_utils.ml" 124 3159 3174
+type(
+  string list
+)
+ident(
+  int_ref tks "cli_utils.ml" 115 2925 2931 "cli_utils.ml" 115 2925 2934
+)
+"cli_utils.ml" 124 3159 3175 "cli_utils.ml" 124 3159 3177
+type(
+  string list
+)
+ident(
+  int_ref vs "cli_utils.ml" 116 2954 2960 "cli_utils.ml" 116 2954 2962
+)
+"cli_utils.ml" 124 3159 3163 "cli_utils.ml" 124 3159 3177
+type(
+  string option
+)
+"cli_utils.ml" 117 2980 2982 "cli_utils.ml" 124 3159 3177
+type(
+  string option
+)
+"cli_utils.ml" 116 2954 2956 "cli_utils.ml" 124 3159 3177
+type(
+  string option
+)
+"cli_utils.ml" 115 2925 2927 "cli_utils.ml" 124 3159 3177
+type(
+  string option
+)
+"cli_utils.ml" 126 3182 3190 "cli_utils.ml" 126 3182 3196
+type(
+  ('a -> 'b option) -> 'a list -> 'b list
+)
+ident(
+  def mapopt "cli_utils.ml" 126 3182 3182 --
+)
+"cli_utils.ml" 126 3182 3197 "cli_utils.ml" 126 3182 3198
+type(
+  'a -> 'b option
+)
+ident(
+  def f "cli_utils.ml" 126 3182 3199 "cli_utils.ml" 132 3293 3326
+)
+"cli_utils.ml" 126 3182 3199 "cli_utils.ml" 126 3182 3200
+type(
+  'a list
+)
+ident(
+  def l "cli_utils.ml" 127 3203 3205 "cli_utils.ml" 132 3293 3326
+)
+"cli_utils.ml" 127 3203 3211 "cli_utils.ml" 127 3203 3212
+type(
+  'a list
+)
+ident(
+  int_ref l "cli_utils.ml" 126 3182 3199 "cli_utils.ml" 126 3182 3200
+)
+"cli_utils.ml" 128 3218 3224 "cli_utils.ml" 128 3218 3226
+type(
+  'a list
+)
+"cli_utils.ml" 128 3218 3230 "cli_utils.ml" 128 3218 3232
+type(
+  'b list
+)
+"cli_utils.ml" 129 3233 3240 "cli_utils.ml" 129 3233 3241
+type(
+  'a
+)
+ident(
+  def x "cli_utils.ml" 130 3250 3251 "cli_utils.ml" 132 3293 3326
+)
+"cli_utils.ml" 129 3233 3243 "cli_utils.ml" 129 3233 3245
+type(
+  'a list
+)
+ident(
+  def xs "cli_utils.ml" 130 3250 3251 "cli_utils.ml" 132 3293 3326
+)
+"cli_utils.ml" 129 3233 3239 "cli_utils.ml" 129 3233 3246
+type(
+  'a list
+)
+"cli_utils.ml" 130 3250 3258 "cli_utils.ml" 130 3250 3259
+type(
+  'a -> 'b option
+)
+ident(
+  int_ref f "cli_utils.ml" 126 3182 3197 "cli_utils.ml" 126 3182 3198
+)
+"cli_utils.ml" 130 3250 3260 "cli_utils.ml" 130 3250 3261
+type(
+  'a
+)
+ident(
+  int_ref x "cli_utils.ml" 129 3233 3240 "cli_utils.ml" 129 3233 3241
+)
+"cli_utils.ml" 130 3250 3257 "cli_utils.ml" 130 3250 3262
+type(
+  'b option
+)
+"cli_utils.ml" 131 3268 3273 "cli_utils.ml" 131 3268 3277
+type(
+  'b option
+)
+"cli_utils.ml" 131 3268 3281 "cli_utils.ml" 131 3268 3287
+type(
+  ('a -> 'b option) -> 'a list -> 'b list
+)
+ident(
+  int_ref mapopt "cli_utils.ml" 126 3182 3190 "cli_utils.ml" 126 3182 3196
+)
+"cli_utils.ml" 131 3268 3288 "cli_utils.ml" 131 3268 3289
+type(
+  'a -> 'b option
+)
+ident(
+  int_ref f "cli_utils.ml" 126 3182 3197 "cli_utils.ml" 126 3182 3198
+)
+"cli_utils.ml" 131 3268 3290 "cli_utils.ml" 131 3268 3292
+type(
+  'a list
+)
+ident(
+  int_ref xs "cli_utils.ml" 129 3233 3243 "cli_utils.ml" 129 3233 3245
+)
+"cli_utils.ml" 131 3268 3281 "cli_utils.ml" 131 3268 3292
+type(
+  'b list
+)
+"cli_utils.ml" 132 3293 3304 "cli_utils.ml" 132 3293 3305
+type(
+  'b
+)
+ident(
+  def y "cli_utils.ml" 132 3293 3310 "cli_utils.ml" 132 3293 3326
+)
+"cli_utils.ml" 132 3293 3298 "cli_utils.ml" 132 3293 3306
+type(
+  'b option
+)
+"cli_utils.ml" 132 3293 3310 "cli_utils.ml" 132 3293 3311
+type(
+  'b
+)
+ident(
+  int_ref y "cli_utils.ml" 132 3293 3304 "cli_utils.ml" 132 3293 3305
+)
+"cli_utils.ml" 132 3293 3314 "cli_utils.ml" 132 3293 3320
+type(
+  ('a -> 'b option) -> 'a list -> 'b list
+)
+ident(
+  int_ref mapopt "cli_utils.ml" 126 3182 3190 "cli_utils.ml" 126 3182 3196
+)
+"cli_utils.ml" 132 3293 3321 "cli_utils.ml" 132 3293 3322
+type(
+  'a -> 'b option
+)
+ident(
+  int_ref f "cli_utils.ml" 126 3182 3197 "cli_utils.ml" 126 3182 3198
+)
+"cli_utils.ml" 132 3293 3323 "cli_utils.ml" 132 3293 3325
+type(
+  'a list
+)
+ident(
+  int_ref xs "cli_utils.ml" 129 3233 3243 "cli_utils.ml" 129 3233 3245
+)
+"cli_utils.ml" 132 3293 3313 "cli_utils.ml" 132 3293 3326
+type(
+  'b list
+)
+"cli_utils.ml" 132 3293 3310 "cli_utils.ml" 132 3293 3326
+type(
+  'b list
+)
+"cli_utils.ml" 130 3250 3251 "cli_utils.ml" 132 3293 3326
+type(
+  'b list
+)
+"cli_utils.ml" 127 3203 3205 "cli_utils.ml" 132 3293 3326
+type(
+  'b list
+)
+"cli_utils.ml" 135 3352 3360 "cli_utils.ml" 135 3352 3369
+type(
+  'a option -> 'a
+)
+ident(
+  def getoptval "cli_utils.ml" 135 3352 3352 --
+)
+"cli_utils.ml" 135 3352 3370 "cli_utils.ml" 135 3352 3371
+type(
+  'a option
+)
+ident(
+  def x "cli_utils.ml" 136 3374 3376 "cli_utils.ml" 138 3423 3442
+)
+"cli_utils.ml" 136 3374 3382 "cli_utils.ml" 136 3374 3383
+type(
+  'a option
+)
+ident(
+  int_ref x "cli_utils.ml" 135 3352 3370 "cli_utils.ml" 135 3352 3371
+)
+"cli_utils.ml" 137 3389 3395 "cli_utils.ml" 137 3389 3399
+type(
+  'a option
+)
+"cli_utils.ml" 137 3389 3403 "cli_utils.ml" 137 3389 3408
+type(
+  exn -> 'a
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"cli_utils.ml" 137 3389 3409 "cli_utils.ml" 137 3389 3422
+type(
+  exn
+)
+"cli_utils.ml" 137 3389 3403 "cli_utils.ml" 137 3389 3422
+type(
+  'a
+)
+"cli_utils.ml" 138 3423 3435 "cli_utils.ml" 138 3423 3436
+type(
+  'a
+)
+ident(
+  def x "cli_utils.ml" 138 3423 3441 "cli_utils.ml" 138 3423 3442
+)
+"cli_utils.ml" 138 3423 3429 "cli_utils.ml" 138 3423 3437
+type(
+  'a option
+)
+"cli_utils.ml" 138 3423 3441 "cli_utils.ml" 138 3423 3442
+type(
+  'a
+)
+ident(
+  int_ref x "cli_utils.ml" 138 3423 3435 "cli_utils.ml" 138 3423 3436
+)
+"cli_utils.ml" 136 3374 3376 "cli_utils.ml" 138 3423 3442
+type(
+  'a
+)
+"cli_utils.ml" 143 3517 3525 "cli_utils.ml" 143 3517 3533
+type(
+  (string -> 'a list -> string list * Unix.process_status) ->
+  string -> string
+)
+ident(
+  def getstate "cli_utils.ml" 143 3517 3517 --
+)
+"cli_utils.ml" 143 3517 3534 "cli_utils.ml" 143 3517 3537
+type(
+  string -> 'a list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 143 3517 3538 "cli_utils.ml" 164 4126 4145
+)
+"cli_utils.ml" 143 3517 3538 "cli_utils.ml" 143 3517 3542
+type(
+  string
+)
+ident(
+  def vmid "cli_utils.ml" 144 3545 3547 "cli_utils.ml" 164 4126 4145
+)
+"cli_utils.ml" 144 3545 3551 "cli_utils.ml" 144 3545 3556
+type(
+  string list
+)
+"cli_utils.ml" 144 3545 3559 "cli_utils.ml" 144 3545 3573
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 144 3545 3578 "cli_utils.ml" 144 3545 3580
+type(
+  unit
+)
+"cli_utils.ml" 144 3545 3582 "cli_utils.ml" 144 3545 3585
+type(
+  string -> 'a list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 143 3517 3534 "cli_utils.ml" 143 3517 3537
+)
+"cli_utils.ml" 144 3545 3586 "cli_utils.ml" 144 3545 3600
+type(
+  string
+)
+"cli_utils.ml" 144 3545 3601 "cli_utils.ml" 144 3545 3603
+type(
+  'a list
+)
+"cli_utils.ml" 144 3545 3582 "cli_utils.ml" 144 3545 3603
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 144 3545 3574 "cli_utils.ml" 144 3545 3604
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 144 3545 3559 "cli_utils.ml" 144 3545 3604
+type(
+  string list
+)
+"cli_utils.ml" 145 3608 3618 "cli_utils.ml" 145 3608 3627
+type(
+  string list -> string
+)
+"cli_utils.ml" 145 3608 3628 "cli_utils.ml" 145 3608 3630
+type(
+  string list
+)
+ident(
+  def ls "cli_utils.ml" 146 3633 3637 "cli_utils.ml" 163 4116 4122
+)
+"cli_utils.ml" 146 3633 3643 "cli_utils.ml" 146 3633 3645
+type(
+  string list
+)
+ident(
+  int_ref ls "cli_utils.ml" 145 3608 3628 "cli_utils.ml" 145 3608 3630
+)
+"cli_utils.ml" 147 3651 3652 "cli_utils.ml" 147 3651 3654
+type(
+  string list
+)
+"cli_utils.ml" 147 3651 3658 "cli_utils.ml" 147 3651 3663
+type(
+  exn -> string
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"cli_utils.ml" 147 3651 3676 "cli_utils.ml" 147 3651 3680
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 143 3517 3538 "cli_utils.ml" 143 3517 3542
+)
+"cli_utils.ml" 147 3651 3664 "cli_utils.ml" 147 3651 3681
+type(
+  exn
+)
+"cli_utils.ml" 147 3651 3658 "cli_utils.ml" 147 3651 3681
+type(
+  string
+)
+"cli_utils.ml" 148 3682 3691 "cli_utils.ml" 148 3682 3692
+type(
+  string
+)
+ident(
+  def l "cli_utils.ml" 149 3701 3704 "cli_utils.ml" 163 4116 4122
+)
+"cli_utils.ml" 148 3682 3694 "cli_utils.ml" 148 3682 3696
+type(
+  string list
+)
+ident(
+  def ls "cli_utils.ml" 149 3701 3704 "cli_utils.ml" 163 4116 4122
+)
+"cli_utils.ml" 148 3682 3690 "cli_utils.ml" 148 3682 3697
+type(
+  string list
+)
+"cli_utils.ml" 150 3710 3722 "cli_utils.ml" 150 3710 3724
+type(
+  string list
+)
+ident(
+  int_ref ls "cli_utils.ml" 148 3682 3694 "cli_utils.ml" 148 3682 3696
+)
+"cli_utils.ml" 150 3710 3725 "cli_utils.ml" 150 3710 3731
+type(
+  string -> string -> string option
+)
+ident(
+  int_ref getval "cli_utils.ml" 114 2905 2909 "cli_utils.ml" 114 2905 2915
+)
+"cli_utils.ml" 150 3710 3732 "cli_utils.ml" 150 3710 3739
+type(
+  string
+)
+"cli_utils.ml" 150 3710 3740 "cli_utils.ml" 150 3710 3741
+type(
+  string
+)
+ident(
+  int_ref l "cli_utils.ml" 148 3682 3691 "cli_utils.ml" 148 3682 3692
+)
+"cli_utils.ml" 150 3710 3725 "cli_utils.ml" 150 3710 3741
+type(
+  string option
+)
+"cli_utils.ml" 150 3710 3721 "cli_utils.ml" 150 3710 3742
+type(
+  string list * string option
+)
+"cli_utils.ml" 151 3748 3751 "cli_utils.ml" 151 3748 3753
+type(
+  string list
+)
+"cli_utils.ml" 151 3748 3754 "cli_utils.ml" 151 3748 3758
+type(
+  string option
+)
+"cli_utils.ml" 151 3748 3750 "cli_utils.ml" 151 3748 3759
+type(
+  string list * string option
+)
+"cli_utils.ml" 151 3748 3763 "cli_utils.ml" 151 3748 3768
+type(
+  exn -> string
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"cli_utils.ml" 151 3748 3781 "cli_utils.ml" 151 3748 3785
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 143 3517 3538 "cli_utils.ml" 143 3517 3542
+)
+"cli_utils.ml" 151 3748 3769 "cli_utils.ml" 151 3748 3786
+type(
+  exn
+)
+"cli_utils.ml" 151 3748 3763 "cli_utils.ml" 151 3748 3786
+type(
+  string
+)
+"cli_utils.ml" 152 3787 3797 "cli_utils.ml" 152 3787 3799
+type(
+  string list
+)
+"cli_utils.ml" 152 3787 3805 "cli_utils.ml" 152 3787 3806
+type(
+  string
+)
+"cli_utils.ml" 152 3787 3800 "cli_utils.ml" 152 3787 3806
+type(
+  string option
+)
+"cli_utils.ml" 152 3787 3796 "cli_utils.ml" 152 3787 3807
+type(
+  string list * string option
+)
+"cli_utils.ml" 152 3787 3811 "cli_utils.ml" 152 3787 3816
+type(
+  exn -> string
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"cli_utils.ml" 152 3787 3839 "cli_utils.ml" 152 3787 3853
+type(
+  string
+)
+"cli_utils.ml" 152 3787 3817 "cli_utils.ml" 152 3787 3854
+type(
+  exn
+)
+"cli_utils.ml" 152 3787 3811 "cli_utils.ml" 152 3787 3854
+type(
+  string
+)
+"cli_utils.ml" 153 3855 3865 "cli_utils.ml" 153 3855 3866
+type(
+  string list
+)
+"cli_utils.ml" 153 3855 3867 "cli_utils.ml" 153 3855 3871
+type(
+  string option
+)
+"cli_utils.ml" 153 3855 3864 "cli_utils.ml" 153 3855 3872
+type(
+  string list * string option
+)
+"cli_utils.ml" 153 3855 3876 "cli_utils.ml" 153 3855 3885
+type(
+  string list -> string
+)
+ident(
+  int_ref findstate "cli_utils.ml" 145 3608 3618 "cli_utils.ml" 145 3608 3627
+)
+"cli_utils.ml" 153 3855 3886 "cli_utils.ml" 153 3855 3888
+type(
+  string list
+)
+ident(
+  int_ref ls "cli_utils.ml" 148 3682 3694 "cli_utils.ml" 148 3682 3696
+)
+"cli_utils.ml" 153 3855 3876 "cli_utils.ml" 153 3855 3888
+type(
+  string
+)
+"cli_utils.ml" 154 3889 3899 "cli_utils.ml" 154 3889 3907
+type(
+  string
+)
+ident(
+  def nextline "cli_utils.ml" 155 3922 3926 "cli_utils.ml" 162 4094 4115
+)
+"cli_utils.ml" 154 3889 3909 "cli_utils.ml" 154 3889 3910
+type(
+  string list
+)
+"cli_utils.ml" 154 3889 3899 "cli_utils.ml" 154 3889 3910
+type(
+  string list
+)
+"cli_utils.ml" 154 3889 3916 "cli_utils.ml" 154 3889 3917
+type(
+  string
+)
+ident(
+  def v "cli_utils.ml" 155 3922 3926 "cli_utils.ml" 162 4094 4115
+)
+"cli_utils.ml" 154 3889 3911 "cli_utils.ml" 154 3889 3917
+type(
+  string option
+)
+"cli_utils.ml" 154 3889 3898 "cli_utils.ml" 154 3889 3918
+type(
+  string list * string option
+)
+"cli_utils.ml" 155 3922 3929 "cli_utils.ml" 155 3922 3930
+type(
+  string
+)
+ident(
+  int_ref v "cli_utils.ml" 154 3889 3916 "cli_utils.ml" 154 3889 3917
+)
+"cli_utils.ml" 155 3922 3930 "cli_utils.ml" 155 3922 3931
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"cli_utils.ml" 155 3922 3931 "cli_utils.ml" 155 3922 3935
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 143 3517 3538 "cli_utils.ml" 143 3517 3542
+)
+"cli_utils.ml" 155 3922 3929 "cli_utils.ml" 155 3922 3935
+type(
+  bool
+)
+"cli_utils.ml" 157 3953 3965 "cli_utils.ml" 157 3953 3966
+type(
+  string option
+)
+ident(
+  def s "cli_utils.ml" 158 3997 4000 "cli_utils.ml" 160 4064 4083
+)
+"cli_utils.ml" 157 3953 3969 "cli_utils.ml" 157 3953 3975
+type(
+  string -> string -> string option
+)
+ident(
+  int_ref getval "cli_utils.ml" 114 2905 2909 "cli_utils.ml" 114 2905 2915
+)
+"cli_utils.ml" 157 3953 3976 "cli_utils.ml" 157 3953 3984
+type(
+  string
+)
+"cli_utils.ml" 157 3953 3985 "cli_utils.ml" 157 3953 3993
+type(
+  string
+)
+ident(
+  int_ref nextline "cli_utils.ml" 154 3889 3899 "cli_utils.ml" 154 3889 3907
+)
+"cli_utils.ml" 157 3953 3969 "cli_utils.ml" 157 3953 3993
+type(
+  string option
+)
+"cli_utils.ml" 158 3997 4003 "cli_utils.ml" 158 3997 4004
+type(
+  string option
+)
+ident(
+  int_ref s "cli_utils.ml" 157 3953 3965 "cli_utils.ml" 157 3953 3966
+)
+"cli_utils.ml" 158 3997 4004 "cli_utils.ml" 158 3997 4005
+type(
+  string option -> string option -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"cli_utils.ml" 158 3997 4005 "cli_utils.ml" 158 3997 4009
+type(
+  string option
+)
+"cli_utils.ml" 158 3997 4003 "cli_utils.ml" 158 3997 4009
+type(
+  bool
+)
+"cli_utils.ml" 159 4015 4020 "cli_utils.ml" 159 4015 4025
+type(
+  exn -> string
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"cli_utils.ml" 159 4015 4048 "cli_utils.ml" 159 4015 4062
+type(
+  string
+)
+"cli_utils.ml" 159 4015 4026 "cli_utils.ml" 159 4015 4063
+type(
+  exn
+)
+"cli_utils.ml" 159 4015 4020 "cli_utils.ml" 159 4015 4063
+type(
+  string
+)
+"cli_utils.ml" 160 4064 4072 "cli_utils.ml" 160 4064 4081
+type(
+  string option -> string
+)
+ident(
+  int_ref getoptval "cli_utils.ml" 135 3352 3360 "cli_utils.ml" 135 3352 3369
+)
+"cli_utils.ml" 160 4064 4082 "cli_utils.ml" 160 4064 4083
+type(
+  string option
+)
+ident(
+  int_ref s "cli_utils.ml" 157 3953 3965 "cli_utils.ml" 157 3953 3966
+)
+"cli_utils.ml" 160 4064 4072 "cli_utils.ml" 160 4064 4083
+type(
+  string
+)
+"cli_utils.ml" 158 3997 4000 "cli_utils.ml" 160 4064 4083
+type(
+  string
+)
+"cli_utils.ml" 156 3941 3947 "cli_utils.ml" 161 4084 4093
+type(
+  string
+)
+"cli_utils.ml" 162 4094 4103 "cli_utils.ml" 162 4094 4112
+type(
+  string list -> string
+)
+ident(
+  int_ref findstate "cli_utils.ml" 145 3608 3618 "cli_utils.ml" 145 3608 3627
+)
+"cli_utils.ml" 162 4094 4113 "cli_utils.ml" 162 4094 4115
+type(
+  string list
+)
+ident(
+  int_ref ls "cli_utils.ml" 148 3682 3694 "cli_utils.ml" 148 3682 3696
+)
+"cli_utils.ml" 162 4094 4103 "cli_utils.ml" 162 4094 4115
+type(
+  string
+)
+"cli_utils.ml" 155 3922 3926 "cli_utils.ml" 162 4094 4115
+type(
+  string
+)
+"cli_utils.ml" 149 3701 3704 "cli_utils.ml" 163 4116 4122
+type(
+  string
+)
+"cli_utils.ml" 146 3633 3637 "cli_utils.ml" 163 4116 4122
+type(
+  string
+)
+"cli_utils.ml" 164 4126 4130 "cli_utils.ml" 164 4126 4139
+type(
+  string list -> string
+)
+ident(
+  int_ref findstate "cli_utils.ml" 145 3608 3618 "cli_utils.ml" 145 3608 3627
+)
+"cli_utils.ml" 164 4126 4140 "cli_utils.ml" 164 4126 4145
+type(
+  string list
+)
+ident(
+  int_ref lines "cli_utils.ml" 144 3545 3551 "cli_utils.ml" 144 3545 3556
+)
+"cli_utils.ml" 164 4126 4130 "cli_utils.ml" 164 4126 4145
+type(
+  string
+)
+"cli_utils.ml" 145 3608 3610 "cli_utils.ml" 164 4126 4145
+type(
+  string
+)
+"cli_utils.ml" 144 3545 3547 "cli_utils.ml" 164 4126 4145
+type(
+  string
+)
+"cli_utils.ml" 168 4166 4170 "cli_utils.ml" 168 4166 4174
+type(
+  (unit -> bool) -> unit
+)
+ident(
+  def poll "cli_utils.ml" 182 4442 4442 --
+)
+"cli_utils.ml" 168 4166 4175 "cli_utils.ml" 168 4166 4176
+type(
+  unit -> bool
+)
+ident(
+  def f "cli_utils.ml" 169 4179 4181 "cli_utils.ml" 180 4429 4440
+)
+"cli_utils.ml" 169 4179 4185 "cli_utils.ml" 169 4179 4195
+type(
+  float
+)
+"cli_utils.ml" 169 4179 4198 "cli_utils.ml" 169 4179 4207
+type(
+  unit -> float
+)
+ident(
+  ext_ref Unix.time
+)
+"cli_utils.ml" 169 4179 4207 "cli_utils.ml" 169 4179 4209
+type(
+  unit
+)
+"cli_utils.ml" 169 4179 4198 "cli_utils.ml" 169 4179 4209
+type(
+  float
+)
+"cli_utils.ml" 170 4213 4223 "cli_utils.ml" 170 4213 4228
+type(
+  unit -> unit
+)
+"cli_utils.ml" 170 4213 4228 "cli_utils.ml" 170 4213 4230
+type(
+  unit
+)
+"cli_utils.ml" 171 4233 4241 "cli_utils.ml" 171 4233 4253
+type(
+  float
+)
+"cli_utils.ml" 171 4233 4256 "cli_utils.ml" 171 4233 4265
+type(
+  unit -> float
+)
+ident(
+  ext_ref Unix.time
+)
+"cli_utils.ml" 171 4233 4265 "cli_utils.ml" 171 4233 4267
+type(
+  unit
+)
+"cli_utils.ml" 171 4233 4256 "cli_utils.ml" 171 4233 4267
+type(
+  float
+)
+"cli_utils.ml" 172 4271 4281 "cli_utils.ml" 172 4271 4293
+type(
+  float
+)
+ident(
+  int_ref current_time "cli_utils.ml" 171 4233 4241 "cli_utils.ml" 171 4233 4253
+)
+"cli_utils.ml" 172 4271 4294 "cli_utils.ml" 172 4271 4296
+type(
+  float -> float -> float
+)
+ident(
+  ext_ref Pervasives.( -. )
+)
+"cli_utils.ml" 172 4271 4297 "cli_utils.ml" 172 4271 4307
+type(
+  float
+)
+ident(
+  int_ref start_time "cli_utils.ml" 169 4179 4185 "cli_utils.ml" 169 4179 4195
+)
+"cli_utils.ml" 172 4271 4281 "cli_utils.ml" 172 4271 4307
+type(
+  float
+)
+"cli_utils.ml" 172 4271 4308 "cli_utils.ml" 172 4271 4309
+type(
+  float -> float -> bool
+)
+ident(
+  ext_ref Pervasives.( > )
+)
+"cli_utils.ml" 172 4271 4310 "cli_utils.ml" 172 4271 4322
+type(
+  float
+)
+ident(
+  int_ref wait_timeout "cli_utils.ml" 29 832 836 "cli_utils.ml" 29 832 848
+)
+"cli_utils.ml" 172 4271 4280 "cli_utils.ml" 172 4271 4323
+type(
+  bool
+)
+"cli_utils.ml" 173 4329 4330 "cli_utils.ml" 173 4329 4335
+type(
+  exn -> unit
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"cli_utils.ml" 173 4329 4336 "cli_utils.ml" 173 4329 4343
+type(
+  exn
+)
+"cli_utils.ml" 173 4329 4330 "cli_utils.ml" 173 4329 4343
+type(
+  unit
+)
+"cli_utils.ml" 175 4355 4359 "cli_utils.ml" 175 4355 4362
+type(
+  bool -> bool
+)
+ident(
+  ext_ref Pervasives.not
+)
+"cli_utils.ml" 175 4355 4364 "cli_utils.ml" 175 4355 4365
+type(
+  unit -> bool
+)
+ident(
+  int_ref f "cli_utils.ml" 168 4166 4175 "cli_utils.ml" 168 4166 4176
+)
+"cli_utils.ml" 175 4355 4365 "cli_utils.ml" 175 4355 4367
+type(
+  unit
+)
+"cli_utils.ml" 175 4355 4363 "cli_utils.ml" 175 4355 4368
+type(
+  bool
+)
+"cli_utils.ml" 175 4355 4359 "cli_utils.ml" 175 4355 4368
+type(
+  bool
+)
+"cli_utils.ml" 177 4381 4384 "cli_utils.ml" 177 4381 4394
+type(
+  int -> unit
+)
+ident(
+  ext_ref Unix.sleep
+)
+"cli_utils.ml" 177 4381 4395 "cli_utils.ml" 177 4381 4408
+type(
+  int
+)
+ident(
+  int_ref poll_interval "cli_utils.ml" 30 877 881 "cli_utils.ml" 30 877 894
+)
+"cli_utils.ml" 177 4381 4384 "cli_utils.ml" 177 4381 4408
+type(
+  unit
+)
+"cli_utils.ml" 178 4410 4413 "cli_utils.ml" 178 4410 4418
+type(
+  unit -> unit
+)
+ident(
+  int_ref retry "cli_utils.ml" 170 4213 4223 "cli_utils.ml" 170 4213 4228
+)
+"cli_utils.ml" 178 4410 4418 "cli_utils.ml" 178 4410 4420
+type(
+  unit
+)
+"cli_utils.ml" 178 4410 4413 "cli_utils.ml" 178 4410 4420
+type(
+  unit
+)
+"cli_utils.ml" 176 4374 4375 "cli_utils.ml" 179 4421 4425
+type(
+  unit
+)
+"cli_utils.ml" 175 4355 4356 "cli_utils.ml" 179 4421 4425
+type(
+  unit
+)
+"cli_utils.ml" 172 4271 4277 "cli_utils.ml" 179 4421 4425
+type(
+  unit
+)
+"cli_utils.ml" 171 4233 4237 "cli_utils.ml" 179 4421 4425
+type(
+  unit
+)
+"cli_utils.ml" 180 4429 4433 "cli_utils.ml" 180 4429 4438
+type(
+  unit -> unit
+)
+ident(
+  int_ref retry "cli_utils.ml" 170 4213 4223 "cli_utils.ml" 170 4213 4228
+)
+"cli_utils.ml" 180 4429 4438 "cli_utils.ml" 180 4429 4440
+type(
+  unit
+)
+"cli_utils.ml" 180 4429 4433 "cli_utils.ml" 180 4429 4440
+type(
+  unit
+)
+"cli_utils.ml" 170 4213 4215 "cli_utils.ml" 180 4429 4440
+type(
+  unit
+)
+"cli_utils.ml" 169 4179 4181 "cli_utils.ml" 180 4429 4440
+type(
+  unit
+)
+"cli_utils.ml" 182 4442 4446 "cli_utils.ml" 182 4442 4456
+type(
+  string -> string -> bool
+)
+ident(
+  def startswith "cli_utils.ml" 186 4552 4552 --
+)
+"cli_utils.ml" 182 4442 4457 "cli_utils.ml" 182 4442 4459
+type(
+  string
+)
+ident(
+  def s1 "cli_utils.ml" 182 4442 4460 "cli_utils.ml" 184 4509 4550
+)
+"cli_utils.ml" 182 4442 4460 "cli_utils.ml" 182 4442 4462
+type(
+  string
+)
+ident(
+  def s2 "cli_utils.ml" 183 4465 4467 "cli_utils.ml" 184 4509 4550
+)
+"cli_utils.ml" 183 4465 4468 "cli_utils.ml" 183 4465 4481
+type(
+  string -> int
+)
+ident(
+  ext_ref String.length
+)
+"cli_utils.ml" 183 4465 4482 "cli_utils.ml" 183 4465 4484
+type(
+  string
+)
+ident(
+  int_ref s1 "cli_utils.ml" 182 4442 4457 "cli_utils.ml" 182 4442 4459
+)
+"cli_utils.ml" 183 4465 4467 "cli_utils.ml" 183 4465 4485
+type(
+  int
+)
+"cli_utils.ml" 183 4465 4485 "cli_utils.ml" 183 4465 4487
+type(
+  int -> int -> bool
+)
+ident(
+  ext_ref Pervasives.( >= )
+)
+"cli_utils.ml" 183 4465 4488 "cli_utils.ml" 183 4465 4501
+type(
+  string -> int
+)
+ident(
+  ext_ref String.length
+)
+"cli_utils.ml" 183 4465 4502 "cli_utils.ml" 183 4465 4504
+type(
+  string
+)
+ident(
+  int_ref s2 "cli_utils.ml" 182 4442 4460 "cli_utils.ml" 182 4442 4462
+)
+"cli_utils.ml" 183 4465 4487 "cli_utils.ml" 183 4465 4505
+type(
+  int
+)
+"cli_utils.ml" 183 4465 4467 "cli_utils.ml" 183 4465 4505
+type(
+  bool
+)
+"cli_utils.ml" 183 4465 4506 "cli_utils.ml" 183 4465 4508
+type(
+  bool -> bool -> bool
+)
+ident(
+  ext_ref Pervasives.( && )
+)
+"cli_utils.ml" 184 4509 4512 "cli_utils.ml" 184 4509 4522
+type(
+  string -> int -> int -> string
+)
+ident(
+  ext_ref String.sub
+)
+"cli_utils.ml" 184 4509 4523 "cli_utils.ml" 184 4509 4525
+type(
+  string
+)
+ident(
+  int_ref s1 "cli_utils.ml" 182 4442 4457 "cli_utils.ml" 182 4442 4459
+)
+"cli_utils.ml" 184 4509 4526 "cli_utils.ml" 184 4509 4527
+type(
+  int
+)
+"cli_utils.ml" 184 4509 4529 "cli_utils.ml" 184 4509 4542
+type(
+  string -> int
+)
+ident(
+  ext_ref String.length
+)
+"cli_utils.ml" 184 4509 4543 "cli_utils.ml" 184 4509 4545
+type(
+  string
+)
+ident(
+  int_ref s2 "cli_utils.ml" 182 4442 4460 "cli_utils.ml" 182 4442 4462
+)
+"cli_utils.ml" 184 4509 4528 "cli_utils.ml" 184 4509 4546
+type(
+  int
+)
+"cli_utils.ml" 184 4509 4511 "cli_utils.ml" 184 4509 4547
+type(
+  string
+)
+"cli_utils.ml" 184 4509 4547 "cli_utils.ml" 184 4509 4548
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"cli_utils.ml" 184 4509 4548 "cli_utils.ml" 184 4509 4550
+type(
+  string
+)
+ident(
+  int_ref s2 "cli_utils.ml" 182 4442 4460 "cli_utils.ml" 182 4442 4462
+)
+"cli_utils.ml" 184 4509 4511 "cli_utils.ml" 184 4509 4550
+type(
+  bool
+)
+"cli_utils.ml" 183 4465 4467 "cli_utils.ml" 184 4509 4550
+type(
+  bool
+)
+"cli_utils.ml" 187 4567 4575 "cli_utils.ml" 187 4567 4579
+type(
+  'a list -> 'a
+)
+ident(
+  def last "cli_utils.ml" 187 4567 4567 --
+)
+"cli_utils.ml" 187 4567 4580 "cli_utils.ml" 187 4567 4581
+type(
+  'a list
+)
+ident(
+  def l "cli_utils.ml" 188 4584 4586 "cli_utils.ml" 191 4637 4661
+)
+"cli_utils.ml" 188 4584 4592 "cli_utils.ml" 188 4584 4593
+type(
+  'a list
+)
+ident(
+  int_ref l "cli_utils.ml" 187 4567 4580 "cli_utils.ml" 187 4567 4581
+)
+"cli_utils.ml" 189 4599 4605 "cli_utils.ml" 189 4599 4607
+type(
+  'a list
+)
+"cli_utils.ml" 189 4599 4611 "cli_utils.ml" 189 4599 4616
+type(
+  exn -> 'a
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"cli_utils.ml" 189 4599 4617 "cli_utils.ml" 189 4599 4621
+type(
+  exn
+)
+"cli_utils.ml" 189 4599 4611 "cli_utils.ml" 189 4599 4621
+type(
+  'a
+)
+"cli_utils.ml" 190 4622 4629 "cli_utils.ml" 190 4622 4630
+type(
+  'a
+)
+ident(
+  def x "cli_utils.ml" 190 4622 4635 "cli_utils.ml" 190 4622 4636
+)
+"cli_utils.ml" 190 4622 4628 "cli_utils.ml" 190 4622 4631
+type(
+  'a list
+)
+"cli_utils.ml" 190 4622 4635 "cli_utils.ml" 190 4622 4636
+type(
+  'a
+)
+ident(
+  int_ref x "cli_utils.ml" 190 4622 4629 "cli_utils.ml" 190 4622 4630
+)
+"cli_utils.ml" 191 4637 4644 "cli_utils.ml" 191 4637 4645
+type(
+  'a
+)
+ident(
+  def x "cli_utils.ml" 191 4637 4654 "cli_utils.ml" 191 4637 4661
+)
+"cli_utils.ml" 191 4637 4647 "cli_utils.ml" 191 4637 4649
+type(
+  'a list
+)
+ident(
+  def xs "cli_utils.ml" 191 4637 4654 "cli_utils.ml" 191 4637 4661
+)
+"cli_utils.ml" 191 4637 4643 "cli_utils.ml" 191 4637 4650
+type(
+  'a list
+)
+"cli_utils.ml" 191 4637 4654 "cli_utils.ml" 191 4637 4658
+type(
+  'a list -> 'a
+)
+ident(
+  int_ref last "cli_utils.ml" 187 4567 4575 "cli_utils.ml" 187 4567 4579
+)
+"cli_utils.ml" 191 4637 4659 "cli_utils.ml" 191 4637 4661
+type(
+  'a list
+)
+ident(
+  int_ref xs "cli_utils.ml" 191 4637 4647 "cli_utils.ml" 191 4637 4649
+)
+"cli_utils.ml" 191 4637 4654 "cli_utils.ml" 191 4637 4661
+type(
+  'a
+)
+"cli_utils.ml" 188 4584 4586 "cli_utils.ml" 191 4637 4661
+type(
+  'a
+)
+"cli_utils.ml" 193 4663 4667 "cli_utils.ml" 193 4663 4687
+type(
+  string -> string list -> string
+)
+ident(
+  def read_end_from_output "cli_utils.ml" 207 5039 5039 --
+)
+"cli_utils.ml" 193 4663 4688 "cli_utils.ml" 193 4663 4698
+type(
+  string
+)
+ident(
+  def line_start "cli_utils.ml" 193 4663 4699 "cli_utils.ml" 204 4968 4975
+)
+"cli_utils.ml" 193 4663 4699 "cli_utils.ml" 193 4663 4704
+type(
+  string list
+)
+ident(
+  def lines "cli_utils.ml" 194 4707 4709 "cli_utils.ml" 204 4968 4975
+)
+"cli_utils.ml" 194 4707 4713 "cli_utils.ml" 194 4707 4722
+type(
+  string list
+)
+"cli_utils.ml" 194 4707 4725 "cli_utils.ml" 194 4707 4731
+type(
+  (string -> string option) -> string list -> string list
+)
+ident(
+  int_ref mapopt "cli_utils.ml" 126 3182 3190 "cli_utils.ml" 126 3182 3196
+)
+"cli_utils.ml" 195 4732 4741 "cli_utils.ml" 195 4732 4742
+type(
+  string
+)
+ident(
+  def l "cli_utils.ml" 196 4745 4752 "cli_utils.ml" 197 4811 4827
+)
+"cli_utils.ml" 196 4745 4756 "cli_utils.ml" 196 4745 4766
+type(
+  string -> string -> bool
+)
+ident(
+  int_ref startswith "cli_utils.ml" 182 4442 4446 "cli_utils.ml" 182 4442 4456
+)
+"cli_utils.ml" 196 4745 4767 "cli_utils.ml" 196 4745 4768
+type(
+  string
+)
+ident(
+  int_ref l "cli_utils.ml" 195 4732 4741 "cli_utils.ml" 195 4732 4742
+)
+"cli_utils.ml" 196 4745 4769 "cli_utils.ml" 196 4745 4779
+type(
+  string
+)
+ident(
+  int_ref line_start "cli_utils.ml" 193 4663 4688 "cli_utils.ml" 193 4663 4698
+)
+"cli_utils.ml" 196 4745 4755 "cli_utils.ml" 196 4745 4780
+type(
+  bool
+)
+"cli_utils.ml" 196 4745 4792 "cli_utils.ml" 196 4745 4796
+type(
+  string list -> string
+)
+ident(
+  int_ref last "cli_utils.ml" 187 4567 4575 "cli_utils.ml" 187 4567 4579
+)
+"cli_utils.ml" 196 4745 4798 "cli_utils.ml" 196 4745 4806
+type(
+  string -> string list
+)
+ident(
+  ext_ref Utils.tokenize
+)
+"cli_utils.ml" 196 4745 4807 "cli_utils.ml" 196 4745 4808
+type(
+  string
+)
+ident(
+  int_ref l "cli_utils.ml" 195 4732 4741 "cli_utils.ml" 195 4732 4742
+)
+"cli_utils.ml" 196 4745 4797 "cli_utils.ml" 196 4745 4809
+type(
+  string list
+)
+"cli_utils.ml" 196 4745 4791 "cli_utils.ml" 196 4745 4810
+type(
+  string
+)
+"cli_utils.ml" 196 4745 4786 "cli_utils.ml" 196 4745 4810
+type(
+  string option
+)
+"cli_utils.ml" 197 4811 4823 "cli_utils.ml" 197 4811 4827
+type(
+  string option
+)
+"cli_utils.ml" 196 4745 4752 "cli_utils.ml" 197 4811 4827
+type(
+  string option
+)
+"cli_utils.ml" 195 4732 4736 "cli_utils.ml" 197 4811 4828
+type(
+  string -> string option
+)
+"cli_utils.ml" 197 4811 4829 "cli_utils.ml" 197 4811 4834
+type(
+  string list
+)
+ident(
+  int_ref lines "cli_utils.ml" 193 4663 4699 "cli_utils.ml" 193 4663 4704
+)
+"cli_utils.ml" 194 4707 4725 "cli_utils.ml" 197 4811 4834
+type(
+  string list
+)
+"cli_utils.ml" 199 4848 4860 "cli_utils.ml" 199 4848 4869
+type(
+  string list
+)
+ident(
+  int_ref new_uuids "cli_utils.ml" 194 4707 4713 "cli_utils.ml" 194 4707 4722
+)
+"cli_utils.ml" 200 4875 4879 "cli_utils.ml" 200 4875 4880
+type(
+  string
+)
+ident(
+  def x "cli_utils.ml" 200 4875 4885 "cli_utils.ml" 200 4875 4886
+)
+"cli_utils.ml" 200 4875 4878 "cli_utils.ml" 200 4875 4881
+type(
+  string list
+)
+"cli_utils.ml" 200 4875 4885 "cli_utils.ml" 200 4875 4886
+type(
+  string
+)
+ident(
+  int_ref x "cli_utils.ml" 200 4875 4879 "cli_utils.ml" 200 4875 4880
+)
+"cli_utils.ml" 201 4887 4890 "cli_utils.ml" 201 4887 4891
+type(
+  string list
+)
+"cli_utils.ml" 202 4895 4900 "cli_utils.ml" 202 4895 4905
+type(
+  exn -> string
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"cli_utils.ml" 203 4906 4935 "cli_utils.ml" 203 4906 4966
+type(
+  string
+)
+"cli_utils.ml" 203 4906 4913 "cli_utils.ml" 203 4906 4967
+type(
+  exn
+)
+"cli_utils.ml" 202 4895 4900 "cli_utils.ml" 203 4906 4967
+type(
+  string
+)
+"cli_utils.ml" 198 4838 4842 "cli_utils.ml" 204 4968 4975
+type(
+  string
+)
+"cli_utils.ml" 194 4707 4709 "cli_utils.ml" 204 4968 4975
+type(
+  string
+)
+"cli_utils.ml" 207 5039 5043 "cli_utils.ml" 207 5039 5052
+type(
+  (string -> 'a list -> string list * Unix.process_status) ->
+  string -> string -> unit
+)
+ident(
+  def waitstate "cli_utils.ml" 212 5212 5212 --
+)
+"cli_utils.ml" 207 5039 5053 "cli_utils.ml" 207 5039 5056
+type(
+  string -> 'a list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 207 5039 5057 "cli_utils.ml" 209 5137 5179
+)
+"cli_utils.ml" 207 5039 5057 "cli_utils.ml" 207 5039 5061
+type(
+  string
+)
+ident(
+  def vmid "cli_utils.ml" 207 5039 5062 "cli_utils.ml" 209 5137 5179
+)
+"cli_utils.ml" 207 5039 5062 "cli_utils.ml" 207 5039 5067
+type(
+  string
+)
+ident(
+  def state "cli_utils.ml" 208 5070 5072 "cli_utils.ml" 209 5137 5179
+)
+"cli_utils.ml" 208 5070 5072 "cli_utils.ml" 208 5070 5082
+type(
+  string -> unit
+)
+ident(
+  int_ref print_line "cli_utils.ml" 39 1043 1047 "cli_utils.ml" 39 1043 1057
+)
+"cli_utils.ml" 208 5070 5084 "cli_utils.ml" 208 5070 5101
+type(
+  string
+)
+"cli_utils.ml" 208 5070 5101 "cli_utils.ml" 208 5070 5102
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 208 5070 5102 "cli_utils.ml" 208 5070 5106
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 207 5039 5057 "cli_utils.ml" 207 5039 5061
+)
+"cli_utils.ml" 208 5070 5106 "cli_utils.ml" 208 5070 5107
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 208 5070 5107 "cli_utils.ml" 208 5070 5128
+type(
+  string
+)
+"cli_utils.ml" 208 5070 5128 "cli_utils.ml" 208 5070 5129
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 208 5070 5129 "cli_utils.ml" 208 5070 5134
+type(
+  string
+)
+ident(
+  int_ref state "cli_utils.ml" 207 5039 5062 "cli_utils.ml" 207 5039 5067
+)
+"cli_utils.ml" 208 5070 5107 "cli_utils.ml" 208 5070 5134
+type(
+  string
+)
+"cli_utils.ml" 208 5070 5102 "cli_utils.ml" 208 5070 5134
+type(
+  string
+)
+"cli_utils.ml" 208 5070 5083 "cli_utils.ml" 208 5070 5135
+type(
+  string
+)
+"cli_utils.ml" 208 5070 5072 "cli_utils.ml" 208 5070 5135
+type(
+  unit
+)
+"cli_utils.ml" 209 5137 5139 "cli_utils.ml" 209 5137 5143
+type(
+  (unit -> bool) -> unit
+)
+ident(
+  int_ref poll "cli_utils.ml" 168 4166 4170 "cli_utils.ml" 168 4166 4174
+)
+"cli_utils.ml" 209 5137 5149 "cli_utils.ml" 209 5137 5151
+type(
+  unit
+)
+"cli_utils.ml" 209 5137 5154 "cli_utils.ml" 209 5137 5162
+type(
+  (string -> 'a list -> string list * Unix.process_status) ->
+  string -> string
+)
+ident(
+  int_ref getstate "cli_utils.ml" 143 3517 3525 "cli_utils.ml" 143 3517 3533
+)
+"cli_utils.ml" 209 5137 5163 "cli_utils.ml" 209 5137 5166
+type(
+  string -> 'a list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 207 5039 5053 "cli_utils.ml" 207 5039 5056
+)
+"cli_utils.ml" 209 5137 5167 "cli_utils.ml" 209 5137 5171
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 207 5039 5057 "cli_utils.ml" 207 5039 5061
+)
+"cli_utils.ml" 209 5137 5153 "cli_utils.ml" 209 5137 5172
+type(
+  string
+)
+"cli_utils.ml" 209 5137 5172 "cli_utils.ml" 209 5137 5173
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"cli_utils.ml" 209 5137 5173 "cli_utils.ml" 209 5137 5178
+type(
+  string
+)
+ident(
+  int_ref state "cli_utils.ml" 207 5039 5062 "cli_utils.ml" 207 5039 5067
+)
+"cli_utils.ml" 209 5137 5153 "cli_utils.ml" 209 5137 5178
+type(
+  bool
+)
+"cli_utils.ml" 209 5137 5144 "cli_utils.ml" 209 5137 5179
+type(
+  unit -> bool
+)
+"cli_utils.ml" 209 5137 5139 "cli_utils.ml" 209 5137 5179
+type(
+  unit
+)
+"cli_utils.ml" 208 5070 5072 "cli_utils.ml" 209 5137 5179
+type(
+  unit
+)
+"cli_utils.ml" 212 5212 5216 "cli_utils.ml" 212 5212 5228
+type(
+  (string -> 'a list -> string list * Unix.process_status) -> string list
+)
+ident(
+  def get_vm_uuids "cli_utils.ml" 217 5364 5364 --
+)
+"cli_utils.ml" 212 5212 5229 "cli_utils.ml" 212 5212 5232
+type(
+  string -> 'a list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 213 5235 5237 "cli_utils.ml" 214 5298 5331
+)
+"cli_utils.ml" 213 5235 5241 "cli_utils.ml" 213 5235 5246
+type(
+  string list
+)
+"cli_utils.ml" 213 5235 5249 "cli_utils.ml" 213 5235 5263
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 213 5235 5268 "cli_utils.ml" 213 5235 5270
+type(
+  unit
+)
+"cli_utils.ml" 213 5235 5272 "cli_utils.ml" 213 5235 5275
+type(
+  string -> 'a list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 212 5212 5229 "cli_utils.ml" 212 5212 5232
+)
+"cli_utils.ml" 213 5235 5276 "cli_utils.ml" 213 5235 5290
+type(
+  string
+)
+"cli_utils.ml" 213 5235 5291 "cli_utils.ml" 213 5235 5293
+type(
+  'a list
+)
+"cli_utils.ml" 213 5235 5272 "cli_utils.ml" 213 5235 5293
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 213 5235 5264 "cli_utils.ml" 213 5235 5294
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 213 5235 5249 "cli_utils.ml" 213 5235 5294
+type(
+  string list
+)
+"cli_utils.ml" 214 5298 5302 "cli_utils.ml" 214 5298 5308
+type(
+  (string -> string option) -> string list -> string list
+)
+ident(
+  int_ref mapopt "cli_utils.ml" 126 3182 3190 "cli_utils.ml" 126 3182 3196
+)
+"cli_utils.ml" 214 5298 5310 "cli_utils.ml" 214 5298 5316
+type(
+  string -> string -> string option
+)
+ident(
+  int_ref getval "cli_utils.ml" 114 2905 2909 "cli_utils.ml" 114 2905 2915
+)
+"cli_utils.ml" 214 5298 5317 "cli_utils.ml" 214 5298 5324
+type(
+  string
+)
+"cli_utils.ml" 214 5298 5309 "cli_utils.ml" 214 5298 5325
+type(
+  string -> string option
+)
+"cli_utils.ml" 214 5298 5326 "cli_utils.ml" 214 5298 5331
+type(
+  string list
+)
+ident(
+  int_ref lines "cli_utils.ml" 213 5235 5241 "cli_utils.ml" 213 5235 5246
+)
+"cli_utils.ml" 214 5298 5302 "cli_utils.ml" 214 5298 5331
+type(
+  string list
+)
+"cli_utils.ml" 213 5235 5237 "cli_utils.ml" 214 5298 5331
+type(
+  string list
+)
+"cli_utils.ml" 217 5364 5368 "cli_utils.ml" 217 5364 5380
+type(
+  (string -> 'a list -> string list * Unix.process_status) -> string list
+)
+ident(
+  def get_vm_names "cli_utils.ml" 222 5527 5527 --
+)
+"cli_utils.ml" 217 5364 5381 "cli_utils.ml" 217 5364 5384
+type(
+  string -> 'a list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 218 5387 5389 "cli_utils.ml" 219 5450 5483
+)
+"cli_utils.ml" 218 5387 5393 "cli_utils.ml" 218 5387 5398
+type(
+  string list
+)
+"cli_utils.ml" 218 5387 5401 "cli_utils.ml" 218 5387 5415
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 218 5387 5420 "cli_utils.ml" 218 5387 5422
+type(
+  unit
+)
+"cli_utils.ml" 218 5387 5424 "cli_utils.ml" 218 5387 5427
+type(
+  string -> 'a list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 217 5364 5381 "cli_utils.ml" 217 5364 5384
+)
+"cli_utils.ml" 218 5387 5428 "cli_utils.ml" 218 5387 5442
+type(
+  string
+)
+"cli_utils.ml" 218 5387 5443 "cli_utils.ml" 218 5387 5445
+type(
+  'a list
+)
+"cli_utils.ml" 218 5387 5424 "cli_utils.ml" 218 5387 5445
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 218 5387 5416 "cli_utils.ml" 218 5387 5446
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 218 5387 5401 "cli_utils.ml" 218 5387 5446
+type(
+  string list
+)
+"cli_utils.ml" 219 5450 5454 "cli_utils.ml" 219 5450 5460
+type(
+  (string -> string option) -> string list -> string list
+)
+ident(
+  int_ref mapopt "cli_utils.ml" 126 3182 3190 "cli_utils.ml" 126 3182 3196
+)
+"cli_utils.ml" 219 5450 5462 "cli_utils.ml" 219 5450 5468
+type(
+  string -> string -> string option
+)
+ident(
+  int_ref getval "cli_utils.ml" 114 2905 2909 "cli_utils.ml" 114 2905 2915
+)
+"cli_utils.ml" 219 5450 5469 "cli_utils.ml" 219 5450 5476
+type(
+  string
+)
+"cli_utils.ml" 219 5450 5461 "cli_utils.ml" 219 5450 5477
+type(
+  string -> string option
+)
+"cli_utils.ml" 219 5450 5478 "cli_utils.ml" 219 5450 5483
+type(
+  string list
+)
+ident(
+  int_ref lines "cli_utils.ml" 218 5387 5393 "cli_utils.ml" 218 5387 5398
+)
+"cli_utils.ml" 219 5450 5454 "cli_utils.ml" 219 5450 5483
+type(
+  string list
+)
+"cli_utils.ml" 218 5387 5389 "cli_utils.ml" 219 5450 5483
+type(
+  string list
+)
+"cli_utils.ml" 222 5527 5531 "cli_utils.ml" 222 5527 5540
+type(
+  (string -> (string * 'a) list -> string list * Unix.process_status) ->
+  'a -> string list
+)
+ident(
+  def get_disks "cli_utils.ml" 227 5700 5700 --
+)
+"cli_utils.ml" 222 5527 5541 "cli_utils.ml" 222 5527 5544
+type(
+  string -> (string * 'a) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 222 5527 5545 "cli_utils.ml" 224 5629 5662
+)
+"cli_utils.ml" 222 5527 5545 "cli_utils.ml" 222 5527 5549
+type(
+  'a
+)
+ident(
+  def vmid "cli_utils.ml" 223 5552 5554 "cli_utils.ml" 224 5629 5662
+)
+"cli_utils.ml" 223 5552 5558 "cli_utils.ml" 223 5552 5563
+type(
+  string list
+)
+"cli_utils.ml" 223 5552 5566 "cli_utils.ml" 223 5552 5580
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 223 5552 5585 "cli_utils.ml" 223 5552 5587
+type(
+  unit
+)
+"cli_utils.ml" 223 5552 5589 "cli_utils.ml" 223 5552 5592
+type(
+  string -> (string * 'a) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 222 5527 5541 "cli_utils.ml" 222 5527 5544
+)
+"cli_utils.ml" 223 5552 5593 "cli_utils.ml" 223 5552 5607
+type(
+  string
+)
+"cli_utils.ml" 223 5552 5610 "cli_utils.ml" 223 5552 5617
+type(
+  string
+)
+"cli_utils.ml" 223 5552 5618 "cli_utils.ml" 223 5552 5622
+type(
+  'a
+)
+ident(
+  int_ref vmid "cli_utils.ml" 222 5527 5545 "cli_utils.ml" 222 5527 5549
+)
+"cli_utils.ml" 223 5552 5609 "cli_utils.ml" 223 5552 5623
+type(
+  string * 'a
+)
+"cli_utils.ml" 223 5552 5608 "cli_utils.ml" 223 5552 5624
+type(
+  (string * 'a) list
+)
+"cli_utils.ml" 223 5552 5589 "cli_utils.ml" 223 5552 5624
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 223 5552 5581 "cli_utils.ml" 223 5552 5625
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 223 5552 5566 "cli_utils.ml" 223 5552 5625
+type(
+  string list
+)
+"cli_utils.ml" 224 5629 5633 "cli_utils.ml" 224 5629 5639
+type(
+  (string -> string option) -> string list -> string list
+)
+ident(
+  int_ref mapopt "cli_utils.ml" 126 3182 3190 "cli_utils.ml" 126 3182 3196
+)
+"cli_utils.ml" 224 5629 5641 "cli_utils.ml" 224 5629 5647
+type(
+  string -> string -> string option
+)
+ident(
+  int_ref getval "cli_utils.ml" 114 2905 2909 "cli_utils.ml" 114 2905 2915
+)
+"cli_utils.ml" 224 5629 5648 "cli_utils.ml" 224 5629 5655
+type(
+  string
+)
+"cli_utils.ml" 224 5629 5640 "cli_utils.ml" 224 5629 5656
+type(
+  string -> string option
+)
+"cli_utils.ml" 224 5629 5657 "cli_utils.ml" 224 5629 5662
+type(
+  string list
+)
+ident(
+  int_ref lines "cli_utils.ml" 223 5552 5558 "cli_utils.ml" 223 5552 5563
+)
+"cli_utils.ml" 224 5629 5633 "cli_utils.ml" 224 5629 5662
+type(
+  string list
+)
+"cli_utils.ml" 223 5552 5554 "cli_utils.ml" 224 5629 5662
+type(
+  string list
+)
+"cli_utils.ml" 227 5700 5704 "cli_utils.ml" 227 5700 5712
+type(
+  (string -> (string * 'a) list -> string list * Unix.process_status) ->
+  'a -> string list
+)
+ident(
+  def get_nics "cli_utils.ml" 232 5866 5866 --
+)
+"cli_utils.ml" 227 5700 5713 "cli_utils.ml" 227 5700 5716
+type(
+  string -> (string * 'a) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 227 5700 5717 "cli_utils.ml" 229 5800 5833
+)
+"cli_utils.ml" 227 5700 5717 "cli_utils.ml" 227 5700 5721
+type(
+  'a
+)
+ident(
+  def vmid "cli_utils.ml" 228 5724 5726 "cli_utils.ml" 229 5800 5833
+)
+"cli_utils.ml" 228 5724 5730 "cli_utils.ml" 228 5724 5735
+type(
+  string list
+)
+"cli_utils.ml" 228 5724 5738 "cli_utils.ml" 228 5724 5752
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 228 5724 5757 "cli_utils.ml" 228 5724 5759
+type(
+  unit
+)
+"cli_utils.ml" 228 5724 5761 "cli_utils.ml" 228 5724 5764
+type(
+  string -> (string * 'a) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 227 5700 5713 "cli_utils.ml" 227 5700 5716
+)
+"cli_utils.ml" 228 5724 5765 "cli_utils.ml" 228 5724 5778
+type(
+  string
+)
+"cli_utils.ml" 228 5724 5781 "cli_utils.ml" 228 5724 5788
+type(
+  string
+)
+"cli_utils.ml" 228 5724 5789 "cli_utils.ml" 228 5724 5793
+type(
+  'a
+)
+ident(
+  int_ref vmid "cli_utils.ml" 227 5700 5717 "cli_utils.ml" 227 5700 5721
+)
+"cli_utils.ml" 228 5724 5780 "cli_utils.ml" 228 5724 5794
+type(
+  string * 'a
+)
+"cli_utils.ml" 228 5724 5779 "cli_utils.ml" 228 5724 5795
+type(
+  (string * 'a) list
+)
+"cli_utils.ml" 228 5724 5761 "cli_utils.ml" 228 5724 5795
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 228 5724 5753 "cli_utils.ml" 228 5724 5796
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 228 5724 5738 "cli_utils.ml" 228 5724 5796
+type(
+  string list
+)
+"cli_utils.ml" 229 5800 5804 "cli_utils.ml" 229 5800 5810
+type(
+  (string -> string option) -> string list -> string list
+)
+ident(
+  int_ref mapopt "cli_utils.ml" 126 3182 3190 "cli_utils.ml" 126 3182 3196
+)
+"cli_utils.ml" 229 5800 5812 "cli_utils.ml" 229 5800 5818
+type(
+  string -> string -> string option
+)
+ident(
+  int_ref getval "cli_utils.ml" 114 2905 2909 "cli_utils.ml" 114 2905 2915
+)
+"cli_utils.ml" 229 5800 5819 "cli_utils.ml" 229 5800 5826
+type(
+  string
+)
+"cli_utils.ml" 229 5800 5811 "cli_utils.ml" 229 5800 5827
+type(
+  string -> string option
+)
+"cli_utils.ml" 229 5800 5828 "cli_utils.ml" 229 5800 5833
+type(
+  string list
+)
+ident(
+  int_ref lines "cli_utils.ml" 228 5724 5730 "cli_utils.ml" 228 5724 5735
+)
+"cli_utils.ml" 229 5800 5804 "cli_utils.ml" 229 5800 5833
+type(
+  string list
+)
+"cli_utils.ml" 228 5724 5726 "cli_utils.ml" 229 5800 5833
+type(
+  string list
+)
+"cli_utils.ml" 232 5866 5870 "cli_utils.ml" 232 5866 5882
+type(
+  (string -> 'a list -> string list * Unix.process_status) -> string list
+)
+ident(
+  def get_vbridges "cli_utils.ml" 237 6068 6068 --
+)
+"cli_utils.ml" 232 5866 5883 "cli_utils.ml" 232 5866 5886
+type(
+  string -> 'a list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 233 5889 5891 "cli_utils.ml" 234 5957 6036
+)
+"cli_utils.ml" 233 5889 5895 "cli_utils.ml" 233 5889 5900
+type(
+  string list
+)
+"cli_utils.ml" 233 5889 5903 "cli_utils.ml" 233 5889 5917
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 233 5889 5922 "cli_utils.ml" 233 5889 5924
+type(
+  unit
+)
+"cli_utils.ml" 233 5889 5926 "cli_utils.ml" 233 5889 5929
+type(
+  string -> 'a list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 232 5866 5883 "cli_utils.ml" 232 5866 5886
+)
+"cli_utils.ml" 233 5889 5930 "cli_utils.ml" 233 5889 5949
+type(
+  string
+)
+"cli_utils.ml" 233 5889 5950 "cli_utils.ml" 233 5889 5952
+type(
+  'a list
+)
+"cli_utils.ml" 233 5889 5926 "cli_utils.ml" 233 5889 5952
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 233 5889 5918 "cli_utils.ml" 233 5889 5953
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 233 5889 5903 "cli_utils.ml" 233 5889 5953
+type(
+  string list
+)
+"cli_utils.ml" 234 5957 5959 "cli_utils.ml" 234 5957 5970
+type(
+  (string -> bool) -> string list -> string list
+)
+ident(
+  ext_ref List.filter
+)
+"cli_utils.ml" 234 5957 5976 "cli_utils.ml" 234 5957 5977
+type(
+  string
+)
+ident(
+  def s "cli_utils.ml" 234 5957 5981 "cli_utils.ml" 234 5957 5993
+)
+"cli_utils.ml" 234 5957 5981 "cli_utils.ml" 234 5957 5982
+type(
+  string
+)
+ident(
+  int_ref s "cli_utils.ml" 234 5957 5976 "cli_utils.ml" 234 5957 5977
+)
+"cli_utils.ml" 234 5957 5983 "cli_utils.ml" 234 5957 5985
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( <> )
+)
+"cli_utils.ml" 234 5957 5986 "cli_utils.ml" 234 5957 5993
+type(
+  string
+)
+"cli_utils.ml" 234 5957 5981 "cli_utils.ml" 234 5957 5993
+type(
+  bool
+)
+"cli_utils.ml" 234 5957 5971 "cli_utils.ml" 234 5957 5994
+type(
+  string -> bool
+)
+"cli_utils.ml" 234 5957 5996 "cli_utils.ml" 234 5957 6002
+type(
+  (string -> string option) -> string list -> string list
+)
+ident(
+  int_ref mapopt "cli_utils.ml" 126 3182 3190 "cli_utils.ml" 126 3182 3196
+)
+"cli_utils.ml" 234 5957 6004 "cli_utils.ml" 234 5957 6010
+type(
+  string -> string -> string option
+)
+ident(
+  int_ref getval "cli_utils.ml" 114 2905 2909 "cli_utils.ml" 114 2905 2915
+)
+"cli_utils.ml" 234 5957 6011 "cli_utils.ml" 234 5957 6028
+type(
+  string
+)
+"cli_utils.ml" 234 5957 6003 "cli_utils.ml" 234 5957 6029
+type(
+  string -> string option
+)
+"cli_utils.ml" 234 5957 6030 "cli_utils.ml" 234 5957 6035
+type(
+  string list
+)
+ident(
+  int_ref lines "cli_utils.ml" 233 5889 5895 "cli_utils.ml" 233 5889 5900
+)
+"cli_utils.ml" 234 5957 5995 "cli_utils.ml" 234 5957 6036
+type(
+  string list
+)
+"cli_utils.ml" 234 5957 5959 "cli_utils.ml" 234 5957 6036
+type(
+  string list
+)
+"cli_utils.ml" 233 5889 5891 "cli_utils.ml" 234 5957 6036
+type(
+  string list
+)
+"cli_utils.ml" 237 6068 6072 "cli_utils.ml" 237 6068 6083
+type(
+  (string -> 'a list -> string list * Unix.process_status) -> string list
+)
+ident(
+  def get_patches "cli_utils.ml" 242 6239 6239 --
+)
+"cli_utils.ml" 237 6068 6084 "cli_utils.ml" 237 6068 6087
+type(
+  string -> 'a list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 238 6090 6092 "cli_utils.ml" 239 6156 6189
+)
+"cli_utils.ml" 238 6090 6096 "cli_utils.ml" 238 6090 6101
+type(
+  string list
+)
+"cli_utils.ml" 238 6090 6104 "cli_utils.ml" 238 6090 6118
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 238 6090 6123 "cli_utils.ml" 238 6090 6125
+type(
+  unit
+)
+"cli_utils.ml" 238 6090 6127 "cli_utils.ml" 238 6090 6130
+type(
+  string -> 'a list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 237 6068 6084 "cli_utils.ml" 237 6068 6087
+)
+"cli_utils.ml" 238 6090 6131 "cli_utils.ml" 238 6090 6148
+type(
+  string
+)
+"cli_utils.ml" 238 6090 6149 "cli_utils.ml" 238 6090 6151
+type(
+  'a list
+)
+"cli_utils.ml" 238 6090 6127 "cli_utils.ml" 238 6090 6151
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 238 6090 6119 "cli_utils.ml" 238 6090 6152
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 238 6090 6104 "cli_utils.ml" 238 6090 6152
+type(
+  string list
+)
+"cli_utils.ml" 239 6156 6160 "cli_utils.ml" 239 6156 6166
+type(
+  (string -> string option) -> string list -> string list
+)
+ident(
+  int_ref mapopt "cli_utils.ml" 126 3182 3190 "cli_utils.ml" 126 3182 3196
+)
+"cli_utils.ml" 239 6156 6168 "cli_utils.ml" 239 6156 6174
+type(
+  string -> string -> string option
+)
+ident(
+  int_ref getval "cli_utils.ml" 114 2905 2909 "cli_utils.ml" 114 2905 2915
+)
+"cli_utils.ml" 239 6156 6175 "cli_utils.ml" 239 6156 6182
+type(
+  string
+)
+"cli_utils.ml" 239 6156 6167 "cli_utils.ml" 239 6156 6183
+type(
+  string -> string option
+)
+"cli_utils.ml" 239 6156 6184 "cli_utils.ml" 239 6156 6189
+type(
+  string list
+)
+ident(
+  int_ref lines "cli_utils.ml" 238 6090 6096 "cli_utils.ml" 238 6090 6101
+)
+"cli_utils.ml" 239 6156 6160 "cli_utils.ml" 239 6156 6189
+type(
+  string list
+)
+"cli_utils.ml" 238 6090 6092 "cli_utils.ml" 239 6156 6189
+type(
+  string list
+)
+"cli_utils.ml" 242 6239 6243 "cli_utils.ml" 242 6239 6260
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> unit
+)
+ident(
+  def sync_remove_patch "cli_utils.ml" 247 6452 6452 --
+)
+"cli_utils.ml" 242 6239 6261 "cli_utils.ml" 242 6239 6264
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 242 6239 6265 "cli_utils.ml" 244 6351 6405
+)
+"cli_utils.ml" 242 6239 6265 "cli_utils.ml" 242 6239 6269
+type(
+  string
+)
+ident(
+  def uuid "cli_utils.ml" 243 6272 6274 "cli_utils.ml" 244 6351 6405
+)
+"cli_utils.ml" 243 6272 6274 "cli_utils.ml" 243 6272 6280
+type(
+  string list -> unit
+)
+ident(
+  ext_ref Pervasives.ignore
+)
+"cli_utils.ml" 243 6272 6282 "cli_utils.ml" 243 6272 6296
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 243 6272 6302 "cli_utils.ml" 243 6272 6304
+type(
+  unit
+)
+"cli_utils.ml" 243 6272 6306 "cli_utils.ml" 243 6272 6309
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 242 6239 6261 "cli_utils.ml" 242 6239 6264
+)
+"cli_utils.ml" 243 6272 6310 "cli_utils.ml" 243 6272 6329
+type(
+  string
+)
+"cli_utils.ml" 243 6272 6331 "cli_utils.ml" 243 6272 6341
+type(
+  string
+)
+"cli_utils.ml" 243 6272 6342 "cli_utils.ml" 243 6272 6346
+type(
+  string
+)
+ident(
+  int_ref uuid "cli_utils.ml" 242 6239 6265 "cli_utils.ml" 242 6239 6269
+)
+"cli_utils.ml" 243 6272 6331 "cli_utils.ml" 243 6272 6346
+type(
+  string * string
+)
+"cli_utils.ml" 243 6272 6330 "cli_utils.ml" 243 6272 6347
+type(
+  (string * string) list
+)
+"cli_utils.ml" 243 6272 6306 "cli_utils.ml" 243 6272 6347
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 243 6272 6297 "cli_utils.ml" 243 6272 6348
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 243 6272 6281 "cli_utils.ml" 243 6272 6349
+type(
+  string list
+)
+"cli_utils.ml" 243 6272 6274 "cli_utils.ml" 243 6272 6349
+type(
+  unit
+)
+"cli_utils.ml" 244 6351 6353 "cli_utils.ml" 244 6351 6357
+type(
+  (unit -> bool) -> unit
+)
+ident(
+  int_ref poll "cli_utils.ml" 168 4166 4170 "cli_utils.ml" 168 4166 4174
+)
+"cli_utils.ml" 244 6351 6363 "cli_utils.ml" 244 6351 6365
+type(
+  unit
+)
+"cli_utils.ml" 244 6351 6367 "cli_utils.ml" 244 6351 6370
+type(
+  bool -> bool
+)
+ident(
+  ext_ref Pervasives.not
+)
+"cli_utils.ml" 244 6351 6372 "cli_utils.ml" 244 6351 6380
+type(
+  string -> string list -> bool
+)
+ident(
+  ext_ref List.mem
+)
+"cli_utils.ml" 244 6351 6381 "cli_utils.ml" 244 6351 6385
+type(
+  string
+)
+ident(
+  int_ref uuid "cli_utils.ml" 242 6239 6265 "cli_utils.ml" 242 6239 6269
+)
+"cli_utils.ml" 244 6351 6387 "cli_utils.ml" 244 6351 6398
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string list
+)
+ident(
+  int_ref get_patches "cli_utils.ml" 237 6068 6072 "cli_utils.ml" 237 6068 6083
+)
+"cli_utils.ml" 244 6351 6399 "cli_utils.ml" 244 6351 6402
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 242 6239 6261 "cli_utils.ml" 242 6239 6264
+)
+"cli_utils.ml" 244 6351 6386 "cli_utils.ml" 244 6351 6403
+type(
+  string list
+)
+"cli_utils.ml" 244 6351 6371 "cli_utils.ml" 244 6351 6404
+type(
+  bool
+)
+"cli_utils.ml" 244 6351 6367 "cli_utils.ml" 244 6351 6404
+type(
+  bool
+)
+"cli_utils.ml" 244 6351 6358 "cli_utils.ml" 244 6351 6405
+type(
+  unit -> bool
+)
+"cli_utils.ml" 244 6351 6353 "cli_utils.ml" 244 6351 6405
+type(
+  unit
+)
+"cli_utils.ml" 243 6272 6274 "cli_utils.ml" 244 6351 6405
+type(
+  unit
+)
+"cli_utils.ml" 247 6452 6456 "cli_utils.ml" 247 6452 6469
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  bool -> string -> unit
+)
+ident(
+  def sync_shutdown "cli_utils.ml" 254 6721 6721 --
+)
+"cli_utils.ml" 247 6452 6470 "cli_utils.ml" 247 6452 6473
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 247 6452 6474 "cli_utils.ml" 251 6626 6655
+)
+"cli_utils.ml" 247 6452 6474 "cli_utils.ml" 247 6452 6479
+type(
+  bool
+)
+ident(
+  def force "cli_utils.ml" 247 6452 6480 "cli_utils.ml" 251 6626 6655
+)
+"cli_utils.ml" 247 6452 6480 "cli_utils.ml" 247 6452 6484
+type(
+  string
+)
+ident(
+  def vmid "cli_utils.ml" 248 6487 6489 "cli_utils.ml" 251 6626 6655
+)
+"cli_utils.ml" 248 6487 6493 "cli_utils.ml" 248 6487 6499
+type(
+  (string * string) list
+)
+"cli_utils.ml" 248 6487 6505 "cli_utils.ml" 248 6487 6510
+type(
+  bool
+)
+ident(
+  int_ref force "cli_utils.ml" 247 6452 6474 "cli_utils.ml" 247 6452 6479
+)
+"cli_utils.ml" 248 6487 6518 "cli_utils.ml" 248 6487 6525
+type(
+  string
+)
+"cli_utils.ml" 248 6487 6526 "cli_utils.ml" 248 6487 6532
+type(
+  string
+)
+"cli_utils.ml" 248 6487 6517 "cli_utils.ml" 248 6487 6533
+type(
+  string * string
+)
+"cli_utils.ml" 248 6487 6516 "cli_utils.ml" 248 6487 6534
+type(
+  (string * string) list
+)
+"cli_utils.ml" 248 6487 6540 "cli_utils.ml" 248 6487 6542
+type(
+  (string * string) list
+)
+"cli_utils.ml" 248 6487 6502 "cli_utils.ml" 248 6487 6542
+type(
+  (string * string) list
+)
+"cli_utils.ml" 249 6546 6552 "cli_utils.ml" 249 6546 6558
+type(
+  (string * string) list
+)
+"cli_utils.ml" 249 6546 6562 "cli_utils.ml" 249 6546 6569
+type(
+  string
+)
+"cli_utils.ml" 249 6546 6570 "cli_utils.ml" 249 6546 6574
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 247 6452 6480 "cli_utils.ml" 247 6452 6484
+)
+"cli_utils.ml" 249 6546 6561 "cli_utils.ml" 249 6546 6575
+type(
+  string * string
+)
+"cli_utils.ml" 249 6546 6577 "cli_utils.ml" 249 6546 6583
+type(
+  (string * string) list
+)
+ident(
+  int_ref params "cli_utils.ml" 248 6487 6493 "cli_utils.ml" 248 6487 6499
+)
+"cli_utils.ml" 249 6546 6561 "cli_utils.ml" 249 6546 6583
+type(
+  (string * string) list
+)
+"cli_utils.ml" 250 6587 6591 "cli_utils.ml" 250 6587 6597
+type(
+  string list * Unix.process_status -> unit
+)
+ident(
+  ext_ref Pervasives.ignore
+)
+"cli_utils.ml" 250 6587 6599 "cli_utils.ml" 250 6587 6602
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 247 6452 6470 "cli_utils.ml" 247 6452 6473
+)
+"cli_utils.ml" 250 6587 6603 "cli_utils.ml" 250 6587 6616
+type(
+  string
+)
+"cli_utils.ml" 250 6587 6617 "cli_utils.ml" 250 6587 6623
+type(
+  (string * string) list
+)
+ident(
+  int_ref params "cli_utils.ml" 249 6546 6552 "cli_utils.ml" 249 6546 6558
+)
+"cli_utils.ml" 250 6587 6598 "cli_utils.ml" 250 6587 6624
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 250 6587 6591 "cli_utils.ml" 250 6587 6624
+type(
+  unit
+)
+"cli_utils.ml" 251 6626 6630 "cli_utils.ml" 251 6626 6639
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> unit
+)
+ident(
+  int_ref waitstate "cli_utils.ml" 207 5039 5043 "cli_utils.ml" 207 5039 5052
+)
+"cli_utils.ml" 251 6626 6640 "cli_utils.ml" 251 6626 6643
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 247 6452 6470 "cli_utils.ml" 247 6452 6473
+)
+"cli_utils.ml" 251 6626 6644 "cli_utils.ml" 251 6626 6648
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 247 6452 6480 "cli_utils.ml" 247 6452 6484
+)
+"cli_utils.ml" 251 6626 6649 "cli_utils.ml" 251 6626 6655
+type(
+  string
+)
+"cli_utils.ml" 251 6626 6630 "cli_utils.ml" 251 6626 6655
+type(
+  unit
+)
+"cli_utils.ml" 250 6587 6591 "cli_utils.ml" 251 6626 6655
+type(
+  unit
+)
+"cli_utils.ml" 249 6546 6548 "cli_utils.ml" 251 6626 6655
+type(
+  unit
+)
+"cli_utils.ml" 248 6487 6489 "cli_utils.ml" 251 6626 6655
+type(
+  unit
+)
+"cli_utils.ml" 254 6721 6725 "cli_utils.ml" 254 6721 6739
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> unit
+)
+ident(
+  def sync_uninstall "cli_utils.ml" 259 6950 6950 --
+)
+"cli_utils.ml" 254 6721 6740 "cli_utils.ml" 254 6721 6743
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 254 6721 6744 "cli_utils.ml" 256 6824 6879
+)
+"cli_utils.ml" 254 6721 6744 "cli_utils.ml" 254 6721 6748
+type(
+  string
+)
+ident(
+  def vmid "cli_utils.ml" 255 6751 6753 "cli_utils.ml" 256 6824 6879
+)
+"cli_utils.ml" 255 6751 6753 "cli_utils.ml" 255 6751 6759
+type(
+  string list -> unit
+)
+ident(
+  ext_ref Pervasives.ignore
+)
+"cli_utils.ml" 255 6751 6761 "cli_utils.ml" 255 6751 6775
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 255 6751 6781 "cli_utils.ml" 255 6751 6783
+type(
+  unit
+)
+"cli_utils.ml" 255 6751 6785 "cli_utils.ml" 255 6751 6788
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 254 6721 6740 "cli_utils.ml" 254 6721 6743
+)
+"cli_utils.ml" 255 6751 6789 "cli_utils.ml" 255 6751 6803
+type(
+  string
+)
+"cli_utils.ml" 255 6751 6806 "cli_utils.ml" 255 6751 6813
+type(
+  string
+)
+"cli_utils.ml" 255 6751 6814 "cli_utils.ml" 255 6751 6818
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 254 6721 6744 "cli_utils.ml" 254 6721 6748
+)
+"cli_utils.ml" 255 6751 6805 "cli_utils.ml" 255 6751 6819
+type(
+  string * string
+)
+"cli_utils.ml" 255 6751 6804 "cli_utils.ml" 255 6751 6820
+type(
+  (string * string) list
+)
+"cli_utils.ml" 255 6751 6785 "cli_utils.ml" 255 6751 6820
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 255 6751 6776 "cli_utils.ml" 255 6751 6821
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 255 6751 6760 "cli_utils.ml" 255 6751 6822
+type(
+  string list
+)
+"cli_utils.ml" 255 6751 6753 "cli_utils.ml" 255 6751 6822
+type(
+  unit
+)
+"cli_utils.ml" 256 6824 6826 "cli_utils.ml" 256 6824 6830
+type(
+  (unit -> bool) -> unit
+)
+ident(
+  int_ref poll "cli_utils.ml" 168 4166 4170 "cli_utils.ml" 168 4166 4174
+)
+"cli_utils.ml" 256 6824 6836 "cli_utils.ml" 256 6824 6838
+type(
+  unit
+)
+"cli_utils.ml" 256 6824 6840 "cli_utils.ml" 256 6824 6843
+type(
+  bool -> bool
+)
+ident(
+  ext_ref Pervasives.not
+)
+"cli_utils.ml" 256 6824 6845 "cli_utils.ml" 256 6824 6853
+type(
+  string -> string list -> bool
+)
+ident(
+  ext_ref List.mem
+)
+"cli_utils.ml" 256 6824 6854 "cli_utils.ml" 256 6824 6858
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 254 6721 6744 "cli_utils.ml" 254 6721 6748
+)
+"cli_utils.ml" 256 6824 6860 "cli_utils.ml" 256 6824 6872
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string list
+)
+ident(
+  int_ref get_vm_uuids "cli_utils.ml" 212 5212 5216 "cli_utils.ml" 212 5212 5228
+)
+"cli_utils.ml" 256 6824 6873 "cli_utils.ml" 256 6824 6876
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 254 6721 6740 "cli_utils.ml" 254 6721 6743
+)
+"cli_utils.ml" 256 6824 6859 "cli_utils.ml" 256 6824 6877
+type(
+  string list
+)
+"cli_utils.ml" 256 6824 6844 "cli_utils.ml" 256 6824 6878
+type(
+  bool
+)
+"cli_utils.ml" 256 6824 6840 "cli_utils.ml" 256 6824 6878
+type(
+  bool
+)
+"cli_utils.ml" 256 6824 6831 "cli_utils.ml" 256 6824 6879
+type(
+  unit -> bool
+)
+"cli_utils.ml" 256 6824 6826 "cli_utils.ml" 256 6824 6879
+type(
+  unit
+)
+"cli_utils.ml" 255 6751 6753 "cli_utils.ml" 256 6824 6879
+type(
+  unit
+)
+"cli_utils.ml" 259 6950 6954 "cli_utils.ml" 259 6950 6971
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  unit
+)
+ident(
+  def uninstall_all_vms "cli_utils.ml" 265 7173 7173 --
+)
+"cli_utils.ml" 259 6950 6972 "cli_utils.ml" 259 6950 6975
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 260 6978 6980 "cli_utils.ml" 262 7058 7098
+)
+"cli_utils.ml" 260 6978 6984 "cli_utils.ml" 260 6978 6989
+type(
+  string list
+)
+"cli_utils.ml" 260 6978 6992 "cli_utils.ml" 260 6978 7004
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string list
+)
+ident(
+  int_ref get_vm_uuids "cli_utils.ml" 212 5212 5216 "cli_utils.ml" 212 5212 5228
+)
+"cli_utils.ml" 260 6978 7005 "cli_utils.ml" 260 6978 7008
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 259 6950 6972 "cli_utils.ml" 259 6950 6975
+)
+"cli_utils.ml" 260 6978 6992 "cli_utils.ml" 260 6978 7008
+type(
+  string list
+)
+"cli_utils.ml" 261 7012 7016 "cli_utils.ml" 261 7012 7025
+type(
+  (string -> unit) -> string list -> unit
+)
+ident(
+  ext_ref List.iter
+)
+"cli_utils.ml" 261 7012 7027 "cli_utils.ml" 261 7012 7040
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  bool -> string -> unit
+)
+ident(
+  int_ref sync_shutdown "cli_utils.ml" 247 6452 6456 "cli_utils.ml" 247 6452 6469
+)
+"cli_utils.ml" 261 7012 7041 "cli_utils.ml" 261 7012 7044
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 259 6950 6972 "cli_utils.ml" 259 6950 6975
+)
+"cli_utils.ml" 261 7012 7045 "cli_utils.ml" 261 7012 7049
+type(
+  bool
+)
+"cli_utils.ml" 261 7012 7026 "cli_utils.ml" 261 7012 7050
+type(
+  string -> unit
+)
+"cli_utils.ml" 261 7012 7051 "cli_utils.ml" 261 7012 7056
+type(
+  string list
+)
+ident(
+  int_ref uuids "cli_utils.ml" 260 6978 6984 "cli_utils.ml" 260 6978 6989
+)
+"cli_utils.ml" 261 7012 7016 "cli_utils.ml" 261 7012 7056
+type(
+  unit
+)
+"cli_utils.ml" 262 7058 7062 "cli_utils.ml" 262 7058 7071
+type(
+  (string -> unit) -> string list -> unit
+)
+ident(
+  ext_ref List.iter
+)
+"cli_utils.ml" 262 7058 7073 "cli_utils.ml" 262 7058 7087
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> unit
+)
+ident(
+  int_ref sync_uninstall "cli_utils.ml" 254 6721 6725 "cli_utils.ml" 254 6721 6739
+)
+"cli_utils.ml" 262 7058 7088 "cli_utils.ml" 262 7058 7091
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 259 6950 6972 "cli_utils.ml" 259 6950 6975
+)
+"cli_utils.ml" 262 7058 7072 "cli_utils.ml" 262 7058 7092
+type(
+  string -> unit
+)
+"cli_utils.ml" 262 7058 7093 "cli_utils.ml" 262 7058 7098
+type(
+  string list
+)
+ident(
+  int_ref uuids "cli_utils.ml" 260 6978 6984 "cli_utils.ml" 260 6978 6989
+)
+"cli_utils.ml" 262 7058 7062 "cli_utils.ml" 262 7058 7098
+type(
+  unit
+)
+"cli_utils.ml" 261 7012 7016 "cli_utils.ml" 262 7058 7098
+type(
+  unit
+)
+"cli_utils.ml" 260 6978 6980 "cli_utils.ml" 262 7058 7098
+type(
+  unit
+)
+"cli_utils.ml" 265 7173 7177 "cli_utils.ml" 265 7173 7190
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string * string -> string
+)
+ident(
+  def install_guest "cli_utils.ml" 277 7576 7576 --
+)
+"cli_utils.ml" 265 7173 7191 "cli_utils.ml" 265 7173 7194
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 265 7173 7195 "cli_utils.ml" 274 7507 7519
+)
+"cli_utils.ml" 265 7173 7196 "cli_utils.ml" 265 7173 7204
+type(
+  string
+)
+ident(
+  def template "cli_utils.ml" 266 7214 7216 "cli_utils.ml" 274 7507 7519
+)
+"cli_utils.ml" 265 7173 7206 "cli_utils.ml" 265 7173 7210
+type(
+  string
+)
+ident(
+  def name "cli_utils.ml" 266 7214 7216 "cli_utils.ml" 274 7507 7519
+)
+"cli_utils.ml" 265 7173 7195 "cli_utils.ml" 265 7173 7211
+type(
+  string * string
+)
+"cli_utils.ml" 266 7214 7220 "cli_utils.ml" 266 7214 7226
+type(
+  (string * string) list
+)
+"cli_utils.ml" 266 7214 7231 "cli_utils.ml" 266 7214 7246
+type(
+  string
+)
+"cli_utils.ml" 266 7214 7247 "cli_utils.ml" 266 7214 7255
+type(
+  string
+)
+ident(
+  int_ref template "cli_utils.ml" 265 7173 7196 "cli_utils.ml" 265 7173 7204
+)
+"cli_utils.ml" 266 7214 7230 "cli_utils.ml" 266 7214 7256
+type(
+  string * string
+)
+"cli_utils.ml" 267 7258 7261 "cli_utils.ml" 267 7258 7267
+type(
+  string
+)
+"cli_utils.ml" 267 7258 7269 "cli_utils.ml" 267 7258 7273
+type(
+  string
+)
+ident(
+  int_ref name "cli_utils.ml" 265 7173 7206 "cli_utils.ml" 265 7173 7210
+)
+"cli_utils.ml" 267 7258 7260 "cli_utils.ml" 267 7258 7274
+type(
+  string * string
+)
+"cli_utils.ml" 268 7276 7279 "cli_utils.ml" 268 7276 7293
+type(
+  string
+)
+"cli_utils.ml" 268 7276 7295 "cli_utils.ml" 268 7276 7301
+type(
+  string
+)
+"cli_utils.ml" 268 7276 7278 "cli_utils.ml" 268 7276 7302
+type(
+  string * string
+)
+"cli_utils.ml" 269 7304 7307 "cli_utils.ml" 269 7304 7314
+type(
+  string
+)
+"cli_utils.ml" 269 7304 7316 "cli_utils.ml" 269 7304 7319
+type(
+  string
+)
+"cli_utils.ml" 269 7304 7306 "cli_utils.ml" 269 7304 7320
+type(
+  string * string
+)
+"cli_utils.ml" 270 7322 7325 "cli_utils.ml" 270 7322 7337
+type(
+  string
+)
+"cli_utils.ml" 270 7322 7339 "cli_utils.ml" 270 7322 7344
+type(
+  string
+)
+"cli_utils.ml" 270 7322 7324 "cli_utils.ml" 270 7322 7345
+type(
+  string * string
+)
+"cli_utils.ml" 266 7214 7229 "cli_utils.ml" 270 7322 7346
+type(
+  (string * string) list
+)
+"cli_utils.ml" 271 7350 7356 "cli_utils.ml" 271 7350 7361
+type(
+  string list
+)
+"cli_utils.ml" 271 7350 7364 "cli_utils.ml" 271 7350 7378
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 271 7350 7384 "cli_utils.ml" 271 7350 7386
+type(
+  unit
+)
+"cli_utils.ml" 271 7350 7388 "cli_utils.ml" 271 7350 7391
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 265 7173 7191 "cli_utils.ml" 265 7173 7194
+)
+"cli_utils.ml" 271 7350 7392 "cli_utils.ml" 271 7350 7404
+type(
+  string
+)
+"cli_utils.ml" 271 7350 7405 "cli_utils.ml" 271 7350 7411
+type(
+  (string * string) list
+)
+ident(
+  int_ref params "cli_utils.ml" 266 7214 7220 "cli_utils.ml" 266 7214 7226
+)
+"cli_utils.ml" 271 7350 7388 "cli_utils.ml" 271 7350 7411
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 271 7350 7379 "cli_utils.ml" 271 7350 7412
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 271 7350 7364 "cli_utils.ml" 271 7350 7412
+type(
+  string list
+)
+"cli_utils.ml" 272 7416 7422 "cli_utils.ml" 272 7416 7430
+type(
+  string
+)
+"cli_utils.ml" 272 7416 7433 "cli_utils.ml" 272 7416 7453
+type(
+  string -> string list -> string
+)
+ident(
+  int_ref read_end_from_output "cli_utils.ml" 193 4663 4667 "cli_utils.ml" 193 4663 4687
+)
+"cli_utils.ml" 272 7416 7454 "cli_utils.ml" 272 7416 7462
+type(
+  string
+)
+"cli_utils.ml" 272 7416 7463 "cli_utils.ml" 272 7416 7468
+type(
+  string list
+)
+ident(
+  int_ref lines "cli_utils.ml" 271 7350 7356 "cli_utils.ml" 271 7350 7361
+)
+"cli_utils.ml" 272 7416 7433 "cli_utils.ml" 272 7416 7468
+type(
+  string
+)
+"cli_utils.ml" 273 7472 7476 "cli_utils.ml" 273 7472 7485
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> unit
+)
+ident(
+  int_ref waitstate "cli_utils.ml" 207 5039 5043 "cli_utils.ml" 207 5039 5052
+)
+"cli_utils.ml" 273 7472 7486 "cli_utils.ml" 273 7472 7489
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 265 7173 7191 "cli_utils.ml" 265 7173 7194
+)
+"cli_utils.ml" 273 7472 7490 "cli_utils.ml" 273 7472 7498
+type(
+  string
+)
+ident(
+  int_ref new_uuid "cli_utils.ml" 272 7416 7422 "cli_utils.ml" 272 7416 7430
+)
+"cli_utils.ml" 273 7472 7499 "cli_utils.ml" 273 7472 7505
+type(
+  string
+)
+"cli_utils.ml" 273 7472 7476 "cli_utils.ml" 273 7472 7505
+type(
+  unit
+)
+"cli_utils.ml" 274 7507 7511 "cli_utils.ml" 274 7507 7519
+type(
+  string
+)
+ident(
+  int_ref new_uuid "cli_utils.ml" 272 7416 7422 "cli_utils.ml" 272 7416 7430
+)
+"cli_utils.ml" 273 7472 7476 "cli_utils.ml" 274 7507 7519
+type(
+  string
+)
+"cli_utils.ml" 272 7416 7418 "cli_utils.ml" 274 7507 7519
+type(
+  string
+)
+"cli_utils.ml" 271 7350 7352 "cli_utils.ml" 274 7507 7519
+type(
+  string
+)
+"cli_utils.ml" 266 7214 7216 "cli_utils.ml" 274 7507 7519
+type(
+  string
+)
+"cli_utils.ml" 277 7576 7580 "cli_utils.ml" 277 7576 7593
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string * string -> unit
+)
+ident(
+  def sync_add_disk "cli_utils.ml" 287 7931 7931 --
+)
+"cli_utils.ml" 277 7576 7594 "cli_utils.ml" 277 7576 7597
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 277 7576 7598 "cli_utils.ml" 284 7836 7869
+)
+"cli_utils.ml" 277 7576 7598 "cli_utils.ml" 277 7576 7602
+type(
+  string
+)
+ident(
+  def vmid "cli_utils.ml" 277 7576 7603 "cli_utils.ml" 284 7836 7869
+)
+"cli_utils.ml" 277 7576 7604 "cli_utils.ml" 277 7576 7612
+type(
+  string
+)
+ident(
+  def diskname "cli_utils.ml" 278 7625 7627 "cli_utils.ml" 284 7836 7869
+)
+"cli_utils.ml" 277 7576 7613 "cli_utils.ml" 277 7576 7621
+type(
+  string
+)
+ident(
+  def disksize "cli_utils.ml" 278 7625 7627 "cli_utils.ml" 284 7836 7869
+)
+"cli_utils.ml" 277 7576 7603 "cli_utils.ml" 277 7576 7622
+type(
+  string * string
+)
+"cli_utils.ml" 278 7625 7631 "cli_utils.ml" 278 7625 7637
+type(
+  (string * string) list
+)
+"cli_utils.ml" 278 7625 7642 "cli_utils.ml" 278 7625 7649
+type(
+  string
+)
+"cli_utils.ml" 278 7625 7650 "cli_utils.ml" 278 7625 7654
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 277 7576 7598 "cli_utils.ml" 277 7576 7602
+)
+"cli_utils.ml" 278 7625 7641 "cli_utils.ml" 278 7625 7655
+type(
+  string * string
+)
+"cli_utils.ml" 279 7657 7660 "cli_utils.ml" 279 7657 7671
+type(
+  string
+)
+"cli_utils.ml" 279 7657 7672 "cli_utils.ml" 279 7657 7680
+type(
+  string
+)
+ident(
+  int_ref diskname "cli_utils.ml" 277 7576 7604 "cli_utils.ml" 277 7576 7612
+)
+"cli_utils.ml" 279 7657 7659 "cli_utils.ml" 279 7657 7681
+type(
+  string * string
+)
+"cli_utils.ml" 280 7683 7686 "cli_utils.ml" 280 7683 7697
+type(
+  string
+)
+"cli_utils.ml" 280 7683 7698 "cli_utils.ml" 280 7683 7706
+type(
+  string
+)
+ident(
+  int_ref disksize "cli_utils.ml" 277 7576 7613 "cli_utils.ml" 277 7576 7621
+)
+"cli_utils.ml" 280 7683 7685 "cli_utils.ml" 280 7683 7707
+type(
+  string * string
+)
+"cli_utils.ml" 278 7625 7640 "cli_utils.ml" 280 7683 7708
+type(
+  (string * string) list
+)
+"cli_utils.ml" 281 7712 7716 "cli_utils.ml" 281 7712 7722
+type(
+  string list -> unit
+)
+ident(
+  ext_ref Pervasives.ignore
+)
+"cli_utils.ml" 281 7712 7724 "cli_utils.ml" 281 7712 7738
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 281 7712 7744 "cli_utils.ml" 281 7712 7746
+type(
+  unit
+)
+"cli_utils.ml" 281 7712 7748 "cli_utils.ml" 281 7712 7751
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 277 7576 7594 "cli_utils.ml" 277 7576 7597
+)
+"cli_utils.ml" 281 7712 7752 "cli_utils.ml" 281 7712 7765
+type(
+  string
+)
+"cli_utils.ml" 281 7712 7766 "cli_utils.ml" 281 7712 7772
+type(
+  (string * string) list
+)
+ident(
+  int_ref params "cli_utils.ml" 278 7625 7631 "cli_utils.ml" 278 7625 7637
+)
+"cli_utils.ml" 281 7712 7748 "cli_utils.ml" 281 7712 7772
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 281 7712 7739 "cli_utils.ml" 281 7712 7773
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 281 7712 7723 "cli_utils.ml" 281 7712 7774
+type(
+  string list
+)
+"cli_utils.ml" 281 7712 7716 "cli_utils.ml" 281 7712 7774
+type(
+  unit
+)
+"cli_utils.ml" 282 7776 7780 "cli_utils.ml" 282 7776 7784
+type(
+  (unit -> bool) -> unit
+)
+ident(
+  int_ref poll "cli_utils.ml" 168 4166 4170 "cli_utils.ml" 168 4166 4174
+)
+"cli_utils.ml" 282 7776 7790 "cli_utils.ml" 282 7776 7792
+type(
+  unit
+)
+"cli_utils.ml" 283 7795 7804 "cli_utils.ml" 283 7795 7811
+type(
+  string list
+)
+"cli_utils.ml" 283 7795 7814 "cli_utils.ml" 283 7795 7823
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string list
+)
+ident(
+  int_ref get_disks "cli_utils.ml" 222 5527 5531 "cli_utils.ml" 222 5527 5540
+)
+"cli_utils.ml" 283 7795 7824 "cli_utils.ml" 283 7795 7827
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 277 7576 7594 "cli_utils.ml" 277 7576 7597
+)
+"cli_utils.ml" 283 7795 7828 "cli_utils.ml" 283 7795 7832
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 277 7576 7598 "cli_utils.ml" 277 7576 7602
+)
+"cli_utils.ml" 283 7795 7814 "cli_utils.ml" 283 7795 7832
+type(
+  string list
+)
+"cli_utils.ml" 284 7836 7843 "cli_utils.ml" 284 7836 7851
+type(
+  string -> string list -> bool
+)
+ident(
+  ext_ref List.mem
+)
+"cli_utils.ml" 284 7836 7852 "cli_utils.ml" 284 7836 7860
+type(
+  string
+)
+ident(
+  int_ref diskname "cli_utils.ml" 277 7576 7604 "cli_utils.ml" 277 7576 7612
+)
+"cli_utils.ml" 284 7836 7861 "cli_utils.ml" 284 7836 7868
+type(
+  string list
+)
+ident(
+  int_ref vmdisks "cli_utils.ml" 283 7795 7804 "cli_utils.ml" 283 7795 7811
+)
+"cli_utils.ml" 284 7836 7843 "cli_utils.ml" 284 7836 7868
+type(
+  bool
+)
+"cli_utils.ml" 283 7795 7800 "cli_utils.ml" 284 7836 7868
+type(
+  bool
+)
+"cli_utils.ml" 282 7776 7785 "cli_utils.ml" 284 7836 7869
+type(
+  unit -> bool
+)
+"cli_utils.ml" 282 7776 7780 "cli_utils.ml" 284 7836 7869
+type(
+  unit
+)
+"cli_utils.ml" 281 7712 7716 "cli_utils.ml" 284 7836 7869
+type(
+  unit
+)
+"cli_utils.ml" 278 7625 7627 "cli_utils.ml" 284 7836 7869
+type(
+  unit
+)
+"cli_utils.ml" 287 7931 7935 "cli_utils.ml" 287 7931 7951
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> unit
+)
+ident(
+  def sync_remove_disk "cli_utils.ml" 296 8255 8255 --
+)
+"cli_utils.ml" 287 7931 7952 "cli_utils.ml" 287 7931 7955
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 287 7931 7956 "cli_utils.ml" 293 8160 8199
+)
+"cli_utils.ml" 287 7931 7956 "cli_utils.ml" 287 7931 7960
+type(
+  string
+)
+ident(
+  def vmid "cli_utils.ml" 287 7931 7961 "cli_utils.ml" 293 8160 8199
+)
+"cli_utils.ml" 287 7931 7961 "cli_utils.ml" 287 7931 7969
+type(
+  string
+)
+ident(
+  def diskname "cli_utils.ml" 288 7972 7974 "cli_utils.ml" 293 8160 8199
+)
+"cli_utils.ml" 288 7972 7978 "cli_utils.ml" 288 7972 7984
+type(
+  (string * string) list
+)
+"cli_utils.ml" 288 7972 7989 "cli_utils.ml" 288 7972 7996
+type(
+  string
+)
+"cli_utils.ml" 288 7972 7997 "cli_utils.ml" 288 7972 8001
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 287 7931 7956 "cli_utils.ml" 287 7931 7960
+)
+"cli_utils.ml" 288 7972 7988 "cli_utils.ml" 288 7972 8002
+type(
+  string * string
+)
+"cli_utils.ml" 289 8004 8007 "cli_utils.ml" 289 8004 8018
+type(
+  string
+)
+"cli_utils.ml" 289 8004 8019 "cli_utils.ml" 289 8004 8027
+type(
+  string
+)
+ident(
+  int_ref diskname "cli_utils.ml" 287 7931 7961 "cli_utils.ml" 287 7931 7969
+)
+"cli_utils.ml" 289 8004 8006 "cli_utils.ml" 289 8004 8028
+type(
+  string * string
+)
+"cli_utils.ml" 288 7972 7987 "cli_utils.ml" 289 8004 8029
+type(
+  (string * string) list
+)
+"cli_utils.ml" 290 8033 8037 "cli_utils.ml" 290 8033 8043
+type(
+  string list -> unit
+)
+ident(
+  ext_ref Pervasives.ignore
+)
+"cli_utils.ml" 290 8033 8045 "cli_utils.ml" 290 8033 8059
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 290 8033 8065 "cli_utils.ml" 290 8033 8067
+type(
+  unit
+)
+"cli_utils.ml" 290 8033 8069 "cli_utils.ml" 290 8033 8072
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 287 7931 7952 "cli_utils.ml" 287 7931 7955
+)
+"cli_utils.ml" 290 8033 8073 "cli_utils.ml" 290 8033 8089
+type(
+  string
+)
+"cli_utils.ml" 290 8033 8090 "cli_utils.ml" 290 8033 8096
+type(
+  (string * string) list
+)
+ident(
+  int_ref params "cli_utils.ml" 288 7972 7978 "cli_utils.ml" 288 7972 7984
+)
+"cli_utils.ml" 290 8033 8069 "cli_utils.ml" 290 8033 8096
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 290 8033 8060 "cli_utils.ml" 290 8033 8097
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 290 8033 8044 "cli_utils.ml" 290 8033 8098
+type(
+  string list
+)
+"cli_utils.ml" 290 8033 8037 "cli_utils.ml" 290 8033 8098
+type(
+  unit
+)
+"cli_utils.ml" 291 8100 8104 "cli_utils.ml" 291 8100 8108
+type(
+  (unit -> bool) -> unit
+)
+ident(
+  int_ref poll "cli_utils.ml" 168 4166 4170 "cli_utils.ml" 168 4166 4174
+)
+"cli_utils.ml" 291 8100 8114 "cli_utils.ml" 291 8100 8116
+type(
+  unit
+)
+"cli_utils.ml" 292 8119 8128 "cli_utils.ml" 292 8119 8135
+type(
+  string list
+)
+"cli_utils.ml" 292 8119 8138 "cli_utils.ml" 292 8119 8147
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string list
+)
+ident(
+  int_ref get_disks "cli_utils.ml" 222 5527 5531 "cli_utils.ml" 222 5527 5540
+)
+"cli_utils.ml" 292 8119 8148 "cli_utils.ml" 292 8119 8151
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 287 7931 7952 "cli_utils.ml" 287 7931 7955
+)
+"cli_utils.ml" 292 8119 8152 "cli_utils.ml" 292 8119 8156
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 287 7931 7956 "cli_utils.ml" 287 7931 7960
+)
+"cli_utils.ml" 292 8119 8138 "cli_utils.ml" 292 8119 8156
+type(
+  string list
+)
+"cli_utils.ml" 293 8160 8167 "cli_utils.ml" 293 8160 8170
+type(
+  bool -> bool
+)
+ident(
+  ext_ref Pervasives.not
+)
+"cli_utils.ml" 293 8160 8172 "cli_utils.ml" 293 8160 8180
+type(
+  string -> string list -> bool
+)
+ident(
+  ext_ref List.mem
+)
+"cli_utils.ml" 293 8160 8181 "cli_utils.ml" 293 8160 8189
+type(
+  string
+)
+ident(
+  int_ref diskname "cli_utils.ml" 287 7931 7961 "cli_utils.ml" 287 7931 7969
+)
+"cli_utils.ml" 293 8160 8190 "cli_utils.ml" 293 8160 8197
+type(
+  string list
+)
+ident(
+  int_ref vmdisks "cli_utils.ml" 292 8119 8128 "cli_utils.ml" 292 8119 8135
+)
+"cli_utils.ml" 293 8160 8171 "cli_utils.ml" 293 8160 8198
+type(
+  bool
+)
+"cli_utils.ml" 293 8160 8167 "cli_utils.ml" 293 8160 8198
+type(
+  bool
+)
+"cli_utils.ml" 292 8119 8124 "cli_utils.ml" 293 8160 8198
+type(
+  bool
+)
+"cli_utils.ml" 291 8100 8109 "cli_utils.ml" 293 8160 8199
+type(
+  unit -> bool
+)
+"cli_utils.ml" 291 8100 8104 "cli_utils.ml" 293 8160 8199
+type(
+  unit
+)
+"cli_utils.ml" 290 8033 8037 "cli_utils.ml" 293 8160 8199
+type(
+  unit
+)
+"cli_utils.ml" 288 7972 7974 "cli_utils.ml" 293 8160 8199
+type(
+  unit
+)
+"cli_utils.ml" 296 8255 8259 "cli_utils.ml" 296 8255 8271
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string * string * string -> unit
+)
+ident(
+  def sync_add_nic "cli_utils.ml" 307 8620 8620 --
+)
+"cli_utils.ml" 296 8255 8272 "cli_utils.ml" 296 8255 8275
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 296 8255 8276 "cli_utils.ml" 304 8525 8556
+)
+"cli_utils.ml" 296 8255 8276 "cli_utils.ml" 296 8255 8280
+type(
+  string
+)
+ident(
+  def vmid "cli_utils.ml" 296 8255 8281 "cli_utils.ml" 304 8525 8556
+)
+"cli_utils.ml" 296 8255 8282 "cli_utils.ml" 296 8255 8289
+type(
+  string
+)
+ident(
+  def nicname "cli_utils.ml" 297 8304 8306 "cli_utils.ml" 304 8525 8556
+)
+"cli_utils.ml" 296 8255 8290 "cli_utils.ml" 296 8255 8293
+type(
+  string
+)
+ident(
+  def mac "cli_utils.ml" 297 8304 8306 "cli_utils.ml" 304 8525 8556
+)
+"cli_utils.ml" 296 8255 8294 "cli_utils.ml" 296 8255 8300
+type(
+  string
+)
+ident(
+  def bridge "cli_utils.ml" 297 8304 8306 "cli_utils.ml" 304 8525 8556
+)
+"cli_utils.ml" 296 8255 8281 "cli_utils.ml" 296 8255 8301
+type(
+  string * string * string
+)
+"cli_utils.ml" 297 8304 8310 "cli_utils.ml" 297 8304 8316
+type(
+  (string * string) list
+)
+"cli_utils.ml" 297 8304 8321 "cli_utils.ml" 297 8304 8328
+type(
+  string
+)
+"cli_utils.ml" 297 8304 8329 "cli_utils.ml" 297 8304 8333
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 296 8255 8276 "cli_utils.ml" 296 8255 8280
+)
+"cli_utils.ml" 297 8304 8320 "cli_utils.ml" 297 8304 8334
+type(
+  string * string
+)
+"cli_utils.ml" 298 8336 8339 "cli_utils.ml" 298 8336 8349
+type(
+  string
+)
+"cli_utils.ml" 298 8336 8350 "cli_utils.ml" 298 8336 8357
+type(
+  string
+)
+ident(
+  int_ref nicname "cli_utils.ml" 296 8255 8282 "cli_utils.ml" 296 8255 8289
+)
+"cli_utils.ml" 298 8336 8338 "cli_utils.ml" 298 8336 8358
+type(
+  string * string
+)
+"cli_utils.ml" 299 8360 8363 "cli_utils.ml" 299 8360 8368
+type(
+  string
+)
+"cli_utils.ml" 299 8360 8369 "cli_utils.ml" 299 8360 8372
+type(
+  string
+)
+ident(
+  int_ref mac "cli_utils.ml" 296 8255 8290 "cli_utils.ml" 296 8255 8293
+)
+"cli_utils.ml" 299 8360 8362 "cli_utils.ml" 299 8360 8373
+type(
+  string * string
+)
+"cli_utils.ml" 300 8375 8378 "cli_utils.ml" 300 8375 8391
+type(
+  string
+)
+"cli_utils.ml" 300 8375 8392 "cli_utils.ml" 300 8375 8398
+type(
+  string
+)
+ident(
+  int_ref bridge "cli_utils.ml" 296 8255 8294 "cli_utils.ml" 296 8255 8300
+)
+"cli_utils.ml" 300 8375 8377 "cli_utils.ml" 300 8375 8399
+type(
+  string * string
+)
+"cli_utils.ml" 297 8304 8319 "cli_utils.ml" 300 8375 8400
+type(
+  (string * string) list
+)
+"cli_utils.ml" 301 8404 8408 "cli_utils.ml" 301 8404 8414
+type(
+  string list -> unit
+)
+ident(
+  ext_ref Pervasives.ignore
+)
+"cli_utils.ml" 301 8404 8416 "cli_utils.ml" 301 8404 8430
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 301 8404 8436 "cli_utils.ml" 301 8404 8438
+type(
+  unit
+)
+"cli_utils.ml" 301 8404 8440 "cli_utils.ml" 301 8404 8443
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 296 8255 8272 "cli_utils.ml" 296 8255 8275
+)
+"cli_utils.ml" 301 8404 8444 "cli_utils.ml" 301 8404 8456
+type(
+  string
+)
+"cli_utils.ml" 301 8404 8457 "cli_utils.ml" 301 8404 8463
+type(
+  (string * string) list
+)
+ident(
+  int_ref params "cli_utils.ml" 297 8304 8310 "cli_utils.ml" 297 8304 8316
+)
+"cli_utils.ml" 301 8404 8440 "cli_utils.ml" 301 8404 8463
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 301 8404 8431 "cli_utils.ml" 301 8404 8464
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 301 8404 8415 "cli_utils.ml" 301 8404 8465
+type(
+  string list
+)
+"cli_utils.ml" 301 8404 8408 "cli_utils.ml" 301 8404 8465
+type(
+  unit
+)
+"cli_utils.ml" 302 8467 8471 "cli_utils.ml" 302 8467 8475
+type(
+  (unit -> bool) -> unit
+)
+ident(
+  int_ref poll "cli_utils.ml" 168 4166 4170 "cli_utils.ml" 168 4166 4174
+)
+"cli_utils.ml" 302 8467 8481 "cli_utils.ml" 302 8467 8483
+type(
+  unit
+)
+"cli_utils.ml" 303 8486 8495 "cli_utils.ml" 303 8486 8501
+type(
+  string list
+)
+"cli_utils.ml" 303 8486 8504 "cli_utils.ml" 303 8486 8512
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string list
+)
+ident(
+  int_ref get_nics "cli_utils.ml" 227 5700 5704 "cli_utils.ml" 227 5700 5712
+)
+"cli_utils.ml" 303 8486 8513 "cli_utils.ml" 303 8486 8516
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 296 8255 8272 "cli_utils.ml" 296 8255 8275
+)
+"cli_utils.ml" 303 8486 8517 "cli_utils.ml" 303 8486 8521
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 296 8255 8276 "cli_utils.ml" 296 8255 8280
+)
+"cli_utils.ml" 303 8486 8504 "cli_utils.ml" 303 8486 8521
+type(
+  string list
+)
+"cli_utils.ml" 304 8525 8532 "cli_utils.ml" 304 8525 8540
+type(
+  string -> string list -> bool
+)
+ident(
+  ext_ref List.mem
+)
+"cli_utils.ml" 304 8525 8541 "cli_utils.ml" 304 8525 8548
+type(
+  string
+)
+ident(
+  int_ref nicname "cli_utils.ml" 296 8255 8282 "cli_utils.ml" 296 8255 8289
+)
+"cli_utils.ml" 304 8525 8549 "cli_utils.ml" 304 8525 8555
+type(
+  string list
+)
+ident(
+  int_ref vmnics "cli_utils.ml" 303 8486 8495 "cli_utils.ml" 303 8486 8501
+)
+"cli_utils.ml" 304 8525 8532 "cli_utils.ml" 304 8525 8555
+type(
+  bool
+)
+"cli_utils.ml" 303 8486 8491 "cli_utils.ml" 304 8525 8555
+type(
+  bool
+)
+"cli_utils.ml" 302 8467 8476 "cli_utils.ml" 304 8525 8556
+type(
+  unit -> bool
+)
+"cli_utils.ml" 302 8467 8471 "cli_utils.ml" 304 8525 8556
+type(
+  unit
+)
+"cli_utils.ml" 301 8404 8408 "cli_utils.ml" 304 8525 8556
+type(
+  unit
+)
+"cli_utils.ml" 297 8304 8306 "cli_utils.ml" 304 8525 8556
+type(
+  unit
+)
+"cli_utils.ml" 307 8620 8624 "cli_utils.ml" 307 8620 8639
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> unit
+)
+ident(
+  def sync_remove_nic "cli_utils.ml" 316 8942 8942 --
+)
+"cli_utils.ml" 307 8620 8640 "cli_utils.ml" 307 8620 8643
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 307 8620 8644 "cli_utils.ml" 313 8842 8879
+)
+"cli_utils.ml" 307 8620 8644 "cli_utils.ml" 307 8620 8648
+type(
+  string
+)
+ident(
+  def vmid "cli_utils.ml" 307 8620 8649 "cli_utils.ml" 313 8842 8879
+)
+"cli_utils.ml" 307 8620 8649 "cli_utils.ml" 307 8620 8656
+type(
+  string
+)
+ident(
+  def nicname "cli_utils.ml" 308 8659 8661 "cli_utils.ml" 313 8842 8879
+)
+"cli_utils.ml" 308 8659 8665 "cli_utils.ml" 308 8659 8671
+type(
+  (string * string) list
+)
+"cli_utils.ml" 308 8659 8676 "cli_utils.ml" 308 8659 8683
+type(
+  string
+)
+"cli_utils.ml" 308 8659 8684 "cli_utils.ml" 308 8659 8688
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 307 8620 8644 "cli_utils.ml" 307 8620 8648
+)
+"cli_utils.ml" 308 8659 8675 "cli_utils.ml" 308 8659 8689
+type(
+  string * string
+)
+"cli_utils.ml" 309 8691 8694 "cli_utils.ml" 309 8691 8704
+type(
+  string
+)
+"cli_utils.ml" 309 8691 8705 "cli_utils.ml" 309 8691 8712
+type(
+  string
+)
+ident(
+  int_ref nicname "cli_utils.ml" 307 8620 8649 "cli_utils.ml" 307 8620 8656
+)
+"cli_utils.ml" 309 8691 8693 "cli_utils.ml" 309 8691 8713
+type(
+  string * string
+)
+"cli_utils.ml" 308 8659 8674 "cli_utils.ml" 309 8691 8714
+type(
+  (string * string) list
+)
+"cli_utils.ml" 310 8718 8722 "cli_utils.ml" 310 8718 8728
+type(
+  string list -> unit
+)
+ident(
+  ext_ref Pervasives.ignore
+)
+"cli_utils.ml" 310 8718 8730 "cli_utils.ml" 310 8718 8744
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 310 8718 8750 "cli_utils.ml" 310 8718 8752
+type(
+  unit
+)
+"cli_utils.ml" 310 8718 8754 "cli_utils.ml" 310 8718 8757
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 307 8620 8640 "cli_utils.ml" 307 8620 8643
+)
+"cli_utils.ml" 310 8718 8758 "cli_utils.ml" 310 8718 8773
+type(
+  string
+)
+"cli_utils.ml" 310 8718 8774 "cli_utils.ml" 310 8718 8780
+type(
+  (string * string) list
+)
+ident(
+  int_ref params "cli_utils.ml" 308 8659 8665 "cli_utils.ml" 308 8659 8671
+)
+"cli_utils.ml" 310 8718 8754 "cli_utils.ml" 310 8718 8780
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 310 8718 8745 "cli_utils.ml" 310 8718 8781
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 310 8718 8729 "cli_utils.ml" 310 8718 8782
+type(
+  string list
+)
+"cli_utils.ml" 310 8718 8722 "cli_utils.ml" 310 8718 8782
+type(
+  unit
+)
+"cli_utils.ml" 311 8784 8788 "cli_utils.ml" 311 8784 8792
+type(
+  (unit -> bool) -> unit
+)
+ident(
+  int_ref poll "cli_utils.ml" 168 4166 4170 "cli_utils.ml" 168 4166 4174
+)
+"cli_utils.ml" 311 8784 8798 "cli_utils.ml" 311 8784 8800
+type(
+  unit
+)
+"cli_utils.ml" 312 8803 8812 "cli_utils.ml" 312 8803 8818
+type(
+  string list
+)
+"cli_utils.ml" 312 8803 8821 "cli_utils.ml" 312 8803 8829
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string list
+)
+ident(
+  int_ref get_nics "cli_utils.ml" 227 5700 5704 "cli_utils.ml" 227 5700 5712
+)
+"cli_utils.ml" 312 8803 8830 "cli_utils.ml" 312 8803 8833
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 307 8620 8640 "cli_utils.ml" 307 8620 8643
+)
+"cli_utils.ml" 312 8803 8834 "cli_utils.ml" 312 8803 8838
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 307 8620 8644 "cli_utils.ml" 307 8620 8648
+)
+"cli_utils.ml" 312 8803 8821 "cli_utils.ml" 312 8803 8838
+type(
+  string list
+)
+"cli_utils.ml" 313 8842 8849 "cli_utils.ml" 313 8842 8852
+type(
+  bool -> bool
+)
+ident(
+  ext_ref Pervasives.not
+)
+"cli_utils.ml" 313 8842 8854 "cli_utils.ml" 313 8842 8862
+type(
+  string -> string list -> bool
+)
+ident(
+  ext_ref List.mem
+)
+"cli_utils.ml" 313 8842 8863 "cli_utils.ml" 313 8842 8870
+type(
+  string
+)
+ident(
+  int_ref nicname "cli_utils.ml" 307 8620 8649 "cli_utils.ml" 307 8620 8656
+)
+"cli_utils.ml" 313 8842 8871 "cli_utils.ml" 313 8842 8877
+type(
+  string list
+)
+ident(
+  int_ref vmnics "cli_utils.ml" 312 8803 8812 "cli_utils.ml" 312 8803 8818
+)
+"cli_utils.ml" 313 8842 8853 "cli_utils.ml" 313 8842 8878
+type(
+  bool
+)
+"cli_utils.ml" 313 8842 8849 "cli_utils.ml" 313 8842 8878
+type(
+  bool
+)
+"cli_utils.ml" 312 8803 8808 "cli_utils.ml" 313 8842 8878
+type(
+  bool
+)
+"cli_utils.ml" 311 8784 8793 "cli_utils.ml" 313 8842 8879
+type(
+  unit -> bool
+)
+"cli_utils.ml" 311 8784 8788 "cli_utils.ml" 313 8842 8879
+type(
+  unit
+)
+"cli_utils.ml" 310 8718 8722 "cli_utils.ml" 313 8842 8879
+type(
+  unit
+)
+"cli_utils.ml" 308 8659 8661 "cli_utils.ml" 313 8842 8879
+type(
+  unit
+)
+"cli_utils.ml" 316 8942 8946 "cli_utils.ml" 316 8942 8962
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> unit
+)
+ident(
+  def sync_add_vbridge "cli_utils.ml" 325 9283 9283 --
+)
+"cli_utils.ml" 316 8942 8963 "cli_utils.ml" 316 8942 8966
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 316 8942 8967 "cli_utils.ml" 322 9182 9214
+)
+"cli_utils.ml" 316 8942 8967 "cli_utils.ml" 316 8942 8973
+type(
+  string
+)
+ident(
+  def bridge "cli_utils.ml" 317 8976 8978 "cli_utils.ml" 322 9182 9214
+)
+"cli_utils.ml" 317 8976 8982 "cli_utils.ml" 317 8976 8988
+type(
+  (string * string) list
+)
+"cli_utils.ml" 317 8976 8993 "cli_utils.ml" 317 8976 9007
+type(
+  string
+)
+"cli_utils.ml" 317 8976 9008 "cli_utils.ml" 317 8976 9014
+type(
+  string
+)
+ident(
+  int_ref bridge "cli_utils.ml" 316 8942 8967 "cli_utils.ml" 316 8942 8973
+)
+"cli_utils.ml" 317 8976 8992 "cli_utils.ml" 317 8976 9015
+type(
+  string * string
+)
+"cli_utils.ml" 318 9017 9027 "cli_utils.ml" 318 9017 9040
+type(
+  string
+)
+"cli_utils.ml" 318 9017 9041 "cli_utils.ml" 318 9017 9048
+type(
+  string
+)
+"cli_utils.ml" 318 9017 9026 "cli_utils.ml" 318 9017 9049
+type(
+  string * string
+)
+"cli_utils.ml" 317 8976 8991 "cli_utils.ml" 318 9017 9050
+type(
+  (string * string) list
+)
+"cli_utils.ml" 319 9054 9058 "cli_utils.ml" 319 9054 9064
+type(
+  string list -> unit
+)
+ident(
+  ext_ref Pervasives.ignore
+)
+"cli_utils.ml" 319 9054 9066 "cli_utils.ml" 319 9054 9080
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 319 9054 9086 "cli_utils.ml" 319 9054 9088
+type(
+  unit
+)
+"cli_utils.ml" 319 9054 9090 "cli_utils.ml" 319 9054 9093
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 316 8942 8963 "cli_utils.ml" 316 8942 8966
+)
+"cli_utils.ml" 319 9054 9094 "cli_utils.ml" 319 9054 9112
+type(
+  string
+)
+"cli_utils.ml" 319 9054 9113 "cli_utils.ml" 319 9054 9119
+type(
+  (string * string) list
+)
+ident(
+  int_ref params "cli_utils.ml" 317 8976 8982 "cli_utils.ml" 317 8976 8988
+)
+"cli_utils.ml" 319 9054 9090 "cli_utils.ml" 319 9054 9119
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 319 9054 9081 "cli_utils.ml" 319 9054 9120
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 319 9054 9065 "cli_utils.ml" 319 9054 9121
+type(
+  string list
+)
+"cli_utils.ml" 319 9054 9058 "cli_utils.ml" 319 9054 9121
+type(
+  unit
+)
+"cli_utils.ml" 320 9123 9127 "cli_utils.ml" 320 9123 9131
+type(
+  (unit -> bool) -> unit
+)
+ident(
+  int_ref poll "cli_utils.ml" 168 4166 4170 "cli_utils.ml" 168 4166 4174
+)
+"cli_utils.ml" 320 9123 9137 "cli_utils.ml" 320 9123 9139
+type(
+  unit
+)
+"cli_utils.ml" 321 9142 9151 "cli_utils.ml" 321 9142 9159
+type(
+  string list
+)
+"cli_utils.ml" 321 9142 9162 "cli_utils.ml" 321 9142 9174
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string list
+)
+ident(
+  int_ref get_vbridges "cli_utils.ml" 232 5866 5870 "cli_utils.ml" 232 5866 5882
+)
+"cli_utils.ml" 321 9142 9175 "cli_utils.ml" 321 9142 9178
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 316 8942 8963 "cli_utils.ml" 316 8942 8966
+)
+"cli_utils.ml" 321 9142 9162 "cli_utils.ml" 321 9142 9178
+type(
+  string list
+)
+"cli_utils.ml" 322 9182 9189 "cli_utils.ml" 322 9182 9197
+type(
+  string -> string list -> bool
+)
+ident(
+  ext_ref List.mem
+)
+"cli_utils.ml" 322 9182 9198 "cli_utils.ml" 322 9182 9204
+type(
+  string
+)
+ident(
+  int_ref bridge "cli_utils.ml" 316 8942 8967 "cli_utils.ml" 316 8942 8973
+)
+"cli_utils.ml" 322 9182 9205 "cli_utils.ml" 322 9182 9213
+type(
+  string list
+)
+ident(
+  int_ref vbridges "cli_utils.ml" 321 9142 9151 "cli_utils.ml" 321 9142 9159
+)
+"cli_utils.ml" 322 9182 9189 "cli_utils.ml" 322 9182 9213
+type(
+  bool
+)
+"cli_utils.ml" 321 9142 9147 "cli_utils.ml" 322 9182 9213
+type(
+  bool
+)
+"cli_utils.ml" 320 9123 9132 "cli_utils.ml" 322 9182 9214
+type(
+  unit -> bool
+)
+"cli_utils.ml" 320 9123 9127 "cli_utils.ml" 322 9182 9214
+type(
+  unit
+)
+"cli_utils.ml" 319 9054 9058 "cli_utils.ml" 322 9182 9214
+type(
+  unit
+)
+"cli_utils.ml" 317 8976 8978 "cli_utils.ml" 322 9182 9214
+type(
+  unit
+)
+"cli_utils.ml" 325 9283 9287 "cli_utils.ml" 325 9283 9306
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> unit
+)
+ident(
+  def sync_remove_vbridge "cli_utils.ml" 334 9577 9577 --
+)
+"cli_utils.ml" 325 9283 9307 "cli_utils.ml" 325 9283 9310
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 325 9283 9311 "cli_utils.ml" 330 9495 9533
+)
+"cli_utils.ml" 325 9283 9311 "cli_utils.ml" 325 9283 9317
+type(
+  string
+)
+ident(
+  def bridge "cli_utils.ml" 326 9320 9322 "cli_utils.ml" 330 9495 9533
+)
+"cli_utils.ml" 326 9320 9326 "cli_utils.ml" 326 9320 9332
+type(
+  (string * string) list
+)
+"cli_utils.ml" 326 9320 9337 "cli_utils.ml" 326 9320 9351
+type(
+  string
+)
+"cli_utils.ml" 326 9320 9352 "cli_utils.ml" 326 9320 9358
+type(
+  string
+)
+ident(
+  int_ref bridge "cli_utils.ml" 325 9283 9311 "cli_utils.ml" 325 9283 9317
+)
+"cli_utils.ml" 326 9320 9336 "cli_utils.ml" 326 9320 9359
+type(
+  string * string
+)
+"cli_utils.ml" 326 9320 9335 "cli_utils.ml" 326 9320 9360
+type(
+  (string * string) list
+)
+"cli_utils.ml" 327 9364 9368 "cli_utils.ml" 327 9364 9374
+type(
+  string list -> unit
+)
+ident(
+  ext_ref Pervasives.ignore
+)
+"cli_utils.ml" 327 9364 9376 "cli_utils.ml" 327 9364 9390
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 327 9364 9396 "cli_utils.ml" 327 9364 9398
+type(
+  unit
+)
+"cli_utils.ml" 327 9364 9400 "cli_utils.ml" 327 9364 9403
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 325 9283 9307 "cli_utils.ml" 325 9283 9310
+)
+"cli_utils.ml" 327 9364 9404 "cli_utils.ml" 327 9364 9425
+type(
+  string
+)
+"cli_utils.ml" 327 9364 9426 "cli_utils.ml" 327 9364 9432
+type(
+  (string * string) list
+)
+ident(
+  int_ref params "cli_utils.ml" 326 9320 9326 "cli_utils.ml" 326 9320 9332
+)
+"cli_utils.ml" 327 9364 9400 "cli_utils.ml" 327 9364 9432
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 327 9364 9391 "cli_utils.ml" 327 9364 9433
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 327 9364 9375 "cli_utils.ml" 327 9364 9434
+type(
+  string list
+)
+"cli_utils.ml" 327 9364 9368 "cli_utils.ml" 327 9364 9434
+type(
+  unit
+)
+"cli_utils.ml" 328 9436 9440 "cli_utils.ml" 328 9436 9444
+type(
+  (unit -> bool) -> unit
+)
+ident(
+  int_ref poll "cli_utils.ml" 168 4166 4170 "cli_utils.ml" 168 4166 4174
+)
+"cli_utils.ml" 328 9436 9450 "cli_utils.ml" 328 9436 9452
+type(
+  unit
+)
+"cli_utils.ml" 329 9455 9464 "cli_utils.ml" 329 9455 9472
+type(
+  string list
+)
+"cli_utils.ml" 329 9455 9475 "cli_utils.ml" 329 9455 9487
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string list
+)
+ident(
+  int_ref get_vbridges "cli_utils.ml" 232 5866 5870 "cli_utils.ml" 232 5866 5882
+)
+"cli_utils.ml" 329 9455 9488 "cli_utils.ml" 329 9455 9491
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 325 9283 9307 "cli_utils.ml" 325 9283 9310
+)
+"cli_utils.ml" 329 9455 9475 "cli_utils.ml" 329 9455 9491
+type(
+  string list
+)
+"cli_utils.ml" 330 9495 9502 "cli_utils.ml" 330 9495 9505
+type(
+  bool -> bool
+)
+ident(
+  ext_ref Pervasives.not
+)
+"cli_utils.ml" 330 9495 9507 "cli_utils.ml" 330 9495 9515
+type(
+  string -> string list -> bool
+)
+ident(
+  ext_ref List.mem
+)
+"cli_utils.ml" 330 9495 9516 "cli_utils.ml" 330 9495 9522
+type(
+  string
+)
+ident(
+  int_ref bridge "cli_utils.ml" 325 9283 9311 "cli_utils.ml" 325 9283 9317
+)
+"cli_utils.ml" 330 9495 9523 "cli_utils.ml" 330 9495 9531
+type(
+  string list
+)
+ident(
+  int_ref vbridges "cli_utils.ml" 329 9455 9464 "cli_utils.ml" 329 9455 9472
+)
+"cli_utils.ml" 330 9495 9506 "cli_utils.ml" 330 9495 9532
+type(
+  bool
+)
+"cli_utils.ml" 330 9495 9502 "cli_utils.ml" 330 9495 9532
+type(
+  bool
+)
+"cli_utils.ml" 329 9455 9460 "cli_utils.ml" 330 9495 9532
+type(
+  bool
+)
+"cli_utils.ml" 328 9436 9445 "cli_utils.ml" 330 9495 9533
+type(
+  unit -> bool
+)
+"cli_utils.ml" 328 9436 9440 "cli_utils.ml" 330 9495 9533
+type(
+  unit
+)
+"cli_utils.ml" 327 9364 9368 "cli_utils.ml" 330 9495 9533
+type(
+  unit
+)
+"cli_utils.ml" 326 9320 9322 "cli_utils.ml" 330 9495 9533
+type(
+  unit
+)
+"cli_utils.ml" 334 9577 9581 "cli_utils.ml" 334 9577 9600
+type(
+  (string * string list) list -> unit
+)
+ident(
+  def print_report_output "cli_utils.ml" 345 9870 9870 --
+)
+"cli_utils.ml" 334 9577 9601 "cli_utils.ml" 334 9577 9612
+type(
+  (string * string list) list
+)
+ident(
+  def report_spec "cli_utils.ml" 335 9615 9617 "cli_utils.ml" 342 9811 9826
+)
+"cli_utils.ml" 335 9615 9617 "cli_utils.ml" 335 9615 9626
+type(
+  (string * string list -> unit) -> (string * string list) list -> unit
+)
+ident(
+  ext_ref List.iter
+)
+"cli_utils.ml" 336 9627 9637 "cli_utils.ml" 336 9627 9640
+type(
+  string
+)
+ident(
+  def sec "cli_utils.ml" 337 9654 9661 "cli_utils.ml" 339 9731 9757
+)
+"cli_utils.ml" 336 9627 9642 "cli_utils.ml" 336 9627 9649
+type(
+  string list
+)
+ident(
+  def content "cli_utils.ml" 337 9654 9661 "cli_utils.ml" 339 9731 9757
+)
+"cli_utils.ml" 336 9627 9636 "cli_utils.ml" 336 9627 9650
+type(
+  string * string list
+)
+"cli_utils.ml" 337 9654 9661 "cli_utils.ml" 337 9654 9671
+type(
+  string -> unit
+)
+ident(
+  int_ref print_line "cli_utils.ml" 39 1043 1047 "cli_utils.ml" 39 1043 1057
+)
+"cli_utils.ml" 337 9654 9673 "cli_utils.ml" 337 9654 9684
+type(
+  int -> char -> string
+)
+ident(
+  ext_ref String.make
+)
+"cli_utils.ml" 337 9654 9685 "cli_utils.ml" 337 9654 9687
+type(
+  int
+)
+"cli_utils.ml" 337 9654 9688 "cli_utils.ml" 337 9654 9691
+type(
+  char
+)
+"cli_utils.ml" 337 9654 9672 "cli_utils.ml" 337 9654 9692
+type(
+  string
+)
+"cli_utils.ml" 337 9654 9661 "cli_utils.ml" 337 9654 9692
+type(
+  unit
+)
+"cli_utils.ml" 338 9694 9701 "cli_utils.ml" 338 9694 9711
+type(
+  string -> unit
+)
+ident(
+  int_ref print_line "cli_utils.ml" 39 1043 1047 "cli_utils.ml" 39 1043 1057
+)
+"cli_utils.ml" 338 9694 9713 "cli_utils.ml" 338 9694 9724
+type(
+  string
+)
+"cli_utils.ml" 338 9694 9724 "cli_utils.ml" 338 9694 9725
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 338 9694 9725 "cli_utils.ml" 338 9694 9728
+type(
+  string
+)
+ident(
+  int_ref sec "cli_utils.ml" 336 9627 9637 "cli_utils.ml" 336 9627 9640
+)
+"cli_utils.ml" 338 9694 9712 "cli_utils.ml" 338 9694 9729
+type(
+  string
+)
+"cli_utils.ml" 338 9694 9701 "cli_utils.ml" 338 9694 9729
+type(
+  unit
+)
+"cli_utils.ml" 339 9731 9738 "cli_utils.ml" 339 9731 9749
+type(
+  string list -> unit
+)
+ident(
+  int_ref print_lines "cli_utils.ml" 96 2460 2464 "cli_utils.ml" 96 2460 2475
+)
+"cli_utils.ml" 339 9731 9750 "cli_utils.ml" 339 9731 9757
+type(
+  string list
+)
+ident(
+  int_ref content "cli_utils.ml" 336 9627 9642 "cli_utils.ml" 336 9627 9649
+)
+"cli_utils.ml" 339 9731 9738 "cli_utils.ml" 339 9731 9757
+type(
+  unit
+)
+"cli_utils.ml" 338 9694 9701 "cli_utils.ml" 339 9731 9757
+type(
+  unit
+)
+"cli_utils.ml" 337 9654 9661 "cli_utils.ml" 339 9731 9757
+type(
+  unit
+)
+"cli_utils.ml" 336 9627 9631 "cli_utils.ml" 339 9731 9758
+type(
+  string * string list -> unit
+)
+"cli_utils.ml" 340 9759 9763 "cli_utils.ml" 340 9759 9774
+type(
+  (string * string list) list
+)
+ident(
+  int_ref report_spec "cli_utils.ml" 334 9577 9601 "cli_utils.ml" 334 9577 9612
+)
+"cli_utils.ml" 335 9615 9617 "cli_utils.ml" 340 9759 9774
+type(
+  unit
+)
+"cli_utils.ml" 341 9776 9778 "cli_utils.ml" 341 9776 9788
+type(
+  string -> unit
+)
+ident(
+  int_ref print_line "cli_utils.ml" 39 1043 1047 "cli_utils.ml" 39 1043 1057
+)
+"cli_utils.ml" 341 9776 9790 "cli_utils.ml" 341 9776 9801
+type(
+  int -> char -> string
+)
+ident(
+  ext_ref String.make
+)
+"cli_utils.ml" 341 9776 9802 "cli_utils.ml" 341 9776 9804
+type(
+  int
+)
+"cli_utils.ml" 341 9776 9805 "cli_utils.ml" 341 9776 9808
+type(
+  char
+)
+"cli_utils.ml" 341 9776 9789 "cli_utils.ml" 341 9776 9809
+type(
+  string
+)
+"cli_utils.ml" 341 9776 9778 "cli_utils.ml" 341 9776 9809
+type(
+  unit
+)
+"cli_utils.ml" 342 9811 9813 "cli_utils.ml" 342 9811 9823
+type(
+  string -> unit
+)
+ident(
+  int_ref print_line "cli_utils.ml" 39 1043 1047 "cli_utils.ml" 39 1043 1057
+)
+"cli_utils.ml" 342 9811 9824 "cli_utils.ml" 342 9811 9826
+type(
+  string
+)
+"cli_utils.ml" 342 9811 9813 "cli_utils.ml" 342 9811 9826
+type(
+  unit
+)
+"cli_utils.ml" 341 9776 9778 "cli_utils.ml" 342 9811 9826
+type(
+  unit
+)
+"cli_utils.ml" 335 9615 9617 "cli_utils.ml" 342 9811 9826
+type(
+  unit
+)
+"cli_utils.ml" 345 9870 9874 "cli_utils.ml" 345 9870 9889
+type(
+  (string -> (string * 'a) list -> string list * Unix.process_status) ->
+  'a -> unit
+)
+ident(
+  def print_vm_output "cli_utils.ml" 355 10290 10290 --
+)
+"cli_utils.ml" 345 9870 9890 "cli_utils.ml" 345 9870 9893
+type(
+  string -> (string * 'a) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 345 9870 9894 "cli_utils.ml" 352 10214 10244
+)
+"cli_utils.ml" 345 9870 9894 "cli_utils.ml" 345 9870 9898
+type(
+  'a
+)
+ident(
+  def vmid "cli_utils.ml" 346 9901 9903 "cli_utils.ml" 352 10214 10244
+)
+"cli_utils.ml" 346 9901 9907 "cli_utils.ml" 346 9901 9912
+type(
+  (string * 'a) list
+)
+"cli_utils.ml" 346 9901 9918 "cli_utils.ml" 346 9901 9925
+type(
+  string
+)
+"cli_utils.ml" 346 9901 9926 "cli_utils.ml" 346 9901 9930
+type(
+  'a
+)
+ident(
+  int_ref vmid "cli_utils.ml" 345 9870 9894 "cli_utils.ml" 345 9870 9898
+)
+"cli_utils.ml" 346 9901 9917 "cli_utils.ml" 346 9901 9931
+type(
+  string * 'a
+)
+"cli_utils.ml" 346 9901 9916 "cli_utils.ml" 346 9901 9932
+type(
+  (string * 'a) list
+)
+"cli_utils.ml" 347 9936 9942 "cli_utils.ml" 347 9936 9948
+type(
+  (string * string list) list
+)
+"cli_utils.ml" 348 9951 9957 "cli_utils.ml" 348 9951 9964
+type(
+  string
+)
+"cli_utils.ml" 348 9951 9965 "cli_utils.ml" 348 9951 9979
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 348 9951 9985 "cli_utils.ml" 348 9951 9987
+type(
+  unit
+)
+"cli_utils.ml" 348 9951 9989 "cli_utils.ml" 348 9951 9992
+type(
+  string -> (string * 'a) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 345 9870 9890 "cli_utils.ml" 345 9870 9893
+)
+"cli_utils.ml" 348 9951 9993 "cli_utils.ml" 348 9951 10007
+type(
+  string
+)
+"cli_utils.ml" 348 9951 10008 "cli_utils.ml" 348 9951 10013
+type(
+  (string * 'a) list
+)
+ident(
+  int_ref param "cli_utils.ml" 346 9901 9907 "cli_utils.ml" 346 9901 9912
+)
+"cli_utils.ml" 348 9951 9989 "cli_utils.ml" 348 9951 10013
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 348 9951 9980 "cli_utils.ml" 348 9951 10014
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 348 9951 9965 "cli_utils.ml" 348 9951 10014
+type(
+  string list
+)
+"cli_utils.ml" 348 9951 9956 "cli_utils.ml" 348 9951 10015
+type(
+  string * string list
+)
+"cli_utils.ml" 349 10017 10023 "cli_utils.ml" 349 10017 10029
+type(
+  string
+)
+"cli_utils.ml" 349 10017 10030 "cli_utils.ml" 349 10017 10044
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 349 10017 10050 "cli_utils.ml" 349 10017 10052
+type(
+  unit
+)
+"cli_utils.ml" 349 10017 10054 "cli_utils.ml" 349 10017 10057
+type(
+  string -> (string * 'a) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 345 9870 9890 "cli_utils.ml" 345 9870 9893
+)
+"cli_utils.ml" 349 10017 10058 "cli_utils.ml" 349 10017 10071
+type(
+  string
+)
+"cli_utils.ml" 349 10017 10072 "cli_utils.ml" 349 10017 10077
+type(
+  (string * 'a) list
+)
+ident(
+  int_ref param "cli_utils.ml" 346 9901 9907 "cli_utils.ml" 346 9901 9912
+)
+"cli_utils.ml" 349 10017 10054 "cli_utils.ml" 349 10017 10077
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 349 10017 10045 "cli_utils.ml" 349 10017 10078
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 349 10017 10030 "cli_utils.ml" 349 10017 10078
+type(
+  string list
+)
+"cli_utils.ml" 349 10017 10022 "cli_utils.ml" 349 10017 10079
+type(
+  string * string list
+)
+"cli_utils.ml" 350 10081 10087 "cli_utils.ml" 350 10081 10092
+type(
+  string
+)
+"cli_utils.ml" 350 10081 10093 "cli_utils.ml" 350 10081 10107
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 350 10081 10113 "cli_utils.ml" 350 10081 10115
+type(
+  unit
+)
+"cli_utils.ml" 350 10081 10117 "cli_utils.ml" 350 10081 10120
+type(
+  string -> (string * 'a) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 345 9870 9890 "cli_utils.ml" 345 9870 9893
+)
+"cli_utils.ml" 350 10081 10121 "cli_utils.ml" 350 10081 10133
+type(
+  string
+)
+"cli_utils.ml" 350 10081 10134 "cli_utils.ml" 350 10081 10139
+type(
+  (string * 'a) list
+)
+ident(
+  int_ref param "cli_utils.ml" 346 9901 9907 "cli_utils.ml" 346 9901 9912
+)
+"cli_utils.ml" 350 10081 10117 "cli_utils.ml" 350 10081 10139
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 350 10081 10108 "cli_utils.ml" 350 10081 10140
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 350 10081 10093 "cli_utils.ml" 350 10081 10140
+type(
+  string list
+)
+"cli_utils.ml" 350 10081 10086 "cli_utils.ml" 350 10081 10141
+type(
+  string * string list
+)
+"cli_utils.ml" 351 10143 10149 "cli_utils.ml" 351 10143 10157
+type(
+  string
+)
+"cli_utils.ml" 351 10143 10158 "cli_utils.ml" 351 10143 10172
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 351 10143 10178 "cli_utils.ml" 351 10143 10180
+type(
+  unit
+)
+"cli_utils.ml" 351 10143 10182 "cli_utils.ml" 351 10143 10185
+type(
+  string -> (string * 'a) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 345 9870 9890 "cli_utils.ml" 345 9870 9893
+)
+"cli_utils.ml" 351 10143 10186 "cli_utils.ml" 351 10143 10201
+type(
+  string
+)
+"cli_utils.ml" 351 10143 10202 "cli_utils.ml" 351 10143 10207
+type(
+  (string * 'a) list
+)
+ident(
+  int_ref param "cli_utils.ml" 346 9901 9907 "cli_utils.ml" 346 9901 9912
+)
+"cli_utils.ml" 351 10143 10182 "cli_utils.ml" 351 10143 10207
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 351 10143 10173 "cli_utils.ml" 351 10143 10208
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 351 10143 10158 "cli_utils.ml" 351 10143 10208
+type(
+  string list
+)
+"cli_utils.ml" 351 10143 10148 "cli_utils.ml" 351 10143 10209
+type(
+  string * string list
+)
+"cli_utils.ml" 348 9951 9955 "cli_utils.ml" 351 10143 10210
+type(
+  (string * string list) list
+)
+"cli_utils.ml" 352 10214 10218 "cli_utils.ml" 352 10214 10237
+type(
+  (string * string list) list -> unit
+)
+ident(
+  int_ref print_report_output "cli_utils.ml" 334 9577 9581 "cli_utils.ml" 334 9577 9600
+)
+"cli_utils.ml" 352 10214 10238 "cli_utils.ml" 352 10214 10244
+type(
+  (string * string list) list
+)
+ident(
+  int_ref output "cli_utils.ml" 347 9936 9942 "cli_utils.ml" 347 9936 9948
+)
+"cli_utils.ml" 352 10214 10218 "cli_utils.ml" 352 10214 10244
+type(
+  unit
+)
+"cli_utils.ml" 347 9936 9938 "cli_utils.ml" 352 10214 10244
+type(
+  unit
+)
+"cli_utils.ml" 346 9901 9903 "cli_utils.ml" 352 10214 10244
+type(
+  unit
+)
+"cli_utils.ml" 355 10290 10294 "cli_utils.ml" 355 10290 10311
+type(
+  (string -> 'a list -> string list * Unix.process_status) -> unit
+)
+ident(
+  def print_host_output "cli_utils.ml" 370 11099 11099 --
+)
+"cli_utils.ml" 355 10290 10312 "cli_utils.ml" 355 10290 10315
+type(
+  string -> 'a list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 356 10318 10320 "cli_utils.ml" 368 11067 11097
+)
+"cli_utils.ml" 356 10318 10324 "cli_utils.ml" 356 10318 10330
+type(
+  (string * string list) list
+)
+"cli_utils.ml" 357 10333 10339 "cli_utils.ml" 357 10333 10349
+type(
+  string
+)
+"cli_utils.ml" 357 10333 10350 "cli_utils.ml" 357 10333 10364
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 357 10333 10370 "cli_utils.ml" 357 10333 10372
+type(
+  unit
+)
+"cli_utils.ml" 357 10333 10374 "cli_utils.ml" 357 10333 10377
+type(
+  string -> 'a list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 355 10290 10312 "cli_utils.ml" 355 10290 10315
+)
+"cli_utils.ml" 357 10333 10378 "cli_utils.ml" 357 10333 10397
+type(
+  string
+)
+"cli_utils.ml" 357 10333 10398 "cli_utils.ml" 357 10333 10400
+type(
+  'a list
+)
+"cli_utils.ml" 357 10333 10374 "cli_utils.ml" 357 10333 10400
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 357 10333 10365 "cli_utils.ml" 357 10333 10401
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 357 10333 10350 "cli_utils.ml" 357 10333 10401
+type(
+  string list
+)
+"cli_utils.ml" 357 10333 10338 "cli_utils.ml" 357 10333 10402
+type(
+  string * string list
+)
+"cli_utils.ml" 358 10404 10410 "cli_utils.ml" 358 10404 10416
+type(
+  string
+)
+"cli_utils.ml" 358 10404 10417 "cli_utils.ml" 358 10404 10431
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 358 10404 10437 "cli_utils.ml" 358 10404 10439
+type(
+  unit
+)
+"cli_utils.ml" 358 10404 10441 "cli_utils.ml" 358 10404 10444
+type(
+  string -> 'a list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 355 10290 10312 "cli_utils.ml" 355 10290 10315
+)
+"cli_utils.ml" 358 10404 10445 "cli_utils.ml" 358 10404 10460
+type(
+  string
+)
+"cli_utils.ml" 358 10404 10461 "cli_utils.ml" 358 10404 10463
+type(
+  'a list
+)
+"cli_utils.ml" 358 10404 10441 "cli_utils.ml" 358 10404 10463
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 358 10404 10432 "cli_utils.ml" 358 10404 10464
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 358 10404 10417 "cli_utils.ml" 358 10404 10464
+type(
+  string list
+)
+"cli_utils.ml" 358 10404 10409 "cli_utils.ml" 358 10404 10465
+type(
+  string * string list
+)
+"cli_utils.ml" 359 10467 10473 "cli_utils.ml" 359 10467 10483
+type(
+  string
+)
+"cli_utils.ml" 359 10467 10484 "cli_utils.ml" 359 10467 10498
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 359 10467 10504 "cli_utils.ml" 359 10467 10506
+type(
+  unit
+)
+"cli_utils.ml" 359 10467 10508 "cli_utils.ml" 359 10467 10511
+type(
+  string -> 'a list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 355 10290 10312 "cli_utils.ml" 355 10290 10315
+)
+"cli_utils.ml" 359 10467 10512 "cli_utils.ml" 359 10467 10531
+type(
+  string
+)
+"cli_utils.ml" 359 10467 10532 "cli_utils.ml" 359 10467 10534
+type(
+  'a list
+)
+"cli_utils.ml" 359 10467 10508 "cli_utils.ml" 359 10467 10534
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 359 10467 10499 "cli_utils.ml" 359 10467 10535
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 359 10467 10484 "cli_utils.ml" 359 10467 10535
+type(
+  string list
+)
+"cli_utils.ml" 359 10467 10472 "cli_utils.ml" 359 10467 10536
+type(
+  string * string list
+)
+"cli_utils.ml" 360 10538 10544 "cli_utils.ml" 360 10538 10554
+type(
+  string
+)
+"cli_utils.ml" 360 10538 10555 "cli_utils.ml" 360 10538 10569
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 360 10538 10575 "cli_utils.ml" 360 10538 10577
+type(
+  unit
+)
+"cli_utils.ml" 360 10538 10579 "cli_utils.ml" 360 10538 10582
+type(
+  string -> 'a list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 355 10290 10312 "cli_utils.ml" 355 10290 10315
+)
+"cli_utils.ml" 360 10538 10583 "cli_utils.ml" 360 10538 10602
+type(
+  string
+)
+"cli_utils.ml" 360 10538 10603 "cli_utils.ml" 360 10538 10605
+type(
+  'a list
+)
+"cli_utils.ml" 360 10538 10579 "cli_utils.ml" 360 10538 10605
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 360 10538 10570 "cli_utils.ml" 360 10538 10606
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 360 10538 10555 "cli_utils.ml" 360 10538 10606
+type(
+  string list
+)
+"cli_utils.ml" 360 10538 10543 "cli_utils.ml" 360 10538 10607
+type(
+  string * string list
+)
+"cli_utils.ml" 361 10609 10615 "cli_utils.ml" 361 10609 10621
+type(
+  string
+)
+"cli_utils.ml" 361 10609 10622 "cli_utils.ml" 361 10609 10636
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 361 10609 10642 "cli_utils.ml" 361 10609 10644
+type(
+  unit
+)
+"cli_utils.ml" 361 10609 10646 "cli_utils.ml" 361 10609 10649
+type(
+  string -> 'a list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 355 10290 10312 "cli_utils.ml" 355 10290 10315
+)
+"cli_utils.ml" 361 10609 10650 "cli_utils.ml" 361 10609 10665
+type(
+  string
+)
+"cli_utils.ml" 361 10609 10666 "cli_utils.ml" 361 10609 10668
+type(
+  'a list
+)
+"cli_utils.ml" 361 10609 10646 "cli_utils.ml" 361 10609 10668
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 361 10609 10637 "cli_utils.ml" 361 10609 10669
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 361 10609 10622 "cli_utils.ml" 361 10609 10669
+type(
+  string list
+)
+"cli_utils.ml" 361 10609 10614 "cli_utils.ml" 361 10609 10670
+type(
+  string * string list
+)
+"cli_utils.ml" 362 10672 10678 "cli_utils.ml" 362 10672 10683
+type(
+  string
+)
+"cli_utils.ml" 362 10672 10684 "cli_utils.ml" 362 10672 10698
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 362 10672 10704 "cli_utils.ml" 362 10672 10706
+type(
+  unit
+)
+"cli_utils.ml" 362 10672 10708 "cli_utils.ml" 362 10672 10711
+type(
+  string -> 'a list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 355 10290 10312 "cli_utils.ml" 355 10290 10315
+)
+"cli_utils.ml" 362 10672 10712 "cli_utils.ml" 362 10672 10726
+type(
+  string
+)
+"cli_utils.ml" 362 10672 10727 "cli_utils.ml" 362 10672 10729
+type(
+  'a list
+)
+"cli_utils.ml" 362 10672 10708 "cli_utils.ml" 362 10672 10729
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 362 10672 10699 "cli_utils.ml" 362 10672 10730
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 362 10672 10684 "cli_utils.ml" 362 10672 10730
+type(
+  string list
+)
+"cli_utils.ml" 362 10672 10677 "cli_utils.ml" 362 10672 10731
+type(
+  string * string list
+)
+"cli_utils.ml" 363 10733 10739 "cli_utils.ml" 363 10733 10750
+type(
+  string
+)
+"cli_utils.ml" 363 10733 10752 "cli_utils.ml" 363 10733 10766
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 363 10733 10772 "cli_utils.ml" 363 10733 10774
+type(
+  unit
+)
+"cli_utils.ml" 363 10733 10776 "cli_utils.ml" 363 10733 10779
+type(
+  string -> 'a list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 355 10290 10312 "cli_utils.ml" 355 10290 10315
+)
+"cli_utils.ml" 363 10733 10780 "cli_utils.ml" 363 10733 10800
+type(
+  string
+)
+"cli_utils.ml" 363 10733 10801 "cli_utils.ml" 363 10733 10803
+type(
+  'a list
+)
+"cli_utils.ml" 363 10733 10776 "cli_utils.ml" 363 10733 10803
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 363 10733 10767 "cli_utils.ml" 363 10733 10804
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 363 10733 10752 "cli_utils.ml" 363 10733 10804
+type(
+  string list
+)
+"cli_utils.ml" 363 10733 10738 "cli_utils.ml" 363 10733 10805
+type(
+  string * string list
+)
+"cli_utils.ml" 364 10807 10813 "cli_utils.ml" 364 10807 10818
+type(
+  string
+)
+"cli_utils.ml" 364 10807 10819 "cli_utils.ml" 364 10807 10833
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 364 10807 10839 "cli_utils.ml" 364 10807 10841
+type(
+  unit
+)
+"cli_utils.ml" 364 10807 10843 "cli_utils.ml" 364 10807 10846
+type(
+  string -> 'a list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 355 10290 10312 "cli_utils.ml" 355 10290 10315
+)
+"cli_utils.ml" 364 10807 10847 "cli_utils.ml" 364 10807 10861
+type(
+  string
+)
+"cli_utils.ml" 364 10807 10862 "cli_utils.ml" 364 10807 10864
+type(
+  'a list
+)
+"cli_utils.ml" 364 10807 10843 "cli_utils.ml" 364 10807 10864
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 364 10807 10834 "cli_utils.ml" 364 10807 10865
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 364 10807 10819 "cli_utils.ml" 364 10807 10865
+type(
+  string list
+)
+"cli_utils.ml" 364 10807 10812 "cli_utils.ml" 364 10807 10866
+type(
+  string * string list
+)
+"cli_utils.ml" 365 10868 10874 "cli_utils.ml" 365 10868 10882
+type(
+  string
+)
+"cli_utils.ml" 365 10868 10883 "cli_utils.ml" 365 10868 10897
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 365 10868 10903 "cli_utils.ml" 365 10868 10905
+type(
+  unit
+)
+"cli_utils.ml" 365 10868 10907 "cli_utils.ml" 365 10868 10910
+type(
+  string -> 'a list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 355 10290 10312 "cli_utils.ml" 355 10290 10315
+)
+"cli_utils.ml" 365 10868 10911 "cli_utils.ml" 365 10868 10928
+type(
+  string
+)
+"cli_utils.ml" 365 10868 10929 "cli_utils.ml" 365 10868 10931
+type(
+  'a list
+)
+"cli_utils.ml" 365 10868 10907 "cli_utils.ml" 365 10868 10931
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 365 10868 10898 "cli_utils.ml" 365 10868 10932
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 365 10868 10883 "cli_utils.ml" 365 10868 10932
+type(
+  string list
+)
+"cli_utils.ml" 365 10868 10873 "cli_utils.ml" 365 10868 10933
+type(
+  string * string list
+)
+"cli_utils.ml" 366 10935 10941 "cli_utils.ml" 366 10935 10946
+type(
+  string
+)
+"cli_utils.ml" 366 10935 10947 "cli_utils.ml" 366 10935 10961
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 366 10935 10967 "cli_utils.ml" 366 10935 10969
+type(
+  unit
+)
+"cli_utils.ml" 366 10935 10971 "cli_utils.ml" 366 10935 10974
+type(
+  string -> 'a list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 355 10290 10312 "cli_utils.ml" 355 10290 10315
+)
+"cli_utils.ml" 366 10935 10975 "cli_utils.ml" 366 10935 10989
+type(
+  string
+)
+"cli_utils.ml" 366 10935 10990 "cli_utils.ml" 366 10935 10992
+type(
+  'a list
+)
+"cli_utils.ml" 366 10935 10971 "cli_utils.ml" 366 10935 10992
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 366 10935 10962 "cli_utils.ml" 366 10935 10993
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 366 10935 10947 "cli_utils.ml" 366 10935 10993
+type(
+  string list
+)
+"cli_utils.ml" 366 10935 10940 "cli_utils.ml" 366 10935 10994
+type(
+  string * string list
+)
+"cli_utils.ml" 367 10996 11002 "cli_utils.ml" 367 10996 11011
+type(
+  string
+)
+"cli_utils.ml" 367 10996 11012 "cli_utils.ml" 367 10996 11026
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 367 10996 11032 "cli_utils.ml" 367 10996 11034
+type(
+  unit
+)
+"cli_utils.ml" 367 10996 11036 "cli_utils.ml" 367 10996 11039
+type(
+  string -> 'a list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 355 10290 10312 "cli_utils.ml" 355 10290 10315
+)
+"cli_utils.ml" 367 10996 11040 "cli_utils.ml" 367 10996 11057
+type(
+  string
+)
+"cli_utils.ml" 367 10996 11058 "cli_utils.ml" 367 10996 11060
+type(
+  'a list
+)
+"cli_utils.ml" 367 10996 11036 "cli_utils.ml" 367 10996 11060
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 367 10996 11027 "cli_utils.ml" 367 10996 11061
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 367 10996 11012 "cli_utils.ml" 367 10996 11061
+type(
+  string list
+)
+"cli_utils.ml" 367 10996 11001 "cli_utils.ml" 367 10996 11062
+type(
+  string * string list
+)
+"cli_utils.ml" 357 10333 10337 "cli_utils.ml" 367 10996 11063
+type(
+  (string * string list) list
+)
+"cli_utils.ml" 368 11067 11071 "cli_utils.ml" 368 11067 11090
+type(
+  (string * string list) list -> unit
+)
+ident(
+  int_ref print_report_output "cli_utils.ml" 334 9577 9581 "cli_utils.ml" 334 9577 9600
+)
+"cli_utils.ml" 368 11067 11091 "cli_utils.ml" 368 11067 11097
+type(
+  (string * string list) list
+)
+ident(
+  int_ref output "cli_utils.ml" 356 10318 10324 "cli_utils.ml" 356 10318 10330
+)
+"cli_utils.ml" 368 11067 11071 "cli_utils.ml" 368 11067 11097
+type(
+  unit
+)
+"cli_utils.ml" 356 10318 10320 "cli_utils.ml" 368 11067 11097
+type(
+  unit
+)
+"cli_utils.ml" 370 11099 11103 "cli_utils.ml" 370 11099 11113
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> unit
+)
+ident(
+  def state_test "cli_utils.ml" 396 12019 12019 --
+)
+"cli_utils.ml" 370 11099 11114 "cli_utils.ml" 370 11099 11117
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 370 11099 11118 "cli_utils.ml" 393 11975 11982
+)
+"cli_utils.ml" 370 11099 11118 "cli_utils.ml" 370 11099 11122
+type(
+  string
+)
+ident(
+  def vmid "cli_utils.ml" 371 11125 11127 "cli_utils.ml" 393 11975 11982
+)
+"cli_utils.ml" 371 11125 11131 "cli_utils.ml" 371 11125 11141
+type(
+  int -> unit
+)
+"cli_utils.ml" 371 11125 11142 "cli_utils.ml" 371 11125 11146
+type(
+  int
+)
+ident(
+  def time "cli_utils.ml" 372 11149 11153 "cli_utils.ml" 373 11217 11234
+)
+"cli_utils.ml" 372 11149 11153 "cli_utils.ml" 372 11149 11163
+type(
+  string -> unit
+)
+ident(
+  int_ref print_line "cli_utils.ml" 39 1043 1047 "cli_utils.ml" 39 1043 1057
+)
+"cli_utils.ml" 372 11149 11165 "cli_utils.ml" 372 11149 11179
+type(
+  string
+)
+"cli_utils.ml" 372 11149 11179 "cli_utils.ml" 372 11149 11180
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 372 11149 11181 "cli_utils.ml" 372 11149 11194
+type(
+  int -> string
+)
+ident(
+  ext_ref Pervasives.string_of_int
+)
+"cli_utils.ml" 372 11149 11195 "cli_utils.ml" 372 11149 11199
+type(
+  int
+)
+ident(
+  int_ref time "cli_utils.ml" 371 11125 11142 "cli_utils.ml" 371 11125 11146
+)
+"cli_utils.ml" 372 11149 11180 "cli_utils.ml" 372 11149 11200
+type(
+  string
+)
+"cli_utils.ml" 372 11149 11200 "cli_utils.ml" 372 11149 11201
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 372 11149 11201 "cli_utils.ml" 372 11149 11214
+type(
+  string
+)
+"cli_utils.ml" 372 11149 11180 "cli_utils.ml" 372 11149 11214
+type(
+  string
+)
+"cli_utils.ml" 372 11149 11164 "cli_utils.ml" 372 11149 11215
+type(
+  string
+)
+"cli_utils.ml" 372 11149 11153 "cli_utils.ml" 372 11149 11215
+type(
+  unit
+)
+"cli_utils.ml" 373 11217 11221 "cli_utils.ml" 373 11217 11231
+type(
+  int -> unit
+)
+ident(
+  ext_ref Unix.sleep
+)
+"cli_utils.ml" 373 11217 11232 "cli_utils.ml" 373 11217 11234
+type(
+  int
+)
+"cli_utils.ml" 373 11217 11221 "cli_utils.ml" 373 11217 11234
+type(
+  unit
+)
+"cli_utils.ml" 372 11149 11153 "cli_utils.ml" 373 11217 11234
+type(
+  unit
+)
+"cli_utils.ml" 374 11238 11244 "cli_utils.ml" 374 11238 11249
+type(
+  (string * string) list
+)
+"cli_utils.ml" 374 11238 11254 "cli_utils.ml" 374 11238 11261
+type(
+  string
+)
+"cli_utils.ml" 374 11238 11262 "cli_utils.ml" 374 11238 11266
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 370 11099 11118 "cli_utils.ml" 370 11099 11122
+)
+"cli_utils.ml" 374 11238 11253 "cli_utils.ml" 374 11238 11267
+type(
+  string * string
+)
+"cli_utils.ml" 374 11238 11252 "cli_utils.ml" 374 11238 11268
+type(
+  (string * string) list
+)
+"cli_utils.ml" 375 11272 11278 "cli_utils.ml" 375 11272 11288
+type(
+  string -> string -> unit
+)
+"cli_utils.ml" 375 11272 11289 "cli_utils.ml" 375 11272 11292
+type(
+  string
+)
+ident(
+  def cmd "cli_utils.ml" 375 11272 11293 "cli_utils.ml" 377 11355 11384
+)
+"cli_utils.ml" 375 11272 11293 "cli_utils.ml" 375 11272 11299
+type(
+  string
+)
+ident(
+  def rstate "cli_utils.ml" 376 11302 11306 "cli_utils.ml" 377 11355 11384
+)
+"cli_utils.ml" 376 11302 11306 "cli_utils.ml" 376 11302 11312
+type(
+  string list -> unit
+)
+ident(
+  ext_ref Pervasives.ignore
+)
+"cli_utils.ml" 376 11302 11314 "cli_utils.ml" 376 11302 11328
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 376 11302 11334 "cli_utils.ml" 376 11302 11336
+type(
+  unit
+)
+"cli_utils.ml" 376 11302 11338 "cli_utils.ml" 376 11302 11341
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 370 11099 11114 "cli_utils.ml" 370 11099 11117
+)
+"cli_utils.ml" 376 11302 11342 "cli_utils.ml" 376 11302 11345
+type(
+  string
+)
+ident(
+  int_ref cmd "cli_utils.ml" 375 11272 11289 "cli_utils.ml" 375 11272 11292
+)
+"cli_utils.ml" 376 11302 11346 "cli_utils.ml" 376 11302 11351
+type(
+  (string * string) list
+)
+ident(
+  int_ref param "cli_utils.ml" 374 11238 11244 "cli_utils.ml" 374 11238 11249
+)
+"cli_utils.ml" 376 11302 11338 "cli_utils.ml" 376 11302 11351
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 376 11302 11329 "cli_utils.ml" 376 11302 11352
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 376 11302 11313 "cli_utils.ml" 376 11302 11353
+type(
+  string list
+)
+"cli_utils.ml" 376 11302 11306 "cli_utils.ml" 376 11302 11353
+type(
+  unit
+)
+"cli_utils.ml" 377 11355 11359 "cli_utils.ml" 377 11355 11368
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> unit
+)
+ident(
+  int_ref waitstate "cli_utils.ml" 207 5039 5043 "cli_utils.ml" 207 5039 5052
+)
+"cli_utils.ml" 377 11355 11369 "cli_utils.ml" 377 11355 11372
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 370 11099 11114 "cli_utils.ml" 370 11099 11117
+)
+"cli_utils.ml" 377 11355 11373 "cli_utils.ml" 377 11355 11377
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 370 11099 11118 "cli_utils.ml" 370 11099 11122
+)
+"cli_utils.ml" 377 11355 11378 "cli_utils.ml" 377 11355 11384
+type(
+  string
+)
+ident(
+  int_ref rstate "cli_utils.ml" 375 11272 11293 "cli_utils.ml" 375 11272 11299
+)
+"cli_utils.ml" 377 11355 11359 "cli_utils.ml" 377 11355 11384
+type(
+  unit
+)
+"cli_utils.ml" 376 11302 11306 "cli_utils.ml" 377 11355 11384
+type(
+  unit
+)
+"cli_utils.ml" 379 11398 11404 "cli_utils.ml" 379 11398 11414
+type(
+  string -> string -> unit
+)
+ident(
+  int_ref move_state "cli_utils.ml" 375 11272 11278 "cli_utils.ml" 375 11272 11288
+)
+"cli_utils.ml" 379 11398 11415 "cli_utils.ml" 379 11398 11425
+type(
+  string
+)
+"cli_utils.ml" 379 11398 11426 "cli_utils.ml" 379 11398 11430
+type(
+  string
+)
+"cli_utils.ml" 379 11398 11404 "cli_utils.ml" 379 11398 11430
+type(
+  unit
+)
+"cli_utils.ml" 380 11432 11438 "cli_utils.ml" 380 11432 11448
+type(
+  string -> string -> unit
+)
+ident(
+  int_ref move_state "cli_utils.ml" 375 11272 11278 "cli_utils.ml" 375 11272 11288
+)
+"cli_utils.ml" 380 11432 11449 "cli_utils.ml" 380 11432 11461
+type(
+  string
+)
+"cli_utils.ml" 380 11432 11462 "cli_utils.ml" 380 11432 11473
+type(
+  string
+)
+"cli_utils.ml" 380 11432 11438 "cli_utils.ml" 380 11432 11473
+type(
+  unit
+)
+"cli_utils.ml" 381 11475 11481 "cli_utils.ml" 381 11475 11491
+type(
+  string -> string -> unit
+)
+ident(
+  int_ref move_state "cli_utils.ml" 375 11272 11278 "cli_utils.ml" 375 11272 11288
+)
+"cli_utils.ml" 381 11475 11492 "cli_utils.ml" 381 11475 11503
+type(
+  string
+)
+"cli_utils.ml" 381 11475 11504 "cli_utils.ml" 381 11475 11508
+type(
+  string
+)
+"cli_utils.ml" 381 11475 11481 "cli_utils.ml" 381 11475 11508
+type(
+  unit
+)
+"cli_utils.ml" 382 11511 11517 "cli_utils.ml" 382 11511 11527
+type(
+  int -> unit
+)
+ident(
+  int_ref wait_print "cli_utils.ml" 371 11125 11131 "cli_utils.ml" 371 11125 11141
+)
+"cli_utils.ml" 382 11511 11528 "cli_utils.ml" 382 11511 11529
+type(
+  int
+)
+"cli_utils.ml" 382 11511 11517 "cli_utils.ml" 382 11511 11529
+type(
+  unit
+)
+"cli_utils.ml" 383 11598 11604 "cli_utils.ml" 383 11598 11614
+type(
+  string -> string -> unit
+)
+ident(
+  int_ref move_state "cli_utils.ml" 375 11272 11278 "cli_utils.ml" 375 11272 11288
+)
+"cli_utils.ml" 383 11598 11615 "cli_utils.ml" 383 11598 11628
+type(
+  string
+)
+"cli_utils.ml" 383 11598 11629 "cli_utils.ml" 383 11598 11635
+type(
+  string
+)
+"cli_utils.ml" 383 11598 11604 "cli_utils.ml" 383 11598 11635
+type(
+  unit
+)
+"cli_utils.ml" 384 11637 11643 "cli_utils.ml" 384 11637 11653
+type(
+  string -> string -> unit
+)
+ident(
+  int_ref move_state "cli_utils.ml" 375 11272 11278 "cli_utils.ml" 375 11272 11288
+)
+"cli_utils.ml" 384 11637 11654 "cli_utils.ml" 384 11637 11664
+type(
+  string
+)
+"cli_utils.ml" 384 11637 11665 "cli_utils.ml" 384 11637 11669
+type(
+  string
+)
+"cli_utils.ml" 384 11637 11643 "cli_utils.ml" 384 11637 11669
+type(
+  unit
+)
+"cli_utils.ml" 386 11722 11728 "cli_utils.ml" 386 11722 11734
+type(
+  string list -> unit
+)
+ident(
+  ext_ref Pervasives.ignore
+)
+"cli_utils.ml" 386 11722 11736 "cli_utils.ml" 386 11722 11750
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 387 11751 11758 "cli_utils.ml" 387 11751 11760
+type(
+  unit
+)
+"cli_utils.ml" 387 11751 11762 "cli_utils.ml" 387 11751 11765
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 370 11099 11114 "cli_utils.ml" 370 11099 11117
+)
+"cli_utils.ml" 387 11751 11766 "cli_utils.ml" 387 11751 11777
+type(
+  string
+)
+"cli_utils.ml" 387 11751 11778 "cli_utils.ml" 387 11751 11783
+type(
+  (string * string) list
+)
+ident(
+  int_ref param "cli_utils.ml" 374 11238 11244 "cli_utils.ml" 374 11238 11249
+)
+"cli_utils.ml" 387 11751 11762 "cli_utils.ml" 387 11751 11783
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 387 11751 11753 "cli_utils.ml" 387 11751 11784
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 386 11722 11735 "cli_utils.ml" 387 11751 11785
+type(
+  string list
+)
+"cli_utils.ml" 386 11722 11728 "cli_utils.ml" 387 11751 11785
+type(
+  unit
+)
+"cli_utils.ml" 388 11787 11793 "cli_utils.ml" 388 11787 11802
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> unit
+)
+ident(
+  int_ref waitstate "cli_utils.ml" 207 5039 5043 "cli_utils.ml" 207 5039 5052
+)
+"cli_utils.ml" 388 11787 11803 "cli_utils.ml" 388 11787 11806
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 370 11099 11114 "cli_utils.ml" 370 11099 11117
+)
+"cli_utils.ml" 388 11787 11807 "cli_utils.ml" 388 11787 11811
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 370 11099 11118 "cli_utils.ml" 370 11099 11122
+)
+"cli_utils.ml" 388 11787 11812 "cli_utils.ml" 388 11787 11816
+type(
+  string
+)
+"cli_utils.ml" 388 11787 11793 "cli_utils.ml" 388 11787 11816
+type(
+  unit
+)
+"cli_utils.ml" 390 11856 11862 "cli_utils.ml" 390 11856 11868
+type(
+  string list -> unit
+)
+ident(
+  ext_ref Pervasives.ignore
+)
+"cli_utils.ml" 390 11856 11870 "cli_utils.ml" 390 11856 11884
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 391 11885 11892 "cli_utils.ml" 391 11885 11894
+type(
+  unit
+)
+"cli_utils.ml" 391 11885 11896 "cli_utils.ml" 391 11885 11899
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 370 11099 11114 "cli_utils.ml" 370 11099 11117
+)
+"cli_utils.ml" 391 11885 11900 "cli_utils.ml" 391 11885 11913
+type(
+  string
+)
+"cli_utils.ml" 391 11885 11916 "cli_utils.ml" 391 11885 11923
+type(
+  string
+)
+"cli_utils.ml" 391 11885 11924 "cli_utils.ml" 391 11885 11930
+type(
+  string
+)
+"cli_utils.ml" 391 11885 11915 "cli_utils.ml" 391 11885 11931
+type(
+  string * string
+)
+"cli_utils.ml" 391 11885 11933 "cli_utils.ml" 391 11885 11938
+type(
+  (string * string) list
+)
+ident(
+  int_ref param "cli_utils.ml" 374 11238 11244 "cli_utils.ml" 374 11238 11249
+)
+"cli_utils.ml" 391 11885 11914 "cli_utils.ml" 391 11885 11939
+type(
+  (string * string) list
+)
+"cli_utils.ml" 391 11885 11896 "cli_utils.ml" 391 11885 11939
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 391 11885 11887 "cli_utils.ml" 391 11885 11940
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 390 11856 11869 "cli_utils.ml" 391 11885 11941
+type(
+  string list
+)
+"cli_utils.ml" 390 11856 11862 "cli_utils.ml" 391 11885 11941
+type(
+  unit
+)
+"cli_utils.ml" 392 11943 11949 "cli_utils.ml" 392 11943 11958
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> unit
+)
+ident(
+  int_ref waitstate "cli_utils.ml" 207 5039 5043 "cli_utils.ml" 207 5039 5052
+)
+"cli_utils.ml" 392 11943 11959 "cli_utils.ml" 392 11943 11962
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 370 11099 11114 "cli_utils.ml" 370 11099 11117
+)
+"cli_utils.ml" 392 11943 11963 "cli_utils.ml" 392 11943 11967
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 370 11099 11118 "cli_utils.ml" 370 11099 11122
+)
+"cli_utils.ml" 392 11943 11968 "cli_utils.ml" 392 11943 11974
+type(
+  string
+)
+"cli_utils.ml" 392 11943 11949 "cli_utils.ml" 392 11943 11974
+type(
+  unit
+)
+"cli_utils.ml" 390 11856 11862 "cli_utils.ml" 392 11943 11974
+type(
+  unit
+)
+"cli_utils.ml" 388 11787 11793 "cli_utils.ml" 392 11943 11974
+type(
+  unit
+)
+"cli_utils.ml" 386 11722 11728 "cli_utils.ml" 392 11943 11974
+type(
+  unit
+)
+"cli_utils.ml" 384 11637 11643 "cli_utils.ml" 392 11943 11974
+type(
+  unit
+)
+"cli_utils.ml" 383 11598 11604 "cli_utils.ml" 392 11943 11974
+type(
+  unit
+)
+"cli_utils.ml" 382 11511 11517 "cli_utils.ml" 392 11943 11974
+type(
+  unit
+)
+"cli_utils.ml" 381 11475 11481 "cli_utils.ml" 392 11943 11974
+type(
+  unit
+)
+"cli_utils.ml" 380 11432 11438 "cli_utils.ml" 392 11943 11974
+type(
+  unit
+)
+"cli_utils.ml" 378 11388 11392 "cli_utils.ml" 393 11975 11982
+type(
+  unit
+)
+"cli_utils.ml" 375 11272 11274 "cli_utils.ml" 393 11975 11982
+type(
+  unit
+)
+"cli_utils.ml" 374 11238 11240 "cli_utils.ml" 393 11975 11982
+type(
+  unit
+)
+"cli_utils.ml" 371 11125 11127 "cli_utils.ml" 393 11975 11982
+type(
+  unit
+)
+"cli_utils.ml" 396 12019 12023 "cli_utils.ml" 396 12019 12033
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> string
+)
+ident(
+  def clone_test "cli_utils.ml" 406 12395 12395 --
+)
+"cli_utils.ml" 396 12019 12034 "cli_utils.ml" 396 12019 12037
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 396 12019 12038 "cli_utils.ml" 403 12341 12353
+)
+"cli_utils.ml" 396 12019 12038 "cli_utils.ml" 396 12019 12042
+type(
+  string
+)
+ident(
+  def vmid "cli_utils.ml" 396 12019 12043 "cli_utils.ml" 403 12341 12353
+)
+"cli_utils.ml" 396 12019 12043 "cli_utils.ml" 396 12019 12051
+type(
+  string
+)
+ident(
+  def new_name "cli_utils.ml" 397 12054 12056 "cli_utils.ml" 403 12341 12353
+)
+"cli_utils.ml" 397 12054 12060 "cli_utils.ml" 397 12054 12066
+type(
+  (string * string) list
+)
+"cli_utils.ml" 397 12054 12071 "cli_utils.ml" 397 12054 12078
+type(
+  string
+)
+"cli_utils.ml" 397 12054 12079 "cli_utils.ml" 397 12054 12083
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 396 12019 12038 "cli_utils.ml" 396 12019 12042
+)
+"cli_utils.ml" 397 12054 12070 "cli_utils.ml" 397 12054 12084
+type(
+  string * string
+)
+"cli_utils.ml" 398 12086 12095 "cli_utils.ml" 398 12086 12105
+type(
+  string
+)
+"cli_utils.ml" 398 12086 12106 "cli_utils.ml" 398 12086 12114
+type(
+  string
+)
+ident(
+  int_ref new_name "cli_utils.ml" 396 12019 12043 "cli_utils.ml" 396 12019 12051
+)
+"cli_utils.ml" 398 12086 12094 "cli_utils.ml" 398 12086 12115
+type(
+  string * string
+)
+"cli_utils.ml" 399 12117 12126 "cli_utils.ml" 399 12117 12143
+type(
+  string
+)
+"cli_utils.ml" 399 12117 12144 "cli_utils.ml" 399 12117 12177
+type(
+  string
+)
+"cli_utils.ml" 399 12117 12125 "cli_utils.ml" 399 12117 12178
+type(
+  string * string
+)
+"cli_utils.ml" 397 12054 12069 "cli_utils.ml" 399 12117 12179
+type(
+  (string * string) list
+)
+"cli_utils.ml" 400 12183 12189 "cli_utils.ml" 400 12183 12194
+type(
+  string list
+)
+"cli_utils.ml" 400 12183 12197 "cli_utils.ml" 400 12183 12211
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 400 12183 12217 "cli_utils.ml" 400 12183 12219
+type(
+  unit
+)
+"cli_utils.ml" 400 12183 12221 "cli_utils.ml" 400 12183 12224
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 396 12019 12034 "cli_utils.ml" 396 12019 12037
+)
+"cli_utils.ml" 400 12183 12225 "cli_utils.ml" 400 12183 12235
+type(
+  string
+)
+"cli_utils.ml" 400 12183 12236 "cli_utils.ml" 400 12183 12242
+type(
+  (string * string) list
+)
+ident(
+  int_ref params "cli_utils.ml" 397 12054 12060 "cli_utils.ml" 397 12054 12066
+)
+"cli_utils.ml" 400 12183 12221 "cli_utils.ml" 400 12183 12242
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 400 12183 12212 "cli_utils.ml" 400 12183 12243
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 400 12183 12197 "cli_utils.ml" 400 12183 12243
+type(
+  string list
+)
+"cli_utils.ml" 401 12247 12253 "cli_utils.ml" 401 12247 12261
+type(
+  string
+)
+"cli_utils.ml" 401 12247 12264 "cli_utils.ml" 401 12247 12284
+type(
+  string -> string list -> string
+)
+ident(
+  int_ref read_end_from_output "cli_utils.ml" 193 4663 4667 "cli_utils.ml" 193 4663 4687
+)
+"cli_utils.ml" 401 12247 12285 "cli_utils.ml" 401 12247 12296
+type(
+  string
+)
+"cli_utils.ml" 401 12247 12297 "cli_utils.ml" 401 12247 12302
+type(
+  string list
+)
+ident(
+  int_ref lines "cli_utils.ml" 400 12183 12189 "cli_utils.ml" 400 12183 12194
+)
+"cli_utils.ml" 401 12247 12264 "cli_utils.ml" 401 12247 12302
+type(
+  string
+)
+"cli_utils.ml" 402 12306 12310 "cli_utils.ml" 402 12306 12319
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> unit
+)
+ident(
+  int_ref waitstate "cli_utils.ml" 207 5039 5043 "cli_utils.ml" 207 5039 5052
+)
+"cli_utils.ml" 402 12306 12320 "cli_utils.ml" 402 12306 12323
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 396 12019 12034 "cli_utils.ml" 396 12019 12037
+)
+"cli_utils.ml" 402 12306 12324 "cli_utils.ml" 402 12306 12332
+type(
+  string
+)
+ident(
+  int_ref new_uuid "cli_utils.ml" 401 12247 12253 "cli_utils.ml" 401 12247 12261
+)
+"cli_utils.ml" 402 12306 12333 "cli_utils.ml" 402 12306 12339
+type(
+  string
+)
+"cli_utils.ml" 402 12306 12310 "cli_utils.ml" 402 12306 12339
+type(
+  unit
+)
+"cli_utils.ml" 403 12341 12345 "cli_utils.ml" 403 12341 12353
+type(
+  string
+)
+ident(
+  int_ref new_uuid "cli_utils.ml" 401 12247 12253 "cli_utils.ml" 401 12247 12261
+)
+"cli_utils.ml" 402 12306 12310 "cli_utils.ml" 403 12341 12353
+type(
+  string
+)
+"cli_utils.ml" 401 12247 12249 "cli_utils.ml" 403 12341 12353
+type(
+  string
+)
+"cli_utils.ml" 400 12183 12185 "cli_utils.ml" 403 12341 12353
+type(
+  string
+)
+"cli_utils.ml" 397 12054 12056 "cli_utils.ml" 403 12341 12353
+type(
+  string
+)
+"cli_utils.ml" 406 12395 12399 "cli_utils.ml" 406 12395 12412
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  unit
+)
+ident(
+  def loglevel_test "cli_utils.ml" 414 12631 12631 --
+)
+"cli_utils.ml" 406 12395 12413 "cli_utils.ml" 406 12395 12416
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 407 12419 12421 "cli_utils.ml" 411 12531 12556
+)
+"cli_utils.ml" 407 12419 12421 "cli_utils.ml" 407 12419 12430
+type(
+  (string -> unit) -> string list -> unit
+)
+ident(
+  ext_ref List.iter
+)
+"cli_utils.ml" 408 12431 12440 "cli_utils.ml" 408 12431 12441
+type(
+  string
+)
+ident(
+  def x "cli_utils.ml" 409 12444 12451 "cli_utils.ml" 410 12474 12529
+)
+"cli_utils.ml" 409 12444 12451 "cli_utils.ml" 409 12444 12457
+type(
+  string list -> unit
+)
+ident(
+  ext_ref Pervasives.ignore
+)
+"cli_utils.ml" 409 12444 12459 "cli_utils.ml" 409 12444 12473
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 410 12474 12482 "cli_utils.ml" 410 12474 12484
+type(
+  unit
+)
+"cli_utils.ml" 410 12474 12486 "cli_utils.ml" 410 12474 12489
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 406 12395 12413 "cli_utils.ml" 406 12395 12416
+)
+"cli_utils.ml" 410 12474 12490 "cli_utils.ml" 410 12474 12509
+type(
+  string
+)
+"cli_utils.ml" 410 12474 12512 "cli_utils.ml" 410 12474 12523
+type(
+  string
+)
+"cli_utils.ml" 410 12474 12524 "cli_utils.ml" 410 12474 12525
+type(
+  string
+)
+ident(
+  int_ref x "cli_utils.ml" 408 12431 12440 "cli_utils.ml" 408 12431 12441
+)
+"cli_utils.ml" 410 12474 12511 "cli_utils.ml" 410 12474 12526
+type(
+  string * string
+)
+"cli_utils.ml" 410 12474 12510 "cli_utils.ml" 410 12474 12527
+type(
+  (string * string) list
+)
+"cli_utils.ml" 410 12474 12486 "cli_utils.ml" 410 12474 12527
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 410 12474 12477 "cli_utils.ml" 410 12474 12528
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 409 12444 12458 "cli_utils.ml" 410 12474 12529
+type(
+  string list
+)
+"cli_utils.ml" 409 12444 12451 "cli_utils.ml" 410 12474 12529
+type(
+  unit
+)
+"cli_utils.ml" 408 12431 12435 "cli_utils.ml" 410 12474 12530
+type(
+  string -> unit
+)
+"cli_utils.ml" 411 12531 12536 "cli_utils.ml" 411 12531 12539
+type(
+  string
+)
+"cli_utils.ml" 411 12531 12540 "cli_utils.ml" 411 12531 12543
+type(
+  string
+)
+"cli_utils.ml" 411 12531 12544 "cli_utils.ml" 411 12531 12547
+type(
+  string
+)
+"cli_utils.ml" 411 12531 12548 "cli_utils.ml" 411 12531 12551
+type(
+  string
+)
+"cli_utils.ml" 411 12531 12552 "cli_utils.ml" 411 12531 12555
+type(
+  string
+)
+"cli_utils.ml" 411 12531 12535 "cli_utils.ml" 411 12531 12556
+type(
+  string list
+)
+"cli_utils.ml" 407 12419 12421 "cli_utils.ml" 411 12531 12556
+type(
+  unit
+)
+"cli_utils.ml" 414 12631 12635 "cli_utils.ml" 414 12631 12643
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> string
+)
+ident(
+  def getparam "cli_utils.ml" 424 13064 13064 --
+)
+"cli_utils.ml" 414 12631 12644 "cli_utils.ml" 414 12631 12647
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 414 12631 12648 "cli_utils.ml" 421 12927 13000
+)
+"cli_utils.ml" 414 12631 12648 "cli_utils.ml" 414 12631 12652
+type(
+  string
+)
+ident(
+  def vmid "cli_utils.ml" 414 12631 12653 "cli_utils.ml" 421 12927 13000
+)
+"cli_utils.ml" 414 12631 12653 "cli_utils.ml" 414 12631 12663
+type(
+  string
+)
+ident(
+  def param_name "cli_utils.ml" 415 12666 12668 "cli_utils.ml" 421 12927 13000
+)
+"cli_utils.ml" 415 12666 12672 "cli_utils.ml" 415 12666 12678
+type(
+  (string * string) list
+)
+"cli_utils.ml" 415 12666 12683 "cli_utils.ml" 415 12666 12690
+type(
+  string
+)
+"cli_utils.ml" 415 12666 12691 "cli_utils.ml" 415 12666 12695
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 414 12631 12648 "cli_utils.ml" 414 12631 12652
+)
+"cli_utils.ml" 415 12666 12682 "cli_utils.ml" 415 12666 12696
+type(
+  string * string
+)
+"cli_utils.ml" 416 12698 12701 "cli_utils.ml" 416 12698 12713
+type(
+  string
+)
+"cli_utils.ml" 416 12698 12714 "cli_utils.ml" 416 12698 12724
+type(
+  string
+)
+ident(
+  int_ref param_name "cli_utils.ml" 414 12631 12653 "cli_utils.ml" 414 12631 12663
+)
+"cli_utils.ml" 416 12698 12700 "cli_utils.ml" 416 12698 12725
+type(
+  string * string
+)
+"cli_utils.ml" 415 12666 12681 "cli_utils.ml" 416 12698 12726
+type(
+  (string * string) list
+)
+"cli_utils.ml" 417 12730 12736 "cli_utils.ml" 417 12730 12741
+type(
+  string list
+)
+"cli_utils.ml" 417 12730 12744 "cli_utils.ml" 417 12730 12758
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 417 12730 12764 "cli_utils.ml" 417 12730 12766
+type(
+  unit
+)
+"cli_utils.ml" 417 12730 12768 "cli_utils.ml" 417 12730 12771
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 414 12631 12644 "cli_utils.ml" 414 12631 12647
+)
+"cli_utils.ml" 417 12730 12772 "cli_utils.ml" 417 12730 12786
+type(
+  string
+)
+"cli_utils.ml" 417 12730 12787 "cli_utils.ml" 417 12730 12793
+type(
+  (string * string) list
+)
+ident(
+  int_ref params "cli_utils.ml" 415 12666 12672 "cli_utils.ml" 415 12666 12678
+)
+"cli_utils.ml" 417 12730 12768 "cli_utils.ml" 417 12730 12793
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 417 12730 12759 "cli_utils.ml" 417 12730 12794
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 417 12730 12744 "cli_utils.ml" 417 12730 12794
+type(
+  string list
+)
+"cli_utils.ml" 418 12798 12809 "cli_utils.ml" 418 12798 12815
+type(
+  (string -> string option) -> string list -> string list
+)
+ident(
+  int_ref mapopt "cli_utils.ml" 126 3182 3190 "cli_utils.ml" 126 3182 3196
+)
+"cli_utils.ml" 418 12798 12817 "cli_utils.ml" 418 12798 12823
+type(
+  string -> string -> string option
+)
+ident(
+  int_ref getval "cli_utils.ml" 114 2905 2909 "cli_utils.ml" 114 2905 2915
+)
+"cli_utils.ml" 418 12798 12825 "cli_utils.ml" 418 12798 12835
+type(
+  string
+)
+ident(
+  int_ref param_name "cli_utils.ml" 414 12631 12653 "cli_utils.ml" 414 12631 12663
+)
+"cli_utils.ml" 418 12798 12835 "cli_utils.ml" 418 12798 12836
+type(
+  string -> string -> string
+)
+ident(
+  ext_ref Pervasives.( ^ )
+)
+"cli_utils.ml" 418 12798 12836 "cli_utils.ml" 418 12798 12839
+type(
+  string
+)
+"cli_utils.ml" 418 12798 12824 "cli_utils.ml" 418 12798 12840
+type(
+  string
+)
+"cli_utils.ml" 418 12798 12816 "cli_utils.ml" 418 12798 12841
+type(
+  string -> string option
+)
+"cli_utils.ml" 418 12798 12842 "cli_utils.ml" 418 12798 12847
+type(
+  string list
+)
+ident(
+  int_ref lines "cli_utils.ml" 417 12730 12736 "cli_utils.ml" 417 12730 12741
+)
+"cli_utils.ml" 418 12798 12808 "cli_utils.ml" 418 12798 12848
+type(
+  string list
+)
+"cli_utils.ml" 419 12854 12855 "cli_utils.ml" 419 12854 12857
+type(
+  string list
+)
+"cli_utils.ml" 419 12854 12861 "cli_utils.ml" 419 12854 12866
+type(
+  exn -> string
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"cli_utils.ml" 419 12854 12889 "cli_utils.ml" 419 12854 12908
+type(
+  string
+)
+"cli_utils.ml" 419 12854 12867 "cli_utils.ml" 419 12854 12909
+type(
+  exn
+)
+"cli_utils.ml" 419 12854 12861 "cli_utils.ml" 419 12854 12909
+type(
+  string
+)
+"cli_utils.ml" 420 12910 12919 "cli_utils.ml" 420 12910 12920
+type(
+  string
+)
+ident(
+  def x "cli_utils.ml" 420 12910 12925 "cli_utils.ml" 420 12910 12926
+)
+"cli_utils.ml" 420 12910 12918 "cli_utils.ml" 420 12910 12921
+type(
+  string list
+)
+"cli_utils.ml" 420 12910 12925 "cli_utils.ml" 420 12910 12926
+type(
+  string
+)
+ident(
+  int_ref x "cli_utils.ml" 420 12910 12919 "cli_utils.ml" 420 12910 12920
+)
+"cli_utils.ml" 421 12927 12935 "cli_utils.ml" 421 12927 12936
+type(
+  string list
+)
+"cli_utils.ml" 421 12927 12940 "cli_utils.ml" 421 12927 12945
+type(
+  exn -> string
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"cli_utils.ml" 421 12927 12968 "cli_utils.ml" 421 12927 12999
+type(
+  string
+)
+"cli_utils.ml" 421 12927 12946 "cli_utils.ml" 421 12927 13000
+type(
+  exn
+)
+"cli_utils.ml" 421 12927 12940 "cli_utils.ml" 421 12927 13000
+type(
+  string
+)
+"cli_utils.ml" 418 12798 12802 "cli_utils.ml" 421 12927 13000
+type(
+  string
+)
+"cli_utils.ml" 417 12730 12732 "cli_utils.ml" 421 12927 13000
+type(
+  string
+)
+"cli_utils.ml" 415 12666 12668 "cli_utils.ml" 421 12927 13000
+type(
+  string
+)
+"cli_utils.ml" 424 13064 13068 "cli_utils.ml" 424 13064 13087
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> string -> unit
+)
+ident(
+  def set_and_check_param "cli_utils.ml" 432 13372 13372 --
+)
+"cli_utils.ml" 424 13064 13088 "cli_utils.ml" 424 13064 13091
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 424 13064 13092 "cli_utils.ml" 429 13290 13351
+)
+"cli_utils.ml" 424 13064 13092 "cli_utils.ml" 424 13064 13096
+type(
+  string
+)
+ident(
+  def vmid "cli_utils.ml" 424 13064 13097 "cli_utils.ml" 429 13290 13351
+)
+"cli_utils.ml" 424 13064 13097 "cli_utils.ml" 424 13064 13107
+type(
+  string
+)
+ident(
+  def param_name "cli_utils.ml" 424 13064 13108 "cli_utils.ml" 429 13290 13351
+)
+"cli_utils.ml" 424 13064 13108 "cli_utils.ml" 424 13064 13119
+type(
+  string
+)
+ident(
+  def param_value "cli_utils.ml" 425 13122 13124 "cli_utils.ml" 429 13290 13351
+)
+"cli_utils.ml" 425 13122 13128 "cli_utils.ml" 425 13122 13134
+type(
+  (string * string) list
+)
+"cli_utils.ml" 425 13122 13139 "cli_utils.ml" 425 13122 13146
+type(
+  string
+)
+"cli_utils.ml" 425 13122 13147 "cli_utils.ml" 425 13122 13151
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 424 13064 13092 "cli_utils.ml" 424 13064 13096
+)
+"cli_utils.ml" 425 13122 13138 "cli_utils.ml" 425 13122 13152
+type(
+  string * string
+)
+"cli_utils.ml" 426 13154 13157 "cli_utils.ml" 426 13154 13169
+type(
+  string
+)
+"cli_utils.ml" 426 13154 13170 "cli_utils.ml" 426 13154 13180
+type(
+  string
+)
+ident(
+  int_ref param_name "cli_utils.ml" 424 13064 13097 "cli_utils.ml" 424 13064 13107
+)
+"cli_utils.ml" 426 13154 13156 "cli_utils.ml" 426 13154 13181
+type(
+  string * string
+)
+"cli_utils.ml" 427 13183 13186 "cli_utils.ml" 427 13183 13199
+type(
+  string
+)
+"cli_utils.ml" 427 13183 13200 "cli_utils.ml" 427 13183 13211
+type(
+  string
+)
+ident(
+  int_ref param_value "cli_utils.ml" 424 13064 13108 "cli_utils.ml" 424 13064 13119
+)
+"cli_utils.ml" 427 13183 13185 "cli_utils.ml" 427 13183 13212
+type(
+  string * string
+)
+"cli_utils.ml" 425 13122 13137 "cli_utils.ml" 427 13183 13213
+type(
+  (string * string) list
+)
+"cli_utils.ml" 428 13217 13223 "cli_utils.ml" 428 13217 13224
+type(
+  unit
+)
+"cli_utils.ml" 428 13217 13227 "cli_utils.ml" 428 13217 13233
+type(
+  string list -> unit
+)
+ident(
+  ext_ref Pervasives.ignore
+)
+"cli_utils.ml" 428 13217 13235 "cli_utils.ml" 428 13217 13249
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 428 13217 13255 "cli_utils.ml" 428 13217 13257
+type(
+  unit
+)
+"cli_utils.ml" 428 13217 13259 "cli_utils.ml" 428 13217 13262
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 424 13064 13088 "cli_utils.ml" 424 13064 13091
+)
+"cli_utils.ml" 428 13217 13263 "cli_utils.ml" 428 13217 13277
+type(
+  string
+)
+"cli_utils.ml" 428 13217 13278 "cli_utils.ml" 428 13217 13284
+type(
+  (string * string) list
+)
+ident(
+  int_ref params "cli_utils.ml" 425 13122 13128 "cli_utils.ml" 425 13122 13134
+)
+"cli_utils.ml" 428 13217 13259 "cli_utils.ml" 428 13217 13284
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 428 13217 13250 "cli_utils.ml" 428 13217 13285
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 428 13217 13234 "cli_utils.ml" 428 13217 13286
+type(
+  string list
+)
+"cli_utils.ml" 428 13217 13227 "cli_utils.ml" 428 13217 13286
+type(
+  unit
+)
+"cli_utils.ml" 429 13290 13294 "cli_utils.ml" 429 13290 13298
+type(
+  (unit -> bool) -> unit
+)
+ident(
+  int_ref poll "cli_utils.ml" 168 4166 4170 "cli_utils.ml" 168 4166 4174
+)
+"cli_utils.ml" 429 13290 13304 "cli_utils.ml" 429 13290 13306
+type(
+  unit
+)
+"cli_utils.ml" 429 13290 13309 "cli_utils.ml" 429 13290 13317
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> string
+)
+ident(
+  int_ref getparam "cli_utils.ml" 414 12631 12635 "cli_utils.ml" 414 12631 12643
+)
+"cli_utils.ml" 429 13290 13318 "cli_utils.ml" 429 13290 13321
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 424 13064 13088 "cli_utils.ml" 424 13064 13091
+)
+"cli_utils.ml" 429 13290 13322 "cli_utils.ml" 429 13290 13326
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 424 13064 13092 "cli_utils.ml" 424 13064 13096
+)
+"cli_utils.ml" 429 13290 13327 "cli_utils.ml" 429 13290 13337
+type(
+  string
+)
+ident(
+  int_ref param_name "cli_utils.ml" 424 13064 13097 "cli_utils.ml" 424 13064 13107
+)
+"cli_utils.ml" 429 13290 13308 "cli_utils.ml" 429 13290 13338
+type(
+  string
+)
+"cli_utils.ml" 429 13290 13338 "cli_utils.ml" 429 13290 13339
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"cli_utils.ml" 429 13290 13339 "cli_utils.ml" 429 13290 13350
+type(
+  string
+)
+ident(
+  int_ref param_value "cli_utils.ml" 424 13064 13108 "cli_utils.ml" 424 13064 13119
+)
+"cli_utils.ml" 429 13290 13308 "cli_utils.ml" 429 13290 13350
+type(
+  bool
+)
+"cli_utils.ml" 429 13290 13299 "cli_utils.ml" 429 13290 13351
+type(
+  unit -> bool
+)
+"cli_utils.ml" 429 13290 13294 "cli_utils.ml" 429 13290 13351
+type(
+  unit
+)
+"cli_utils.ml" 428 13217 13219 "cli_utils.ml" 429 13290 13351
+type(
+  unit
+)
+"cli_utils.ml" 425 13122 13124 "cli_utils.ml" 429 13290 13351
+type(
+  unit
+)
+"cli_utils.ml" 432 13372 13376 "cli_utils.ml" 432 13372 13387
+type(
+  (string -> (string * 'a) list -> string list * Unix.process_status) ->
+  'a -> 'a -> 'a -> unit
+)
+ident(
+  def resize_disk "cli_utils.ml" 439 13598 13598 --
+)
+"cli_utils.ml" 432 13372 13388 "cli_utils.ml" 432 13372 13391
+type(
+  string -> (string * 'a) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 432 13372 13392 "cli_utils.ml" 436 13506 13571
+)
+"cli_utils.ml" 432 13372 13392 "cli_utils.ml" 432 13372 13396
+type(
+  'a
+)
+ident(
+  def vmid "cli_utils.ml" 432 13372 13397 "cli_utils.ml" 436 13506 13571
+)
+"cli_utils.ml" 432 13372 13397 "cli_utils.ml" 432 13372 13406
+type(
+  'a
+)
+ident(
+  def disk_name "cli_utils.ml" 432 13372 13407 "cli_utils.ml" 436 13506 13571
+)
+"cli_utils.ml" 432 13372 13407 "cli_utils.ml" 432 13372 13415
+type(
+  'a
+)
+ident(
+  def new_size "cli_utils.ml" 433 13418 13420 "cli_utils.ml" 436 13506 13571
+)
+"cli_utils.ml" 433 13418 13424 "cli_utils.ml" 433 13418 13430
+type(
+  (string * 'a) list
+)
+"cli_utils.ml" 433 13418 13435 "cli_utils.ml" 433 13418 13442
+type(
+  string
+)
+"cli_utils.ml" 433 13418 13443 "cli_utils.ml" 433 13418 13447
+type(
+  'a
+)
+ident(
+  int_ref vmid "cli_utils.ml" 432 13372 13392 "cli_utils.ml" 432 13372 13396
+)
+"cli_utils.ml" 433 13418 13434 "cli_utils.ml" 433 13418 13448
+type(
+  string * 'a
+)
+"cli_utils.ml" 434 13450 13453 "cli_utils.ml" 434 13450 13464
+type(
+  string
+)
+"cli_utils.ml" 434 13450 13465 "cli_utils.ml" 434 13450 13474
+type(
+  'a
+)
+ident(
+  int_ref disk_name "cli_utils.ml" 432 13372 13397 "cli_utils.ml" 432 13372 13406
+)
+"cli_utils.ml" 434 13450 13452 "cli_utils.ml" 434 13450 13475
+type(
+  string * 'a
+)
+"cli_utils.ml" 435 13477 13480 "cli_utils.ml" 435 13477 13491
+type(
+  string
+)
+"cli_utils.ml" 435 13477 13492 "cli_utils.ml" 435 13477 13500
+type(
+  'a
+)
+ident(
+  int_ref new_size "cli_utils.ml" 432 13372 13407 "cli_utils.ml" 432 13372 13415
+)
+"cli_utils.ml" 435 13477 13479 "cli_utils.ml" 435 13477 13501
+type(
+  string * 'a
+)
+"cli_utils.ml" 433 13418 13433 "cli_utils.ml" 435 13477 13502
+type(
+  (string * 'a) list
+)
+"cli_utils.ml" 436 13506 13510 "cli_utils.ml" 436 13506 13516
+type(
+  string list -> unit
+)
+ident(
+  ext_ref Pervasives.ignore
+)
+"cli_utils.ml" 436 13506 13518 "cli_utils.ml" 436 13506 13532
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 436 13506 13538 "cli_utils.ml" 436 13506 13540
+type(
+  unit
+)
+"cli_utils.ml" 436 13506 13542 "cli_utils.ml" 436 13506 13545
+type(
+  string -> (string * 'a) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 432 13372 13388 "cli_utils.ml" 432 13372 13391
+)
+"cli_utils.ml" 436 13506 13546 "cli_utils.ml" 436 13506 13562
+type(
+  string
+)
+"cli_utils.ml" 436 13506 13563 "cli_utils.ml" 436 13506 13569
+type(
+  (string * 'a) list
+)
+ident(
+  int_ref params "cli_utils.ml" 433 13418 13424 "cli_utils.ml" 433 13418 13430
+)
+"cli_utils.ml" 436 13506 13542 "cli_utils.ml" 436 13506 13569
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 436 13506 13533 "cli_utils.ml" 436 13506 13570
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 436 13506 13517 "cli_utils.ml" 436 13506 13571
+type(
+  string list
+)
+"cli_utils.ml" 436 13506 13510 "cli_utils.ml" 436 13506 13571
+type(
+  unit
+)
+"cli_utils.ml" 433 13418 13420 "cli_utils.ml" 436 13506 13571
+type(
+  unit
+)
+"cli_utils.ml" 439 13598 13602 "cli_utils.ml" 439 13598 13619
+type(
+  (string ->
+   string -> (string * string) list -> string list * Unix.process_status) ->
+  unit
+)
+ident(
+  def test_password_set "cli_utils.ml" 451 13998 13998 --
+)
+"cli_utils.ml" 439 13598 13620 "cli_utils.ml" 439 13598 13627
+type(
+  string ->
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def pswdcli "cli_utils.ml" 440 13630 13632 "cli_utils.ml" 447 13900 13939
+)
+"cli_utils.ml" 440 13630 13636 "cli_utils.ml" 440 13630 13642
+type(
+  (string * string) list -> string -> unit
+)
+"cli_utils.ml" 440 13630 13643 "cli_utils.ml" 440 13630 13649
+type(
+  (string * string) list
+)
+ident(
+  def params "cli_utils.ml" 440 13630 13650 "cli_utils.ml" 443 13694 13749
+)
+"cli_utils.ml" 440 13630 13650 "cli_utils.ml" 440 13630 13658
+type(
+  string
+)
+ident(
+  def password "cli_utils.ml" 441 13661 13665 "cli_utils.ml" 443 13694 13749
+)
+"cli_utils.ml" 441 13661 13665 "cli_utils.ml" 441 13661 13671
+type(
+  string list -> unit
+)
+ident(
+  ext_ref Pervasives.ignore
+)
+"cli_utils.ml" 442 13672 13679 "cli_utils.ml" 442 13672 13693
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 443 13694 13700 "cli_utils.ml" 443 13694 13702
+type(
+  unit
+)
+"cli_utils.ml" 443 13694 13704 "cli_utils.ml" 443 13694 13711
+type(
+  string ->
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref pswdcli "cli_utils.ml" 439 13598 13620 "cli_utils.ml" 439 13598 13627
+)
+"cli_utils.ml" 443 13694 13712 "cli_utils.ml" 443 13694 13720
+type(
+  string
+)
+ident(
+  int_ref password "cli_utils.ml" 440 13630 13650 "cli_utils.ml" 440 13630 13658
+)
+"cli_utils.ml" 443 13694 13721 "cli_utils.ml" 443 13694 13740
+type(
+  string
+)
+"cli_utils.ml" 443 13694 13741 "cli_utils.ml" 443 13694 13747
+type(
+  (string * string) list
+)
+ident(
+  int_ref params "cli_utils.ml" 440 13630 13643 "cli_utils.ml" 440 13630 13649
+)
+"cli_utils.ml" 443 13694 13704 "cli_utils.ml" 443 13694 13747
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 443 13694 13696 "cli_utils.ml" 443 13694 13748
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 442 13672 13678 "cli_utils.ml" 443 13694 13749
+type(
+  string list
+)
+"cli_utils.ml" 441 13661 13665 "cli_utils.ml" 443 13694 13749
+type(
+  unit
+)
+"cli_utils.ml" 444 13753 13759 "cli_utils.ml" 444 13753 13772
+type(
+  (string * string) list
+)
+"cli_utils.ml" 444 13753 13777 "cli_utils.ml" 444 13753 13791
+type(
+  string
+)
+"cli_utils.ml" 444 13753 13792 "cli_utils.ml" 444 13753 13801
+type(
+  string
+)
+"cli_utils.ml" 444 13753 13776 "cli_utils.ml" 444 13753 13802
+type(
+  string * string
+)
+"cli_utils.ml" 444 13753 13775 "cli_utils.ml" 444 13753 13803
+type(
+  (string * string) list
+)
+"cli_utils.ml" 445 13807 13813 "cli_utils.ml" 445 13807 13831
+type(
+  (string * string) list
+)
+"cli_utils.ml" 445 13807 13836 "cli_utils.ml" 445 13807 13850
+type(
+  string
+)
+"cli_utils.ml" 445 13807 13851 "cli_utils.ml" 445 13807 13859
+type(
+  string
+)
+ident(
+  int_ref password "cli_utils.ml" 19 630 634 "cli_utils.ml" 19 630 642
+)
+"cli_utils.ml" 445 13807 13835 "cli_utils.ml" 445 13807 13860
+type(
+  string * string
+)
+"cli_utils.ml" 445 13807 13834 "cli_utils.ml" 445 13807 13861
+type(
+  (string * string) list
+)
+"cli_utils.ml" 446 13865 13869 "cli_utils.ml" 446 13865 13875
+type(
+  (string * string) list -> string -> unit
+)
+ident(
+  int_ref setpwd "cli_utils.ml" 440 13630 13636 "cli_utils.ml" 440 13630 13642
+)
+"cli_utils.ml" 446 13865 13876 "cli_utils.ml" 446 13865 13889
+type(
+  (string * string) list
+)
+ident(
+  int_ref change_params "cli_utils.ml" 444 13753 13759 "cli_utils.ml" 444 13753 13772
+)
+"cli_utils.ml" 446 13865 13890 "cli_utils.ml" 446 13865 13898
+type(
+  string
+)
+ident(
+  int_ref password "cli_utils.ml" 19 630 634 "cli_utils.ml" 19 630 642
+)
+"cli_utils.ml" 446 13865 13869 "cli_utils.ml" 446 13865 13898
+type(
+  unit
+)
+"cli_utils.ml" 447 13900 13904 "cli_utils.ml" 447 13900 13910
+type(
+  (string * string) list -> string -> unit
+)
+ident(
+  int_ref setpwd "cli_utils.ml" 440 13630 13636 "cli_utils.ml" 440 13630 13642
+)
+"cli_utils.ml" 447 13900 13911 "cli_utils.ml" 447 13900 13929
+type(
+  (string * string) list
+)
+ident(
+  int_ref change_back_params "cli_utils.ml" 445 13807 13813 "cli_utils.ml" 445 13807 13831
+)
+"cli_utils.ml" 447 13900 13930 "cli_utils.ml" 447 13900 13939
+type(
+  string
+)
+"cli_utils.ml" 447 13900 13904 "cli_utils.ml" 447 13900 13939
+type(
+  unit
+)
+"cli_utils.ml" 446 13865 13869 "cli_utils.ml" 447 13900 13939
+type(
+  unit
+)
+"cli_utils.ml" 445 13807 13809 "cli_utils.ml" 447 13900 13939
+type(
+  unit
+)
+"cli_utils.ml" 444 13753 13755 "cli_utils.ml" 447 13900 13939
+type(
+  unit
+)
+"cli_utils.ml" 440 13630 13632 "cli_utils.ml" 447 13900 13939
+type(
+  unit
+)
+"cli_utils.ml" 451 13998 14002 "cli_utils.ml" 451 13998 14017
+type(
+  'a -> 'a -> 'a option -> (string * 'a) list
+)
+ident(
+  def build_cd_params "cli_utils.ml" 459 14225 14225 --
+)
+"cli_utils.ml" 451 13998 14018 "cli_utils.ml" 451 13998 14022
+type(
+  'a
+)
+ident(
+  def vmid "cli_utils.ml" 451 13998 14023 "cli_utils.ml" 456 14165 14187
+)
+"cli_utils.ml" 451 13998 14023 "cli_utils.ml" 451 13998 14029
+type(
+  'a
+)
+ident(
+  def cdname "cli_utils.ml" 451 13998 14030 "cli_utils.ml" 456 14165 14187
+)
+"cli_utils.ml" 451 13998 14030 "cli_utils.ml" 451 13998 14040
+type(
+  'a option
+)
+ident(
+  def cdlocation "cli_utils.ml" 452 14043 14045 "cli_utils.ml" 456 14165 14187
+)
+"cli_utils.ml" 452 14043 14049 "cli_utils.ml" 452 14043 14055
+type(
+  (string * 'a) list
+)
+"cli_utils.ml" 452 14043 14060 "cli_utils.ml" 452 14043 14067
+type(
+  string
+)
+"cli_utils.ml" 452 14043 14068 "cli_utils.ml" 452 14043 14072
+type(
+  'a
+)
+ident(
+  int_ref vmid "cli_utils.ml" 451 13998 14018 "cli_utils.ml" 451 13998 14022
+)
+"cli_utils.ml" 452 14043 14059 "cli_utils.ml" 452 14043 14073
+type(
+  string * 'a
+)
+"cli_utils.ml" 453 14075 14078 "cli_utils.ml" 453 14075 14087
+type(
+  string
+)
+"cli_utils.ml" 453 14075 14088 "cli_utils.ml" 453 14075 14094
+type(
+  'a
+)
+ident(
+  int_ref cdname "cli_utils.ml" 451 13998 14023 "cli_utils.ml" 451 13998 14029
+)
+"cli_utils.ml" 453 14075 14077 "cli_utils.ml" 453 14075 14095
+type(
+  string * 'a
+)
+"cli_utils.ml" 452 14043 14058 "cli_utils.ml" 453 14075 14096
+type(
+  (string * 'a) list
+)
+"cli_utils.ml" 454 14100 14110 "cli_utils.ml" 454 14100 14120
+type(
+  'a option
+)
+ident(
+  int_ref cdlocation "cli_utils.ml" 451 13998 14030 "cli_utils.ml" 451 13998 14040
+)
+"cli_utils.ml" 455 14126 14133 "cli_utils.ml" 455 14126 14134
+type(
+  'a
+)
+ident(
+  def x "cli_utils.ml" 455 14126 14139 "cli_utils.ml" 455 14126 14164
+)
+"cli_utils.ml" 455 14126 14127 "cli_utils.ml" 455 14126 14135
+type(
+  'a option
+)
+"cli_utils.ml" 455 14126 14140 "cli_utils.ml" 455 14126 14153
+type(
+  string
+)
+"cli_utils.ml" 455 14126 14154 "cli_utils.ml" 455 14126 14155
+type(
+  'a
+)
+ident(
+  int_ref x "cli_utils.ml" 455 14126 14133 "cli_utils.ml" 455 14126 14134
+)
+"cli_utils.ml" 455 14126 14139 "cli_utils.ml" 455 14126 14156
+type(
+  string * 'a
+)
+"cli_utils.ml" 455 14126 14158 "cli_utils.ml" 455 14126 14164
+type(
+  (string * 'a) list
+)
+ident(
+  int_ref params "cli_utils.ml" 452 14043 14049 "cli_utils.ml" 452 14043 14055
+)
+"cli_utils.ml" 455 14126 14139 "cli_utils.ml" 455 14126 14164
+type(
+  (string * 'a) list
+)
+"cli_utils.ml" 456 14165 14173 "cli_utils.ml" 456 14165 14177
+type(
+  'a option
+)
+"cli_utils.ml" 456 14165 14181 "cli_utils.ml" 456 14165 14187
+type(
+  (string * 'a) list
+)
+ident(
+  int_ref params "cli_utils.ml" 452 14043 14049 "cli_utils.ml" 452 14043 14055
+)
+"cli_utils.ml" 454 14100 14104 "cli_utils.ml" 456 14165 14187
+type(
+  (string * 'a) list
+)
+"cli_utils.ml" 452 14043 14045 "cli_utils.ml" 456 14165 14187
+type(
+  (string * 'a) list
+)
+"cli_utils.ml" 459 14225 14229 "cli_utils.ml" 459 14225 14245
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> string option -> unit
+)
+ident(
+  def verify_attach_cd "cli_utils.ml" 476 14761 14761 --
+)
+"cli_utils.ml" 459 14225 14246 "cli_utils.ml" 459 14225 14249
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 459 14225 14250 "cli_utils.ml" 473 14712 14719
+)
+"cli_utils.ml" 459 14225 14250 "cli_utils.ml" 459 14225 14254
+type(
+  string
+)
+ident(
+  def vmid "cli_utils.ml" 459 14225 14255 "cli_utils.ml" 473 14712 14719
+)
+"cli_utils.ml" 459 14225 14255 "cli_utils.ml" 459 14225 14261
+type(
+  string
+)
+ident(
+  def cdname "cli_utils.ml" 459 14225 14262 "cli_utils.ml" 473 14712 14719
+)
+"cli_utils.ml" 459 14225 14262 "cli_utils.ml" 459 14225 14272
+type(
+  string option
+)
+ident(
+  def cdlocation "cli_utils.ml" 460 14275 14277 "cli_utils.ml" 473 14712 14719
+)
+"cli_utils.ml" 460 14275 14281 "cli_utils.ml" 460 14275 14287
+type(
+  (string * string) list
+)
+"cli_utils.ml" 460 14275 14290 "cli_utils.ml" 460 14275 14305
+type(
+  string -> string -> string option -> (string * string) list
+)
+ident(
+  int_ref build_cd_params "cli_utils.ml" 451 13998 14002 "cli_utils.ml" 451 13998 14017
+)
+"cli_utils.ml" 460 14275 14306 "cli_utils.ml" 460 14275 14310
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 459 14225 14250 "cli_utils.ml" 459 14225 14254
+)
+"cli_utils.ml" 460 14275 14311 "cli_utils.ml" 460 14275 14317
+type(
+  string
+)
+ident(
+  int_ref cdname "cli_utils.ml" 459 14225 14255 "cli_utils.ml" 459 14225 14261
+)
+"cli_utils.ml" 460 14275 14318 "cli_utils.ml" 460 14275 14328
+type(
+  string option
+)
+ident(
+  int_ref cdlocation "cli_utils.ml" 459 14225 14262 "cli_utils.ml" 459 14225 14272
+)
+"cli_utils.ml" 460 14275 14290 "cli_utils.ml" 460 14275 14328
+type(
+  (string * string) list
+)
+"cli_utils.ml" 461 14332 14338 "cli_utils.ml" 461 14332 14339
+type(
+  string list
+)
+"cli_utils.ml" 461 14332 14342 "cli_utils.ml" 461 14332 14356
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 461 14332 14362 "cli_utils.ml" 461 14332 14364
+type(
+  unit
+)
+"cli_utils.ml" 461 14332 14366 "cli_utils.ml" 461 14332 14369
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 459 14225 14246 "cli_utils.ml" 459 14225 14249
+)
+"cli_utils.ml" 461 14332 14370 "cli_utils.ml" 461 14332 14381
+type(
+  string
+)
+"cli_utils.ml" 461 14332 14382 "cli_utils.ml" 461 14332 14388
+type(
+  (string * string) list
+)
+ident(
+  int_ref params "cli_utils.ml" 460 14275 14281 "cli_utils.ml" 460 14275 14287
+)
+"cli_utils.ml" 461 14332 14366 "cli_utils.ml" 461 14332 14388
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 461 14332 14357 "cli_utils.ml" 461 14332 14389
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 461 14332 14342 "cli_utils.ml" 461 14332 14389
+type(
+  string list
+)
+"cli_utils.ml" 462 14393 14397 "cli_utils.ml" 462 14393 14401
+type(
+  (unit -> bool) -> unit
+)
+ident(
+  int_ref poll "cli_utils.ml" 168 4166 4170 "cli_utils.ml" 168 4166 4174
+)
+"cli_utils.ml" 463 14402 14413 "cli_utils.ml" 463 14402 14415
+type(
+  unit
+)
+"cli_utils.ml" 464 14418 14424 "cli_utils.ml" 464 14418 14429
+type(
+  string list
+)
+"cli_utils.ml" 464 14418 14432 "cli_utils.ml" 464 14418 14446
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 464 14418 14452 "cli_utils.ml" 464 14418 14454
+type(
+  unit
+)
+"cli_utils.ml" 464 14418 14456 "cli_utils.ml" 464 14418 14459
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 459 14225 14246 "cli_utils.ml" 459 14225 14249
+)
+"cli_utils.ml" 464 14418 14460 "cli_utils.ml" 464 14418 14472
+type(
+  string
+)
+"cli_utils.ml" 464 14418 14473 "cli_utils.ml" 464 14418 14479
+type(
+  (string * string) list
+)
+ident(
+  int_ref params "cli_utils.ml" 460 14275 14281 "cli_utils.ml" 460 14275 14287
+)
+"cli_utils.ml" 464 14418 14456 "cli_utils.ml" 464 14418 14479
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 464 14418 14447 "cli_utils.ml" 464 14418 14480
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 464 14418 14432 "cli_utils.ml" 464 14418 14480
+type(
+  string list
+)
+"cli_utils.ml" 465 14484 14490 "cli_utils.ml" 465 14484 14494
+type(
+  string list
+)
+"cli_utils.ml" 465 14484 14497 "cli_utils.ml" 465 14484 14503
+type(
+  (string -> string option) -> string list -> string list
+)
+ident(
+  int_ref mapopt "cli_utils.ml" 126 3182 3190 "cli_utils.ml" 126 3182 3196
+)
+"cli_utils.ml" 465 14484 14505 "cli_utils.ml" 465 14484 14511
+type(
+  string -> string -> string option
+)
+ident(
+  int_ref getval "cli_utils.ml" 114 2905 2909 "cli_utils.ml" 114 2905 2915
+)
+"cli_utils.ml" 465 14484 14512 "cli_utils.ml" 465 14484 14519
+type(
+  string
+)
+"cli_utils.ml" 465 14484 14504 "cli_utils.ml" 465 14484 14520
+type(
+  string -> string option
+)
+"cli_utils.ml" 465 14484 14521 "cli_utils.ml" 465 14484 14526
+type(
+  string list
+)
+ident(
+  int_ref lines "cli_utils.ml" 464 14418 14424 "cli_utils.ml" 464 14418 14429
+)
+"cli_utils.ml" 465 14484 14497 "cli_utils.ml" 465 14484 14526
+type(
+  string list
+)
+"cli_utils.ml" 466 14530 14540 "cli_utils.ml" 466 14530 14544
+type(
+  string list
+)
+ident(
+  int_ref name "cli_utils.ml" 465 14484 14490 "cli_utils.ml" 465 14484 14494
+)
+"cli_utils.ml" 467 14550 14558 "cli_utils.ml" 467 14550 14560
+type(
+  string list
+)
+"cli_utils.ml" 467 14550 14564 "cli_utils.ml" 467 14550 14569
+type(
+  bool
+)
+"cli_utils.ml" 468 14570 14579 "cli_utils.ml" 468 14570 14580
+type(
+  string
+)
+ident(
+  def x "cli_utils.ml" 469 14585 14588 "cli_utils.ml" 471 14641 14659
+)
+"cli_utils.ml" 468 14570 14578 "cli_utils.ml" 468 14570 14581
+type(
+  string list
+)
+"cli_utils.ml" 469 14585 14588 "cli_utils.ml" 469 14585 14598
+type(
+  string -> unit
+)
+ident(
+  int_ref print_line "cli_utils.ml" 39 1043 1047 "cli_utils.ml" 39 1043 1057
+)
+"cli_utils.ml" 469 14585 14599 "cli_utils.ml" 469 14585 14600
+type(
+  string
+)
+ident(
+  int_ref x "cli_utils.ml" 468 14570 14579 "cli_utils.ml" 468 14570 14580
+)
+"cli_utils.ml" 469 14585 14588 "cli_utils.ml" 469 14585 14600
+type(
+  unit
+)
+"cli_utils.ml" 470 14602 14608 "cli_utils.ml" 470 14602 14614
+type(
+  string
+)
+ident(
+  int_ref cdname "cli_utils.ml" 459 14225 14255 "cli_utils.ml" 459 14225 14261
+)
+"cli_utils.ml" 470 14602 14614 "cli_utils.ml" 470 14602 14615
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"cli_utils.ml" 470 14602 14615 "cli_utils.ml" 470 14602 14622
+type(
+  string
+)
+"cli_utils.ml" 470 14602 14608 "cli_utils.ml" 470 14602 14622
+type(
+  bool
+)
+"cli_utils.ml" 470 14602 14629 "cli_utils.ml" 470 14602 14630
+type(
+  string
+)
+ident(
+  int_ref x "cli_utils.ml" 468 14570 14579 "cli_utils.ml" 468 14570 14580
+)
+"cli_utils.ml" 470 14602 14630 "cli_utils.ml" 470 14602 14631
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"cli_utils.ml" 470 14602 14631 "cli_utils.ml" 470 14602 14639
+type(
+  string
+)
+"cli_utils.ml" 470 14602 14628 "cli_utils.ml" 470 14602 14640
+type(
+  bool
+)
+"cli_utils.ml" 471 14641 14650 "cli_utils.ml" 471 14641 14651
+type(
+  string
+)
+ident(
+  int_ref x "cli_utils.ml" 468 14570 14579 "cli_utils.ml" 468 14570 14580
+)
+"cli_utils.ml" 471 14641 14651 "cli_utils.ml" 471 14641 14652
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"cli_utils.ml" 471 14641 14652 "cli_utils.ml" 471 14641 14658
+type(
+  string
+)
+ident(
+  int_ref cdname "cli_utils.ml" 459 14225 14255 "cli_utils.ml" 459 14225 14261
+)
+"cli_utils.ml" 471 14641 14649 "cli_utils.ml" 471 14641 14659
+type(
+  bool
+)
+"cli_utils.ml" 470 14602 14605 "cli_utils.ml" 471 14641 14659
+type(
+  bool
+)
+"cli_utils.ml" 469 14585 14588 "cli_utils.ml" 471 14641 14659
+type(
+  bool
+)
+"cli_utils.ml" 472 14660 14668 "cli_utils.ml" 472 14660 14669
+type(
+  string list
+)
+"cli_utils.ml" 472 14660 14673 "cli_utils.ml" 472 14660 14678
+type(
+  exn -> bool
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"cli_utils.ml" 472 14660 14701 "cli_utils.ml" 472 14660 14710
+type(
+  string
+)
+"cli_utils.ml" 472 14660 14679 "cli_utils.ml" 472 14660 14711
+type(
+  exn
+)
+"cli_utils.ml" 472 14660 14673 "cli_utils.ml" 472 14660 14711
+type(
+  bool
+)
+"cli_utils.ml" 466 14530 14534 "cli_utils.ml" 472 14660 14711
+type(
+  bool
+)
+"cli_utils.ml" 465 14484 14486 "cli_utils.ml" 472 14660 14711
+type(
+  bool
+)
+"cli_utils.ml" 464 14418 14420 "cli_utils.ml" 472 14660 14711
+type(
+  bool
+)
+"cli_utils.ml" 463 14402 14408 "cli_utils.ml" 473 14712 14719
+type(
+  unit -> bool
+)
+"cli_utils.ml" 462 14393 14397 "cli_utils.ml" 473 14712 14719
+type(
+  unit
+)
+"cli_utils.ml" 461 14332 14334 "cli_utils.ml" 473 14712 14719
+type(
+  unit
+)
+"cli_utils.ml" 460 14275 14277 "cli_utils.ml" 473 14712 14719
+type(
+  unit
+)
+"cli_utils.ml" 476 14761 14765 "cli_utils.ml" 476 14761 14781
+type(
+  (string -> (string * 'a) list -> string list * Unix.process_status) ->
+  'a -> 'a -> 'a option -> unit
+)
+ident(
+  def verify_remove_cd "cli_utils.ml" 486 15124 15124 --
+)
+"cli_utils.ml" 476 14761 14782 "cli_utils.ml" 476 14761 14785
+type(
+  string -> (string * 'a) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 476 14761 14786 "cli_utils.ml" 483 15070 15083
+)
+"cli_utils.ml" 476 14761 14786 "cli_utils.ml" 476 14761 14790
+type(
+  'a
+)
+ident(
+  def vmid "cli_utils.ml" 476 14761 14791 "cli_utils.ml" 483 15070 15083
+)
+"cli_utils.ml" 476 14761 14791 "cli_utils.ml" 476 14761 14797
+type(
+  'a
+)
+ident(
+  def cdname "cli_utils.ml" 476 14761 14798 "cli_utils.ml" 483 15070 15083
+)
+"cli_utils.ml" 476 14761 14798 "cli_utils.ml" 476 14761 14808
+type(
+  'a option
+)
+ident(
+  def cdlocation "cli_utils.ml" 477 14811 14813 "cli_utils.ml" 483 15070 15083
+)
+"cli_utils.ml" 477 14811 14817 "cli_utils.ml" 477 14811 14823
+type(
+  (string * 'a) list
+)
+"cli_utils.ml" 477 14811 14826 "cli_utils.ml" 477 14811 14841
+type(
+  'a -> 'a -> 'a option -> (string * 'a) list
+)
+ident(
+  int_ref build_cd_params "cli_utils.ml" 451 13998 14002 "cli_utils.ml" 451 13998 14017
+)
+"cli_utils.ml" 477 14811 14842 "cli_utils.ml" 477 14811 14846
+type(
+  'a
+)
+ident(
+  int_ref vmid "cli_utils.ml" 476 14761 14786 "cli_utils.ml" 476 14761 14790
+)
+"cli_utils.ml" 477 14811 14847 "cli_utils.ml" 477 14811 14853
+type(
+  'a
+)
+ident(
+  int_ref cdname "cli_utils.ml" 476 14761 14791 "cli_utils.ml" 476 14761 14797
+)
+"cli_utils.ml" 477 14811 14854 "cli_utils.ml" 477 14811 14864
+type(
+  'a option
+)
+ident(
+  int_ref cdlocation "cli_utils.ml" 476 14761 14798 "cli_utils.ml" 476 14761 14808
+)
+"cli_utils.ml" 477 14811 14826 "cli_utils.ml" 477 14811 14864
+type(
+  (string * 'a) list
+)
+"cli_utils.ml" 478 14868 14874 "cli_utils.ml" 478 14868 14875
+type(
+  string list
+)
+"cli_utils.ml" 478 14868 14878 "cli_utils.ml" 478 14868 14892
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 478 14868 14898 "cli_utils.ml" 478 14868 14900
+type(
+  unit
+)
+"cli_utils.ml" 478 14868 14902 "cli_utils.ml" 478 14868 14905
+type(
+  string -> (string * 'a) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 476 14761 14782 "cli_utils.ml" 476 14761 14785
+)
+"cli_utils.ml" 478 14868 14906 "cli_utils.ml" 478 14868 14920
+type(
+  string
+)
+"cli_utils.ml" 478 14868 14921 "cli_utils.ml" 478 14868 14927
+type(
+  (string * 'a) list
+)
+ident(
+  int_ref params "cli_utils.ml" 477 14811 14817 "cli_utils.ml" 477 14811 14823
+)
+"cli_utils.ml" 478 14868 14902 "cli_utils.ml" 478 14868 14927
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 478 14868 14893 "cli_utils.ml" 478 14868 14928
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 478 14868 14878 "cli_utils.ml" 478 14868 14928
+type(
+  string list
+)
+"cli_utils.ml" 479 14932 14936 "cli_utils.ml" 479 14932 14940
+type(
+  (unit -> bool) -> unit
+)
+ident(
+  int_ref poll "cli_utils.ml" 168 4166 4170 "cli_utils.ml" 168 4166 4174
+)
+"cli_utils.ml" 480 14941 14952 "cli_utils.ml" 480 14941 14954
+type(
+  unit
+)
+"cli_utils.ml" 481 14957 14963 "cli_utils.ml" 481 14957 14968
+type(
+  string list
+)
+"cli_utils.ml" 481 14957 14971 "cli_utils.ml" 481 14957 14985
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 481 14957 14991 "cli_utils.ml" 481 14957 14993
+type(
+  unit
+)
+"cli_utils.ml" 481 14957 14995 "cli_utils.ml" 481 14957 14998
+type(
+  string -> (string * 'a) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 476 14761 14782 "cli_utils.ml" 476 14761 14785
+)
+"cli_utils.ml" 481 14957 14999 "cli_utils.ml" 481 14957 15011
+type(
+  string
+)
+"cli_utils.ml" 481 14957 15012 "cli_utils.ml" 481 14957 15018
+type(
+  (string * 'a) list
+)
+ident(
+  int_ref params "cli_utils.ml" 477 14811 14817 "cli_utils.ml" 477 14811 14823
+)
+"cli_utils.ml" 481 14957 14995 "cli_utils.ml" 481 14957 15018
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 481 14957 14986 "cli_utils.ml" 481 14957 15019
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 481 14957 14971 "cli_utils.ml" 481 14957 15019
+type(
+  string list
+)
+"cli_utils.ml" 482 15023 15029 "cli_utils.ml" 482 15023 15034
+type(
+  string list
+)
+"cli_utils.ml" 482 15023 15037 "cli_utils.ml" 482 15023 15043
+type(
+  (string -> string option) -> string list -> string list
+)
+ident(
+  int_ref mapopt "cli_utils.ml" 126 3182 3190 "cli_utils.ml" 126 3182 3196
+)
+"cli_utils.ml" 482 15023 15045 "cli_utils.ml" 482 15023 15051
+type(
+  string -> string -> string option
+)
+ident(
+  int_ref getval "cli_utils.ml" 114 2905 2909 "cli_utils.ml" 114 2905 2915
+)
+"cli_utils.ml" 482 15023 15052 "cli_utils.ml" 482 15023 15059
+type(
+  string
+)
+"cli_utils.ml" 482 15023 15044 "cli_utils.ml" 482 15023 15060
+type(
+  string -> string option
+)
+"cli_utils.ml" 482 15023 15061 "cli_utils.ml" 482 15023 15066
+type(
+  string list
+)
+ident(
+  int_ref lines "cli_utils.ml" 481 14957 14963 "cli_utils.ml" 481 14957 14968
+)
+"cli_utils.ml" 482 15023 15037 "cli_utils.ml" 482 15023 15066
+type(
+  string list
+)
+"cli_utils.ml" 483 15070 15074 "cli_utils.ml" 483 15070 15079
+type(
+  string list
+)
+ident(
+  int_ref names "cli_utils.ml" 482 15023 15029 "cli_utils.ml" 482 15023 15034
+)
+"cli_utils.ml" 483 15070 15079 "cli_utils.ml" 483 15070 15080
+type(
+  string list -> string list -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"cli_utils.ml" 483 15070 15080 "cli_utils.ml" 483 15070 15082
+type(
+  string list
+)
+"cli_utils.ml" 483 15070 15074 "cli_utils.ml" 483 15070 15082
+type(
+  bool
+)
+"cli_utils.ml" 482 15023 15025 "cli_utils.ml" 483 15070 15082
+type(
+  bool
+)
+"cli_utils.ml" 481 14957 14959 "cli_utils.ml" 483 15070 15082
+type(
+  bool
+)
+"cli_utils.ml" 480 14941 14947 "cli_utils.ml" 483 15070 15083
+type(
+  unit -> bool
+)
+"cli_utils.ml" 479 14932 14936 "cli_utils.ml" 483 15070 15083
+type(
+  unit
+)
+"cli_utils.ml" 478 14868 14870 "cli_utils.ml" 483 15070 15083
+type(
+  unit
+)
+"cli_utils.ml" 477 14811 14813 "cli_utils.ml" 483 15070 15083
+type(
+  unit
+)
+"cli_utils.ml" 486 15124 15128 "cli_utils.ml" 486 15124 15144
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> string option -> unit
+)
+ident(
+  def cd_attach_remove "cli_utils.ml" 490 15274 15274 --
+)
+"cli_utils.ml" 486 15124 15145 "cli_utils.ml" 486 15124 15148
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 486 15124 15149 "cli_utils.ml" 488 15221 15266
+)
+"cli_utils.ml" 486 15124 15149 "cli_utils.ml" 486 15124 15153
+type(
+  string
+)
+ident(
+  def vmid "cli_utils.ml" 486 15124 15154 "cli_utils.ml" 488 15221 15266
+)
+"cli_utils.ml" 486 15124 15154 "cli_utils.ml" 486 15124 15160
+type(
+  string
+)
+ident(
+  def cdname "cli_utils.ml" 486 15124 15161 "cli_utils.ml" 488 15221 15266
+)
+"cli_utils.ml" 486 15124 15161 "cli_utils.ml" 486 15124 15171
+type(
+  string option
+)
+ident(
+  def cdlocation "cli_utils.ml" 487 15174 15176 "cli_utils.ml" 488 15221 15266
+)
+"cli_utils.ml" 487 15174 15176 "cli_utils.ml" 487 15174 15192
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> string option -> unit
+)
+ident(
+  int_ref verify_attach_cd "cli_utils.ml" 459 14225 14229 "cli_utils.ml" 459 14225 14245
+)
+"cli_utils.ml" 487 15174 15193 "cli_utils.ml" 487 15174 15196
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 486 15124 15145 "cli_utils.ml" 486 15124 15148
+)
+"cli_utils.ml" 487 15174 15197 "cli_utils.ml" 487 15174 15201
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 486 15124 15149 "cli_utils.ml" 486 15124 15153
+)
+"cli_utils.ml" 487 15174 15202 "cli_utils.ml" 487 15174 15208
+type(
+  string
+)
+ident(
+  int_ref cdname "cli_utils.ml" 486 15124 15154 "cli_utils.ml" 486 15124 15160
+)
+"cli_utils.ml" 487 15174 15209 "cli_utils.ml" 487 15174 15219
+type(
+  string option
+)
+ident(
+  int_ref cdlocation "cli_utils.ml" 486 15124 15161 "cli_utils.ml" 486 15124 15171
+)
+"cli_utils.ml" 487 15174 15176 "cli_utils.ml" 487 15174 15219
+type(
+  unit
+)
+"cli_utils.ml" 488 15221 15223 "cli_utils.ml" 488 15221 15239
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> string option -> unit
+)
+ident(
+  int_ref verify_remove_cd "cli_utils.ml" 476 14761 14765 "cli_utils.ml" 476 14761 14781
+)
+"cli_utils.ml" 488 15221 15240 "cli_utils.ml" 488 15221 15243
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 486 15124 15145 "cli_utils.ml" 486 15124 15148
+)
+"cli_utils.ml" 488 15221 15244 "cli_utils.ml" 488 15221 15248
+type(
+  string
+)
+ident(
+  int_ref vmid "cli_utils.ml" 486 15124 15149 "cli_utils.ml" 486 15124 15153
+)
+"cli_utils.ml" 488 15221 15249 "cli_utils.ml" 488 15221 15255
+type(
+  string
+)
+ident(
+  int_ref cdname "cli_utils.ml" 486 15124 15154 "cli_utils.ml" 486 15124 15160
+)
+"cli_utils.ml" 488 15221 15256 "cli_utils.ml" 488 15221 15266
+type(
+  string option
+)
+ident(
+  int_ref cdlocation "cli_utils.ml" 486 15124 15161 "cli_utils.ml" 486 15124 15171
+)
+"cli_utils.ml" 488 15221 15223 "cli_utils.ml" 488 15221 15266
+type(
+  unit
+)
+"cli_utils.ml" 487 15174 15176 "cli_utils.ml" 488 15221 15266
+type(
+  unit
+)
+"cli_utils.ml" 490 15274 15278 "cli_utils.ml" 490 15274 15301
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string list
+)
+ident(
+  def apply_license_to_server "cli_utils.ml" 492 15356 15394 --
+)
+"cli_utils.ml" 490 15274 15302 "cli_utils.ml" 490 15274 15305
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli "cli_utils.ml" 491 15308 15310 "cli_utils.ml" 492 15356 15394
+)
+"cli_utils.ml" 491 15308 15310 "cli_utils.ml" 491 15308 15324
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  int_ref expect_success "cli_utils.ml" 110 2830 2834 "cli_utils.ml" 110 2830 2848
+)
+"cli_utils.ml" 491 15308 15329 "cli_utils.ml" 491 15308 15331
+type(
+  unit
+)
+"cli_utils.ml" 491 15308 15333 "cli_utils.ml" 491 15308 15336
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "cli_utils.ml" 490 15274 15302 "cli_utils.ml" 490 15274 15305
+)
+"cli_utils.ml" 491 15308 15337 "cli_utils.ml" 491 15308 15355
+type(
+  string
+)
+"cli_utils.ml" 492 15356 15364 "cli_utils.ml" 492 15356 15378
+type(
+  string
+)
+"cli_utils.ml" 492 15356 15379 "cli_utils.ml" 492 15356 15391
+type(
+  string
+)
+ident(
+  int_ref license_file "cli_utils.ml" 23 728 732 "cli_utils.ml" 23 728 744
+)
+"cli_utils.ml" 492 15356 15363 "cli_utils.ml" 492 15356 15392
+type(
+  string * string
+)
+"cli_utils.ml" 492 15356 15362 "cli_utils.ml" 492 15356 15393
+type(
+  (string * string) list
+)
+"cli_utils.ml" 491 15308 15333 "cli_utils.ml" 492 15356 15393
+type(
+  string list * Unix.process_status
+)
+"cli_utils.ml" 491 15308 15325 "cli_utils.ml" 492 15356 15394
+type(
+  unit -> string list * Unix.process_status
+)
+"cli_utils.ml" 491 15308 15310 "cli_utils.ml" 492 15356 15394
+type(
+  string list
+)
--- /dev/null
+++ xen-api-0.1/ocaml/xe-cli/rt/geneva/sm_stress.annot
@@ -0,0 +1,1766 @@
+"sm_stress.ml" 23 800 804 "sm_stress.ml" 23 800 807
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  def cli "sm_stress.ml" 25 822 822 --
+)
+"sm_stress.ml" 23 800 810 "sm_stress.ml" 23 800 820
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  ext_ref Cli_utils.cli_onhost
+)
+"sm_stress.ml" 25 822 826 "sm_stress.ml" 25 822 836
+type(
+  int ref
+)
+ident(
+  def base_size1 "sm_stress.ml" 26 845 845 --
+)
+"sm_stress.ml" 25 822 839 "sm_stress.ml" 25 822 842
+type(
+  int -> int ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"sm_stress.ml" 25 822 843 "sm_stress.ml" 25 822 844
+type(
+  int
+)
+"sm_stress.ml" 25 822 839 "sm_stress.ml" 25 822 844
+type(
+  int ref
+)
+"sm_stress.ml" 26 845 849 "sm_stress.ml" 26 845 859
+type(
+  int ref
+)
+ident(
+  def base_size2 "sm_stress.ml" 27 868 868 --
+)
+"sm_stress.ml" 26 845 862 "sm_stress.ml" 26 845 865
+type(
+  int -> int ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"sm_stress.ml" 26 845 866 "sm_stress.ml" 26 845 867
+type(
+  int
+)
+"sm_stress.ml" 26 845 862 "sm_stress.ml" 26 845 867
+type(
+  int ref
+)
+"sm_stress.ml" 27 868 872 "sm_stress.ml" 27 868 880
+type(
+  int ref
+)
+ident(
+  def size_inc "sm_stress.ml" 30 917 917 --
+)
+"sm_stress.ml" 27 868 885 "sm_stress.ml" 27 868 888
+type(
+  int -> int ref
+)
+ident(
+  ext_ref Pervasives.ref
+)
+"sm_stress.ml" 27 868 889 "sm_stress.ml" 27 868 890
+type(
+  int
+)
+"sm_stress.ml" 27 868 885 "sm_stress.ml" 27 868 890
+type(
+  int ref
+)
+"sm_stress.ml" 31 925 927 "sm_stress.ml" 31 925 936
+type(
+  (Arg.key * Arg.spec * Arg.doc) list ->
+  Arg.anon_fun -> Arg.usage_msg -> unit
+)
+ident(
+  ext_ref Arg.parse
+)
+"sm_stress.ml" 33 1009 1016 "sm_stress.ml" 33 1009 1021
+type(
+  Arg.key
+)
+"sm_stress.ml" 33 1009 1038 "sm_stress.ml" 33 1009 1040
+type(
+  string ref
+)
+ident(
+  ext_ref Cli_utils.xe
+)
+"sm_stress.ml" 33 1009 1023 "sm_stress.ml" 33 1009 1040
+type(
+  Arg.spec
+)
+"sm_stress.ml" 33 1009 1042 "sm_stress.ml" 33 1009 1069
+type(
+  Arg.doc
+)
+"sm_stress.ml" 33 1009 1016 "sm_stress.ml" 33 1009 1069
+type(
+  Arg.key * Arg.spec * Arg.doc
+)
+"sm_stress.ml" 34 1071 1078 "sm_stress.ml" 34 1071 1091
+type(
+  Arg.key
+)
+"sm_stress.ml" 34 1071 1105 "sm_stress.ml" 34 1071 1115
+type(
+  int ref
+)
+ident(
+  int_ref base_size1 "sm_stress.ml" 25 822 826 "sm_stress.ml" 25 822 836
+)
+"sm_stress.ml" 34 1071 1093 "sm_stress.ml" 34 1071 1115
+type(
+  Arg.spec
+)
+"sm_stress.ml" 34 1071 1117 "sm_stress.ml" 34 1071 1145
+type(
+  Arg.doc
+)
+"sm_stress.ml" 34 1071 1078 "sm_stress.ml" 34 1071 1145
+type(
+  Arg.key * Arg.spec * Arg.doc
+)
+"sm_stress.ml" 35 1147 1154 "sm_stress.ml" 35 1147 1167
+type(
+  Arg.key
+)
+"sm_stress.ml" 35 1147 1181 "sm_stress.ml" 35 1147 1191
+type(
+  int ref
+)
+ident(
+  int_ref base_size2 "sm_stress.ml" 26 845 849 "sm_stress.ml" 26 845 859
+)
+"sm_stress.ml" 35 1147 1169 "sm_stress.ml" 35 1147 1191
+type(
+  Arg.spec
+)
+"sm_stress.ml" 35 1147 1193 "sm_stress.ml" 35 1147 1221
+type(
+  Arg.doc
+)
+"sm_stress.ml" 35 1147 1154 "sm_stress.ml" 35 1147 1221
+type(
+  Arg.key * Arg.spec * Arg.doc
+)
+"sm_stress.ml" 36 1223 1230 "sm_stress.ml" 36 1223 1241
+type(
+  Arg.key
+)
+"sm_stress.ml" 36 1223 1255 "sm_stress.ml" 36 1223 1263
+type(
+  int ref
+)
+ident(
+  int_ref size_inc "sm_stress.ml" 27 868 872 "sm_stress.ml" 27 868 880
+)
+"sm_stress.ml" 36 1223 1243 "sm_stress.ml" 36 1223 1263
+type(
+  Arg.spec
+)
+"sm_stress.ml" 36 1223 1265 "sm_stress.ml" 36 1223 1299
+type(
+  Arg.doc
+)
+"sm_stress.ml" 36 1223 1230 "sm_stress.ml" 36 1223 1299
+type(
+  Arg.key * Arg.spec * Arg.doc
+)
+"sm_stress.ml" 31 925 937 "sm_stress.ml" 37 1300 1306
+type(
+  (Arg.key * Arg.spec * Arg.doc) list
+)
+"sm_stress.ml" 38 1307 1316 "sm_stress.ml" 38 1307 1317
+type(
+  string
+)
+ident(
+  def x "sm_stress.ml" 38 1307 1321 "sm_stress.ml" 38 1307 1377
+)
+"sm_stress.ml" 38 1307 1321 "sm_stress.ml" 38 1307 1334
+type(
+  (string -> unit, out_channel, unit) format -> string -> unit
+)
+ident(
+  ext_ref Printf.printf
+)
+"sm_stress.ml" 38 1307 1335 "sm_stress.ml" 38 1307 1375
+type(
+  (string -> unit, out_channel, unit) format
+)
+"sm_stress.ml" 38 1307 1376 "sm_stress.ml" 38 1307 1377
+type(
+  string
+)
+ident(
+  int_ref x "sm_stress.ml" 38 1307 1316 "sm_stress.ml" 38 1307 1317
+)
+"sm_stress.ml" 38 1307 1321 "sm_stress.ml" 38 1307 1377
+type(
+  unit
+)
+"sm_stress.ml" 38 1307 1311 "sm_stress.ml" 38 1307 1378
+type(
+  string -> unit
+)
+"sm_stress.ml" 39 1379 1383 "sm_stress.ml" 39 1379 1411
+type(
+  Arg.usage_msg
+)
+"sm_stress.ml" 31 925 927 "sm_stress.ml" 39 1379 1411
+type(
+  unit
+)
+"sm_stress.ml" 43 1447 1452 "sm_stress.ml" 43 1447 1453
+type(
+  string ref -> string
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"sm_stress.ml" 43 1447 1453 "sm_stress.ml" 43 1447 1455
+type(
+  string ref
+)
+ident(
+  ext_ref Cli_utils.xe
+)
+"sm_stress.ml" 43 1447 1452 "sm_stress.ml" 43 1447 1455
+type(
+  string
+)
+"sm_stress.ml" 43 1447 1456 "sm_stress.ml" 43 1447 1457
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"sm_stress.ml" 43 1447 1458 "sm_stress.ml" 43 1447 1460
+type(
+  string
+)
+"sm_stress.ml" 43 1447 1452 "sm_stress.ml" 43 1447 1460
+type(
+  bool
+)
+"sm_stress.ml" 45 1476 1482 "sm_stress.ml" 45 1476 1492
+type(
+  string -> unit
+)
+ident(
+  ext_ref Cli_utils.print_line
+)
+"sm_stress.ml" 45 1476 1493 "sm_stress.ml" 45 1476 1549
+type(
+  string
+)
+"sm_stress.ml" 45 1476 1482 "sm_stress.ml" 45 1476 1549
+type(
+  unit
+)
+"sm_stress.ml" 46 1551 1557 "sm_stress.ml" 46 1551 1562
+type(
+  exn -> unit
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"sm_stress.ml" 46 1551 1563 "sm_stress.ml" 46 1551 1578
+type(
+  exn
+)
+"sm_stress.ml" 46 1551 1557 "sm_stress.ml" 46 1551 1578
+type(
+  unit
+)
+"sm_stress.ml" 44 1466 1470 "sm_stress.ml" 47 1579 1586
+type(
+  unit
+)
+"sm_stress.ml" 43 1447 1449 "sm_stress.ml" 47 1579 1586
+type(
+  unit
+)
+"sm_stress.ml" 55 1739 1744 "sm_stress.ml" 55 1739 1745
+type(
+  int ref -> int
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"sm_stress.ml" 55 1739 1745 "sm_stress.ml" 55 1739 1755
+type(
+  int ref
+)
+ident(
+  int_ref base_size1 "sm_stress.ml" 25 822 826 "sm_stress.ml" 25 822 836
+)
+"sm_stress.ml" 55 1739 1744 "sm_stress.ml" 55 1739 1755
+type(
+  int
+)
+"sm_stress.ml" 55 1739 1755 "sm_stress.ml" 55 1739 1757
+type(
+  int -> int -> bool
+)
+ident(
+  ext_ref Pervasives.( <= )
+)
+"sm_stress.ml" 55 1739 1757 "sm_stress.ml" 55 1739 1758
+type(
+  int
+)
+"sm_stress.ml" 55 1739 1744 "sm_stress.ml" 55 1739 1758
+type(
+  bool
+)
+"sm_stress.ml" 55 1739 1759 "sm_stress.ml" 55 1739 1761
+type(
+  bool -> bool -> bool
+)
+ident(
+  ext_ref Pervasives.( || )
+)
+"sm_stress.ml" 55 1739 1762 "sm_stress.ml" 55 1739 1763
+type(
+  int ref -> int
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"sm_stress.ml" 55 1739 1763 "sm_stress.ml" 55 1739 1773
+type(
+  int ref
+)
+ident(
+  int_ref base_size2 "sm_stress.ml" 26 845 849 "sm_stress.ml" 26 845 859
+)
+"sm_stress.ml" 55 1739 1762 "sm_stress.ml" 55 1739 1773
+type(
+  int
+)
+"sm_stress.ml" 55 1739 1773 "sm_stress.ml" 55 1739 1775
+type(
+  int -> int -> bool
+)
+ident(
+  ext_ref Pervasives.( <= )
+)
+"sm_stress.ml" 55 1739 1775 "sm_stress.ml" 55 1739 1776
+type(
+  int
+)
+"sm_stress.ml" 55 1739 1762 "sm_stress.ml" 55 1739 1776
+type(
+  bool
+)
+"sm_stress.ml" 55 1739 1777 "sm_stress.ml" 55 1739 1779
+type(
+  bool -> bool -> bool
+)
+ident(
+  ext_ref Pervasives.( || )
+)
+"sm_stress.ml" 55 1739 1780 "sm_stress.ml" 55 1739 1781
+type(
+  int ref -> int
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"sm_stress.ml" 55 1739 1781 "sm_stress.ml" 55 1739 1789
+type(
+  int ref
+)
+ident(
+  int_ref size_inc "sm_stress.ml" 27 868 872 "sm_stress.ml" 27 868 880
+)
+"sm_stress.ml" 55 1739 1780 "sm_stress.ml" 55 1739 1789
+type(
+  int
+)
+"sm_stress.ml" 55 1739 1789 "sm_stress.ml" 55 1739 1791
+type(
+  int -> int -> bool
+)
+ident(
+  ext_ref Pervasives.( <= )
+)
+"sm_stress.ml" 55 1739 1791 "sm_stress.ml" 55 1739 1792
+type(
+  int
+)
+"sm_stress.ml" 55 1739 1780 "sm_stress.ml" 55 1739 1792
+type(
+  bool
+)
+"sm_stress.ml" 55 1739 1762 "sm_stress.ml" 55 1739 1792
+type(
+  bool
+)
+"sm_stress.ml" 55 1739 1744 "sm_stress.ml" 55 1739 1792
+type(
+  bool
+)
+"sm_stress.ml" 57 1808 1814 "sm_stress.ml" 57 1808 1824
+type(
+  string -> unit
+)
+ident(
+  ext_ref Cli_utils.print_line
+)
+"sm_stress.ml" 57 1808 1825 "sm_stress.ml" 57 1808 1892
+type(
+  string
+)
+"sm_stress.ml" 57 1808 1814 "sm_stress.ml" 57 1808 1892
+type(
+  unit
+)
+"sm_stress.ml" 58 1894 1900 "sm_stress.ml" 58 1894 1905
+type(
+  exn -> unit
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"sm_stress.ml" 58 1894 1906 "sm_stress.ml" 58 1894 1921
+type(
+  exn
+)
+"sm_stress.ml" 58 1894 1900 "sm_stress.ml" 58 1894 1921
+type(
+  unit
+)
+"sm_stress.ml" 56 1798 1802 "sm_stress.ml" 59 1922 1929
+type(
+  unit
+)
+"sm_stress.ml" 55 1739 1741 "sm_stress.ml" 59 1922 1929
+type(
+  unit
+)
+"sm_stress.ml" 43 1447 1449 "sm_stress.ml" 59 1922 1929
+type(
+  unit
+)
+"sm_stress.ml" 62 1963 1971 "sm_stress.ml" 62 1963 1994
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string list
+)
+ident(
+  ext_ref Cli_utils.apply_license_to_server
+)
+"sm_stress.ml" 62 1963 1995 "sm_stress.ml" 62 1963 1998
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "sm_stress.ml" 23 800 804 "sm_stress.ml" 23 800 807
+)
+"sm_stress.ml" 62 1963 1971 "sm_stress.ml" 62 1963 1998
+type(
+  string list
+)
+"sm_stress.ml" 65 2024 2032 "sm_stress.ml" 65 2024 2049
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  unit
+)
+ident(
+  ext_ref Cli_utils.uninstall_all_vms
+)
+"sm_stress.ml" 65 2024 2050 "sm_stress.ml" 65 2024 2053
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "sm_stress.ml" 23 800 804 "sm_stress.ml" 23 800 807
+)
+"sm_stress.ml" 65 2024 2032 "sm_stress.ml" 65 2024 2053
+type(
+  unit
+)
+"sm_stress.ml" 68 2080 2084 "sm_stress.ml" 68 2080 2094
+type(
+  (string * string) list
+)
+ident(
+  def hvm_guests "sm_stress.ml" 75 2312 2312 --
+)
+"sm_stress.ml" 69 2099 2104 "sm_stress.ml" 69 2099 2131
+type(
+  string
+)
+"sm_stress.ml" 69 2099 2132 "sm_stress.ml" 69 2099 2148
+type(
+  string
+)
+"sm_stress.ml" 69 2099 2103 "sm_stress.ml" 69 2099 2149
+type(
+  string * string
+)
+"sm_stress.ml" 70 2151 2156 "sm_stress.ml" 70 2151 2183
+type(
+  string
+)
+"sm_stress.ml" 70 2151 2184 "sm_stress.ml" 70 2151 2200
+type(
+  string
+)
+"sm_stress.ml" 70 2151 2155 "sm_stress.ml" 70 2151 2201
+type(
+  string * string
+)
+"sm_stress.ml" 71 2203 2208 "sm_stress.ml" 71 2203 2235
+type(
+  string
+)
+"sm_stress.ml" 71 2203 2236 "sm_stress.ml" 71 2203 2252
+type(
+  string
+)
+"sm_stress.ml" 71 2203 2207 "sm_stress.ml" 71 2203 2253
+type(
+  string * string
+)
+"sm_stress.ml" 72 2255 2260 "sm_stress.ml" 72 2255 2287
+type(
+  string
+)
+"sm_stress.ml" 72 2255 2288 "sm_stress.ml" 72 2255 2304
+type(
+  string
+)
+"sm_stress.ml" 72 2255 2259 "sm_stress.ml" 72 2255 2305
+type(
+  string * string
+)
+"sm_stress.ml" 68 2080 2097 "sm_stress.ml" 73 2306 2310
+type(
+  (string * string) list
+)
+"sm_stress.ml" 75 2312 2316 "sm_stress.ml" 75 2312 2321
+type(
+  string list
+)
+ident(
+  def uuids "sm_stress.ml" 77 2365 2365 --
+)
+"sm_stress.ml" 75 2312 2324 "sm_stress.ml" 75 2312 2332
+type(
+  (string * string -> string) -> (string * string) list -> string list
+)
+ident(
+  ext_ref List.map
+)
+"sm_stress.ml" 75 2312 2334 "sm_stress.ml" 75 2312 2347
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string * string -> string
+)
+ident(
+  ext_ref Cli_utils.install_guest
+)
+"sm_stress.ml" 75 2312 2348 "sm_stress.ml" 75 2312 2351
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "sm_stress.ml" 23 800 804 "sm_stress.ml" 23 800 807
+)
+"sm_stress.ml" 75 2312 2333 "sm_stress.ml" 75 2312 2352
+type(
+  string * string -> string
+)
+"sm_stress.ml" 75 2312 2353 "sm_stress.ml" 75 2312 2363
+type(
+  (string * string) list
+)
+ident(
+  int_ref hvm_guests "sm_stress.ml" 68 2080 2084 "sm_stress.ml" 68 2080 2094
+)
+"sm_stress.ml" 75 2312 2324 "sm_stress.ml" 75 2312 2363
+type(
+  string list
+)
+"sm_stress.ml" 77 2365 2369 "sm_stress.ml" 77 2365 2380
+type(
+  string -> int -> string
+)
+ident(
+  def addtostring "sm_stress.ml" 80 2426 2426 --
+)
+"sm_stress.ml" 77 2365 2381 "sm_stress.ml" 77 2365 2382
+type(
+  string
+)
+ident(
+  def s "sm_stress.ml" 77 2365 2383 "sm_stress.ml" 78 2387 2424
+)
+"sm_stress.ml" 77 2365 2383 "sm_stress.ml" 77 2365 2384
+type(
+  int
+)
+ident(
+  def i "sm_stress.ml" 78 2387 2389 "sm_stress.ml" 78 2387 2424
+)
+"sm_stress.ml" 78 2387 2389 "sm_stress.ml" 78 2387 2402
+type(
+  int -> string
+)
+ident(
+  ext_ref Pervasives.string_of_int
+)
+"sm_stress.ml" 78 2387 2405 "sm_stress.ml" 78 2387 2418
+type(
+  string -> int
+)
+ident(
+  ext_ref Pervasives.int_of_string
+)
+"sm_stress.ml" 78 2387 2419 "sm_stress.ml" 78 2387 2420
+type(
+  string
+)
+ident(
+  int_ref s "sm_stress.ml" 77 2365 2381 "sm_stress.ml" 77 2365 2382
+)
+"sm_stress.ml" 78 2387 2404 "sm_stress.ml" 78 2387 2421
+type(
+  int
+)
+"sm_stress.ml" 78 2387 2421 "sm_stress.ml" 78 2387 2422
+type(
+  int -> int -> int
+)
+ident(
+  ext_ref Pervasives.( + )
+)
+"sm_stress.ml" 78 2387 2422 "sm_stress.ml" 78 2387 2423
+type(
+  int
+)
+ident(
+  int_ref i "sm_stress.ml" 77 2365 2383 "sm_stress.ml" 77 2365 2384
+)
+"sm_stress.ml" 78 2387 2403 "sm_stress.ml" 78 2387 2424
+type(
+  int
+)
+"sm_stress.ml" 78 2387 2389 "sm_stress.ml" 78 2387 2424
+type(
+  string
+)
+"sm_stress.ml" 80 2426 2430 "sm_stress.ml" 80 2426 2445
+type(
+  int -> int -> string -> unit
+)
+ident(
+  def disk_add_remove "sm_stress.ml" 94 3016 3016 --
+)
+"sm_stress.ml" 80 2426 2446 "sm_stress.ml" 80 2426 2451
+type(
+  int
+)
+ident(
+  def size1 "sm_stress.ml" 80 2426 2452 "sm_stress.ml" 92 3008 3014
+)
+"sm_stress.ml" 80 2426 2452 "sm_stress.ml" 80 2426 2457
+type(
+  int
+)
+ident(
+  def size2 "sm_stress.ml" 80 2426 2458 "sm_stress.ml" 92 3008 3014
+)
+"sm_stress.ml" 80 2426 2458 "sm_stress.ml" 80 2426 2462
+type(
+  string
+)
+ident(
+  def vmid "sm_stress.ml" 81 2465 2467 "sm_stress.ml" 92 3008 3014
+)
+"sm_stress.ml" 81 2465 2467 "sm_stress.ml" 81 2465 2477
+type(
+  string -> unit
+)
+ident(
+  ext_ref Cli_utils.print_line
+)
+"sm_stress.ml" 81 2465 2478 "sm_stress.ml" 81 2465 2503
+type(
+  string
+)
+"sm_stress.ml" 81 2465 2467 "sm_stress.ml" 81 2465 2503
+type(
+  unit
+)
+"sm_stress.ml" 82 2505 2513 "sm_stress.ml" 82 2505 2514
+type(
+  int
+)
+"sm_stress.ml" 82 2505 2518 "sm_stress.ml" 82 2505 2521
+type(
+  int
+)
+"sm_stress.ml" 84 2527 2531 "sm_stress.ml" 84 2527 2544
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string * string -> unit
+)
+ident(
+  ext_ref Cli_utils.sync_add_disk
+)
+"sm_stress.ml" 84 2527 2545 "sm_stress.ml" 84 2527 2548
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "sm_stress.ml" 23 800 804 "sm_stress.ml" 23 800 807
+)
+"sm_stress.ml" 84 2527 2549 "sm_stress.ml" 84 2527 2553
+type(
+  string
+)
+ident(
+  int_ref vmid "sm_stress.ml" 80 2426 2458 "sm_stress.ml" 80 2426 2462
+)
+"sm_stress.ml" 84 2527 2555 "sm_stress.ml" 84 2527 2560
+type(
+  string
+)
+"sm_stress.ml" 84 2527 2561 "sm_stress.ml" 84 2527 2574
+type(
+  int -> string
+)
+ident(
+  ext_ref Pervasives.string_of_int
+)
+"sm_stress.ml" 84 2527 2575 "sm_stress.ml" 84 2527 2580
+type(
+  int
+)
+ident(
+  int_ref size1 "sm_stress.ml" 80 2426 2446 "sm_stress.ml" 80 2426 2451
+)
+"sm_stress.ml" 84 2527 2561 "sm_stress.ml" 84 2527 2580
+type(
+  string
+)
+"sm_stress.ml" 84 2527 2554 "sm_stress.ml" 84 2527 2581
+type(
+  string * string
+)
+"sm_stress.ml" 84 2527 2531 "sm_stress.ml" 84 2527 2581
+type(
+  unit
+)
+"sm_stress.ml" 85 2583 2587 "sm_stress.ml" 85 2583 2600
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string * string -> unit
+)
+ident(
+  ext_ref Cli_utils.sync_add_disk
+)
+"sm_stress.ml" 85 2583 2601 "sm_stress.ml" 85 2583 2604
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "sm_stress.ml" 23 800 804 "sm_stress.ml" 23 800 807
+)
+"sm_stress.ml" 85 2583 2605 "sm_stress.ml" 85 2583 2609
+type(
+  string
+)
+ident(
+  int_ref vmid "sm_stress.ml" 80 2426 2458 "sm_stress.ml" 80 2426 2462
+)
+"sm_stress.ml" 85 2583 2611 "sm_stress.ml" 85 2583 2616
+type(
+  string
+)
+"sm_stress.ml" 85 2583 2617 "sm_stress.ml" 85 2583 2630
+type(
+  int -> string
+)
+ident(
+  ext_ref Pervasives.string_of_int
+)
+"sm_stress.ml" 85 2583 2631 "sm_stress.ml" 85 2583 2636
+type(
+  int
+)
+ident(
+  int_ref size2 "sm_stress.ml" 80 2426 2452 "sm_stress.ml" 80 2426 2457
+)
+"sm_stress.ml" 85 2583 2617 "sm_stress.ml" 85 2583 2636
+type(
+  string
+)
+"sm_stress.ml" 85 2583 2610 "sm_stress.ml" 85 2583 2637
+type(
+  string * string
+)
+"sm_stress.ml" 85 2583 2587 "sm_stress.ml" 85 2583 2637
+type(
+  unit
+)
+"sm_stress.ml" 86 2639 2643 "sm_stress.ml" 86 2639 2654
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> string -> unit
+)
+ident(
+  ext_ref Cli_utils.resize_disk
+)
+"sm_stress.ml" 86 2639 2655 "sm_stress.ml" 86 2639 2658
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "sm_stress.ml" 23 800 804 "sm_stress.ml" 23 800 807
+)
+"sm_stress.ml" 86 2639 2659 "sm_stress.ml" 86 2639 2663
+type(
+  string
+)
+ident(
+  int_ref vmid "sm_stress.ml" 80 2426 2458 "sm_stress.ml" 80 2426 2462
+)
+"sm_stress.ml" 86 2639 2664 "sm_stress.ml" 86 2639 2669
+type(
+  string
+)
+"sm_stress.ml" 86 2639 2671 "sm_stress.ml" 86 2639 2684
+type(
+  int -> string
+)
+ident(
+  ext_ref Pervasives.string_of_int
+)
+"sm_stress.ml" 86 2639 2686 "sm_stress.ml" 86 2639 2691
+type(
+  int
+)
+ident(
+  int_ref size1 "sm_stress.ml" 80 2426 2446 "sm_stress.ml" 80 2426 2451
+)
+"sm_stress.ml" 86 2639 2692 "sm_stress.ml" 86 2639 2693
+type(
+  int -> int -> int
+)
+ident(
+  ext_ref Pervasives.( + )
+)
+"sm_stress.ml" 86 2639 2694 "sm_stress.ml" 86 2639 2695
+type(
+  int ref -> int
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"sm_stress.ml" 86 2639 2695 "sm_stress.ml" 86 2639 2703
+type(
+  int ref
+)
+ident(
+  int_ref size_inc "sm_stress.ml" 27 868 872 "sm_stress.ml" 27 868 880
+)
+"sm_stress.ml" 86 2639 2694 "sm_stress.ml" 86 2639 2703
+type(
+  int
+)
+"sm_stress.ml" 86 2639 2685 "sm_stress.ml" 86 2639 2704
+type(
+  int
+)
+"sm_stress.ml" 86 2639 2670 "sm_stress.ml" 86 2639 2705
+type(
+  string
+)
+"sm_stress.ml" 86 2639 2643 "sm_stress.ml" 86 2639 2705
+type(
+  unit
+)
+"sm_stress.ml" 87 2707 2711 "sm_stress.ml" 87 2707 2722
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> string -> unit
+)
+ident(
+  ext_ref Cli_utils.resize_disk
+)
+"sm_stress.ml" 87 2707 2723 "sm_stress.ml" 87 2707 2726
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "sm_stress.ml" 23 800 804 "sm_stress.ml" 23 800 807
+)
+"sm_stress.ml" 87 2707 2727 "sm_stress.ml" 87 2707 2731
+type(
+  string
+)
+ident(
+  int_ref vmid "sm_stress.ml" 80 2426 2458 "sm_stress.ml" 80 2426 2462
+)
+"sm_stress.ml" 87 2707 2732 "sm_stress.ml" 87 2707 2737
+type(
+  string
+)
+"sm_stress.ml" 87 2707 2739 "sm_stress.ml" 87 2707 2752
+type(
+  int -> string
+)
+ident(
+  ext_ref Pervasives.string_of_int
+)
+"sm_stress.ml" 87 2707 2754 "sm_stress.ml" 87 2707 2759
+type(
+  int
+)
+ident(
+  int_ref size1 "sm_stress.ml" 80 2426 2446 "sm_stress.ml" 80 2426 2451
+)
+"sm_stress.ml" 87 2707 2760 "sm_stress.ml" 87 2707 2761
+type(
+  int -> int -> int
+)
+ident(
+  ext_ref Pervasives.( + )
+)
+"sm_stress.ml" 87 2707 2762 "sm_stress.ml" 87 2707 2763
+type(
+  int ref -> int
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"sm_stress.ml" 87 2707 2763 "sm_stress.ml" 87 2707 2771
+type(
+  int ref
+)
+ident(
+  int_ref size_inc "sm_stress.ml" 27 868 872 "sm_stress.ml" 27 868 880
+)
+"sm_stress.ml" 87 2707 2762 "sm_stress.ml" 87 2707 2771
+type(
+  int
+)
+"sm_stress.ml" 87 2707 2754 "sm_stress.ml" 87 2707 2771
+type(
+  int
+)
+"sm_stress.ml" 87 2707 2772 "sm_stress.ml" 87 2707 2773
+type(
+  int -> int -> int
+)
+ident(
+  ext_ref Pervasives.( + )
+)
+"sm_stress.ml" 87 2707 2774 "sm_stress.ml" 87 2707 2775
+type(
+  int ref -> int
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"sm_stress.ml" 87 2707 2775 "sm_stress.ml" 87 2707 2783
+type(
+  int ref
+)
+ident(
+  int_ref size_inc "sm_stress.ml" 27 868 872 "sm_stress.ml" 27 868 880
+)
+"sm_stress.ml" 87 2707 2774 "sm_stress.ml" 87 2707 2783
+type(
+  int
+)
+"sm_stress.ml" 87 2707 2753 "sm_stress.ml" 87 2707 2784
+type(
+  int
+)
+"sm_stress.ml" 87 2707 2738 "sm_stress.ml" 87 2707 2785
+type(
+  string
+)
+"sm_stress.ml" 87 2707 2711 "sm_stress.ml" 87 2707 2785
+type(
+  unit
+)
+"sm_stress.ml" 88 2787 2791 "sm_stress.ml" 88 2787 2802
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> string -> unit
+)
+ident(
+  ext_ref Cli_utils.resize_disk
+)
+"sm_stress.ml" 88 2787 2803 "sm_stress.ml" 88 2787 2806
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "sm_stress.ml" 23 800 804 "sm_stress.ml" 23 800 807
+)
+"sm_stress.ml" 88 2787 2807 "sm_stress.ml" 88 2787 2811
+type(
+  string
+)
+ident(
+  int_ref vmid "sm_stress.ml" 80 2426 2458 "sm_stress.ml" 80 2426 2462
+)
+"sm_stress.ml" 88 2787 2812 "sm_stress.ml" 88 2787 2817
+type(
+  string
+)
+"sm_stress.ml" 88 2787 2819 "sm_stress.ml" 88 2787 2832
+type(
+  int -> string
+)
+ident(
+  ext_ref Pervasives.string_of_int
+)
+"sm_stress.ml" 88 2787 2834 "sm_stress.ml" 88 2787 2839
+type(
+  int
+)
+ident(
+  int_ref size2 "sm_stress.ml" 80 2426 2452 "sm_stress.ml" 80 2426 2457
+)
+"sm_stress.ml" 88 2787 2840 "sm_stress.ml" 88 2787 2841
+type(
+  int -> int -> int
+)
+ident(
+  ext_ref Pervasives.( + )
+)
+"sm_stress.ml" 88 2787 2842 "sm_stress.ml" 88 2787 2843
+type(
+  int ref -> int
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"sm_stress.ml" 88 2787 2843 "sm_stress.ml" 88 2787 2851
+type(
+  int ref
+)
+ident(
+  int_ref size_inc "sm_stress.ml" 27 868 872 "sm_stress.ml" 27 868 880
+)
+"sm_stress.ml" 88 2787 2842 "sm_stress.ml" 88 2787 2851
+type(
+  int
+)
+"sm_stress.ml" 88 2787 2833 "sm_stress.ml" 88 2787 2852
+type(
+  int
+)
+"sm_stress.ml" 88 2787 2818 "sm_stress.ml" 88 2787 2853
+type(
+  string
+)
+"sm_stress.ml" 88 2787 2791 "sm_stress.ml" 88 2787 2853
+type(
+  unit
+)
+"sm_stress.ml" 89 2855 2859 "sm_stress.ml" 89 2855 2870
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> string -> unit
+)
+ident(
+  ext_ref Cli_utils.resize_disk
+)
+"sm_stress.ml" 89 2855 2871 "sm_stress.ml" 89 2855 2874
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "sm_stress.ml" 23 800 804 "sm_stress.ml" 23 800 807
+)
+"sm_stress.ml" 89 2855 2875 "sm_stress.ml" 89 2855 2879
+type(
+  string
+)
+ident(
+  int_ref vmid "sm_stress.ml" 80 2426 2458 "sm_stress.ml" 80 2426 2462
+)
+"sm_stress.ml" 89 2855 2880 "sm_stress.ml" 89 2855 2885
+type(
+  string
+)
+"sm_stress.ml" 89 2855 2887 "sm_stress.ml" 89 2855 2900
+type(
+  int -> string
+)
+ident(
+  ext_ref Pervasives.string_of_int
+)
+"sm_stress.ml" 89 2855 2902 "sm_stress.ml" 89 2855 2907
+type(
+  int
+)
+ident(
+  int_ref size1 "sm_stress.ml" 80 2426 2446 "sm_stress.ml" 80 2426 2451
+)
+"sm_stress.ml" 89 2855 2908 "sm_stress.ml" 89 2855 2909
+type(
+  int -> int -> int
+)
+ident(
+  ext_ref Pervasives.( + )
+)
+"sm_stress.ml" 89 2855 2910 "sm_stress.ml" 89 2855 2911
+type(
+  int ref -> int
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"sm_stress.ml" 89 2855 2911 "sm_stress.ml" 89 2855 2919
+type(
+  int ref
+)
+ident(
+  int_ref size_inc "sm_stress.ml" 27 868 872 "sm_stress.ml" 27 868 880
+)
+"sm_stress.ml" 89 2855 2910 "sm_stress.ml" 89 2855 2919
+type(
+  int
+)
+"sm_stress.ml" 89 2855 2902 "sm_stress.ml" 89 2855 2919
+type(
+  int
+)
+"sm_stress.ml" 89 2855 2920 "sm_stress.ml" 89 2855 2921
+type(
+  int -> int -> int
+)
+ident(
+  ext_ref Pervasives.( + )
+)
+"sm_stress.ml" 89 2855 2922 "sm_stress.ml" 89 2855 2923
+type(
+  int ref -> int
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"sm_stress.ml" 89 2855 2923 "sm_stress.ml" 89 2855 2931
+type(
+  int ref
+)
+ident(
+  int_ref size_inc "sm_stress.ml" 27 868 872 "sm_stress.ml" 27 868 880
+)
+"sm_stress.ml" 89 2855 2922 "sm_stress.ml" 89 2855 2931
+type(
+  int
+)
+"sm_stress.ml" 89 2855 2901 "sm_stress.ml" 89 2855 2932
+type(
+  int
+)
+"sm_stress.ml" 89 2855 2886 "sm_stress.ml" 89 2855 2933
+type(
+  string
+)
+"sm_stress.ml" 89 2855 2859 "sm_stress.ml" 89 2855 2933
+type(
+  unit
+)
+"sm_stress.ml" 90 2935 2939 "sm_stress.ml" 90 2935 2955
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> unit
+)
+ident(
+  ext_ref Cli_utils.sync_remove_disk
+)
+"sm_stress.ml" 90 2935 2956 "sm_stress.ml" 90 2935 2959
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "sm_stress.ml" 23 800 804 "sm_stress.ml" 23 800 807
+)
+"sm_stress.ml" 90 2935 2960 "sm_stress.ml" 90 2935 2964
+type(
+  string
+)
+ident(
+  int_ref vmid "sm_stress.ml" 80 2426 2458 "sm_stress.ml" 80 2426 2462
+)
+"sm_stress.ml" 90 2935 2965 "sm_stress.ml" 90 2935 2970
+type(
+  string
+)
+"sm_stress.ml" 90 2935 2939 "sm_stress.ml" 90 2935 2970
+type(
+  unit
+)
+"sm_stress.ml" 91 2972 2976 "sm_stress.ml" 91 2972 2992
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> unit
+)
+ident(
+  ext_ref Cli_utils.sync_remove_disk
+)
+"sm_stress.ml" 91 2972 2993 "sm_stress.ml" 91 2972 2996
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "sm_stress.ml" 23 800 804 "sm_stress.ml" 23 800 807
+)
+"sm_stress.ml" 91 2972 2997 "sm_stress.ml" 91 2972 3001
+type(
+  string
+)
+ident(
+  int_ref vmid "sm_stress.ml" 80 2426 2458 "sm_stress.ml" 80 2426 2462
+)
+"sm_stress.ml" 91 2972 3002 "sm_stress.ml" 91 2972 3007
+type(
+  string
+)
+"sm_stress.ml" 91 2972 2976 "sm_stress.ml" 91 2972 3007
+type(
+  unit
+)
+"sm_stress.ml" 90 2935 2939 "sm_stress.ml" 91 2972 3007
+type(
+  unit
+)
+"sm_stress.ml" 89 2855 2859 "sm_stress.ml" 91 2972 3007
+type(
+  unit
+)
+"sm_stress.ml" 88 2787 2791 "sm_stress.ml" 91 2972 3007
+type(
+  unit
+)
+"sm_stress.ml" 87 2707 2711 "sm_stress.ml" 91 2972 3007
+type(
+  unit
+)
+"sm_stress.ml" 86 2639 2643 "sm_stress.ml" 91 2972 3007
+type(
+  unit
+)
+"sm_stress.ml" 85 2583 2587 "sm_stress.ml" 91 2972 3007
+type(
+  unit
+)
+"sm_stress.ml" 84 2527 2531 "sm_stress.ml" 91 2972 3007
+type(
+  unit
+)
+"sm_stress.ml" 82 2505 2507 "sm_stress.ml" 92 3008 3014
+type(
+  unit
+)
+"sm_stress.ml" 81 2465 2467 "sm_stress.ml" 92 3008 3014
+type(
+  unit
+)
+"sm_stress.ml" 94 3016 3020 "sm_stress.ml" 94 3016 3027
+type(
+  Thread.t list
+)
+ident(
+  def threads "sm_stress.ml" 97 3106 3106 --
+)
+"sm_stress.ml" 95 3030 3032 "sm_stress.ml" 95 3030 3040
+type(
+  (string -> Thread.t) -> string list -> Thread.t list
+)
+ident(
+  ext_ref List.map
+)
+"sm_stress.ml" 95 3030 3042 "sm_stress.ml" 95 3030 3055
+type(
+  (string -> unit) -> string -> Thread.t
+)
+ident(
+  ext_ref Thread.create
+)
+"sm_stress.ml" 95 3030 3057 "sm_stress.ml" 95 3030 3072
+type(
+  int -> int -> string -> unit
+)
+ident(
+  int_ref disk_add_remove "sm_stress.ml" 80 2426 2430 "sm_stress.ml" 80 2426 2445
+)
+"sm_stress.ml" 95 3030 3073 "sm_stress.ml" 95 3030 3074
+type(
+  int ref -> int
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"sm_stress.ml" 95 3030 3074 "sm_stress.ml" 95 3030 3084
+type(
+  int ref
+)
+ident(
+  int_ref base_size1 "sm_stress.ml" 25 822 826 "sm_stress.ml" 25 822 836
+)
+"sm_stress.ml" 95 3030 3073 "sm_stress.ml" 95 3030 3084
+type(
+  int
+)
+"sm_stress.ml" 95 3030 3085 "sm_stress.ml" 95 3030 3086
+type(
+  int ref -> int
+)
+ident(
+  ext_ref Pervasives.( ! )
+)
+"sm_stress.ml" 95 3030 3086 "sm_stress.ml" 95 3030 3096
+type(
+  int ref
+)
+ident(
+  int_ref base_size2 "sm_stress.ml" 26 845 849 "sm_stress.ml" 26 845 859
+)
+"sm_stress.ml" 95 3030 3085 "sm_stress.ml" 95 3030 3096
+type(
+  int
+)
+"sm_stress.ml" 95 3030 3056 "sm_stress.ml" 95 3030 3097
+type(
+  string -> unit
+)
+"sm_stress.ml" 95 3030 3041 "sm_stress.ml" 95 3030 3098
+type(
+  string -> Thread.t
+)
+"sm_stress.ml" 95 3030 3099 "sm_stress.ml" 95 3030 3104
+type(
+  string list
+)
+ident(
+  int_ref uuids "sm_stress.ml" 75 2312 2316 "sm_stress.ml" 75 2312 2321
+)
+"sm_stress.ml" 95 3030 3032 "sm_stress.ml" 95 3030 3104
+type(
+  Thread.t list
+)
+"sm_stress.ml" 97 3106 3114 "sm_stress.ml" 97 3106 3123
+type(
+  (Thread.t -> unit) -> Thread.t list -> unit
+)
+ident(
+  ext_ref List.iter
+)
+"sm_stress.ml" 97 3106 3124 "sm_stress.ml" 97 3106 3135
+type(
+  Thread.t -> unit
+)
+ident(
+  ext_ref Thread.join
+)
+"sm_stress.ml" 97 3106 3136 "sm_stress.ml" 97 3106 3143
+type(
+  Thread.t list
+)
+ident(
+  int_ref threads "sm_stress.ml" 94 3016 3020 "sm_stress.ml" 94 3016 3027
+)
+"sm_stress.ml" 97 3106 3114 "sm_stress.ml" 97 3106 3143
+type(
+  unit
+)
+"sm_stress.ml" 101 3175 3179 "sm_stress.ml" 101 3175 3188
+type(
+  (string * string) list
+)
+ident(
+  def pv_guests "sm_stress.ml" 106 3329 3329 --
+)
+"sm_stress.ml" 101 3175 3193 "sm_stress.ml" 101 3175 3211
+type(
+  string
+)
+"sm_stress.ml" 101 3175 3212 "sm_stress.ml" 101 3175 3221
+type(
+  string
+)
+"sm_stress.ml" 101 3175 3192 "sm_stress.ml" 101 3175 3222
+type(
+  string * string
+)
+"sm_stress.ml" 102 3224 3228 "sm_stress.ml" 102 3224 3246
+type(
+  string
+)
+"sm_stress.ml" 102 3224 3247 "sm_stress.ml" 102 3224 3256
+type(
+  string
+)
+"sm_stress.ml" 102 3224 3227 "sm_stress.ml" 102 3224 3257
+type(
+  string * string
+)
+"sm_stress.ml" 103 3259 3263 "sm_stress.ml" 103 3259 3281
+type(
+  string
+)
+"sm_stress.ml" 103 3259 3282 "sm_stress.ml" 103 3259 3291
+type(
+  string
+)
+"sm_stress.ml" 103 3259 3262 "sm_stress.ml" 103 3259 3292
+type(
+  string * string
+)
+"sm_stress.ml" 104 3294 3298 "sm_stress.ml" 104 3294 3316
+type(
+  string
+)
+"sm_stress.ml" 104 3294 3317 "sm_stress.ml" 104 3294 3325
+type(
+  string
+)
+"sm_stress.ml" 104 3294 3297 "sm_stress.ml" 104 3294 3326
+type(
+  string * string
+)
+"sm_stress.ml" 101 3175 3191 "sm_stress.ml" 104 3294 3327
+type(
+  (string * string) list
+)
+"sm_stress.ml" 106 3329 3333 "sm_stress.ml" 106 3329 3341
+type(
+  string list
+)
+ident(
+  def pv_uuids "sm_stress.ml" 109 3421 3421 --
+)
+"sm_stress.ml" 106 3329 3344 "sm_stress.ml" 106 3329 3352
+type(
+  (string * string -> string) -> (string * string) list -> string list
+)
+ident(
+  ext_ref List.map
+)
+"sm_stress.ml" 106 3329 3354 "sm_stress.ml" 106 3329 3367
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string * string -> string
+)
+ident(
+  ext_ref Cli_utils.install_guest
+)
+"sm_stress.ml" 106 3329 3368 "sm_stress.ml" 106 3329 3371
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "sm_stress.ml" 23 800 804 "sm_stress.ml" 23 800 807
+)
+"sm_stress.ml" 106 3329 3353 "sm_stress.ml" 106 3329 3372
+type(
+  string * string -> string
+)
+"sm_stress.ml" 106 3329 3373 "sm_stress.ml" 106 3329 3382
+type(
+  (string * string) list
+)
+ident(
+  int_ref pv_guests "sm_stress.ml" 101 3175 3179 "sm_stress.ml" 101 3175 3188
+)
+"sm_stress.ml" 106 3329 3344 "sm_stress.ml" 106 3329 3382
+type(
+  string list
+)
+"sm_stress.ml" 109 3421 3425 "sm_stress.ml" 109 3421 3437
+type(
+  string -> unit
+)
+ident(
+  def sync_startup "sm_stress.ml" 113 3573 3573 --
+)
+"sm_stress.ml" 109 3421 3438 "sm_stress.ml" 109 3421 3442
+type(
+  string
+)
+ident(
+  def vmid "sm_stress.ml" 110 3445 3449 "sm_stress.ml" 112 3543 3572
+)
+"sm_stress.ml" 110 3445 3453 "sm_stress.ml" 110 3445 3458
+type(
+  (string * string) list
+)
+"sm_stress.ml" 110 3445 3463 "sm_stress.ml" 110 3445 3470
+type(
+  string
+)
+"sm_stress.ml" 110 3445 3471 "sm_stress.ml" 110 3445 3475
+type(
+  string
+)
+ident(
+  int_ref vmid "sm_stress.ml" 109 3421 3438 "sm_stress.ml" 109 3421 3442
+)
+"sm_stress.ml" 110 3445 3462 "sm_stress.ml" 110 3445 3476
+type(
+  string * string
+)
+"sm_stress.ml" 110 3445 3461 "sm_stress.ml" 110 3445 3477
+type(
+  (string * string) list
+)
+"sm_stress.ml" 111 3481 3487 "sm_stress.ml" 111 3481 3493
+type(
+  string list -> unit
+)
+ident(
+  ext_ref Pervasives.ignore
+)
+"sm_stress.ml" 111 3481 3495 "sm_stress.ml" 111 3481 3509
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  ext_ref Cli_utils.expect_success
+)
+"sm_stress.ml" 111 3481 3515 "sm_stress.ml" 111 3481 3517
+type(
+  unit
+)
+"sm_stress.ml" 111 3481 3519 "sm_stress.ml" 111 3481 3522
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "sm_stress.ml" 23 800 804 "sm_stress.ml" 23 800 807
+)
+"sm_stress.ml" 111 3481 3523 "sm_stress.ml" 111 3481 3533
+type(
+  string
+)
+"sm_stress.ml" 111 3481 3534 "sm_stress.ml" 111 3481 3539
+type(
+  (string * string) list
+)
+ident(
+  int_ref param "sm_stress.ml" 110 3445 3453 "sm_stress.ml" 110 3445 3458
+)
+"sm_stress.ml" 111 3481 3519 "sm_stress.ml" 111 3481 3539
+type(
+  string list * Unix.process_status
+)
+"sm_stress.ml" 111 3481 3510 "sm_stress.ml" 111 3481 3540
+type(
+  unit -> string list * Unix.process_status
+)
+"sm_stress.ml" 111 3481 3494 "sm_stress.ml" 111 3481 3541
+type(
+  string list
+)
+"sm_stress.ml" 111 3481 3487 "sm_stress.ml" 111 3481 3541
+type(
+  unit
+)
+"sm_stress.ml" 112 3543 3549 "sm_stress.ml" 112 3543 3558
+type(
+  (string -> (string * string) list -> string list * Unix.process_status) ->
+  string -> string -> unit
+)
+ident(
+  ext_ref Cli_utils.waitstate
+)
+"sm_stress.ml" 112 3543 3559 "sm_stress.ml" 112 3543 3562
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "sm_stress.ml" 23 800 804 "sm_stress.ml" 23 800 807
+)
+"sm_stress.ml" 112 3543 3563 "sm_stress.ml" 112 3543 3567
+type(
+  string
+)
+ident(
+  int_ref vmid "sm_stress.ml" 109 3421 3438 "sm_stress.ml" 109 3421 3442
+)
+"sm_stress.ml" 112 3543 3568 "sm_stress.ml" 112 3543 3572
+type(
+  string
+)
+"sm_stress.ml" 112 3543 3549 "sm_stress.ml" 112 3543 3572
+type(
+  unit
+)
+"sm_stress.ml" 111 3481 3487 "sm_stress.ml" 112 3543 3572
+type(
+  unit
+)
+"sm_stress.ml" 110 3445 3449 "sm_stress.ml" 112 3543 3572
+type(
+  unit
+)
+"sm_stress.ml" 113 3573 3581 "sm_stress.ml" 113 3573 3590
+type(
+  (string -> unit) -> string list -> unit
+)
+ident(
+  ext_ref List.iter
+)
+"sm_stress.ml" 113 3573 3591 "sm_stress.ml" 113 3573 3603
+type(
+  string -> unit
+)
+ident(
+  int_ref sync_startup "sm_stress.ml" 109 3421 3425 "sm_stress.ml" 109 3421 3437
+)
+"sm_stress.ml" 113 3573 3604 "sm_stress.ml" 113 3573 3612
+type(
+  string list
+)
+ident(
+  int_ref pv_uuids "sm_stress.ml" 106 3329 3333 "sm_stress.ml" 106 3329 3341
+)
+"sm_stress.ml" 113 3573 3581 "sm_stress.ml" 113 3573 3612
+type(
+  unit
+)
+"sm_stress.ml" 116 3654 3658 "sm_stress.ml" 116 3654 3665
+type(
+  string -> unit
+)
+ident(
+  def suspend "sm_stress.ml" 119 3768 3768 --
+)
+"sm_stress.ml" 116 3654 3666 "sm_stress.ml" 116 3654 3670
+type(
+  string
+)
+ident(
+  def vmid "sm_stress.ml" 117 3673 3675 "sm_stress.ml" 118 3707 3767
+)
+"sm_stress.ml" 117 3673 3679 "sm_stress.ml" 117 3673 3684
+type(
+  (string * string) list
+)
+"sm_stress.ml" 117 3673 3689 "sm_stress.ml" 117 3673 3696
+type(
+  string
+)
+"sm_stress.ml" 117 3673 3697 "sm_stress.ml" 117 3673 3701
+type(
+  string
+)
+ident(
+  int_ref vmid "sm_stress.ml" 116 3654 3666 "sm_stress.ml" 116 3654 3670
+)
+"sm_stress.ml" 117 3673 3688 "sm_stress.ml" 117 3673 3702
+type(
+  string * string
+)
+"sm_stress.ml" 117 3673 3687 "sm_stress.ml" 117 3673 3703
+type(
+  (string * string) list
+)
+"sm_stress.ml" 118 3707 3711 "sm_stress.ml" 118 3707 3717
+type(
+  string list -> unit
+)
+ident(
+  ext_ref Pervasives.ignore
+)
+"sm_stress.ml" 118 3707 3719 "sm_stress.ml" 118 3707 3733
+type(
+  (unit -> string list * Unix.process_status) -> string list
+)
+ident(
+  ext_ref Cli_utils.expect_success
+)
+"sm_stress.ml" 118 3707 3739 "sm_stress.ml" 118 3707 3741
+type(
+  unit
+)
+"sm_stress.ml" 118 3707 3743 "sm_stress.ml" 118 3707 3746
+type(
+  string -> (string * string) list -> string list * Unix.process_status
+)
+ident(
+  int_ref cli "sm_stress.ml" 23 800 804 "sm_stress.ml" 23 800 807
+)
+"sm_stress.ml" 118 3707 3747 "sm_stress.ml" 118 3707 3759
+type(
+  string
+)
+"sm_stress.ml" 118 3707 3760 "sm_stress.ml" 118 3707 3765
+type(
+  (string * string) list
+)
+ident(
+  int_ref param "sm_stress.ml" 117 3673 3679 "sm_stress.ml" 117 3673 3684
+)
+"sm_stress.ml" 118 3707 3743 "sm_stress.ml" 118 3707 3765
+type(
+  string list * Unix.process_status
+)
+"sm_stress.ml" 118 3707 3734 "sm_stress.ml" 118 3707 3766
+type(
+  unit -> string list * Unix.process_status
+)
+"sm_stress.ml" 118 3707 3718 "sm_stress.ml" 118 3707 3767
+type(
+  string list
+)
+"sm_stress.ml" 118 3707 3711 "sm_stress.ml" 118 3707 3767
+type(
+  unit
+)
+"sm_stress.ml" 117 3673 3675 "sm_stress.ml" 118 3707 3767
+type(
+  unit
+)
+"sm_stress.ml" 119 3768 3776 "sm_stress.ml" 119 3768 3785
+type(
+  (string -> unit) -> string list -> unit
+)
+ident(
+  ext_ref List.iter
+)
+"sm_stress.ml" 119 3768 3786 "sm_stress.ml" 119 3768 3793
+type(
+  string -> unit
+)
+ident(
+  int_ref suspend "sm_stress.ml" 116 3654 3658 "sm_stress.ml" 116 3654 3665
+)
+"sm_stress.ml" 119 3768 3794 "sm_stress.ml" 119 3768 3802
+type(
+  string list
+)
+ident(
+  int_ref pv_uuids "sm_stress.ml" 106 3329 3333 "sm_stress.ml" 106 3329 3341
+)
+"sm_stress.ml" 119 3768 3776 "sm_stress.ml" 119 3768 3802
+type(
+  unit
+)
--- /dev/null
+++ xen-api-0.1/ocaml/xe-cli/rt/geneva/utils.annot
@@ -0,0 +1,1610 @@
+"utils.ml" 15 602 606 "utils.ml" 15 602 611
+type(
+  exn -> 'a option -> 'a
+)
+ident(
+  def value "utils.ml" 19 664 664 --
+)
+"utils.ml" 15 602 612 "utils.ml" 15 602 614
+type(
+  exn
+)
+ident(
+  def ex "utils.ml" 15 602 617 "utils.ml" 17 647 662
+)
+"utils.ml" 16 626 630 "utils.ml" 16 626 634
+type(
+  'a option
+)
+"utils.ml" 16 626 638 "utils.ml" 16 626 643
+type(
+  exn -> 'a
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"utils.ml" 16 626 644 "utils.ml" 16 626 646
+type(
+  exn
+)
+ident(
+  int_ref ex "utils.ml" 15 602 612 "utils.ml" 15 602 614
+)
+"utils.ml" 16 626 638 "utils.ml" 16 626 646
+type(
+  'a
+)
+"utils.ml" 17 647 656 "utils.ml" 17 647 657
+type(
+  'a
+)
+ident(
+  def x "utils.ml" 17 647 661 "utils.ml" 17 647 662
+)
+"utils.ml" 17 647 651 "utils.ml" 17 647 657
+type(
+  'a option
+)
+"utils.ml" 17 647 661 "utils.ml" 17 647 662
+type(
+  'a
+)
+ident(
+  int_ref x "utils.ml" 17 647 656 "utils.ml" 17 647 657
+)
+"utils.ml" 15 602 617 "utils.ml" 17 647 662
+type(
+  'a option -> 'a
+)
+"utils.ml" 19 664 668 "utils.ml" 19 664 671
+type(
+  ('a -> 'b) -> 'a option -> 'b option
+)
+ident(
+  def may "utils.ml" 23 728 728 --
+)
+"utils.ml" 19 664 672 "utils.ml" 19 664 673
+type(
+  'a -> 'b
+)
+ident(
+  def f "utils.ml" 19 664 676 "utils.ml" 21 702 726
+)
+"utils.ml" 20 685 689 "utils.ml" 20 685 693
+type(
+  'a option
+)
+"utils.ml" 20 685 697 "utils.ml" 20 685 701
+type(
+  'b option
+)
+"utils.ml" 21 702 711 "utils.ml" 21 702 712
+type(
+  'a
+)
+ident(
+  def x "utils.ml" 21 702 716 "utils.ml" 21 702 726
+)
+"utils.ml" 21 702 706 "utils.ml" 21 702 712
+type(
+  'a option
+)
+"utils.ml" 21 702 722 "utils.ml" 21 702 723
+type(
+  'a -> 'b
+)
+ident(
+  int_ref f "utils.ml" 19 664 672 "utils.ml" 19 664 673
+)
+"utils.ml" 21 702 724 "utils.ml" 21 702 725
+type(
+  'a
+)
+ident(
+  int_ref x "utils.ml" 21 702 711 "utils.ml" 21 702 712
+)
+"utils.ml" 21 702 721 "utils.ml" 21 702 726
+type(
+  'b
+)
+"utils.ml" 21 702 716 "utils.ml" 21 702 726
+type(
+  'b option
+)
+"utils.ml" 19 664 676 "utils.ml" 21 702 726
+type(
+  'a option -> 'b option
+)
+"utils.ml" 23 728 732 "utils.ml" 23 728 739
+type(
+  'a -> 'a option -> 'a
+)
+ident(
+  def default "utils.ml" 27 784 784 --
+)
+"utils.ml" 23 728 740 "utils.ml" 23 728 741
+type(
+  'a
+)
+ident(
+  def d "utils.ml" 23 728 744 "utils.ml" 25 767 782
+)
+"utils.ml" 24 753 757 "utils.ml" 24 753 761
+type(
+  'a option
+)
+"utils.ml" 24 753 765 "utils.ml" 24 753 766
+type(
+  'a
+)
+ident(
+  int_ref d "utils.ml" 23 728 740 "utils.ml" 23 728 741
+)
+"utils.ml" 25 767 776 "utils.ml" 25 767 777
+type(
+  'a
+)
+ident(
+  def x "utils.ml" 25 767 781 "utils.ml" 25 767 782
+)
+"utils.ml" 25 767 771 "utils.ml" 25 767 777
+type(
+  'a option
+)
+"utils.ml" 25 767 781 "utils.ml" 25 767 782
+type(
+  'a
+)
+ident(
+  int_ref x "utils.ml" 25 767 776 "utils.ml" 25 767 777
+)
+"utils.ml" 23 728 744 "utils.ml" 25 767 782
+type(
+  'a option -> 'a
+)
+"utils.ml" 27 784 792 "utils.ml" 27 784 805
+type(
+  'a option list -> 'a list
+)
+ident(
+  def optlistToList "utils.ml" 27 784 784 --
+)
+"utils.ml" 28 817 821 "utils.ml" 28 817 823
+type(
+  'a option list
+)
+"utils.ml" 28 817 827 "utils.ml" 28 817 829
+type(
+  'a list
+)
+"utils.ml" 29 830 834 "utils.ml" 29 830 838
+type(
+  'a option
+)
+"utils.ml" 29 830 840 "utils.ml" 29 830 842
+type(
+  'a option list
+)
+ident(
+  def xs "utils.ml" 29 830 846 "utils.ml" 29 830 862
+)
+"utils.ml" 29 830 834 "utils.ml" 29 830 842
+type(
+  'a option list
+)
+"utils.ml" 29 830 846 "utils.ml" 29 830 859
+type(
+  'a option list -> 'a list
+)
+ident(
+  int_ref optlistToList "utils.ml" 27 784 792 "utils.ml" 27 784 805
+)
+"utils.ml" 29 830 860 "utils.ml" 29 830 862
+type(
+  'a option list
+)
+ident(
+  int_ref xs "utils.ml" 29 830 840 "utils.ml" 29 830 842
+)
+"utils.ml" 29 830 846 "utils.ml" 29 830 862
+type(
+  'a list
+)
+"utils.ml" 30 863 873 "utils.ml" 30 863 874
+type(
+  'a
+)
+ident(
+  def x "utils.ml" 30 863 883 "utils.ml" 30 863 904
+)
+"utils.ml" 30 863 867 "utils.ml" 30 863 875
+type(
+  'a option
+)
+"utils.ml" 30 863 877 "utils.ml" 30 863 879
+type(
+  'a option list
+)
+ident(
+  def xs "utils.ml" 30 863 883 "utils.ml" 30 863 904
+)
+"utils.ml" 30 863 867 "utils.ml" 30 863 879
+type(
+  'a option list
+)
+"utils.ml" 30 863 883 "utils.ml" 30 863 884
+type(
+  'a
+)
+ident(
+  int_ref x "utils.ml" 30 863 873 "utils.ml" 30 863 874
+)
+"utils.ml" 30 863 887 "utils.ml" 30 863 900
+type(
+  'a option list -> 'a list
+)
+ident(
+  int_ref optlistToList "utils.ml" 27 784 792 "utils.ml" 27 784 805
+)
+"utils.ml" 30 863 901 "utils.ml" 30 863 903
+type(
+  'a option list
+)
+ident(
+  int_ref xs "utils.ml" 30 863 877 "utils.ml" 30 863 879
+)
+"utils.ml" 30 863 886 "utils.ml" 30 863 904
+type(
+  'a list
+)
+"utils.ml" 30 863 883 "utils.ml" 30 863 904
+type(
+  'a list
+)
+"utils.ml" 27 784 808 "utils.ml" 30 863 904
+type(
+  'a option list -> 'a list
+)
+"utils.ml" 35 932 940 "utils.ml" 35 932 946
+type(
+  'a list -> 'a -> 'a list
+)
+ident(
+  def remove "utils.ml" 35 932 932 --
+)
+"utils.ml" 35 932 947 "utils.ml" 35 932 954
+type(
+  'a list
+)
+ident(
+  def fromset "utils.ml" 35 932 955 "utils.ml" 39 1037 1068
+)
+"utils.ml" 35 932 955 "utils.ml" 35 932 962
+type(
+  'a
+)
+ident(
+  def element "utils.ml" 35 932 965 "utils.ml" 39 1037 1068
+)
+"utils.ml" 35 932 971 "utils.ml" 35 932 978
+type(
+  'a list
+)
+ident(
+  int_ref fromset "utils.ml" 35 932 947 "utils.ml" 35 932 954
+)
+"utils.ml" 36 984 986 "utils.ml" 36 984 988
+type(
+  'a list
+)
+"utils.ml" 36 984 992 "utils.ml" 36 984 994
+type(
+  'a list
+)
+"utils.ml" 37 995 998 "utils.ml" 37 995 999
+type(
+  'a
+)
+ident(
+  def x "utils.ml" 38 1009 1013 "utils.ml" 39 1037 1068
+)
+"utils.ml" 37 995 1001 "utils.ml" 37 995 1003
+type(
+  'a list
+)
+ident(
+  def xs "utils.ml" 38 1009 1013 "utils.ml" 39 1037 1068
+)
+"utils.ml" 37 995 997 "utils.ml" 37 995 1004
+type(
+  'a list
+)
+"utils.ml" 38 1009 1016 "utils.ml" 38 1009 1017
+type(
+  'a
+)
+ident(
+  int_ref x "utils.ml" 37 995 998 "utils.ml" 37 995 999
+)
+"utils.ml" 38 1009 1018 "utils.ml" 38 1009 1019
+type(
+  'a -> 'a -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"utils.ml" 38 1009 1020 "utils.ml" 38 1009 1027
+type(
+  'a
+)
+ident(
+  int_ref element "utils.ml" 35 932 955 "utils.ml" 35 932 962
+)
+"utils.ml" 38 1009 1016 "utils.ml" 38 1009 1027
+type(
+  bool
+)
+"utils.ml" 38 1009 1033 "utils.ml" 38 1009 1035
+type(
+  'a list
+)
+ident(
+  int_ref xs "utils.ml" 37 995 1001 "utils.ml" 37 995 1003
+)
+"utils.ml" 39 1037 1046 "utils.ml" 39 1037 1047
+type(
+  'a
+)
+ident(
+  int_ref x "utils.ml" 37 995 998 "utils.ml" 37 995 999
+)
+"utils.ml" 39 1037 1050 "utils.ml" 39 1037 1056
+type(
+  'a list -> 'a -> 'a list
+)
+ident(
+  int_ref remove "utils.ml" 35 932 940 "utils.ml" 35 932 946
+)
+"utils.ml" 39 1037 1057 "utils.ml" 39 1037 1059
+type(
+  'a list
+)
+ident(
+  int_ref xs "utils.ml" 37 995 1001 "utils.ml" 37 995 1003
+)
+"utils.ml" 39 1037 1060 "utils.ml" 39 1037 1067
+type(
+  'a
+)
+ident(
+  int_ref element "utils.ml" 35 932 955 "utils.ml" 35 932 962
+)
+"utils.ml" 39 1037 1049 "utils.ml" 39 1037 1068
+type(
+  'a list
+)
+"utils.ml" 39 1037 1046 "utils.ml" 39 1037 1068
+type(
+  'a list
+)
+"utils.ml" 38 1009 1013 "utils.ml" 39 1037 1068
+type(
+  'a list
+)
+"utils.ml" 35 932 965 "utils.ml" 39 1037 1068
+type(
+  'a list
+)
+"utils.ml" 42 1100 1108 "utils.ml" 42 1100 1116
+type(
+  'a list -> 'a list -> 'a list
+)
+ident(
+  def subtract "utils.ml" 42 1100 1100 --
+)
+"utils.ml" 42 1100 1117 "utils.ml" 42 1100 1124
+type(
+  'a list
+)
+ident(
+  def fromset "utils.ml" 42 1100 1125 "utils.ml" 44 1172 1215
+)
+"utils.ml" 42 1100 1125 "utils.ml" 42 1100 1133
+type(
+  'a list
+)
+ident(
+  def elements "utils.ml" 42 1100 1136 "utils.ml" 44 1172 1215
+)
+"utils.ml" 42 1100 1142 "utils.ml" 42 1100 1150
+type(
+  'a list
+)
+ident(
+  int_ref elements "utils.ml" 42 1100 1125 "utils.ml" 42 1100 1133
+)
+"utils.ml" 43 1156 1158 "utils.ml" 43 1156 1160
+type(
+  'a list
+)
+"utils.ml" 43 1156 1164 "utils.ml" 43 1156 1171
+type(
+  'a list
+)
+ident(
+  int_ref fromset "utils.ml" 42 1100 1117 "utils.ml" 42 1100 1124
+)
+"utils.ml" 44 1172 1175 "utils.ml" 44 1172 1176
+type(
+  'a
+)
+ident(
+  def x "utils.ml" 44 1172 1185 "utils.ml" 44 1172 1215
+)
+"utils.ml" 44 1172 1178 "utils.ml" 44 1172 1180
+type(
+  'a list
+)
+ident(
+  def xs "utils.ml" 44 1172 1185 "utils.ml" 44 1172 1215
+)
+"utils.ml" 44 1172 1174 "utils.ml" 44 1172 1181
+type(
+  'a list
+)
+"utils.ml" 44 1172 1185 "utils.ml" 44 1172 1193
+type(
+  'a list -> 'a list -> 'a list
+)
+ident(
+  int_ref subtract "utils.ml" 42 1100 1108 "utils.ml" 42 1100 1116
+)
+"utils.ml" 44 1172 1195 "utils.ml" 44 1172 1201
+type(
+  'a list -> 'a -> 'a list
+)
+ident(
+  int_ref remove "utils.ml" 35 932 940 "utils.ml" 35 932 946
+)
+"utils.ml" 44 1172 1202 "utils.ml" 44 1172 1209
+type(
+  'a list
+)
+ident(
+  int_ref fromset "utils.ml" 42 1100 1117 "utils.ml" 42 1100 1124
+)
+"utils.ml" 44 1172 1210 "utils.ml" 44 1172 1211
+type(
+  'a
+)
+ident(
+  int_ref x "utils.ml" 44 1172 1175 "utils.ml" 44 1172 1176
+)
+"utils.ml" 44 1172 1194 "utils.ml" 44 1172 1212
+type(
+  'a list
+)
+"utils.ml" 44 1172 1213 "utils.ml" 44 1172 1215
+type(
+  'a list
+)
+ident(
+  int_ref xs "utils.ml" 44 1172 1178 "utils.ml" 44 1172 1180
+)
+"utils.ml" 44 1172 1185 "utils.ml" 44 1172 1215
+type(
+  'a list
+)
+"utils.ml" 42 1100 1136 "utils.ml" 44 1172 1215
+type(
+  'a list
+)
+"utils.ml" 48 1239 1243 "utils.ml" 48 1239 1245
+type(
+  'a list -> 'a
+)
+ident(
+  def hd "utils.ml" 52 1301 1301 --
+)
+"utils.ml" 49 1257 1261 "utils.ml" 49 1257 1263
+type(
+  'a list
+)
+"utils.ml" 49 1257 1267 "utils.ml" 49 1257 1272
+type(
+  exn -> 'a
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"utils.ml" 49 1257 1273 "utils.ml" 49 1257 1283
+type(
+  exn
+)
+"utils.ml" 49 1257 1267 "utils.ml" 49 1257 1283
+type(
+  'a
+)
+"utils.ml" 50 1284 1289 "utils.ml" 50 1284 1290
+type(
+  'a
+)
+ident(
+  def x "utils.ml" 50 1284 1298 "utils.ml" 50 1284 1299
+)
+"utils.ml" 50 1284 1292 "utils.ml" 50 1284 1293
+type(
+  'a list
+)
+"utils.ml" 50 1284 1288 "utils.ml" 50 1284 1294
+type(
+  'a list
+)
+"utils.ml" 50 1284 1298 "utils.ml" 50 1284 1299
+type(
+  'a
+)
+ident(
+  int_ref x "utils.ml" 50 1284 1289 "utils.ml" 50 1284 1290
+)
+"utils.ml" 48 1239 1248 "utils.ml" 50 1284 1299
+type(
+  'a list -> 'a
+)
+"utils.ml" 52 1301 1305 "utils.ml" 52 1301 1307
+type(
+  'a list -> 'a list
+)
+ident(
+  def tl "utils.ml" 57 1366 1366 --
+)
+"utils.ml" 53 1319 1323 "utils.ml" 53 1319 1325
+type(
+  'a list
+)
+"utils.ml" 53 1319 1329 "utils.ml" 53 1319 1334
+type(
+  exn -> 'a list
+)
+ident(
+  ext_ref Pervasives.raise
+)
+"utils.ml" 53 1319 1335 "utils.ml" 53 1319 1345
+type(
+  exn
+)
+"utils.ml" 53 1319 1329 "utils.ml" 53 1319 1345
+type(
+  'a list
+)
+"utils.ml" 54 1346 1351 "utils.ml" 54 1346 1352
+type(
+  'a
+)
+"utils.ml" 54 1346 1354 "utils.ml" 54 1346 1356
+type(
+  'a list
+)
+ident(
+  def xs "utils.ml" 54 1346 1361 "utils.ml" 54 1346 1363
+)
+"utils.ml" 54 1346 1350 "utils.ml" 54 1346 1357
+type(
+  'a list
+)
+"utils.ml" 54 1346 1361 "utils.ml" 54 1346 1363
+type(
+  'a list
+)
+ident(
+  int_ref xs "utils.ml" 54 1346 1354 "utils.ml" 54 1346 1356
+)
+"utils.ml" 52 1301 1310 "utils.ml" 54 1346 1363
+type(
+  'a list -> 'a list
+)
+"utils.ml" 57 1366 1374 "utils.ml" 57 1366 1380
+type(
+  'a list -> 'a -> bool
+)
+ident(
+  def member "utils.ml" 57 1366 1366 --
+)
+"utils.ml" 57 1366 1381 "utils.ml" 57 1366 1384
+type(
+  'a list
+)
+ident(
+  def set "utils.ml" 57 1366 1385 "utils.ml" 59 1419 1471
+)
+"utils.ml" 57 1366 1385 "utils.ml" 57 1366 1386
+type(
+  'a
+)
+ident(
+  def x "utils.ml" 57 1366 1389 "utils.ml" 59 1419 1471
+)
+"utils.ml" 57 1366 1395 "utils.ml" 57 1366 1398
+type(
+  'a list
+)
+ident(
+  int_ref set "utils.ml" 57 1366 1381 "utils.ml" 57 1366 1384
+)
+"utils.ml" 58 1405 1407 "utils.ml" 58 1405 1409
+type(
+  'a list
+)
+"utils.ml" 58 1405 1413 "utils.ml" 58 1405 1418
+type(
+  bool
+)
+"utils.ml" 59 1419 1422 "utils.ml" 59 1419 1423
+type(
+  'a
+)
+ident(
+  def y "utils.ml" 59 1419 1432 "utils.ml" 59 1419 1471
+)
+"utils.ml" 59 1419 1425 "utils.ml" 59 1419 1427
+type(
+  'a list
+)
+ident(
+  def ys "utils.ml" 59 1419 1432 "utils.ml" 59 1419 1471
+)
+"utils.ml" 59 1419 1421 "utils.ml" 59 1419 1428
+type(
+  'a list
+)
+"utils.ml" 59 1419 1436 "utils.ml" 59 1419 1437
+type(
+  'a
+)
+ident(
+  int_ref x "utils.ml" 57 1366 1385 "utils.ml" 57 1366 1386
+)
+"utils.ml" 59 1419 1438 "utils.ml" 59 1419 1439
+type(
+  'a -> 'a -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"utils.ml" 59 1419 1440 "utils.ml" 59 1419 1441
+type(
+  'a
+)
+ident(
+  int_ref y "utils.ml" 59 1419 1422 "utils.ml" 59 1419 1423
+)
+"utils.ml" 59 1419 1435 "utils.ml" 59 1419 1442
+type(
+  bool
+)
+"utils.ml" 59 1419 1448 "utils.ml" 59 1419 1452
+type(
+  bool
+)
+"utils.ml" 59 1419 1459 "utils.ml" 59 1419 1465
+type(
+  'a list -> 'a -> bool
+)
+ident(
+  int_ref member "utils.ml" 57 1366 1374 "utils.ml" 57 1366 1380
+)
+"utils.ml" 59 1419 1466 "utils.ml" 59 1419 1468
+type(
+  'a list
+)
+ident(
+  int_ref ys "utils.ml" 59 1419 1425 "utils.ml" 59 1419 1427
+)
+"utils.ml" 59 1419 1469 "utils.ml" 59 1419 1470
+type(
+  'a
+)
+ident(
+  int_ref x "utils.ml" 57 1366 1385 "utils.ml" 57 1366 1386
+)
+"utils.ml" 59 1419 1458 "utils.ml" 59 1419 1471
+type(
+  bool
+)
+"utils.ml" 59 1419 1432 "utils.ml" 59 1419 1471
+type(
+  bool
+)
+"utils.ml" 57 1366 1389 "utils.ml" 59 1419 1471
+type(
+  bool
+)
+"utils.ml" 62 1474 1482 "utils.ml" 62 1474 1488
+type(
+  'a list -> int
+)
+ident(
+  def length "utils.ml" 62 1474 1474 --
+)
+"utils.ml" 63 1500 1504 "utils.ml" 63 1500 1506
+type(
+  'a list
+)
+"utils.ml" 63 1500 1510 "utils.ml" 63 1500 1511
+type(
+  int
+)
+"utils.ml" 64 1512 1517 "utils.ml" 64 1512 1518
+type(
+  'a
+)
+"utils.ml" 64 1512 1520 "utils.ml" 64 1512 1522
+type(
+  'a list
+)
+ident(
+  def xs "utils.ml" 64 1512 1527 "utils.ml" 64 1512 1542
+)
+"utils.ml" 64 1512 1516 "utils.ml" 64 1512 1523
+type(
+  'a list
+)
+"utils.ml" 64 1512 1527 "utils.ml" 64 1512 1528
+type(
+  int
+)
+"utils.ml" 64 1512 1529 "utils.ml" 64 1512 1530
+type(
+  int -> int -> int
+)
+ident(
+  ext_ref Pervasives.( + )
+)
+"utils.ml" 64 1512 1532 "utils.ml" 64 1512 1538
+type(
+  'a list -> int
+)
+ident(
+  int_ref length "utils.ml" 62 1474 1482 "utils.ml" 62 1474 1488
+)
+"utils.ml" 64 1512 1539 "utils.ml" 64 1512 1541
+type(
+  'a list
+)
+ident(
+  int_ref xs "utils.ml" 64 1512 1520 "utils.ml" 64 1512 1522
+)
+"utils.ml" 64 1512 1531 "utils.ml" 64 1512 1542
+type(
+  int
+)
+"utils.ml" 64 1512 1527 "utils.ml" 64 1512 1542
+type(
+  int
+)
+"utils.ml" 62 1474 1491 "utils.ml" 64 1512 1542
+type(
+  'a list -> int
+)
+"utils.ml" 67 1545 1553 "utils.ml" 67 1545 1560
+type(
+  string -> char list
+)
+ident(
+  def explode "utils.ml" 67 1545 1545 --
+)
+"utils.ml" 67 1545 1561 "utils.ml" 67 1545 1562
+type(
+  string
+)
+ident(
+  def s "utils.ml" 68 1566 1568 "utils.ml" 69 1601 1674
+)
+"utils.ml" 68 1566 1572 "utils.ml" 68 1566 1585
+type(
+  string -> int
+)
+ident(
+  ext_ref String.length
+)
+"utils.ml" 68 1566 1586 "utils.ml" 68 1566 1587
+type(
+  string
+)
+ident(
+  int_ref s "utils.ml" 67 1545 1561 "utils.ml" 67 1545 1562
+)
+"utils.ml" 68 1566 1572 "utils.ml" 68 1566 1587
+type(
+  int
+)
+"utils.ml" 68 1566 1588 "utils.ml" 68 1566 1589
+type(
+  int -> int -> bool
+)
+ident(
+  ext_ref Pervasives.( = )
+)
+"utils.ml" 68 1566 1590 "utils.ml" 68 1566 1591
+type(
+  int
+)
+"utils.ml" 68 1566 1571 "utils.ml" 68 1566 1592
+type(
+  bool
+)
+"utils.ml" 68 1566 1598 "utils.ml" 68 1566 1600
+type(
+  char list
+)
+"utils.ml" 69 1601 1609 "utils.ml" 69 1601 1619
+type(
+  string -> int -> char
+)
+ident(
+  ext_ref String.get
+)
+"utils.ml" 69 1601 1620 "utils.ml" 69 1601 1621
+type(
+  string
+)
+ident(
+  int_ref s "utils.ml" 67 1545 1561 "utils.ml" 67 1545 1562
+)
+"utils.ml" 69 1601 1622 "utils.ml" 69 1601 1623
+type(
+  int
+)
+"utils.ml" 69 1601 1608 "utils.ml" 69 1601 1624
+type(
+  char
+)
+"utils.ml" 69 1601 1627 "utils.ml" 69 1601 1634
+type(
+  string -> char list
+)
+ident(
+  int_ref explode "utils.ml" 67 1545 1553 "utils.ml" 67 1545 1560
+)
+"utils.ml" 69 1601 1636 "utils.ml" 69 1601 1646
+type(
+  string -> int -> int -> string
+)
+ident(
+  ext_ref String.sub
+)
+"utils.ml" 69 1601 1647 "utils.ml" 69 1601 1648
+type(
+  string
+)
+ident(
+  int_ref s "utils.ml" 67 1545 1561 "utils.ml" 67 1545 1562
+)
+"utils.ml" 69 1601 1649 "utils.ml" 69 1601 1650
+type(
+  int
+)
+"utils.ml" 69 1601 1652 "utils.ml" 69 1601 1665
+type(
+  string -> int
+)
+ident(
+  ext_ref String.length
+)
+"utils.ml" 69 1601 1666 "utils.ml" 69 1601 1667
+type(
+  string
+)
+ident(
+  int_ref s "utils.ml" 67 1545 1561 "utils.ml" 67 1545 1562
+)
+"utils.ml" 69 1601 1652 "utils.ml" 69 1601 1667
+type(
+  int
+)
+"utils.ml" 69 1601 1668 "utils.ml" 69 1601 1669
+type(
+  int -> int -> int
+)
+ident(
+  ext_ref Pervasives.( - )
+)
+"utils.ml" 69 1601 1670 "utils.ml" 69 1601 1671
+type(
+  int
+)
+"utils.ml" 69 1601 1651 "utils.ml" 69 1601 1672
+type(
+  int
+)
+"utils.ml" 69 1601 1635 "utils.ml" 69 1601 1673
+type(
+  string
+)
+"utils.ml" 69 1601 1626 "utils.ml" 69 1601 1674
+type(
+  char list
+)
+"utils.ml" 69 1601 1608 "utils.ml" 69 1601 1674
+type(
+  char list
+)
+"utils.ml" 68 1566 1568 "utils.ml" 69 1601 1674
+type(
+  char list
+)
+"utils.ml" 71 1676 1684 "utils.ml" 71 1676 1691
+type(
+  char list -> string
+)
+ident(
+  def implode "utils.ml" 71 1676 1676 --
+)
+"utils.ml" 71 1676 1692 "utils.ml" 71 1676 1697
+type(
+  char list
+)
+ident(
+  def chars "utils.ml" 72 1701 1703 "utils.ml" 77 1842 1866
+)
+"utils.ml" 72 1701 1707 "utils.ml" 72 1701 1708
+type(
+  string
+)
+"utils.ml" 72 1701 1711 "utils.ml" 72 1701 1724
+type(
+  int -> string
+)
+ident(
+  ext_ref String.create
+)
+"utils.ml" 72 1701 1726 "utils.ml" 72 1701 1732
+type(
+  char list -> int
+)
+ident(
+  int_ref length "utils.ml" 62 1474 1482 "utils.ml" 62 1474 1488
+)
+"utils.ml" 72 1701 1733 "utils.ml" 72 1701 1738
+type(
+  char list
+)
+ident(
+  int_ref chars "utils.ml" 71 1676 1692 "utils.ml" 71 1676 1697
+)
+"utils.ml" 72 1701 1725 "utils.ml" 72 1701 1739
+type(
+  int
+)
+"utils.ml" 72 1701 1711 "utils.ml" 72 1701 1739
+type(
+  string
+)
+"utils.ml" 73 1743 1753 "utils.ml" 73 1743 1760
+type(
+  int -> char list -> unit
+)
+"utils.ml" 73 1743 1761 "utils.ml" 73 1743 1762
+type(
+  int
+)
+ident(
+  def n "utils.ml" 73 1743 1765 "utils.ml" 75 1789 1840
+)
+"utils.ml" 74 1774 1780 "utils.ml" 74 1774 1782
+type(
+  char list
+)
+"utils.ml" 74 1774 1786 "utils.ml" 74 1774 1788
+type(
+  unit
+)
+"utils.ml" 75 1789 1796 "utils.ml" 75 1789 1797
+type(
+  char
+)
+ident(
+  def c "utils.ml" 75 1789 1806 "utils.ml" 75 1789 1840
+)
+"utils.ml" 75 1789 1799 "utils.ml" 75 1789 1801
+type(
+  char list
+)
+ident(
+  def cs "utils.ml" 75 1789 1806 "utils.ml" 75 1789 1840
+)
+"utils.ml" 75 1789 1795 "utils.ml" 75 1789 1802
+type(
+  char list
+)
+"utils.ml" 75 1789 1806 "utils.ml" 75 1789 1816
+type(
+  string -> int -> char -> unit
+)
+ident(
+  ext_ref String.set
+)
+"utils.ml" 75 1789 1817 "utils.ml" 75 1789 1818
+type(
+  string
+)
+ident(
+  int_ref s "utils.ml" 72 1701 1707 "utils.ml" 72 1701 1708
+)
+"utils.ml" 75 1789 1819 "utils.ml" 75 1789 1820
+type(
+  int
+)
+ident(
+  int_ref n "utils.ml" 73 1743 1761 "utils.ml" 73 1743 1762
+)
+"utils.ml" 75 1789 1821 "utils.ml" 75 1789 1822
+type(
+  char
+)
+ident(
+  int_ref c "utils.ml" 75 1789 1796 "utils.ml" 75 1789 1797
+)
+"utils.ml" 75 1789 1806 "utils.ml" 75 1789 1822
+type(
+  unit
+)
+"utils.ml" 75 1789 1824 "utils.ml" 75 1789 1831
+type(
+  int -> char list -> unit
+)
+ident(
+  int_ref setchar "utils.ml" 73 1743 1753 "utils.ml" 73 1743 1760
+)
+"utils.ml" 75 1789 1833 "utils.ml" 75 1789 1834
+type(
+  int
+)
+ident(
+  int_ref n "utils.ml" 73 1743 1761 "utils.ml" 73 1743 1762
+)
+"utils.ml" 75 1789 1834 "utils.ml" 75 1789 1835
+type(
+  int -> int -> int
+)
+ident(
+  ext_ref Pervasives.( + )
+)
+"utils.ml" 75 1789 1835 "utils.ml" 75 1789 1836
+type(
+  int
+)
+"utils.ml" 75 1789 1832 "utils.ml" 75 1789 1837
+type(
+  int
+)
+"utils.ml" 75 1789 1838 "utils.ml" 75 1789 1840
+type(
+  char list
+)
+ident(
+  int_ref cs "utils.ml" 75 1789 1799 "utils.ml" 75 1789 1801
+)
+"utils.ml" 75 1789 1824 "utils.ml" 75 1789 1840
+type(
+  unit
+)
+"utils.ml" 75 1789 1806 "utils.ml" 75 1789 1840
+type(
+  unit
+)
+"utils.ml" 73 1743 1765 "utils.ml" 75 1789 1840
+type(
+  char list -> unit
+)
+"utils.ml" 77 1842 1848 "utils.ml" 77 1842 1855
+type(
+  int -> char list -> unit
+)
+ident(
+  int_ref setchar "utils.ml" 73 1743 1753 "utils.ml" 73 1743 1760
+)
+"utils.ml" 77 1842 1856 "utils.ml" 77 1842 1857
+type(
+  int
+)
+"utils.ml" 77 1842 1858 "utils.ml" 77 1842 1863
+type(
+  char list
+)
+ident(
+  int_ref chars "utils.ml" 71 1676 1692 "utils.ml" 71 1676 1697
+)
+"utils.ml" 77 1842 1848 "utils.ml" 77 1842 1863
+type(
+  unit
+)
+"utils.ml" 77 1842 1865 "utils.ml" 77 1842 1866
+type(
+  string
+)
+ident(
+  int_ref s "utils.ml" 72 1701 1707 "utils.ml" 72 1701 1708
+)
+"utils.ml" 77 1842 1848 "utils.ml" 77 1842 1866
+type(
+  string
+)
+"utils.ml" 73 1743 1745 "utils.ml" 77 1842 1866
+type(
+  string
+)
+"utils.ml" 72 1701 1703 "utils.ml" 77 1842 1866
+type(
+  string
+)
+"utils.ml" 79 1868 1872 "utils.ml" 79 1868 1877
+type(
+  string -> (char -> bool) -> string list
+)
+ident(
+  def split "utils.ml" 88 2120 2120 --
+)
+"utils.ml" 79 1868 1878 "utils.ml" 79 1868 1879
+type(
+  string
+)
+ident(
+  def s "utils.ml" 79 1868 1880 "utils.ml" 86 2073 2118
+)
+"utils.ml" 79 1868 1880 "utils.ml" 79 1868 1881
+type(
+  char -> bool
+)
+ident(
+  def c "utils.ml" 80 1884 1886 "utils.ml" 86 2073 2118
+)
+"utils.ml" 80 1884 1894 "utils.ml" 80 1884 1900
+type(
+  char list list -> char list -> char list -> char list list
+)
+"utils.ml" 80 1884 1901 "utils.ml" 80 1884 1908
+type(
+  char list list
+)
+ident(
+  def results "utils.ml" 80 1884 1909 "utils.ml" 83 2026 2066
+)
+"utils.ml" 80 1884 1909 "utils.ml" 80 1884 1912
+type(
+  char list
+)
+ident(
+  def acc "utils.ml" 80 1884 1913 "utils.ml" 83 2026 2066
+)
+"utils.ml" 80 1884 1913 "utils.ml" 80 1884 1919
+type(
+  char list
+)
+ident(
+  def tocome "utils.ml" 80 1884 1922 "utils.ml" 83 2026 2066
+)
+"utils.ml" 80 1884 1928 "utils.ml" 80 1884 1934
+type(
+  char list
+)
+ident(
+  int_ref tocome "utils.ml" 80 1884 1913 "utils.ml" 80 1884 1919
+)
+"utils.ml" 81 1940 1944 "utils.ml" 81 1940 1946
+type(
+  char list
+)
+"utils.ml" 81 1940 1950 "utils.ml" 81 1940 1957
+type(
+  char list list
+)
+ident(
+  int_ref results "utils.ml" 80 1884 1901 "utils.ml" 80 1884 1908
+)
+"utils.ml" 81 1940 1958 "utils.ml" 81 1940 1959
+type(
+  char list list -> char list list -> char list list
+)
+ident(
+  ext_ref Pervasives.( @ )
+)
+"utils.ml" 81 1940 1961 "utils.ml" 81 1940 1964
+type(
+  char list
+)
+ident(
+  int_ref acc "utils.ml" 80 1884 1909 "utils.ml" 80 1884 1912
+)
+"utils.ml" 81 1940 1960 "utils.ml" 81 1940 1965
+type(
+  char list list
+)
+"utils.ml" 81 1940 1950 "utils.ml" 81 1940 1965
+type(
+  char list list
+)
+"utils.ml" 82 1966 1971 "utils.ml" 82 1966 1972
+type(
+  char
+)
+ident(
+  def x "utils.ml" 82 1966 1981 "utils.ml" 83 2026 2066
+)
+"utils.ml" 82 1966 1974 "utils.ml" 82 1966 1976
+type(
+  char list
+)
+ident(
+  def xs "utils.ml" 82 1966 1981 "utils.ml" 83 2026 2066
+)
+"utils.ml" 82 1966 1970 "utils.ml" 82 1966 1977
+type(
+  char list
+)
+"utils.ml" 82 1966 1985 "utils.ml" 82 1966 1986
+type(
+  char -> bool
+)
+ident(
+  int_ref c "utils.ml" 79 1868 1880 "utils.ml" 79 1868 1881
+)
+"utils.ml" 82 1966 1987 "utils.ml" 82 1966 1988
+type(
+  char
+)
+ident(
+  int_ref x "utils.ml" 82 1966 1971 "utils.ml" 82 1966 1972
+)
+"utils.ml" 82 1966 1984 "utils.ml" 82 1966 1989
+type(
+  bool
+)
+"utils.ml" 82 1966 1995 "utils.ml" 82 1966 2001
+type(
+  char list list -> char list -> char list -> char list list
+)
+ident(
+  int_ref search "utils.ml" 80 1884 1894 "utils.ml" 80 1884 1900
+)
+"utils.ml" 82 1966 2003 "utils.ml" 82 1966 2010
+type(
+  char list list
+)
+ident(
+  int_ref results "utils.ml" 80 1884 1901 "utils.ml" 80 1884 1908
+)
+"utils.ml" 82 1966 2011 "utils.ml" 82 1966 2012
+type(
+  char list list -> char list list -> char list list
+)
+ident(
+  ext_ref Pervasives.( @ )
+)
+"utils.ml" 82 1966 2014 "utils.ml" 82 1966 2017
+type(
+  char list
+)
+ident(
+  int_ref acc "utils.ml" 80 1884 1909 "utils.ml" 80 1884 1912
+)
+"utils.ml" 82 1966 2013 "utils.ml" 82 1966 2018
+type(
+  char list list
+)
+"utils.ml" 82 1966 2002 "utils.ml" 82 1966 2019
+type(
+  char list list
+)
+"utils.ml" 82 1966 2020 "utils.ml" 82 1966 2022
+type(
+  char list
+)
+"utils.ml" 82 1966 2023 "utils.ml" 82 1966 2025
+type(
+  char list
+)
+ident(
+  int_ref xs "utils.ml" 82 1966 1974 "utils.ml" 82 1966 1976
+)
+"utils.ml" 82 1966 1995 "utils.ml" 82 1966 2025
+type(
+  char list list
+)
+"utils.ml" 83 2026 2037 "utils.ml" 83 2026 2043
+type(
+  char list list -> char list -> char list -> char list list
+)
+ident(
+  int_ref search "utils.ml" 80 1884 1894 "utils.ml" 80 1884 1900
+)
+"utils.ml" 83 2026 2044 "utils.ml" 83 2026 2051
+type(
+  char list list
+)
+ident(
+  int_ref results "utils.ml" 80 1884 1901 "utils.ml" 80 1884 1908
+)
+"utils.ml" 83 2026 2053 "utils.ml" 83 2026 2056
+type(
+  char list
+)
+ident(
+  int_ref acc "utils.ml" 80 1884 1909 "utils.ml" 80 1884 1912
+)
+"utils.ml" 83 2026 2057 "utils.ml" 83 2026 2058
+type(
+  char list -> char list -> char list
+)
+ident(
+  ext_ref Pervasives.( @ )
+)
+"utils.ml" 83 2026 2060 "utils.ml" 83 2026 2061
+type(
+  char
+)
+ident(
+  int_ref x "utils.ml" 82 1966 1971 "utils.ml" 82 1966 1972
+)
+"utils.ml" 83 2026 2059 "utils.ml" 83 2026 2062
+type(
+  char list
+)
+"utils.ml" 83 2026 2052 "utils.ml" 83 2026 2063
+type(
+  char list
+)
+"utils.ml" 83 2026 2064 "utils.ml" 83 2026 2066
+type(
+  char list
+)
+ident(
+  int_ref xs "utils.ml" 82 1966 1974 "utils.ml" 82 1966 1976
+)
+"utils.ml" 83 2026 2037 "utils.ml" 83 2026 2066
+type(
+  char list list
+)
+"utils.ml" 82 1966 1981 "utils.ml" 83 2026 2066
+type(
+  char list list
+)
+"utils.ml" 80 1884 1922 "utils.ml" 83 2026 2066
+type(
+  char list list
+)
+"utils.ml" 86 2073 2075 "utils.ml" 86 2073 2083
+type(
+  (char list -> string) -> char list list -> string list
+)
+ident(
+  ext_ref List.map
+)
+"utils.ml" 86 2073 2084 "utils.ml" 86 2073 2091
+type(
+  char list -> string
+)
+ident(
+  int_ref implode "utils.ml" 71 1676 1684 "utils.ml" 71 1676 1691
+)
+"utils.ml" 86 2073 2093 "utils.ml" 86 2073 2099
+type(
+  char list list -> char list -> char list -> char list list
+)
+ident(
+  int_ref search "utils.ml" 80 1884 1894 "utils.ml" 80 1884 1900
+)
+"utils.ml" 86 2073 2100 "utils.ml" 86 2073 2102
+type(
+  char list list
+)
+"utils.ml" 86 2073 2103 "utils.ml" 86 2073 2105
+type(
+  char list
+)
+"utils.ml" 86 2073 2107 "utils.ml" 86 2073 2114
+type(
+  string -> char list
+)
+ident(
+  int_ref explode "utils.ml" 67 1545 1553 "utils.ml" 67 1545 1560
+)
+"utils.ml" 86 2073 2115 "utils.ml" 86 2073 2116
+type(
+  string
+)
+ident(
+  int_ref s "utils.ml" 79 1868 1878 "utils.ml" 79 1868 1879
+)
+"utils.ml" 86 2073 2106 "utils.ml" 86 2073 2117
+type(
+  char list
+)
+"utils.ml" 86 2073 2092 "utils.ml" 86 2073 2118
+type(
+  char list list
+)
+"utils.ml" 86 2073 2075 "utils.ml" 86 2073 2118
+type(
+  string list
+)
+"utils.ml" 80 1884 1886 "utils.ml" 86 2073 2118
+type(
+  string list
+)
+"utils.ml" 88 2120 2124 "utils.ml" 88 2120 2132
+type(
+  string -> string list
+)
+ident(
+  def tokenize "utils.ml" 99 2404 2412 --
+)
+"utils.ml" 88 2120 2133 "utils.ml" 88 2120 2134
+type(
+  string
+)
+ident(
+  def s "utils.ml" 89 2138 2140 "utils.ml" 99 2404 2412
+)
+"utils.ml" 89 2138 2144 "utils.ml" 89 2138 2154
+type(
+  char -> bool
+)
+"utils.ml" 90 2166 2172 "utils.ml" 90 2166 2175
+type(
+  char
+)
+"utils.ml" 90 2166 2180 "utils.ml" 90 2166 2184
+type(
+  bool
+)
+"utils.ml" 91 2185 2191 "utils.ml" 91 2185 2195
+type(
+  char
+)
+"utils.ml" 91 2185 2199 "utils.ml" 91 2185 2203
+type(
+  bool
+)
+"utils.ml" 92 2204 2210 "utils.ml" 92 2204 2214
+type(
+  char
+)
+"utils.ml" 92 2204 2218 "utils.ml" 92 2204 2222
+type(
+  bool
+)
+"utils.ml" 93 2223 2229 "utils.ml" 93 2223 2233
+type(
+  char
+)
+"utils.ml" 93 2223 2237 "utils.ml" 93 2223 2241
+type(
+  bool
+)
+"utils.ml" 94 2242 2248 "utils.ml" 94 2242 2249
+type(
+  char
+)
+"utils.ml" 94 2242 2256 "utils.ml" 94 2242 2261
+type(
+  bool
+)
+"utils.ml" 89 2138 2157 "utils.ml" 94 2242 2261
+type(
+  char -> bool
+)
+"utils.ml" 95 2262 2268 "utils.ml" 95 2262 2277
+type(
+  string -> bool
+)
+"utils.ml" 95 2262 2289 "utils.ml" 95 2262 2290
+type(
+  string
+)
+ident(
+  def x "utils.ml" 95 2262 2294 "utils.ml" 95 2262 2303
+)
+"utils.ml" 95 2262 2295 "utils.ml" 95 2262 2296
+type(
+  string
+)
+ident(
+  int_ref x "utils.ml" 95 2262 2289 "utils.ml" 95 2262 2290
+)
+"utils.ml" 95 2262 2297 "utils.ml" 95 2262 2299
+type(
+  string -> string -> bool
+)
+ident(
+  ext_ref Pervasives.( <> )
+)
+"utils.ml" 95 2262 2300 "utils.ml" 95 2262 2302
+type(
+  string
+)
+"utils.ml" 95 2262 2294 "utils.ml" 95 2262 2303
+type(
+  bool
+)
+"utils.ml" 95 2262 2280 "utils.ml" 95 2262 2303
+type(
+  string -> bool
+)
+"utils.ml" 97 2308 2314 "utils.ml" 97 2308 2326
+type(
+  string list
+)
+"utils.ml" 97 2308 2329 "utils.ml" 97 2308 2334
+type(
+  string -> (char -> bool) -> string list
+)
+ident(
+  int_ref split "utils.ml" 79 1868 1872 "utils.ml" 79 1868 1877
+)
+"utils.ml" 97 2308 2335 "utils.ml" 97 2308 2336
+type(
+  string
+)
+ident(
+  int_ref s "utils.ml" 88 2120 2133 "utils.ml" 88 2120 2134
+)
+"utils.ml" 97 2308 2337 "utils.ml" 97 2308 2347
+type(
+  char -> bool
+)
+ident(
+  int_ref whitespace "utils.ml" 89 2138 2144 "utils.ml" 89 2138 2154
+)
+"utils.ml" 97 2308 2329 "utils.ml" 97 2308 2347
+type(
+  string list
+)
+"utils.ml" 98 2351 2357 "utils.ml" 98 2351 2363
+type(
+  string list
+)
+"utils.ml" 98 2351 2366 "utils.ml" 98 2351 2377
+type(
+  (string -> bool) -> string list -> string list
+)
+ident(
+  ext_ref List.filter
+)
+"utils.ml" 98 2351 2378 "utils.ml" 98 2351 2387
+type(
+  string -> bool
+)
+ident(
+  int_ref not_blank "utils.ml" 95 2262 2268 "utils.ml" 95 2262 2277
+)
+"utils.ml" 98 2351 2388 "utils.ml" 98 2351 2400
+type(
+  string list
+)
+ident(
+  int_ref split_string "utils.ml" 97 2308 2314 "utils.ml" 97 2308 2326
+)
+"utils.ml" 98 2351 2366 "utils.ml" 98 2351 2400
+type(
+  string list
+)
+"utils.ml" 99 2404 2406 "utils.ml" 99 2404 2412
+type(
+  string list
+)
+ident(
+  int_ref tokens "utils.ml" 98 2351 2357 "utils.ml" 98 2351 2363
+)
+"utils.ml" 98 2351 2353 "utils.ml" 99 2404 2412
+type(
+  string list
+)
+"utils.ml" 97 2308 2310 "utils.ml" 99 2404 2412
+type(
+  string list
+)
+"utils.ml" 89 2138 2140 "utils.ml" 99 2404 2412
+type(
+  string list
+)
--- /dev/null
+++ xen-api-0.1/dist/genptoken-src/genptoken.ml
@@ -0,0 +1,23 @@
+(* tool to generate pool secrets *)
+
+type options = { force : bool; tgtfile : string }
+
+let options = ref { force = false; tgtfile = "/etc/xensource/ptoken" }
+
+let set_force _ = options := { !options with force = true }
+let set_target s = options := { !options with tgtfile = s }
+
+let opt_force = ("-f", Arg.Unit set_force, "force generation of pool token, overwriting any existing one")
+let opt_target = ("-o", Arg.String set_target, "name of file to write to [ptoken]")
+let opts = [opt_force; opt_target]
+
+let _ =
+	Arg.parse opts (fun _ -> ()) "Generate a pool token";
+	if Sys.file_exists !options.tgtfile
+		then if !options.force
+			then Sys.remove !options.tgtfile
+			else begin print_endline "File exists, use -f to replace it."; exit 1 end;
+	let uuid _ = Uuid.to_string (Uuid.make_uuid ()) in
+	let uuids = String.concat "/" [uuid (); uuid (); uuid ()] in
+	let f = open_out_gen [Open_wronly; Open_creat; Open_excl; Open_binary] 0o640 !options.tgtfile in
+	output_string f uuids
--- /dev/null
+++ xen-api-0.1/dist/xenguest-src/dumpcore.ml
@@ -0,0 +1,36 @@
+(*
+ * Copyright (C) 2006-2009 Citrix Systems Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published
+ * by the Free Software Foundation; version 2.1 only. with the special
+ * exception on linking described in file LICENSE.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ *)
+(* test dumpcore with OSS libxc *)
+
+let finally fct clean_f =
+	let result = try
+		fct ();
+	with
+		exn ->
+		  clean_f (); raise exn in
+	clean_f ();
+	result
+
+let _ =
+	let domid = ref (-1) in
+	let file = ref "" in
+	Arg.parse [
+		"-domid", Arg.Set_int domid, "domid to dumpcore";
+		"-file", Arg.Set_string file, "dumpcore filename"; ]
+		(fun s -> ()) "dumpcore";
+
+	let handle = Xenguest.init () in
+	finally (fun () ->
+		Xenguest.dumpcore handle !domid !file
+		) (fun () -> Xenguest.close handle)
--- /dev/null
+++ xen-api-0.1/dist/xenguest-src/xenguest.ml
@@ -0,0 +1,54 @@
+(*
+ * Copyright (C) 2006-2009 Citrix Systems Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published
+ * by the Free Software Foundation; version 2.1 only. with the special
+ * exception on linking described in file LICENSE.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ *)
+type suspend_flags = Debug | Live
+
+type handle
+type domid = int
+
+(** open a xenguest handle *)
+external init : unit -> handle = "stub_xenguest_init"
+
+(** close a xenguest handle *)
+external close : handle -> unit = "stub_xenguest_close"
+
+(** build a linux domain *)
+external linux_build : handle -> domid -> int -> int -> string ->
+                       string option -> string -> string -> int ->
+                       int -> int -> (nativeint * nativeint * string)
+	= "stub_xc_linux_build_bytecode" "stub_xc_linux_build_native"
+
+(** build a hvm domain *)
+external hvm_build : handle -> domid -> int -> int -> string -> int -> int ->
+	(nativeint * nativeint)
+	= "stub_xc_hvm_build_bytecode" "stub_xc_hvm_build_native"
+
+(** resume an uncooperative domain *)
+external domain_resume_slow : handle -> domid -> unit
+                            = "stub_xc_domain_resume_slow"
+
+(** restore a domain *)
+external domain_restore : handle -> Unix.file_descr -> domid
+                       -> int -> int -> bool
+                       -> nativeint * nativeint
+       = "stub_xc_domain_restore_bytecode" "stub_xc_domain_restore"
+
+(** save a domain *)
+external domain_save : handle -> Unix.file_descr -> domid
+                    -> int -> int -> suspend_flags list -> bool
+                    -> unit
+       = "stub_xc_domain_save_bytecode" "stub_xc_domain_save"
+
+(** opensource xc dumpcore *)
+external dumpcore : handle -> domid -> string -> unit
+       = "stub_xc_domain_dumpcore"
--- /dev/null
+++ xen-api-0.1/dist/xenguest-src/xenguest_main.ml
@@ -0,0 +1,460 @@
+(*
+ * Copyright (C) 2006-2009 Citrix Systems Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published
+ * by the Free Software Foundation; version 2.1 only. with the special
+ * exception on linking described in file LICENSE.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ *)
+(* Very simple commandline wrapper around useful but not threadsafe xenguest
+   functions.  Serves as an example of the ocaml bindings. *)
+
+let mode = ref None
+
+open Printf
+
+let finally fct clean_f =
+	let result = try
+		fct ();
+	with
+		exn ->
+		  clean_f (); raise exn in
+	clean_f ();
+	result
+
+let set_difference a b = List.filter (fun x -> not(List.mem x b)) a
+
+let file_descr_of_int (x: int) : Unix.file_descr = Obj.magic x
+let int_of_file_descr (x: Unix.file_descr) : int = Obj.magic x
+
+let close_all_fds_except (fds: Unix.file_descr list) =
+  let all_open = Sys.readdir (sprintf "/proc/%d/fd" (Unix.getpid ())) in
+  let all_open = List.map int_of_string (Array.to_list all_open) in
+  let all_open = List.map file_descr_of_int all_open in
+  let to_close = set_difference all_open fds in
+  List.iter (fun fd -> try Unix.close fd with _ -> ()) to_close
+
+(* Code to log internal debug messages ***************************************)
+let debug_fd = ref None
+let openlog filename =
+  debug_fd := Some (Unix.openfile filename [ Unix.O_CREAT; Unix.O_WRONLY ] 0o644)
+let log_writer prefix (x: string) = match !debug_fd with
+  | Some fd ->
+      let x = prefix ^ x ^ "\n" in
+      let n = Unix.write fd x 0 (String.length x) in
+      if n <> String.length x then begin
+	  (* Just in case this works: *)
+	  Printf.fprintf stderr "Failed to write to debug log file; quitting";
+	  exit 1
+      end
+  | None -> ()
+let debug (fmt: ('a , unit, string, unit) format4) =
+  Printf.kprintf (log_writer "xenguest helper: debug: ") fmt
+let error (fmt: ('a , unit, string, unit) format4) =
+  Printf.kprintf (log_writer "xenguest helper: error: ") fmt
+let closelog () = match !debug_fd with
+  | Some fd -> Unix.close fd
+  | None -> ()
+
+(* Types of messages we can transmit *****************************************)
+type message =
+    | Stdout of string (* captured stdout from libxenguest *)
+    | Stderr of string (* captured stderr from libxenguest *)
+    | Error of string  (* an actual error that we detected *)
+    | Suspend          (* request the caller suspends the domain *)
+    | Info of string   (* some info that we want to send back *)
+    | Result of string (* the result of the operation *)
+
+let string_of_message = function
+  | Stdout x -> "stdout:" ^ (String.escaped x)
+  | Stderr x -> "stderr:" ^ (String.escaped x)
+  | Error x  -> "error:" ^ (String.escaped x)
+  | Suspend  -> "suspend:"
+  | Info x   -> "info:" ^ (String.escaped x)
+  | Result x -> "result:" ^ (String.escaped x)
+
+(* Parameter parsing code ****************************************************)
+
+(** A mapping from param name -> string options *)
+let params = Hashtbl.create 10
+(** A mapping from param name -> docstring *)
+let doc = Hashtbl.create 10
+
+let add_param (param: string) (docstring: string) =
+	Hashtbl.add params param None;
+	Hashtbl.add doc param docstring
+let get_args () =
+	let set param v = Hashtbl.replace params param (Some v) in
+	Hashtbl.fold (fun param docstring acc ->
+		("-" ^ param, Arg.String (set param), docstring) :: acc) doc []
+let require xs = List.iter (fun param ->
+	if not(Hashtbl.mem params param)
+	then begin
+	    let msg = sprintf "Internal error; unexpected parameter %s" param in
+	    error "%s" msg;
+	    failwith msg
+	end else match Hashtbl.find params param with
+	| None ->
+	    let msg = sprintf "This option requires parameters [ %s ]. You missed %s"
+	      (String.concat ", " xs) param in
+	    error "%s" msg;
+	    failwith msg
+	| Some v -> ()) xs
+
+let get_param param = match Hashtbl.find params param with
+	| None ->
+	    let msg = sprintf "Internal error; unexpected parameter %s" param in
+	    error "%s" msg;
+	    failwith msg
+	| Some v -> v
+let has_param param = Hashtbl.find params param <> None
+
+(* Code to talk to the controlling process ***********************************)
+
+let controlinfd = ref (-1)
+let controloutfd = ref (-1)
+
+let control_write (x: message) =
+  let x = string_of_message x in
+  debug "control_write: %s" x;
+  let outfd = file_descr_of_int !controloutfd in
+  let oc = Unix.out_channel_of_descr outfd in
+  output_string oc (x ^ "\n");
+  flush oc
+
+let control_read () : string =
+  let infd = file_descr_of_int !controlinfd in
+  let ic = Unix.in_channel_of_descr infd in
+  let result = input_line ic in
+  debug "control_read: %s" result;
+  result
+
+let fork_capture_stdout_stderr callback f x =
+	let stdout_r, stdout_w = Unix.pipe ()
+	and stderr_r, stderr_w = Unix.pipe ()
+	and output_r, output_w = Unix.pipe () in
+
+	let pid = Unix.fork () in
+	if pid = 0 then begin
+		try
+			Unix.dup2 stdout_w Unix.stdout;
+			Unix.dup2 stderr_w Unix.stderr;
+			List.iter Unix.close [ stdout_r; stderr_r; output_r ];
+			(* On success, prepend a well-known character. *)
+			let result = try "!" ^ f x
+				     with e -> Printf.sprintf "Subprocess failure: %s" (Printexc.to_string e) in
+			let len=String.length result in
+			if (Unix.write output_w result 0 len) <> len 
+			then (failwith "Write returned short in fork_capture_stdout_stderr");
+			exit 0
+		with _ -> exit 0
+	end;
+
+	Sys.set_signal Sys.sigterm (Sys.Signal_handle (fun i -> debug "Signal handler killing PID=%d" pid; Unix.kill pid Sys.sigterm));
+	List.iter Unix.close [ stdout_w; stderr_w; output_w ];
+
+	let finished = ref false in
+	let buf = String.make 1024 ' ' in
+
+	(* We want to make sure we drain stdout and stderr before quitting *)
+	let active_fds = ref [ stdout_r; stderr_r; output_r ] in
+
+	let result = ref "" in
+	while not(!finished) do
+		let r, _, _ =
+			try Unix.select !active_fds [] [] (-1.)
+			with Unix.Unix_error (Unix.EINTR, _, _) -> [], [], [] in
+	
+		if List.mem stdout_r r then begin
+			let n = Unix.read stdout_r buf 0 (String.length buf) in
+			if n = 0 then begin
+			    debug "Zero-length read on stdout; closing";
+			    Unix.close stdout_r;
+			    active_fds := List.filter (fun x -> x <> stdout_r) !active_fds
+			end else callback (Stdout(String.sub buf 0 n))
+		end;
+		if List.mem stderr_r r then begin
+			let n = Unix.read stderr_r buf 0 (String.length buf) in
+			if n = 0 then begin
+			    debug "Zero-length read on stderr; closing";
+			    Unix.close stderr_r;
+			    active_fds := List.filter (fun x -> x <> stderr_r) !active_fds
+			end else callback (Stderr(String.sub buf 0 n))
+		end;
+		if List.mem output_r r then begin
+			let n = Unix.read output_r buf 0 (String.length buf) in
+			if n = 0 then begin
+			    debug "Zero-length read on output; closing";
+			    Unix.close output_r;
+			    active_fds := List.filter (fun x -> x <> output_r) !active_fds
+			end else result := String.sub buf 0 n
+		end;
+		finished := !active_fds = []
+	done;
+	begin match snd (Unix.waitpid [] pid) with
+	| Unix.WEXITED 0    -> ()
+	| Unix.WEXITED rc   -> failwith (sprintf "child failure, return code %d" rc)
+	| Unix.WSIGNALED si -> failwith (sprintf "child killed by signal %d" si)
+	| _                 -> failwith (sprintf "child stopped")
+	end;
+	(* Success/failure is encoded in the first character *)
+	if String.length !result = 0 then
+	  failwith "result empty string";
+	if !result.[0] = '!'
+	then result := String.sub !result 1 (String.length !result - 1)
+	else failwith !result;
+	!result
+
+
+(* Helper functions ********************************************************)
+
+(** Global callback function to be called from C bindings *)
+let suspend_callback id : bool =
+	if id = int_of_string (get_param "domid") then begin
+		control_write Suspend;
+		let line = control_read () in
+		print_endline line;
+		true
+	end else false
+
+let _ = Callback.register "suspend_callback" suspend_callback
+
+(** real operations *)
+let with_xenguest f =
+	let xc = Xenguest.init () in
+	finally (fun () -> f xc) (fun () -> Xenguest.close xc)
+
+let linux_build_real domid mem_max_mib mem_start_mib image ramdisk cmdline features flags store_port console_port =
+	with_xenguest (fun xc ->
+		let store_mfn, console_mfn, proto =
+			Xenguest.linux_build xc domid mem_max_mib mem_start_mib image
+			                     ramdisk cmdline features flags store_port console_port in
+		String.concat " " [ Nativeint.to_string store_mfn;
+		                    Nativeint.to_string console_mfn; proto ]
+	)
+
+let hvm_build_real domid mem_max_mib mem_start_mib image store_port console_port=
+	with_xenguest (fun xc ->
+		let store_mfn, console_mfn =
+			Xenguest.hvm_build xc domid mem_max_mib mem_start_mib image
+			                   store_port console_port in
+		String.concat " " [Nativeint.to_string store_mfn;
+		                   Nativeint.to_string console_mfn]
+	)
+
+let domain_save_real fd domid x y flags hvm =
+	with_xenguest (fun xc ->
+		Xenguest.domain_save xc fd domid x y flags hvm;
+		""
+	)
+
+let domain_restore_real fd domid store_port console_port hvm =
+	with_xenguest (fun xc ->
+		let store_mfn, console_mfn =
+		Xenguest.domain_restore xc fd domid store_port
+					console_port hvm in
+		String.concat " "  [ Nativeint.to_string store_mfn;
+				     Nativeint.to_string console_mfn ]
+	)
+
+(** fake operations *)
+let linux_build_fake domid mem_max_mib mem_start_mib image ramdisk cmdline features flags store_port console_port = "10 10 x86-32"
+let hvm_build_fake domid mem_max_mib mem_start_mib image store_port console_port = "2901 2901"
+let domain_save_fake fd domid x y flags hvm = Unix.sleep 1; ignore (suspend_callback domid); ""
+let domain_restore_fake fd domid store_port console_port hvm = "10 10"
+
+(** operation vector *)
+type ops = {
+	linux_build: int -> int -> int -> string -> string option -> string -> string -> int -> int -> int -> string;
+	hvm_build: int -> int -> int -> string -> int -> int -> string;
+	domain_save: Unix.file_descr -> int -> int -> int -> Xenguest.suspend_flags list -> bool -> string;
+	domain_restore: Unix.file_descr -> int -> int -> int -> bool -> string;
+}
+
+(* main *)
+let _ =
+	(* Union of all the options required by all modes: *)
+	add_param "fd" "the file-descriptor on which to send the data";
+	add_param "image" "kernel image to boot from";
+	add_param "cmdline" "kernel commandline to use";
+	add_param "ramdisk" "kernel ramdisk path to use";
+	add_param "domid" "domain ID on which to operate";
+	add_param "live" "perform a live suspend";
+	add_param "debug" "suspend in debug mode";
+	add_param "store_port" "";
+	add_param "console_port" "";
+	add_param "features" "";
+	add_param "flags" "";
+	add_param "mem_max_mib" "maximum memory allocation / MiB";
+	add_param "mem_start_mib" "initial memory allocation / MiB";
+	add_param "fork" "true to fork a background thread to capture stdout and stderr";
+
+	let fake = ref false in
+
+	Arg.parse ([
+	  "-mode", Arg.Symbol ([ "save"; "hvm_save"; "restore"; "hvm_restore"; "resume_slow"; "linux_build"; "hvm_build"; "test" ],
+			       fun x -> mode := Some x),
+	  "set the mode of operation";
+	] @ (get_args ()) @ [
+	  "-controlinfd", Arg.Set_int controlinfd,
+	  "set the fd on which to receive the control commands (defaults to stdin)";
+	  "-controloutfd", Arg.Set_int controloutfd,
+	  "set the fd on which to send responses (defaults to stdout)";
+	  "-debuglog", Arg.String openlog,
+	  "Append debug logging direct to a file";
+	  "-fake", Arg.Set fake,
+	  "Use Fake calls";
+	]) (fun x -> print_endline ("Ignoring argument: " ^ x))
+	  "Helper program to interface with libxenguest";
+
+	if !controlinfd = -1
+	then controlinfd := int_of_file_descr Unix.stdin
+	else Unix.set_close_on_exec (file_descr_of_int !controlinfd);
+
+	if !controloutfd = -1
+	then controloutfd := int_of_file_descr Unix.stdout
+	else Unix.set_close_on_exec (file_descr_of_int !controloutfd);
+
+	let fds_to_keep =
+	  List.map file_descr_of_int [  !controlinfd; !controloutfd ] @
+	    [ Unix.stdout; Unix.stderr ] @
+	    (if has_param "fd" then [ file_descr_of_int (int_of_string (get_param "fd")) ] else []) @
+	    (match !debug_fd with Some x -> [ x ] | None -> []) in
+
+	(* Prevent accidentally inheriting someone elses fd *)
+	close_all_fds_except fds_to_keep;
+
+	debug "Arguments parsed successfully [ %s ]." (String.concat "; " (Array.to_list Sys.argv));
+
+	let capture_stdout_stderr = has_param "fork" && (get_param "fork" = "true") in
+	if capture_stdout_stderr
+	then debug "Will fork to capture stdout and stderr from libxenguest"
+	else debug "Will not fork; stdout and stderr will not be redirected";
+
+	let with_logging f = if capture_stdout_stderr
+	  then fork_capture_stdout_stderr control_write f ()
+	  else f () in
+
+	let real_ops = {
+		linux_build = linux_build_real;
+		hvm_build = hvm_build_real;
+		domain_save = domain_save_real;
+		domain_restore = domain_restore_real;
+	} in
+	let fake_ops = {
+		linux_build = linux_build_fake;
+		hvm_build = hvm_build_fake;
+		domain_save = domain_save_fake;
+		domain_restore = domain_restore_fake;
+	} in
+
+	let ops = if !fake then fake_ops else real_ops in
+
+	begin
+	  try
+	    let result = match !mode with
+	      | None ->
+		  error "Must have a -mode commandline option";
+		  failwith "Must have a -mode commandline option";
+	      | Some "hvm_save"
+	      | Some "save" ->
+		  debug "save mode selected";
+		  require [ "domid"; "fd" ];
+		  let hvm = if !mode = (Some "hvm_save") then true else false in
+		  let fd = file_descr_of_int (int_of_string (get_param "fd"))
+		  and domid = int_of_string (get_param "domid")
+		  and flags = List.concat [ if has_param "live" then [ Xenguest.Live ] else [];
+					    if has_param "debug" then [ Xenguest.Debug ] else [] ] in
+
+		  with_logging (fun () -> ops.domain_save fd domid 0 0 flags hvm)
+	      | Some "hvm_restore"
+	      | Some "restore" ->
+		  debug "restore mode selected";
+		  let hvm = if !mode = (Some "hvm_restore") then true else false in
+		  require [ "domid"; "fd"; "store_port"; "console_port"; ];
+		  let fd = file_descr_of_int (int_of_string (get_param "fd"))
+		  and domid = int_of_string (get_param "domid")
+		  and store_port = int_of_string (get_param "store_port")
+		  and console_port = int_of_string (get_param "console_port") in
+
+		  with_logging (fun () -> ops.domain_restore fd domid store_port console_port hvm)
+	      | Some "linux_build" ->
+		  debug "linux_build mode selected";
+		  require [ "domid"; "mem_max_mib"; "mem_start_mib"; "image"; "ramdisk"; "cmdline"; "features"; "flags";
+			    "store_port"; "console_port" ];
+		  let domid = int_of_string (get_param "domid")
+		  and mem_max_mib = int_of_string (get_param "mem_max_mib")
+		  and mem_start_mib = int_of_string (get_param "mem_start_mib")
+		  and image = get_param "image"
+		  and ramdisk = get_param "ramdisk"
+		  and cmdline = get_param "cmdline"
+		  and features = get_param "features"
+		  and flags = int_of_string (get_param "flags")
+		  and store_port = int_of_string (get_param "store_port")
+		  and console_port = int_of_string (get_param "console_port") in
+
+		  with_logging (fun () -> ops.linux_build domid mem_max_mib mem_start_mib image
+		                          (if ramdisk = "" then None else Some ramdisk)
+		                          cmdline features flags store_port console_port)
+	      | Some "hvm_build" ->
+		  debug "hvm_build mode selected";
+		      require [ "domid"; "mem_max_mib"; "mem_start_mib"; "image";
+		                "store_port"; "console_port" ];
+		  let domid = int_of_string (get_param "domid")
+		  and mem_max_mib = int_of_string (get_param "mem_max_mib")
+		  and mem_start_mib = int_of_string (get_param "mem_start_mib")
+		  and image = get_param "image"
+		  and store_port = int_of_string (get_param "store_port")
+	    and console_port = int_of_string (get_param "console_port") in
+
+		  with_logging (fun () -> ops.hvm_build domid mem_max_mib mem_start_mib image
+			  store_port console_port)
+	      | Some "test" ->
+		  debug "test mode selected";
+		  with_logging (fun () -> ignore(Unix.system "/tmp/test"); "result")
+
+	      | Some "resume_slow" ->
+		  debug "resume slow selected";
+		  require [ "domid" ];
+		  let domid = int_of_string (get_param "domid") in
+		  with_logging (fun () -> with_xenguest (fun xc ->
+		    Xenguest.domain_resume_slow xc domid;
+		    ""))
+	      | Some x ->
+		  let msg = sprintf "Unrecognised mode: %s" x in
+		  error "%s" msg;
+		  failwith msg
+ 	    in
+	    control_write (Result result);
+	with
+	| Failure x as e ->
+		let prefix = "Subprocess failure: Failure(\"" in
+		if String.sub x 0 (String.length prefix) = prefix then
+			begin
+				let rest = String.sub x (String.length prefix)
+					(String.length x - (String.length prefix)) in
+				try
+					let lbr = String.index rest '['
+					and rbr = String.index rest ']' in
+					let code = String.sub rest 0 (lbr - 2) in
+					let errno = String.sub rest (lbr + 1) (rbr - lbr - 1) in
+					let rest = String.sub rest (rbr + 1)
+						(String.length rest - rbr - 2) in
+					control_write (Error (sprintf "%s %s %s" code errno rest))
+				with _ ->
+					control_write (Error rest)
+			end
+		else
+			control_write (Error (sprintf "caught exception: %s"
+				(Printexc.to_string e)))
+	| e ->
+		control_write (Error (sprintf "caught exception: %s"
+			(Printexc.to_string e)))
+	end;
+	closelog ()
+
--- /dev/null
+++ xen-api-0.1/dist/xenguest-src/xenguest_stubs.c
@@ -0,0 +1,574 @@
+/*
+ * Copyright (C) 2006-2009 Citrix Systems Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU Lesser General Public License as published
+ * by the Free Software Foundation; version 2.1 only. with the special
+ * exception on linking described in file LICENSE.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ */
+
+#include <stdlib.h>
+#include <stdint.h>
+#include <errno.h>
+#include <string.h>
+#include <stdarg.h>
+#include <syslog.h>
+
+#include <xenctrl.h>
+#include <xenguest.h>
+#include <xs.h>
+#include <xen/hvm/hvm_info_table.h>
+#include <xen/hvm/params.h>
+#include <xen/hvm/e820.h>
+#include <sys/mman.h>
+
+#define CAML_NAME_SPACE
+#include <caml/alloc.h>
+#include <caml/memory.h>
+#include <caml/callback.h>
+#include <caml/signals.h>
+#include <caml/fail.h>
+
+#define _H(__h) ((xc_interface *)(__h))
+#define _D(__d) ((uint32_t)Int_val(__d))
+
+#define None_val (Val_int(0))
+
+#ifndef HVM_PARAM_VIRIDIAN
+#warning missing viridian parameter
+#endif
+
+#include <stdio.h>
+
+/* The following boolean flags are all set by their value
+   in the platform area of xenstore. The only value that
+   is considered true is the string 'true' */
+struct flags {
+  int vcpus;
+  int vcpus_current;
+  const char** vcpu_affinity; /* 0 means unset */
+  uint16_t vcpu_weight;   /* 0 means unset (0 is an illegal weight) */
+  uint16_t vcpu_cap;      /* 0 is default (no cap) */
+  int nx;
+  int viridian;
+  int pae;
+  int acpi;
+  int apic;
+  int acpi_s3;
+  int acpi_s4;
+};
+
+static int pasprintf(char **buf, const char *fmt, ...)
+{
+    va_list ap;
+    int ret = 0;
+
+    if (*buf)
+        free(*buf);
+    va_start(ap, fmt);
+    if (vasprintf(buf, fmt, ap) == -1) {
+        buf = NULL;
+        ret = -1;
+    }
+    va_end(ap);
+    return ret;
+}
+
+static char *
+xenstore_getsv(int domid, const char *fmt, va_list ap)
+{
+    char *path = NULL, *s;
+    uint64_t value = 0;
+    struct xs_handle *xsh = NULL;
+	int n, m;
+	char key[1024];
+
+	bzero(key, sizeof(key));
+
+    xsh = xs_daemon_open();
+    if (xsh == NULL)
+           return 0;
+
+    path = xs_get_domain_path(xsh, domid);
+    if (path == NULL)
+        goto out;
+
+	n = snprintf(key, sizeof(key), "%s/platform/", path);
+	if (n < 0)
+	  goto out;
+	m = vsnprintf(key + n, sizeof(key) - n, fmt, ap);
+	if (m < 0)
+	  goto out;
+
+    s = xs_read(xsh, XBT_NULL, key, NULL);
+  out:
+    xs_daemon_close(xsh);
+    free(path);
+    return s;
+}
+
+static char *
+xenstore_gets(int domid, const char *fmt, ...)
+{
+	char *s;
+	va_list ap;
+
+	va_start(ap, fmt);
+	s = xenstore_getsv(domid, fmt, ap);
+	va_end(ap);
+	return s;
+}
+
+static uint64_t
+xenstore_get(int domid, const char *fmt, ...)
+{
+	char *s;
+	uint64_t value = 0;
+	va_list ap;
+
+	va_start(ap, fmt);
+	s = xenstore_getsv(domid, fmt, ap);
+    if (s) {
+       if (!strcasecmp(s, "true"))
+           value = 1;
+       else if (sscanf(s, "%Ld", &value) != 1)
+           value = 0;
+       free(s);
+    }
+	va_end(ap);
+    return value;
+}
+
+static void 
+get_flags(struct flags *f, int domid) 
+{
+  int n;
+  f->vcpus    = xenstore_get(domid, "vcpu/number");
+  f->vcpu_affinity = (const char**)(malloc(sizeof(char*) * f->vcpus));
+
+  for (n = 0; n < f->vcpus; n++) {
+	f->vcpu_affinity[n] = xenstore_gets(domid, "vcpu/%d/affinity", n);
+  }
+  f->vcpus_current = xenstore_get(domid, "vcpu/current");
+  f->vcpu_weight = xenstore_get(domid, "vcpu/weight");
+  f->vcpu_cap = xenstore_get(domid, "vcpu/cap");
+  f->nx       = xenstore_get(domid, "nx");
+  f->viridian = xenstore_get(domid, "viridian");
+  f->apic     = xenstore_get(domid, "apic");
+  f->acpi     = xenstore_get(domid, "acpi");
+  f->pae      = xenstore_get(domid, "pae");
+  f->acpi_s4  = xenstore_get(domid, "acpi_s4");
+  f->acpi_s3  = xenstore_get(domid, "acpi_s3");
+
+  openlog("xenguest",LOG_NDELAY,LOG_DAEMON);
+  syslog(LOG_INFO|LOG_DAEMON,"Determined the following parameters from xenstore:");
+  syslog(LOG_INFO|LOG_DAEMON,"vcpu/number:%d vcpu/weight:%d vcpu/cap:%d nx: %d viridian: %d apic: %d acpi: %d pae: %d acpi_s4: %d acpi_s3: %d",
+                f->vcpus,f->vcpu_weight,f->vcpu_cap,f->nx,f->viridian,f->apic,f->acpi,f->pae,f->acpi_s4,f->acpi_s3);
+  for (n = 0; n < f->vcpus; n++){
+	syslog(LOG_INFO|LOG_DAEMON,"vcpu/%d/affinity:%s", n, (f->vcpu_affinity[n])?f->vcpu_affinity[n]:"unset");
+  }
+  closelog();
+  
+}
+
+
+static void failwith_oss_xc(xc_interface *xch, char *fct)
+{
+	char buf[80];
+	const xc_error *error;
+
+	error = xc_get_last_error(xch);
+	if (error->code == XC_ERROR_NONE)
+		snprintf(buf, 80, "%s: [%d] %s", fct, errno, strerror(errno));
+	else
+		snprintf(buf, 80, "%s: [%d] %s", fct, error->code, error->message);
+	xc_clear_last_error(xch);
+	caml_failwith(buf);
+}
+
+static int dispatch_suspend(void *arg)
+{
+	value * __suspend_closure;
+	int domid = (int) arg;
+	int ret;
+
+	__suspend_closure = caml_named_value("suspend_callback");
+	if (!__suspend_closure)
+		return 0;
+	caml_leave_blocking_section();
+	ret = Int_val(caml_callback(*__suspend_closure, Val_int(domid)));
+	caml_enter_blocking_section();
+	return ret;
+}
+
+static int suspend_flag_list[] = {
+	XCFLAGS_DEBUG, XCFLAGS_LIVE, XCFLAGS_HVM
+};
+
+CAMLprim value stub_xenguest_init()
+{
+	xc_interface *xch;
+
+	xch = xc_interface_open(NULL, NULL, 0);
+	if (xch == NULL)
+		failwith_oss_xc(NULL, "xc_interface_open");
+	return (value)xch;
+}
+
+CAMLprim value stub_xenguest_close(value xenguest_handle)
+{
+	CAMLparam1(xenguest_handle);
+	xc_interface_close(_H(xenguest_handle));
+	CAMLreturn(Val_unit);
+}
+
+extern struct xc_dom_image *xc_dom_allocate(xc_interface *xch, const char *cmdline, const char *features);
+
+static void configure_vcpus(xc_interface *xch, int domid, struct flags f){
+  struct xen_domctl_sched_credit sdom;
+  int i, j, r, size, pcpus_supplied, min;
+  xc_cpumap_t cpumap;
+
+  size = xc_get_cpumap_size(xch) * 8; /* array is of uint8_t */
+
+  for (i=0; i<f.vcpus; i++){
+	if (f.vcpu_affinity[i]){ /* NULL means unset */
+	  pcpus_supplied = strlen(f.vcpu_affinity[i]);
+	  min = (pcpus_supplied < size)?pcpus_supplied:size;
+	  cpumap = xc_cpumap_alloc(xch);
+	  if (cpumap == NULL)
+		failwith_oss_xc(xch, "xc_cpumap_alloc");
+
+	  for (j=0; j<min; j++) {
+		if (f.vcpu_affinity[i][j] == '1')
+		  cpumap[j/8] |= 1 << (j&7);
+	  }
+	  r = xc_vcpu_setaffinity(xch, domid, i, cpumap);
+	  free(cpumap);
+	  if (r) {
+		failwith_oss_xc(xch, "xc_vcpu_setaffinity");
+      }
+    }
+  }
+
+  r = xc_sched_credit_domain_get(xch, domid, &sdom);
+      if (r)
+    failwith_oss_xc(xch, "xc_sched_credit_domain_get");
+  if (f.vcpu_weight != 0L) sdom.weight = f.vcpu_weight;
+  if (f.vcpu_cap != 0L) sdom.cap = f.vcpu_cap;
+  r = xc_sched_credit_domain_set(xch, domid, &sdom);
+  if (r)
+    failwith_oss_xc(xch, "xc_sched_credit_domain_set");
+}
+
+CAMLprim value stub_xc_linux_build_native(value xc_handle, value domid,
+                                          value mem_max_mib, value mem_start_mib,
+                                          value image_name, value ramdisk_name,
+                                          value cmdline, value features,
+                                          value flags, value store_evtchn,
+                                          value console_evtchn)
+{
+	CAMLparam5(xc_handle, domid, mem_max_mib, mem_start_mib, image_name);
+	CAMLxparam5(ramdisk_name, cmdline, features, flags, store_evtchn);
+	CAMLxparam1(console_evtchn);
+	CAMLlocal1(result);
+
+	unsigned long store_mfn;
+	unsigned long console_mfn;
+	int r;
+	struct xc_dom_image *dom;
+	char c_protocol[64];
+
+	/* Copy the ocaml values into c-land before dropping the mutex */
+	xc_interface *xch = _H(xc_handle);
+	unsigned int c_mem_start_mib = Int_val(mem_start_mib);
+	uint32_t c_domid = _D(domid);
+	char *c_image_name = strdup(String_val(image_name));
+	char *c_ramdisk_name = ramdisk_name == None_val ? NULL : strdup(String_val(Field(ramdisk_name, 0)));
+	unsigned long c_flags = Int_val(flags);
+	unsigned int c_store_evtchn = Int_val(store_evtchn);
+	unsigned int c_console_evtchn = Int_val(console_evtchn);
+
+	struct flags f;
+	get_flags(&f,c_domid);
+
+	xc_dom_loginit(xch);
+	dom = xc_dom_allocate(xch, String_val(cmdline), String_val(features));
+	if (!dom)
+		failwith_oss_xc(xch, "xc_dom_allocate");
+
+	configure_vcpus(xch, c_domid, f);
+
+	caml_enter_blocking_section();
+	r = xc_dom_linux_build(xch, dom, c_domid, c_mem_start_mib,
+	                       c_image_name, c_ramdisk_name, c_flags,
+	                       c_store_evtchn, &store_mfn,
+	                       c_console_evtchn, &console_mfn);
+	caml_leave_blocking_section();
+
+	memset(c_protocol, '\0', 64);
+
+	free(c_image_name);
+	free(c_ramdisk_name);
+	xc_dom_release(dom);
+
+	if (r != 0)
+		failwith_oss_xc(xch, "xc_dom_linux_build");
+
+	result = caml_alloc_tuple(3);
+	Store_field(result, 0, caml_copy_nativeint(store_mfn));
+	Store_field(result, 1, caml_copy_nativeint(console_mfn));
+	Store_field(result, 2, caml_copy_string(c_protocol));
+
+	CAMLreturn(result);
+}
+
+
+CAMLprim value stub_xc_linux_build_bytecode(value * argv, int argn)
+{
+	return stub_xc_linux_build_native(argv[0], argv[1], argv[2], argv[3],
+	                                  argv[4], argv[5], argv[6], argv[7],
+	                                  argv[8], argv[9], argv[10]);
+}
+
+static int hvm_build_set_params(xc_interface *xch, int domid,
+                                int store_evtchn, unsigned long *store_mfn,
+                                int console_evtchn, unsigned long *console_mfn,
+				struct flags f)
+{
+	struct hvm_info_table *va_hvm;
+	uint8_t *va_map, sum;
+	int i;
+
+	va_map = xc_map_foreign_range(xch, domid,
+			    XC_PAGE_SIZE, PROT_READ | PROT_WRITE,
+			    HVM_INFO_PFN);
+	if (va_map == NULL)
+		return -1;
+
+	va_hvm = (struct hvm_info_table *)(va_map + HVM_INFO_OFFSET);
+	va_hvm->acpi_enabled = f.acpi;
+	va_hvm->apic_mode = f.apic;
+	va_hvm->nr_vcpus = f.vcpus;
+	memset(va_hvm->vcpu_online, 0, sizeof(va_hvm->vcpu_online));
+	for (i = 0; i < f.vcpus_current; i++)
+		va_hvm->vcpu_online[i/8] |= 1 << (i % 8);
+	/*	va_hvm->s4_enabled = f.acpi_s4;
+		va_hvm->s3_enabled = f.acpi_s3;*/
+	va_hvm->checksum = 0;
+	for (i = 0, sum = 0; i < va_hvm->length; i++)
+		sum += ((uint8_t *) va_hvm)[i];
+	va_hvm->checksum = -sum;
+	munmap(va_map, XC_PAGE_SIZE);
+
+	xc_get_hvm_param(xch, domid, HVM_PARAM_STORE_PFN, store_mfn);
+	xc_set_hvm_param(xch, domid, HVM_PARAM_PAE_ENABLED, f.pae);
+
+#ifdef HVM_PARAM_VIRIDIAN
+	xc_set_hvm_param(xch, domid, HVM_PARAM_VIRIDIAN, f.viridian);
+#endif
+
+	xc_set_hvm_param(xch, domid, HVM_PARAM_STORE_EVTCHN, store_evtchn);
+
+#ifdef HVM_PARAM_NX_ENABLED
+	xc_set_hvm_param(xch, domid, HVM_PARAM_NX_ENABLED, f.nx);
+#endif
+
+	xc_get_hvm_param(xch, domid, HVM_PARAM_CONSOLE_PFN, console_mfn);
+	xc_set_hvm_param(xch, domid, HVM_PARAM_CONSOLE_EVTCHN, console_evtchn);
+
+	return 0;
+}
+
+CAMLprim value stub_xc_hvm_build_native(value xc_handle, value domid,
+    value mem_max_mib, value mem_start_mib, value image_name, value store_evtchn, value console_evtchn)
+{
+	CAMLparam5(xc_handle, domid, mem_max_mib, mem_start_mib, image_name);
+	CAMLxparam2(store_evtchn, console_evtchn);
+	CAMLlocal1(result);
+
+	char *image_name_c = strdup(String_val(image_name));
+	char *error[256];
+	xc_interface *xch;
+
+	unsigned long store_mfn=0;
+  unsigned long console_mfn=0;
+	int r;
+	struct flags f;
+	get_flags(&f, _D(domid));
+
+	xch = _H(xc_handle);
+	configure_vcpus(xch, _D(domid), f);
+
+	caml_enter_blocking_section ();
+	r = xc_hvm_build_target_mem(xch, _D(domid),
+	                            Int_val(mem_max_mib),
+	                            Int_val(mem_start_mib),
+	                            image_name_c);
+	caml_leave_blocking_section ();
+
+	free(image_name_c);
+
+	if (r)
+		failwith_oss_xc(xch, "hvm_build");
+
+
+	r = hvm_build_set_params(xch, _D(domid), Int_val(store_evtchn), &store_mfn, 
+                           Int_val(console_evtchn), &console_mfn, f);
+	if (r)
+		failwith_oss_xc(xch, "hvm_build_params");
+
+  result = caml_alloc_tuple(2);
+  Store_field(result, 0, caml_copy_nativeint(store_mfn));
+  Store_field(result, 1, caml_copy_nativeint(console_mfn));
+
+	CAMLreturn(result);
+}
+
+CAMLprim value stub_xc_hvm_build_bytecode(value * argv, int argn)
+{
+	return stub_xc_hvm_build_native(argv[0], argv[1], argv[2], argv[3],
+                                  argv[4], argv[5], argv[6]);
+}
+
+
+int switch_qemu_logdirty(int domid, unsigned enable, void *data)
+{
+  char *path = NULL;
+  struct xs_handle *xsh = NULL;
+  bool rc;
+
+  pasprintf(&path, "/local/domain/0/device-model/%u/logdirty/cmd", domid);
+
+  xsh = xs_daemon_open();
+  if (xsh == NULL)
+    errx(1, "Couldn't contact xenstore");
+
+  if (enable)
+    rc = xs_write(xsh, XBT_NULL, path, "enable", strlen("enable"));
+  else
+    rc = xs_write(xsh, XBT_NULL, path, "disable", strlen("disable"));
+
+  xs_daemon_close(xsh);
+  free(path);
+  return rc ? 0 : 1;
+
+}
+
+static struct save_callbacks save_callbacks = {
+	.suspend = dispatch_suspend,
+  .postcopy = switch_qemu_logdirty,
+        .checkpoint = NULL,
+};
+
+CAMLprim value stub_xc_domain_save(value handle, value fd, value domid,
+                                   value max_iters, value max_factors,
+                                   value flags, value hvm)
+{
+	CAMLparam5(handle, fd, domid, max_iters, max_factors);
+	CAMLxparam2(flags, hvm);
+	struct save_callbacks callbacks;
+
+	uint32_t c_flags;
+  uint32_t c_domid;
+	int r;
+
+	c_flags = caml_convert_flag_list(flags, suspend_flag_list);
+  c_domid = _D(domid);
+
+	memset(&callbacks, 0, sizeof(callbacks));
+  callbacks.data = c_domid;
+	callbacks.suspend = dispatch_suspend;
+	callbacks.switch_qemu_logdirty = switch_qemu_logdirty;
+
+	caml_enter_blocking_section();
+	r = xc_domain_save(_H(handle), Int_val(fd), c_domid,
+	                   Int_val(max_iters), Int_val(max_factors),
+	                   c_flags, &callbacks, Bool_val(hvm));
+	caml_leave_blocking_section();
+	if (r)
+		failwith_oss_xc(_H(handle), "xc_domain_save");
+
+	CAMLreturn(Val_unit);
+}
+
+CAMLprim value stub_xc_domain_save_bytecode(value *argv, int argn)
+{
+	return stub_xc_domain_save(argv[0], argv[1], argv[2], argv[3],
+	                           argv[4], argv[5], argv[6]);
+}
+
+/* this is the slow version of resume for uncooperative domain,
+ * the fast version is available in close source xc */
+CAMLprim value stub_xc_domain_resume_slow(value handle, value domid)
+{
+	CAMLparam2(handle, domid);
+	int r;
+
+	/* hard code fast to 0, we only want to expose the slow version here */
+	r = xc_domain_resume(_H(handle), _D(domid), 0);
+	if (r)
+		failwith_oss_xc(_H(handle), "xc_domain_resume");
+	CAMLreturn(Val_unit);
+}
+
+
+CAMLprim value stub_xc_domain_restore(value handle, value fd, value domid,
+                                      value store_evtchn, value console_evtchn,
+                                      value hvm)
+{
+	CAMLparam5(handle, fd, domid, store_evtchn, console_evtchn);
+	CAMLxparam1(hvm);
+	CAMLlocal1(result);
+	unsigned long store_mfn, console_mfn;
+	unsigned int c_store_evtchn, c_console_evtchn;
+	int r;
+
+	struct flags f;
+	get_flags(&f,_D(domid));
+
+	c_store_evtchn = Int_val(store_evtchn);
+	c_console_evtchn = Int_val(console_evtchn);
+
+#ifdef HVM_PARAM_VIRIDIAN
+	xc_set_hvm_param(_H(handle), _D(domid), HVM_PARAM_VIRIDIAN, f.viridian);	
+#endif
+	configure_vcpus(_H(handle), _D(domid), f);
+
+	caml_enter_blocking_section();
+	r = xc_domain_restore(_H(handle), Int_val(fd), _D(domid),
+	                      c_store_evtchn, &store_mfn,
+	                      c_console_evtchn, &console_mfn,
+			      Bool_val(hvm), f.pae, 0 /*superpages*/);
+	caml_leave_blocking_section();
+	if (r)
+		failwith_oss_xc(_H(handle), "xc_domain_restore");
+
+	result = caml_alloc_tuple(2);
+	Store_field(result, 0, caml_copy_nativeint(store_mfn));
+	Store_field(result, 1, caml_copy_nativeint(console_mfn));
+
+	CAMLreturn(result);
+}
+
+CAMLprim value stub_xc_domain_restore_bytecode(value * argv, int argn)
+{
+	return stub_xc_domain_restore(argv[0], argv[1], argv[2], argv[3],
+	                              argv[4], argv[5]);
+}
+
+CAMLprim value stub_xc_domain_dumpcore(value handle, value domid, value file)
+{
+	CAMLparam3(handle, domid, file);
+	int r;
+
+	r = xc_domain_dumpcore(_H(handle), _D(domid), String_val(file));
+	if (r)
+		failwith_oss_xc(_H(handle), "xc_domain_dumpcore");
+	CAMLreturn(Val_unit);
+}
--- /dev/null
+++ xen-api-0.1/ocaml/idl/META
@@ -0,0 +1,4 @@
+version = "unknown"
+description = "Xapi datamodel library for code generators"
+requires = "xml-light2,stdext,stunnel,http-svr,log"
+archive(native) = "datamodel.cmxa"
--- /dev/null
+++ xen-api-0.1/ocaml/idl/ocaml_backend/META
@@ -0,0 +1,5 @@
+version = "unknown"
+description = "XenAPI client bindings for OCaml"
+requires = "rpc-light,xml-light2,stdext,stunnel,http-svr,log"
+archive(byte) = "xapi_client.cma"
+archive(native) = "xapi_client.cmxa"
